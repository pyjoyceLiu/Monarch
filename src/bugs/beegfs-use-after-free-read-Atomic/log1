2023/03/25 14:41:47 fuzzer started
2023/03/25 14:41:47 dialing manager at localhost:45137
2023/03/25 14:41:47 syscalls: 130
2023/03/25 14:41:47 code coverage: enabled
2023/03/25 14:41:47 comparison tracing: enabled
2023/03/25 14:41:47 extra coverage: extra coverage is not supported by the kernel
2023/03/25 14:41:47 setuid sandbox: enabled
2023/03/25 14:41:47 namespace sandbox: /proc/self/ns/user does not exist
2023/03/25 14:41:47 Android sandbox: /sys/fs/selinux/policy can't be opened (open /sys/fs/selinux/policy: invalid argument)
2023/03/25 14:41:47 fault injection: CONFIG_FAULT_INJECTION_DEBUG_FS or CONFIG_FAILSLAB are not enabled
2023/03/25 14:41:47 leak checking: CONFIG_DEBUG_KMEMLEAK is not enabled
2023/03/25 14:41:47 net packet injection: /dev/net/tun does not exist
2023/03/25 14:41:47 net device setup: enabled
2023/03/25 14:41:47 concurrency sanitizer: /sys/kernel/debug/kcsan does not exist
2023/03/25 14:41:47 devlink PCI setup: enabled
2023/03/25 14:41:47 USB emulation: /dev/raw-gadget does not exist
2023/03/25 14:41:47 hci packet injection: /dev/vhci does not exist
2023/03/25 14:41:47 wifi device emulation: /sys/class/mac80211_hwsim/ does not exist
2023/03/25 14:41:47 802.15.4 emulation: /sys/bus/platform/devices/mac802154_hwsim does not exist
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 fetching corpus: 50, signal 9781/44058/54433 (executing program)
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 26
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:48 prog length: 20
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 26
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 24
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:48 prog length: 6
2023/03/25 14:41:48 prog length: 22
2023/03/25 14:41:48 fetching corpus: 100, signal 10073/55926/66791 (executing program)
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 26
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 26
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 fetching corpus: 150, signal 10994/59901/71872 (executing program)
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 26
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 26
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet true
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 24
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash false hasNet false
2023/03/25 14:41:49 prog length: 20
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 deserializeInput: hasCrash true hasNet false
2023/03/25 14:41:49 prog length: 6
2023/03/25 14:41:49 prog length: 22
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/75135 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/75418 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/75684 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/75980 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/76243 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/76542 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/76821 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/77095 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/77387 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/77661 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/77929 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/78199 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/78502 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/78785 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/79064 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/79330 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/79628 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/79903 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/80184 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/80465 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/80740 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/81003 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/81299 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/81588 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/81862 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/82147 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/82430 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/82747 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/83042 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/83336 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/83431 (executing program)
2023/03/25 14:41:49 fetching corpus: 180, signal 11226/62746/83431 (executing program)
2023/03/25 14:41:50 starting 1 fuzzer processes
2023/03/25 14:41:50 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/25 14:41:50 ----- generateCall 248 fstat fstat
2023/03/25 14:41:50 ----- generateCall 170 dup dup
2023/03/25 14:41:50 ----- generateCall 248 fstat fstat
2023/03/25 14:41:50 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/25 14:41:50 ----- generateCall 194 fchmod fchmod
2023/03/25 14:41:50 ----- generateCall 231 fsetxattr fsetxattr
2023/03/25 14:41:50 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/25 14:41:50 ----- generateCall 2462 openat openat
2023/03/25 14:41:50 ----- generateCall 196 fchown fchown
2023/03/25 14:41:50 ----- generateCall 187 faccessat faccessat
2023/03/25 14:41:50 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/25 14:41:50 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/25 14:41:50 ----- generateCall 2374 mkdirat mkdirat
2023/03/25 14:41:50 ----- generateCall 187 faccessat faccessat
2023/03/25 14:41:50 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/25 14:41:50 ----- generateCall 122 chown chown
2023/03/25 14:41:50 map[./file0:true]
2023/03/25 14:41:50 HasCrashFail: false, .HasNetFail: false
2023/03/25 14:41:50 prog length: 20
2023/03/25 14:41:50 HasCrashFail:false HasNetFail:false
14:41:50 ---executing program 0:
---
---
---
fcntl$setown(0xffffffffffffffff, 0x8, 0xffffffffffffffff)
fstat(0xffffffffffffffff, &(0x7f0000000000)={0x0, 0x0, 0x0, 0x0, <r0=>0x0, <r1=>0x0})
r2 = dup(0xffffffffffffffff)
fstat(r2, &(0x7f0000000080))
fcntl$setflags(r2, 0x2, 0x1)
fchmod(r2, 0x8)
fsetxattr(r2, &(0x7f0000000100)=@known='com.apple.FinderInfo\x00', &(0x7f0000000140)=')}\x00', 0x3, 0x3)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000180), &(0x7f00000001c0), 0x4, 0x1)
r3 = openat(r2, &(0x7f0000000200)='./file0\x00', 0x32c01, 0x100)
stat(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fchown(r3, r0, r4)
faccessat(0xffffffffffffffff, &(0x7f0000000300)='./file0\x00', 0x17c)
fsetxattr$trusted_overlay_redirect(r3, &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x3)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f00000003c0))
r5 = open$dir(&(0x7f0000000400)='./file0\x00', 0x20102, 0x1)
mkdirat(r5, &(0x7f0000000440)='./file0\x00', 0x0)
r6 = open(&(0x7f0000000480)='./file0\x00', 0x8000, 0x0)
faccessat(r6, &(0x7f00000004c0)='./file0\x00', 0x87)
fcntl$dupfd(r2, 0x0, r2)
chown(&(0x7f0000000500)='./file0\x00', 0xffffffffffffffff, r1)
---

end of program
2023/03/25 14:41:50 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/beegfs-images/focal.id_rsa root@192.168.0.17 /root/syz-executor exec 0 0 beegfs 3 4 192.168.0.17 0 "1 1 1 1" false true false false false]
2023/03/25 14:41:50 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/beegfs-images/focal.id_rsa root@192.168.0.18 /root/syz-executor exec 0 1 beegfs 3 4 192.168.0.17 0 "1 1 1 1" false true false false false]
2023/03/25 14:41:50 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/beegfs-images/focal.id_rsa root@192.168.0.19 /root/syz-executor exec 0 2 beegfs 3 4 192.168.0.17 0 "1 1 1 1" false true false false false]
2023/03/25 14:41:50 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/beegfs-images/focal.id_rsa root@192.168.0.20 /root/syz-executor exec 1 3 beegfs 3 4 192.168.0.17 0 "1 1 1 1" false true false false false]
Warning: Permanently added '192.168.0.19' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.18' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.20' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.17' (ECDSA) to the list of known hosts.
----- is restarting 0
---- dfs_name beegfs is_dfs_client 1
----- is restarting 0
---- dfs_name beegfs is_dfs_client 0
before receiving handshake request
req.flags e82
[    0.000000] kernel: Linux version 5.4.0 (root@dfs-fuzzing) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #4 SMP Thu Feb 2 03:06:02 UTC 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.20 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x000unlink FIFO failed: No such file or directory
[    0.000000] kernel: Linux version 5.4.0 (root@dfs-fuzzing) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #4 SMP Thu Feb 2 03:06:02 UTC 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.19 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_siz00000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000002] kernel: kvm-clock: cpu 0, msr 57da001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 559181180 cycles
[    0.000009] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000013] kernel: tsc: Detected 2593.906 MHz processor
[    0.004917] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.004923] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.004934] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.es[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x000004978] kernel: MTRR default type: write-back
[    0.004979] kernel: MTRR fixed ranges enabled:
[    0.004983] kernel:   00000-9FFFF write-back
[    0.004986] kernel:   A0000-BFFFF uncachable
[    0.004990] kernel:   C0000-FFFFF write-protect
[    0.004992] kernel: MTRR variable ranges enabled:
[    0.004997] kernel:   0 base 00C0000000 mask FFC0000000 uncachable
[    0.004999] kernel:   1 disabled
[    0.005000] kernel:   2 disabled
[    0.005001] kernel:   3 disabled
[    0.005003] kernel:   4 disabled
[    0.005004] kernel:   5 disabled
[    0.005006] kernel:   6 disabled
[    0.005007] kernel:   7 disabled
[    0.005020] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.005029] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.012956] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.013033] kernel: check: Scanning 1 areas for low memory corruption
[    0.013078] kernel: Using GB pages for direct mapping
[    0.013085] kernel: BRK [0x06201000, 0x06201fff] PGTABLE
[    0.013090] kernel: BRK [0x06202000, 0x06202fff] PGTABLE
[    0.013093] kernel: BRK [0x06203000, 0x06203fff] PGTABLE
[    0.013096] kernel: BRK [0x06204000, 0x06204fff] PGTABLE
[    0.014142] kernel: ACPI: Early table checksum verification disabled
[    0.014153] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.014168] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.014185] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.014205] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.014217] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.014226] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.014239] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.014261] kernel: ACPI: Local APIC address 0xfee00000
[    0.015054] kernel: No NUMA configuration found
[    0.015057] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.015071] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.018590] kernel: Zone ranges:
[    0.018594] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.018599] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.018603] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.018606] kernel: Movable zone start for each node
[    0.018608] kernel: Early memory node ranges
[    0.018611] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.018615] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.018620] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.019460] kernel: Zeroed struct page in unavailable ranges: 130 pages
[    0.019466] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.019471] kernel: On node 0 totalpages: 2621310
[    0.019474] kernel:   DMA zone: 64 pages used for memmap
[    0.019476] kernel:   DMA zone: 21 pages reserved
[    0.019479] kernel:   DMA zone: 3998 pages, LIFO batch:0
[    0.019691] kernel:   DMA32 zone: 12224 pages used for memmap
[    0.019694] kernel:   DMA32 zone: 782304 pages, LIFO batch:63
[    0.064086] kernel:   Normal zone: 28672 pages used for memmap
[    0.064092] kernel:   Normal zone: 1835008 pages, LIFO batch:63
[    0.549800] kernel: kasan: KernelAddressSanitizer initialized
[    0.550196] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.550202] kernel: ACPI: Local APIC address 0xfee00000
[    0.550219] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.550259] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.550267] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.550272] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.550276] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.550280] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.550284] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.550288] kernel: ACPI: IRQ0 used by override.
[    0.550291] kernel: ACPI: IRQ5 used by override.
[    0.550294] kernel: ACPI: IRQ9 used by override.
[    0.550296] kernel: ACPI: IRQ10 used by override.
[    0.550298] kernel: ACPI: IRQ11 used by override.
[    0.550304] kernel: Using ACPI (MADT) for SMP configuration information
[    0.550308] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.550318] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.550340] kernel: KVM setup pv sched yield
[    0.550373] kernel: PM: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.550379] kernel: PM: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.550382] kernel: PM: Registered nosave memory: [mem 0x000a0000-0x000effff]
[   ----- is restarting 0
---- dfs_name beegfs is_dfs_client 0
 0.550384] kernel: PM: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.550390] kernel: PM: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.550393] kernel: PM: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.550396] kernel: PM: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.550398] kernel: PM: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.550401] kernel: PM: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.550407] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.550409] kernel: Booting paravirtualized kernel on KVM
[    0.550416] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    1.105123] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    1.105743] kernel: percpu: Embedded 59 pages/cpu s204504 r8192 d28968 u1048576
[    1.105768] kernel: pcpu-alloc: s204504 r8192 d28968 u1048576 alloc=1*20----- is restarting 0
---- dfs_name beegfs is_dfs_client 0
97152
[    1.105770] kernel: pcpu-alloc: [0] 0 1 
[    1.105844] kernel: KVM setup async PF for cpu 0
[    1.105852] kernel: kvm-stealtime: cpu 0, msr 26501f1c0
[    1.105860] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580329
[    1.105861] kernel: Policy zone: Normal
[    1.105866] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.20 quiet nokaslr
[    1.111870] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    1.114311] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    1.114412] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    1.323389] kernel: Memory: 8822144K/10485240K available (43013K kernel code, 11267K rwdata, 6524K rodata, 2108K init, 10528K bss, 1663096K reserved, 0K cma-reserved)
[    1.325922] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    1.326610] kernel: rcu: Hierarchical RCU implementation.
[  unlink FIFO failed: No such file or directory
[    0.000000] kernel: Linux version 5.4.0 (root@dfs-fuzzing) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #4 SMP Thu Feb 2 03:06:02 UTC 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.17 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_siz  1.326612] kernel: rcu:         RCU event tracing is enabled.
[    1.326616] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    1.326620] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    1.326623] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    1.328609] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    1.328990] kernel: random: get_random_bytes called from start_kernel+0x43f/0x85d with crng_init=0
[    1.333022] kernel: Console: colour VGA+ 80x25
[    1.333096] kernel: printk: console [ttyS0] enabled
[    1.333131] kernel: ACPI: Core revision 20190816
[    1.333458] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    1.333582] kernel: APIC: Switch to symmetric I/O mode setup
[    1.333586] kernel: KVM setup pv IPIs
[    1.334796] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    1.334825] kernel: clocksource: tsc-eaexecutor 2 finishes userspace_cover_open
before receiving handshake request
req.flags e82
----- executor 2 do_sandbox_none at begining
----- executor 2 do_sandbox_none before fork()
00000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000002] kernel: kvm-clock: cpu 0, msr 57da001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 558421277 cycles
[    0.000008] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000013] kernel: tsc: Detected 2593.906 MHz processor
[    0.004828] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.004833] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.004844] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.unlink FIFO failed: No such file or directory
[    0.000000] kernel: Linux version 5.4.0 (root@dfs-fuzzing) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #4 SMP Thu Feb 2 03:06:02 UTC 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.18 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizrly: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 440795319401 ns
[    1.334833] kernel: Calibrating delay loop (skipped) preset value.. 5187.81 BogoMIPS (lpj=2593906)
[    1.334839] kernel: pid_max: default: 32768 minimum: 301
[    1.334925] kernel: LSM: Security Framework initializing
[    1.335536] kernel: SELinux:  Initializing.
[    1.335961] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.335999] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.338183] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    1.338339] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    1.338342] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    1.338358] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    1.338367] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    1.338369] kernel: Spectre V2 : Spectre v2 / SpectreRSB004888] kernel: MTRR default type: write-back
[    0.004889] kernel: MTRR fixed ranges enabled:
[    0.004893] kernel:   00000-9FFFF write-back
[    0.004896] kernel:   A0000-BFFFF uncachable
[    0.004901] kernel:   C0000-FFFFF write-protect
[    0.004902] kernel: MTRR variable ranges enabled:
[    0.004907] kernel:   0 base 00C0000000 mask FFC0000000 uncachable
[    0.004909] kernel:   1 disabled
[    0.004910] kernel:   2 disabled
[    0.004912] kernel:   3 disabled
[    0.004913] kernel:   4 disabled
[    0.004914] kernel:   5 disabled
[    0.004916] kernel:   6 disabled
[    0.004917] kernel:   7 disabled
[    0.004930] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.004939] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.012860] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.012932] kernel: check: Scanning 1 areas for low memory corruption
[    0.012970] kernel: Using GB pages for direct mapping
[    0.012977] kerneles[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x000es[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x000 mitigation: Filling RSB on context switch
[    1.338374] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    1.338380] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    1.338383] kernel: TAA: Mitigation: TSX disabled
[    1.340530] kernel: Freeing SMP alternatives memory: 36K
[    1.341038] kernel: TSC deadline timer enabled
[    1.341049] kernel: smpboot: CPU0: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    1.341356] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    1.341455] kernel: ... version:                2
[    1.341457] kernel: ... bit width:              48
[    1.341459] kernel: ... generic registers:      8
[    1.341462] kernel: ... value mask:             0000ffffffffffff
[    1.341464] kernel: ... max period:             00007fffffffffff
[    1.341465] kernel: ... fixed-purpose eve: BRK [0x06201000, 0x06201fff] PGTABLE
[    0.012981] kernel: BRK [0x06202000, 0x06202fff] PGTABLE
[    0.012984] kernel: BRK [0x06203000, 0x06203fff] PGTABLE
[    0.012987] kernel: BRK [0x06204000, 0x06204fff] PGTABLE
[    0.014026] kernel: ACPI: Early table checksum verification disabled
[    0.014036] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.014049] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.014066] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.014085] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.014098] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.014107] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.014119] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.014140] kernel: ACPI: Local APIC address 0x00000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000002] kernel: kvm-clock: cpu 0, msr 57da001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 562641808 cycles
[    0.000009] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000013] kernel: tsc: Detected 2593.906 MHz processor
[    0.004833] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.004839] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.004850] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.nts:   3
[    1.341467] kernel: ... event mask:             00000007000000ff
[    1.341926] kernel: rcu: Hierarchical SRCU implementation.
[    1.342512] kernel: smp: Bringing up secondary CPUs ...
[    1.342778] kernel: x86: Booting SMP configuration:
[    1.342781] kernel: .... node  #0, CPUs:      #1
[    0.005930] kernel: kvm-clock: cpu 1, msr 57da041, secondary cpu clock
[    0.005930] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    1.343865] kernel: KVM setup async PF for cpu 1
[    1.343873] kernel: kvm-stealtime: cpu 1, msr 26511f1c0
[    1.343883] kernel: smp: Brought up 1 node, 2 CPUs
[    1.343883] kernel: smpboot: Max logical packages: 2
[    1.343883] kernel: smpboot: Total of 2 processors activated (10375.62 BogoMIPS)
[    1.344908] kernel: devtmpfs: initialized
[    1.350266] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    1.350275] kernel: futex hash table entries: 512 (order: 3, 32768 bytefee00000
[    0.014930] kernel: No NUMA configuration found
[    0.014934] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.014947] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.015490] kernel: Zone ranges:
[    0.015492] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.015497] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.015501] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.015504] kernel: Movable zone start for each node
[    0.015506] kernel: Early memory node ranges
[    0.015509] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.015513] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.015518] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.016304] kernel: Zeroed struct page in unavailable ranges: 130 pages
[    0.016309] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    00000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000001] kernel: kvm-clock: cpu 0, msr 57da001, primary cpu clock
[    0.000001] kernel: kvm-clock: using sched offset of 471117478 cycles
[    0.000006] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000010] kernel: tsc: Detected 2593.906 MHz processor
[    0.003717] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.003721] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.003729] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.004893] kernel: MTRR default type: write-back
[    0.004895] kernel: MTRR fixed ranges enabled:
[    0.004899] kernel:   00000-9FFFF write-back
[    0.004902] kernel:   A0000-BFFFF uncachable
[    0.004906] kernel:   C0000-FFFFF write-protect
[    0.004908] kernel: MTRR variable ranges enabled:
[    0.004913] kernel:   0 base 00C0000000 mask FFC0000000 uncachable
[    0.004914] kernel:   1 disabled
[    0.004916] kernel:   2 disabled
[    0.004917] kernel:   3 disabled
[    0.004918] kernel:   4 disabled
[    0.004920] kernel:   5 disabled
[    0.004921] kernel:   6 disabled
[    0.004923] kernel:   7 disabled
[    0.004935] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.004944] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.012869] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.012941] kernel: check: Scanning 1 areas for low memory corruption
[    0.012986] kernel: Using GB pages for direct mapping
[    0.012993] kernel0.016314] kernel: On node 0 totalpages: 2621310
[    0.016317] kernel:   DMA zone: 64 pages used for memmap
[    0.016319] kernel:   DMA zone: 21 pages reserved
[    0.016322] kernel:   DMA zone: 3998 pages, LIFO batch:0
[    0.016531] kernel:   DMA32 zone: 12224 pages used for memmap
[    0.016534] kernel:   DMA32 zone: 782304 pages, LIFO batch:63
[    0.060603] kernel:   Normal zone: 28672 pages used for memmap
[    0.060609] kernel:   Normal zone: 1835008 pages, LIFO batch:63
[    0.547850] kernel: kasan: KernelAddressSanitizer initialized
[    0.548245] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.548252] kernel: ACPI: Local APIC address 0xfee00000
[    0.548268] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.548314] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.548321] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.548326] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.548330] kbefore receive testcase: 0 1
s, linear)
[    1.350906] kernel: PM: RTC time: 13:41:37, date: 2023-03-25
[    1.351386] kernel: NET: Registered protocol family 16
[    1.352149] kernel: audit: initializing netlink subsys (disabled)
[    1.352222] kernel: audit: type=2000 audit(1679751697.875:1): state=initialized audit_enabled=0 res=1
[    1.352959] kernel: cpuidle: using governor menu
[    1.353148] kernel: KVM setup pv remote TLB flush
[    1.353151] kernel: ACPI: bus type PCI registered
[    1.353504] kernel: PCI: Using configuration type 1 for base access
[    1.374023] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    1.374027] kernel: cryptomgr_test (25) used greatest stack depth: 30984 bytes left
[    1.374027] kernel: kworker/u4:0 (27) used greatest stack depth: 28296 bytes left
[    1.380034] kernel: ACPI: Added _OSI(Module Device)
[    1.380037] kernel: ACPI: Added _OSI(Processor Device)
[    1.380039] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    1.380041] kernel: ACPI: Adde: BRK [0x06201000, 0x06201fff] PGTABLE
[    0.012997] kernel: BRK [0x06202000, 0x06202fff] PGTABLE
[    0.013000] kernel: BRK [0x06203000, 0x06203fff] PGTABLE
[    0.013003] kernel: BRK [0x06204000, 0x06204fff] PGTABLE
[    0.013997] kernel: ACPI: Early table checksum verification disabled
[    0.014008] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.014022] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.014039] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.014058] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.014070] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.014079] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.014092] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.014113] kernel: ACPI: Local APIC address 0xd _OSI(Processor Aggregator Device)
[    1.380053] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    1.380062] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    1.380072] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    1.398671] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    1.404475] kernel: ACPI: Interpreter enabled
[    1.404593] kernel: ACPI: (supports S0 S3 S4 S5)
[    1.404596] kernel: ACPI: Using IOAPIC for interrupt routing
[    1.404684] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    1.406285] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    1.453249] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    1.453280] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    1.453457] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    1.453851] kernel: PCI host bridgefee00000
[    0.014901] kernel: No NUMA configuration found
[    0.014904] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.014918] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.015501] kernel: Zone ranges:
[    0.015504] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.015508] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.015512] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.015516] kernel: Movable zone start for each node
[    0.015517] kernel: Early memory node ranges
[    0.015521] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.015525] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.015529] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.016352] kernel: Zeroed struct page in unavailable ranges: 130 pages
[    0.016358] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[     to bus 0000:00
[    1.453865] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    1.453876] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    1.453886] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    1.453897] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    1.453907] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    1.453918] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    1.454031] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.456016] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.458104] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    1.460072] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    1.461027] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.461033] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    1.461039] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.461044] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.462587] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.462958] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.462970] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.464789] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.465853] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.467378] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.471195] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    1.473128] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.473840] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    1.475840] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    ernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.548334] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.548338] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.548341] kernel: ACPI: IRQ0 used by override.
[    0.548344] kernel: ACPI: IRQ5 used by override.
[    0.548347] kernel: ACPI: IRQ9 used by override.
[    0.548349] kernel: ACPI: IRQ10 used by override.
[    0.548351] kernel: ACPI: IRQ11 used by override.
[    0.548357] kernel: Using ACPI (MADT) for SMP configuration information
[    0.548362] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.548371] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.548393] kernel: KVM setup pv sched yield
[    0.548425] kernel: PM: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.548431] kernel: PM: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.548434] kernel: PM: Registered nosave memory: [mem 0x000a0000-0x000effff]
[   1.478909] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.480341] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    1.480840] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.482840] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.483610] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.485838] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.486848] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    1.488847] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.493748] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.494118] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.495137] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    1.498884] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.499746] kernel: pci 0000:00:12.0.016363] kernel: On node 0 totalpages: 2621310
[    0.016366] kernel:   DMA zone: 64 pages used for memmap
[    0.016368] kernel:   DMA zone: 21 pages reserved
[    0.016371] kernel:   DMA zone: 3998 pages, LIFO batch:0
[    0.016579] kernel:   DMA32 zone: 12224 pages used for memmap
[    0.016582] kernel:   DMA32 zone: 782304 pages, LIFO batch:63
[    0.061104] kernel:   Normal zone: 28672 pages used for memmap
[    0.061109] kernel:   Normal zone: 1835008 pages, LIFO batch:63
[    0.555928] kernel: kasan: KernelAddressSanitizer initialized
[    0.556318] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.556325] kernel: ACPI: Local APIC address 0xfee00000
[    0.556341] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.556383] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.556390] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.556395] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.556399] k 0.548437] kernel: PM: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.548442] kernel: PM: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.548445] kernel: PM: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.548448] kernel: PM: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.548451] kernel: PM: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.548454] kernel: PM: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.548459] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.548461] kernel: Booting paravirtualized kernel on KVM
[    0.548468] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    1.096610] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    1.097190] kernel: percpu: Embedded 59 pages/cpu s204504 r8192 d28968 u1048576
[    1.097215] kernel: pcpu-alloc: s204504 r8192 d28968 u1048576 alloc=1*20executor 1 finishes userspace_cover_open
before receiving handshake request
0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.500847] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.510671] kernel: ACPI: PCI Interrupt Link [LNKA] (IRQs 5 *10 11)
[    1.511867] kernel: ACPI: PCI Interrupt Link [LNKB] (IRQs 5 *10 11)
[    1.513055] kernel: ACPI: PCI Interrupt Link [LNKC] (IRQs 5 10 *11)
[    1.514232] kernel: ACPI: PCI Interrupt Link [LNKD] (IRQs 5 10 *11)
[    1.514731] kernel: ACPI: PCI Interrupt Link [LNKS] (IRQs *9)
[    1.516791] kernel: iommu: Default domain type: Translated 
[    1.516894] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.516894] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.516894] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.516894] kernel: vgaarb: loaded
[    1.517682] kernel: SCSI subsystem initialized
[    1.517913] kernel: libata version 3.00 loaded.
[    1.518107] kernel: ACPI: bus type USB registered
[    1.518req.flags e82
----- executor 1 do_sandbox_none at begining
----- executor 1 do_sandbox_none before fork()
ernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.556404] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.556408] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.556411] kernel: ACPI: IRQ0 used by override.
[    0.556414] kernel: ACPI: IRQ5 used by override.
[    0.556417] kernel: ACPI: IRQ9 used by override.
[    0.556419] kernel: ACPI: IRQ10 used by override.
[    0.556421] kernel: ACPI: IRQ11 used by override.
[    0.556427] kernel: Using ACPI (MADT) for SMP configuration information
[    0.556431] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.556441] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.556463] kernel: KVM setup pv sched yield
[    0.556494] kernel: PM: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.556500] kernel: PM: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.556503] kernel: PM: Registered nosave memory: [mem 0x000a0000-0x000effff]
[   97152
[    1.097218] kernel: pcpu-alloc: [0] 0 1 
[    1.097292] kernel: KVM setup async PF for cpu 0
[    1.097300] kernel: kvm-stealtime: cpu 0, msr 26501f1c0
[    1.097308] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580329
[    1.097309] kernel: Policy zone: Normal
[    1.097313] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.19 quiet nokaslr
[    1.104838] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    1.107247] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    1.107345] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    1.316383] kernel: Memory: 8822144K/10485240K available (43013K kernel code, 11267K rwdata, 6524K rodata, 2108K init, 10528K bss, 1663096K reserved, 0K cma-reserved)
[    1.317227] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    1.317963] kernel: rcu: Hierarchical RCU implementation.
[  ----- executor 3 do_sandbox_none at begining
----- executor 3 do_sandbox_none before fork()
238] kernel: usbcore: registered new interface driver usbfs
[    1.518305] kernel: usbcore: registered new interface driver hub
[    1.518358] kernel: usbcore: registered new device driver usb
[    1.518498] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.518500] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.518529] kernel: PTP clock support registered
[    1.518975] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.519074] kernel: PCI: Using ACPI for IRQ routing
[    1.519078] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.519218] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.519231] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    1.520076] kernel: NetLabel: Initializing
[    1.520078] kernel: NetLabel:  domain hash size = 128
[    1.520080] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.520207] kernel: NetLabel:  unlabeled traffic all  1.317964] kernel: rcu:         RCU event tracing is enabled.
[    1.317968] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    1.317973] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    1.317975] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    1.319351] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    1.319731] kernel: random: get_random_bytes called from start_kernel+0x43f/0x85d with crng_init=0
[    1.323728] kernel: Console: colour VGA+ 80x25
[    1.323787] kernel: printk: console [ttyS0] enabled
[    1.323825] kernel: ACPI: Core revision 20190816
[    1.324152] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    1.324270] kernel: APIC: Switch to symmetric I/O mode setup
[    1.324274] kernel: KVM setup pv IPIs
[    1.325509] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    1.325538] kernel: clocksource: tsc-ea 0.556506] kernel: PM: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.556512] kernel: PM: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.556515] kernel: PM: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.556518] kernel: PM: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.556520] kernel: PM: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.556523] kernel: PM: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.556528] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.556530] kernel: Booting paravirtualized kernel on KVM
[    0.556537] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    1.117340] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    1.118007] kernel: percpu: Embedded 59 pages/cpu s204504 r8192 d28968 u1048576
[    1.118032] kernel: pcpu-alloc: s204504 r8192 d28968 u1048576 alloc=1*20owed by default
[    1.520597] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.520608] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.521876] kernel: clocksource: Switched to clocksource kvm-clock
[    1.619500] kernel: VFS: Disk quotas dquot_6.6.0
[    1.619548] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.619849] kernel: pnp: PnP ACPI init
[    1.620228] kernel: pnp 00:00: Plug and Play ACPI device, IDs PNP0b00 (active)
[    1.620555] kernel: pnp 00:01: Plug and Play ACPI device, IDs PNP0303 (active)
[    1.620898] kernel: pnp 00:02: Plug and Play ACPI device, IDs PNP0f13 (active)
[    1.621015] kernel: pnp 00:03: [dma 2]
[    1.621126] kernel: pnp 00:03: Plug and Play ACPI device, IDs PNP0700 (active)
[    1.621635] kernel: pnp 00:04: Plug and Play ACPI device, IDs PNP0400 (active)
[    1.622109] kernel: pnp 00:05: Plug and Play ACPI device, IDs PNP0501 (active)
[    1.624924] kernel: pnp: PnP ACPI: found 6 devices
[    1.97152
[    1.118035] kernel: pcpu-alloc: [0] 0 1 
[    1.118110] kernel: KVM setup async PF for cpu 0
[    1.118118] kernel: kvm-stealtime: cpu 0, msr 26501f1c0
[    1.118126] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580329
[    1.118127] kernel: Policy zone: Normal
[    1.118131] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.18 quiet nokaslr
[    1.123070] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    1.125437] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    1.125539] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    1.334042] kernel: Memory: 8822144K/10485240K available (43013K kernel code, 11267K rwdata, 6524K rodata, 2108K init, 10528K bss, 1663096K reserved, 0K cma-reserved)
[    1.334821] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    1.335503] kernel: rcu: Hierarchical RCU implementation.
[  rly: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 440795319401 ns
[    1.325545] kernel: Calibrating delay loop (skipped) preset value.. 5187.81 BogoMIPS (lpj=2593906)
[    1.325552] kernel: pid_max: default: 32768 minimum: 301
[    1.325641] kernel: LSM: Security Framework initializing
[    1.325682] kernel: SELinux:  Initializing.
[    1.325828] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.325868] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.327080] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    1.327234] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    1.327238] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    1.327254] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    1.327262] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    1.327264] kernel: Spectre V2 : Spectre v2 / SpectreRSBexecutor 0 finishes userspace_cover_open
before receiving handshake request
003765] kernel: MTRR default type: write-back
[    0.003766] kernel: MTRR fixed ranges enabled:
[    0.003769] kernel:   00000-9FFFF write-back
[    0.003771] kernel:   A0000-BFFFF uncachable
[    0.003774] kernel:   C0000-FFFFF write-protect
[    0.003776] kernel: MTRR variable ranges enabled:
[    0.003780] kernel:   0 base 00C0000000 mask FFC0000000 uncachable
[    0.003781] kernel:   1 disabled
[    0.003782] kernel:   2 disabled
[    0.003783] kernel:   3 disabled
[    0.003784] kernel:   4 disabled
[    0.003785] kernel:   5 disabled
[    0.003786] kernel:   6 disabled
[    0.003787] kernel:   7 disabled
[    0.003798] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.003805] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.009868] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.009927] kernel: check: Scanning 1 areas for low memory corruption
[    0.009964] kernel: Using GB pages for direct mapping
[    0.009970] kernel636296] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    1.636299] kernel: thermal_sys: Registered thermal governor 'user_space'
[    1.640944] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.640970] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.640976] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.640983] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.640989] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.640995] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.641490] kernel: NET: Registered protocol family 2
[    1.642099] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.642184] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.642956] kernel: TCP bind hash table entries: 65536 (order: mitigation: Filling RSB on context switch
[    1.327270] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    1.327276] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    1.327278] kernel: TAA: Mitigation: TSX disabled
[    1.327936] kernel: Freeing SMP alternatives memory: 36K
[    1.328235] kernel: TSC deadline timer enabled
[    1.328246] kernel: smpboot: CPU0: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    1.328540] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    1.328540] kernel: ... version:                2
[    1.328540] kernel: ... bit width:              48
[    1.328540] kernel: ... generic registers:      8
[    1.328540] kernel: ... value mask:             0000ffffffffffff
[    1.328540] kernel: ... max period:             00007fffffffffff
[    1.328540] kernel: ... fixed-purpose eve  1.335504] kernel: rcu:         RCU event tracing is enabled.
[    1.335508] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    1.335512] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    1.335514] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    1.336885] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    1.337263] kernel: random: get_random_bytes called from start_kernel+0x43f/0x85d with crng_init=0
[    1.341280] kernel: Console: colour VGA+ 80x25
[    1.341335] kernel: printk: console [ttyS0] enabled
[    1.341372] kernel: ACPI: Core revision 20190816
[    1.341698] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    1.341807] kernel: APIC: Switch to symmetric I/O mode setup
[    1.341811] kernel: KVM setup pv IPIs
[    1.343028] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    1.343057] kernel: clocksource: tsc-ea: BRK [0x06201000, 0x06201fff] PGTABLE
[    0.009973] kernel: BRK [0x06202000, 0x06202fff] PGTABLE
[    0.009976] kernel: BRK [0x06203000, 0x06203fff] PGTABLE
[    0.009978] kernel: BRK [0x06204000, 0x06204fff] PGTABLE
[    0.010847] kernel: ACPI: Early table checksum verification disabled
[    0.010856] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.010867] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.010881] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.010896] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.010905] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.010912] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.010922] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.010938] kernel: ACPI: Local APIC address 0xnts:   3
[    1.328540] kernel: ... event mask:             00000007000000ff
[    1.328540] kernel: rcu: Hierarchical SRCU implementation.
[    1.328643] kernel: smp: Bringing up secondary CPUs ...
[    1.328910] kernel: x86: Booting SMP configuration:
[    1.328913] kernel: .... node  #0, CPUs:      #1
[    0.005900] kernel: kvm-clock: cpu 1, msr 57da041, secondary cpu clock
[    0.005900] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    1.330576] kernel: KVM setup async PF for cpu 1
[    1.330584] kernel: kvm-stealtime: cpu 1, msr 26511f1c0
[    1.330595] kernel: smp: Brought up 1 node, 2 CPUs
[    1.330595] kernel: smpboot: Max logical packages: 2
[    1.330595] kernel: smpboot: Total of 2 processors activated (10375.62 BogoMIPS)
[    1.331553] kernel: devtmpfs: initialized
[    1.335889] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    1.335897] kernel: futex hash table entries: 512 (order: 3, 32768 byte 8, 1048576 bytes, linear)
[    1.643866] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.643987] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.644108] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.644396] kernel: NET: Registered protocol family 1
[    1.648109] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.648129] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.648147] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.648222] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.648292] kernel: PCI: CLS 0 bytes, default 64
[    1.648533] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.648537] kernel: software IO TLB: mapped [mem 0xbbfe0000-0xbffe0000] (64MB)
[    1.648690] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 44079531rly: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 440795319401 ns
[    1.343065] kernel: Calibrating delay loop (skipped) preset value.. 5187.81 BogoMIPS (lpj=2593906)
[    1.343071] kernel: pid_max: default: 32768 minimum: 301
[    1.343158] kernel: LSM: Security Framework initializing
[    1.343199] kernel: SELinux:  Initializing.
[    1.343337] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.343373] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.344551] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    1.344706] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    1.344709] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    1.344725] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    1.344733] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    1.344735] kernel: Spectre V2 : Spectre v2 / SpectreRSBfee00000
[    0.011549] kernel: No NUMA configuration found
[    0.011552] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.011562] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.012055] kernel: Zone ranges:
[    0.012057] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.012061] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.012064] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.012067] kernel: Movable zone start for each node
[    0.012068] kernel: Early memory node ranges
[    0.012071] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.012074] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.012077] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.012815] kernel: Zeroed struct page in unavailable ranges: 130 pages
[    0.012819] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    before receive testcase: 0 1
9401 ns
[    1.648737] kernel: clocksource: Switched to clocksource tsc
[    1.649906] kernel: check: Scanning for low memory corruption every 60 seconds
[    1.652127] kernel: Initialise system trusted keyrings
[    1.652274] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.673085] kernel: fuse: init (API version 7.31)
[    1.678919] kernel: Key type asymmetric registered
[    1.678922] kernel: Asymmetric key parser 'x509' registered
[    1.678975] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.678978] kernel: io scheduler mq-deadline registered
[    1.678980] kernel: io scheduler kyber registered
[    1.680276] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.680513] kernel: ACPI: Power Button [PWRF]
[    2.786765] kernel: PCI Interrupt Link [LNKC] enabled at IRQ 11
[    3.895048] kernel: PCI Interrupt Link [LNKD] enabled at IRQ 10
[    3.899417] kernel: Serial: 8250/16550 driver, 4 portss, linear)
[    1.336615] kernel: PM: RTC time: 13:41:37, date: 2023-03-25
[    1.336998] kernel: NET: Registered protocol family 16
[    1.337590] kernel: audit: initializing netlink subsys (disabled)
[    1.337649] kernel: audit: type=2000 audit(1679751697.856:1): state=initialized audit_enabled=0 res=1
[    1.338117] kernel: cpuidle: using governor menu
[    1.338117] kernel: KVM setup pv remote TLB flush
[    1.338117] kernel: ACPI: bus type PCI registered
[    1.338758] kernel: PCI: Using configuration type 1 for base access
[    1.353764] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    1.353764] kernel: cryptomgr_test (25) used greatest stack depth: 30984 bytes left
[    1.353764] kernel: kworker/u4:0 (27) used greatest stack depth: 28296 bytes left
[    1.357806] kernel: ACPI: Added _OSI(Module Device)
[    1.357809] kernel: ACPI: Added _OSI(Processor Device)
[    1.357812] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    1.357814] kernel: ACPI: Adde mitigation: Filling RSB on context switch
[    1.344740] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    1.344746] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    1.344748] kernel: TAA: Mitigation: TSX disabled
[    1.345401] kernel: Freeing SMP alternatives memory: 36K
[    1.345683] kernel: TSC deadline timer enabled
[    1.345694] kernel: smpboot: CPU0: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    1.346003] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    1.346060] kernel: ... version:                2
[    1.346060] kernel: ... bit width:              48
[    1.346060] kernel: ... generic registers:      8
[    1.346060] kernel: ... value mask:             0000ffffffffffff
[    1.346060] kernel: ... max period:             00007fffffffffff
[    1.346060] kernel: ... fixed-purpose eve0.012822] kernel: On node 0 totalpages: 2621310
[    0.012825] kernel:   DMA zone: 64 pages used for memmap
[    0.012827] kernel:   DMA zone: 21 pages reserved
[    0.012829] kernel:   DMA zone: 3998 pages, LIFO batch:0
[    0.013000] kernel:   DMA32 zone: 12224 pages used for memmap
[    0.013002] kernel:   DMA32 zone: 782304 pages, LIFO batch:63
[    0.048792] kernel:   Normal zone: 28672 pages used for memmap
[    0.048795] kernel:   Normal zone: 1835008 pages, LIFO batch:63
[    0.498047] kernel: kasan: KernelAddressSanitizer initialized
[    0.498364] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.498369] kernel: ACPI: Local APIC address 0xfee00000
[    0.498382] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.498421] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.498427] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.498431] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.498434] k, IRQ sharing enabled
[    3.922119] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    3.924935] kernel: Non-volatile memory driver v1.3
[    3.925268] kernel: Linux agpgart interface v0.103
[    3.942110] kernel: loop: module loaded
[    3.942815] kernel: ata_piix 0000:00:01.1: version 2.13
[    3.945753] kernel: scsi host0: ata_piix
[    3.946645] kernel: scsi host1: ata_piix
[    3.946980] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    3.946985] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    3.947519] kernel: libphy: Fixed MDIO Bus: probed
[    3.951391] kernel: e100: Intel(R) PRO/100 Network Driver, 3.5.24-k2-NAPI
[    3.951394] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    3.951857] kernel: e1000: Intel(R) PRO/1000 Network Driver - version 7.3.21-k8-NAPI
[    3.951860] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    3.951948] kernel: e1000e: Intel(R) PRO/1000 Networnts:   3
[    1.346060] kernel: ... event mask:             00000007000000ff
[    1.346060] kernel: rcu: Hierarchical SRCU implementation.
[    1.346161] kernel: smp: Bringing up secondary CPUs ...
[    1.346427] kernel: x86: Booting SMP configuration:
[    1.346430] kernel: .... node  #0, CPUs:      #1
[    0.005888] kernel: kvm-clock: cpu 1, msr 57da041, secondary cpu clock
[    0.005888] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    1.348103] kernel: KVM setup async PF for cpu 1
[    1.348110] kernel: kvm-stealtime: cpu 1, msr 26511f1c0
[    1.348135] kernel: smp: Brought up 1 node, 2 CPUs
[    1.348140] kernel: smpboot: Max logical packages: 2
[    1.348146] kernel: smpboot: Total of 2 processors activated (10375.62 BogoMIPS)
[    1.349283] kernel: devtmpfs: initialized
[    1.355461] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    1.355473] kernel: futex hash table entries: 512 (order: 3, 32768 byted _OSI(Processor Aggregator Device)
[    1.358586] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    1.358596] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    1.358605] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    1.377182] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    1.382298] kernel: ACPI: Interpreter enabled
[    1.382420] kernel: ACPI: (supports S0 S3 S4 S5)
[    1.382424] kernel: ACPI: Using IOAPIC for interrupt routing
[    1.382515] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    1.384137] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    1.431613] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    1.431645] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    1.431823] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    1.432216] kernel: PCI host bridgek Driver - 3.2.6-k
[    3.951949] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    3.952044] kernel: sky2: driver version 1.30
[    3.952666] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    3.952669] kernel: ehci-pci: EHCI PCI platform driver
[    3.952716] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    3.952729] kernel: ohci-pci: OHCI PCI platform driver
[    3.952782] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    3.953118] kernel: usbcore: registered new interface driver usblp
[    3.953180] kernel: usbcore: registered new interface driver usb-storage
[    3.953330] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    3.954080] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    3.954099] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    3.955468] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    3.956124] kernes, linear)
[    1.355903] kernel: PM: RTC time: 13:41:37, date: 2023-03-25
[    1.356446] kernel: NET: Registered protocol family 16
[    1.357233] kernel: audit: initializing netlink subsys (disabled)
[    1.357313] kernel: audit: type=2000 audit(1679751697.871:1): state=initialized audit_enabled=0 res=1
[    1.358130] kernel: cpuidle: using governor menu
[    1.358467] kernel: KVM setup pv remote TLB flush
[    1.358471] kernel: ACPI: bus type PCI registered
[    1.358964] kernel: PCI: Using configuration type 1 for base access
[    1.389434] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    1.389434] kernel: cryptomgr_test (25) used greatest stack depth: 30776 bytes left
[    1.390193] kernel: kworker/u4:0 (27) used greatest stack depth: 28296 bytes left
[    1.394281] kernel: ACPI: Added _OSI(Module Device)
[    1.394283] kernel: ACPI: Added _OSI(Processor Device)
[    1.394285] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    1.394287] kernel: ACPI: Adde to bus 0000:00
[    1.432229] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    1.432240] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    1.432251] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    1.432262] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    1.432272] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    1.432283] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    1.432398] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.434426] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.436509] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    1.438554] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    1.439557] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.439563] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  ernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.498437] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.498440] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.498443] kernel: ACPI: IRQ0 used by override.
[    0.498445] kernel: ACPI: IRQ5 used by override.
[    0.498447] kernel: ACPI: IRQ9 used by override.
[    0.498449] kernel: ACPI: IRQ10 used by override.
[    0.498450] kernel: ACPI: IRQ11 used by override.
[    0.498455] kernel: Using ACPI (MADT) for SMP configuration information
[    0.498458] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.498466] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.498486] kernel: KVM setup pv sched yield
[    0.498512] kernel: PM: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.498517] kernel: PM: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.498519] kernel: PM: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.498521] kernel: PM: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.498526] kernel: PM: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.498528] kernel: PM: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.498530] kernel: PM: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.498532] kernel: PM: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.498534] kernel: PM: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.498539] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.498540] kernel: Booting paravirtualized kernel on KVM
[    0.498554] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.923136] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.923736] kernel: percpu: Embedded 59 pages/cpu s204504 r8192 d28968 u1048576
[    0.923756] kernel: pcpu-alloc: s204504 r8192 d28968 u1048576 alloc=1*200x03f6]
[    1.439569] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.439574] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.441122] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.441488] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.441501] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.443295] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.444131] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.445921] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.449077] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    1.451010] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.452039] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    1.455071] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    97152
[    0.923758] kernel: pcpu-alloc: [0] 0 1 
[    0.923818] kernel: KVM setup async PF for cpu 0
[    0.923825] kernel: kvm-stealtime: cpu 0, msr 26501f1c0
[    0.923831] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580329
[    0.923833] kernel: Policy zone: Normal
[    0.923836] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.17 quiet nokaslr
[    0.928142] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.930334] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.930414] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    1.107762] kernel: Memory: 8822144K/10485240K available (43013K kernel code, 11267K rwdata, 6524K rodata, 2108K init, 10528K bss, 1663096K reserved, 0K cma-reserved)
[    1.108469] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    1.109094] kernel: rcu: Hierarchical RCU implementation.
[  d _OSI(Processor Aggregator Device)
[    1.394296] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    1.394303] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    1.394310] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    1.409286] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    1.413671] kernel: ACPI: Interpreter enabled
[    1.413765] kernel: ACPI: (supports S0 S3 S4 S5)
[    1.413768] kernel: ACPI: Using IOAPIC for interrupt routing
[    1.413840] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    1.415060] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    1.451246] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    1.451271] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    1.451408] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    1.451715] kernel: PCI host bridge1.459481] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.460560] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    1.461554] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.464072] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.464554] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.467117] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.467963] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    1.469865] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.473743] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.474243] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.474981] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    1.477701] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.478404] kernel: pci 0000:00:12.l: rtc_cmos 00:00: RTC can wake from S4
[    3.957345] kernel: rtc_cmos 00:00: registered as rtc0
[    3.957588] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    3.958544] kernel: device-mapper: ioctl: 4.41.0-ioctl (2019-09-16) initialised: dm-devel@redhat.com
[    3.958550] kernel: intel_pstate: CPU model not supported
[    3.958642] kernel: hidraw: raw HID events driver (C) Jiri Kosina
[    3.959593] kernel: usbcore: registered new interface driver usbhid
[    3.959594] kernel: usbhid: USB HID core driver
[    3.960304] kernel: netem: version 1.3
[    3.961895] kernel: Initializing XFRM netlink socket
[    3.962917] kernel: NET: Registered protocol family 10
[    3.964241] kernel: Segment Routing with IPv6
[    3.964877] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    3.965609] kernel: NET: Registered protocol family 17
[    3.965778] kernel: 9pnet: Installing 9P2000 support
[    3.965850] kernel: Key type dns_resolver registered
[   1.109095] kernel: rcu:         RCU event tracing is enabled.
[    1.109098] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    1.109102] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    1.109104] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    1.110159] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    1.110451] kernel: random: get_random_bytes called from start_kernel+0x43f/0x85d with crng_init=0
[    1.113623] kernel: Console: colour VGA+ 80x25
[    1.113669] kernel: printk: console [ttyS0] enabled
[    1.113698] kernel: ACPI: Core revision 20190816
[    1.113958] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    1.114052] kernel: APIC: Switch to symmetric I/O mode setup
[    1.114055] kernel: KVM setup pv IPIs
[    1.115024] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    1.115048] kernel: clocksource: tsc-ea   3.965869] kernel: Key type ceph registered
[    3.966226] kernel: libceph: loaded (mon/osd proto 15/24)
[    3.967028] kernel: IPI shorthand broadcast: enabled
[    3.967063] kernel: sched_clock: Marking stable (3961901756, 4930907)->(3995858014, -29025351)
[    3.967564] kernel: registered taskstats version 1
[    3.967566] kernel: Loading compiled-in X.509 certificates
[    3.971403] kernel: PM:   Magic number: 15:371:686
[    3.971475] kernel: printk: console [netcon0] enabled
[    3.971476] kernel: netconsole: network logging started
[    3.984888] kernel: IP-Config: Guessing netmask 255.255.255.0
[    3.984891] kernel: IP-Config: Complete:
[    3.984900] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:14, ipaddr=192.168.0.20, mask=255.255.255.0, gw=255.255.255.255
[    3.984904] kernel:      host=192.168.0.20, domain=, nis-domain=(none)
[    3.984909] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    3.985252] kernel: cfg80211: Loading compile0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.479478] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.489816] kernel: ACPI: PCI Interrupt Link [LNKA] (IRQs 5 *10 11)
[    1.491021] kernel: ACPI: PCI Interrupt Link [LNKB] (IRQs 5 *10 11)
[    1.492222] kernel: ACPI: PCI Interrupt Link [LNKC] (IRQs 5 10 *11)
[    1.493406] kernel: ACPI: PCI Interrupt Link [LNKD] (IRQs 5 10 *11)
[    1.493896] kernel: ACPI: PCI Interrupt Link [LNKS] (IRQs *9)
[    1.495971] kernel: iommu: Default domain type: Translated 
[    1.496054] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.496054] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.496054] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.496054] kernel: vgaarb: loaded
[    1.496986] kernel: SCSI subsystem initialized
[    1.497070] kernel: libata version 3.00 loaded.
[    1.497070] kernel: ACPI: bus type USB registered
[    1.497rly: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 440795319401 ns
[    1.115055] kernel: Calibrating delay loop (skipped) preset value.. 5187.81 BogoMIPS (lpj=2593906)
[    1.115060] kernel: pid_max: default: 32768 minimum: 301
[    1.115128] kernel: LSM: Security Framework initializing
[    1.115159] kernel: SELinux:  Initializing.
[    1.115272] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.115306] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    1.116017] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    1.116172] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    1.116175] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    1.116188] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    1.116195] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    1.116196] kernel: Spectre V2 : Spectre v2 / SpectreRSBbefore receive testcase: 0 1
 to bus 0000:00
[    1.451726] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    1.451734] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    1.451742] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    1.451750] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    1.451759] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    1.451767] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    1.451855] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.453402] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.454998] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    1.456657] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    1.457291] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.457295] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io   mitigation: Filling RSB on context switch
[    1.116200] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    1.116205] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    1.116207] kernel: TAA: Mitigation: TSX disabled
[    1.116759] kernel: Freeing SMP alternatives memory: 36K
[    1.116999] kernel: TSC deadline timer enabled
[    1.117008] kernel: smpboot: CPU0: Intel(R) Xeon(R) Gold 6348 CPU @ 2.60GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    1.117051] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    1.117172] kernel: ... version:                2
[    1.117175] kernel: ... bit width:              48
[    1.117177] kernel: ... generic registers:      8
[    1.117181] kernel: ... value mask:             0000ffffffffffff
[    1.117185] kernel: ... max period:             00007fffffffffff
[    1.117188] kernel: ... fixed-purpose eve070] kernel: usbcore: registered new interface driver usbfs
[    1.497564] kernel: usbcore: registered new interface driver hub
[    1.497618] kernel: usbcore: registered new device driver usb
[    1.497755] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.497758] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.497786] kernel: PTP clock support registered
[    1.497887] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.497887] kernel: PCI: Using ACPI for IRQ routing
[    1.497887] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.498014] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.498028] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    1.499211] kernel: NetLabel: Initializing
[    1.499214] kernel: NetLabel:  domain hash size = 128
[    1.499215] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.499334] kernel: NetLabel:  unlabeled traffic allowed by default
[    1.499684] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.499694] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.502605] kernel: clocksource: Switched to clocksource kvm-clock
[    1.599950] kernel: VFS: Disk quotas dquot_6.6.0
[    1.599996] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.600281] kernel: pnp: PnP ACPI init
[    1.600663] kernel: pnp 00:00: Plug and Play ACPI device, IDs PNP0b00 (active)
[    1.600991] kernel: pnp 00:01: Plug and Play ACPI device, IDs PNP0303 (active)
[    1.601282] kernel: pnp 00:02: Plug and Play ACPI device, IDs PNP0f13 (active)
[    1.601394] kernel: pnp 00:03: [dma 2]
[    1.601503] kernel: pnp 00:03: Plug and Play ACPI device, IDs PNP0700 (active)
[    1.602074] kernel: pnp 00:04: Plug and Play ACPI device, IDs PNP0400 (active)
[    1.602539] kernel: pnp 00:05: Plug and Play ACPI device, IDs PNP0501 (active)
[    1.605336] kernel: pnp: PnP ACPI: found 6 devices
[    1.0x03f6]
[    1.457300] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.457303] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.458495] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.458783] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.458792] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.460617] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.461622] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.463577] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.467597] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    1.469566] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.470381] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    1.472406] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    618313] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    1.618315] kernel: thermal_sys: Registered thermal governor 'user_space'
[    1.622944] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.622967] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.622972] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.622977] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.622983] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.622988] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.623401] kernel: NET: Registered protocol family 2
[    1.623900] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.623979] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.624617] kernel: TCP bind hash table entries: 65536 (order:---- executor 0 config DFS: Preparing storage directory: /root/beegfs-server/beegfs_mgmtd

1.475091] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.476019] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    1.476756] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.480033] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.480474] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.482668] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.483437] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    1.484872] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.488653] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.489382] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.490384] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    1.493763] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.494433] kernel: pci 0000:00:12.nts:   3
[    1.117191] kernel: ... event mask:             00000007000000ff
[    1.117427] kernel: rcu: Hierarchical SRCU implementation.
[    1.118205] kernel: smp: Bringing up secondary CPUs ...
[    1.118626] kernel: x86: Booting SMP configuration:
[    1.118630] kernel: .... node  #0, CPUs:      #1
[    0.004666] kernel: kvm-clock: cpu 1, msr 57da041, secondary cpu clock
[    0.004666] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    1.120089] kernel: KVM setup async PF for cpu 1
[    1.120096] kernel: kvm-stealtime: cpu 1, msr 26511f1c0
[    1.120106] kernel: smp: Brought up 1 node, 2 CPUs
[    1.120106] kernel: smpboot: Max logical packages: 2
[    1.120106] kernel: smpboot: Total of 2 processors activated (10375.62 BogoMIPS)
[    1.121160] kernel: devtmpfs: initialized
[    1.127198] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    1.127208] kernel: futex hash table entries: 512 (order: 3, 32768 byte 8, 1048576 bytes, linear)
[    1.625371] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.625469] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.625575] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.625806] kernel: NET: Registered protocol family 1
[    1.626257] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.626270] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.626285] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.626346] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.626407] kernel: PCI: CLS 0 bytes, default 64
[    1.626614] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.626618] kernel: software IO TLB: mapped [mem 0xbbfe0000-0xbffe0000] (64MB)
[    1.626752] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 440795310: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.495765] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.505242] kernel: ACPI: PCI Interrupt Link [LNKA] (IRQs 5 *10 11)
[    1.506445] kernel: ACPI: PCI Interrupt Link [LNKB] (IRQs 5 *10 11)
[    1.507629] kernel: ACPI: PCI Interrupt Link [LNKC] (IRQs 5 10 *11)
[    1.508800] kernel: ACPI: PCI Interrupt Link [LNKD] (IRQs 5 10 *11)
[    1.509300] kernel: ACPI: PCI Interrupt Link [LNKS] (IRQs *9)
[    1.511474] kernel: iommu: Default domain type: Translated 
[    1.511555] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.511555] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.511555] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.511555] kernel: vgaarb: loaded
[    1.512497] kernel: SCSI subsystem initialized
[    1.512583] kernel: libata version 3.00 loaded.
[    1.512583] kernel: ACPI: bus type USB registered
[    1.512s, linear)
[    1.127579] kernel: PM: RTC time: 13:41:37, date: 2023-03-25
[    1.128048] kernel: NET: Registered protocol family 16
[    1.128772] kernel: audit: initializing netlink subsys (disabled)
[    1.128852] kernel: audit: type=2000 audit(1679751697.559:1): state=initialized audit_enabled=0 res=1
[    1.129560] kernel: cpuidle: using governor menu
[    1.129560] kernel: KVM setup pv remote TLB flush
[    1.129560] kernel: ACPI: bus type PCI registered
[    1.130152] kernel: PCI: Using configuration type 1 for base access
[    1.146278] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    1.146278] kernel: cryptomgr_test (25) used greatest stack depth: 30984 bytes left
[    1.146278] kernel: kworker/u4:0 (27) used greatest stack depth: 28296 bytes left
[    1.151346] kernel: ACPI: Added _OSI(Module Device)
[    1.151350] kernel: ACPI: Added _OSI(Processor Device)
[    1.151352] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    1.151355] kernel: ACPI: Adde583] kernel: usbcore: registered new interface driver usbfs
[    1.513196] kernel: usbcore: registered new interface driver hub
[    1.513247] kernel: usbcore: registered new device driver usb
[    1.513386] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.513389] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.513418] kernel: PTP clock support registered
[    1.521342] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.521445] kernel: PCI: Using ACPI for IRQ routing
[    1.521450] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.521589] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.521601] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    1.522756] kernel: NetLabel: Initializing
[    1.522759] kernel: NetLabel:  domain hash size = 128
[    1.522760] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.522879] kernel: NetLabel:  unlabeled traffic alld _OSI(Processor Aggregator Device)
[    1.151366] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    1.151376] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    1.151386] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    1.170335] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    1.175960] kernel: ACPI: Interpreter enabled
[    1.176088] kernel: ACPI: (supports S0 S3 S4 S5)
[    1.176092] kernel: ACPI: Using IOAPIC for interrupt routing
[    1.176187] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    1.177804] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    1.225344] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    1.225376] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    1.225558] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    1.225958] kernel: PCI host bridge9401 ns
[    1.626793] kernel: clocksource: Switched to clocksource tsc
[    1.627985] kernel: check: Scanning for low memory corruption every 60 seconds
[    1.630282] kernel: Initialise system trusted keyrings
[    1.630421] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.651314] kernel: fuse: init (API version 7.31)
[    1.657473] kernel: Key type asymmetric registered
[    1.657476] kernel: Asymmetric key parser 'x509' registered
[    1.657535] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.657538] kernel: io scheduler mq-deadline registered
[    1.657556] kernel: io scheduler kyber registered
[    1.658902] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.659154] kernel: ACPI: Power Button [PWRF]
[    2.767106] kernel: PCI Interrupt Link [LNKC] enabled at IRQ 11
[    3.864227] kernel: PCI Interrupt Link [LNKD] enabled at IRQ 10
[    3.866589] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    3.890756] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    3.899995] kernel: Non-volatile memory driver v1.3
[    3.900248] kernel: Linux agpgart interface v0.103
[    3.917656] kernel: loop: module loaded
[    3.918354] kernel: ata_piix 0000:00:01.1: version 2.13
[    3.921185] kernel: scsi host0: ata_piix
[    3.921947] kernel: scsi host1: ata_piix
[    3.922277] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    3.922281] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    3.922822] kernel: libphy: Fixed MDIO Bus: probed
[    3.926258] kernel: e100: Intel(R) PRO/100 Network Driver, 3.5.24-k2-NAPI
[    3.926261] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    3.926745] kernel: e1000: Intel(R) PRO/1000 Network Driver - version 7.3.21-k8-NAPI
[    3.926747] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    3.926836] kernel: e1000e: Intel(R) PRO/1000 Networowed by default
[    1.523242] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.523252] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.525101] kernel: clocksource: Switched to clocksource kvm-clock
[    1.616383] kernel: VFS: Disk quotas dquot_6.6.0
[    1.616430] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.616718] kernel: pnp: PnP ACPI init
[    1.617111] kernel: pnp 00:00: Plug and Play ACPI device, IDs PNP0b00 (active)
[    1.617443] kernel: pnp 00:01: Plug and Play ACPI device, IDs PNP0303 (active)
[    1.617731] kernel: pnp 00:02: Plug and Play ACPI device, IDs PNP0f13 (active)
[    1.617843] kernel: pnp 00:03: [dma 2]
[    1.617952] kernel: pnp 00:03: Plug and Play ACPI device, IDs PNP0700 (active)
[    1.618477] kernel: pnp 00:04: Plug and Play ACPI device, IDs PNP0400 (active)
[    1.618943] kernel: pnp 00:05: Plug and Play ACPI device, IDs PNP0501 (active)
[    1.621753] kernel: pnp: PnP ACPI: found 6 devices
[    1. to bus 0000:00
[    1.225970] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    1.225981] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    1.225992] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    1.226002] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    1.226013] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    1.226023] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    1.226146] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.228174] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.230279] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    1.232315] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    1.233334] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.233340] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  k Driver - 3.2.6-k
[    3.926838] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    3.926922] kernel: sky2: driver version 1.30
[    3.927505] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    3.927507] kernel: ehci-pci: EHCI PCI platform driver
[    3.927565] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    3.927578] kernel: ohci-pci: OHCI PCI platform driver
[    3.927630] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    3.927955] kernel: usbcore: registered new interface driver usblp
[    3.928018] kernel: usbcore: registered new interface driver usb-storage
[    3.928170] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    3.928892] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    3.928910] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    3.930015] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    3.931082] kerne633454] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    1.633457] kernel: thermal_sys: Registered thermal governor 'user_space'
[    1.638101] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.638120] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.638125] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.638130] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.638135] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.638139] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.638518] kernel: NET: Registered protocol family 2
[    1.638981] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.639048] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.639651] kernel: TCP bind hash table entries: 65536 (order:0x03f6]
[    1.233346] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.233351] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.234931] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.235300] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.235313] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.237136] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.238646] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.240622] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.244074] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    1.246048] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.246874] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    1.249065] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    ---- executor 0 config DFS:  * Creating format.conf file...

l: rtc_cmos 00:00: RTC can wake from S4
[    3.932670] kernel: rtc_cmos 00:00: registered as rtc0
[    3.932800] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    3.933708] kernel: device-mapper: ioctl: 4.41.0-ioctl (2019-09-16) initialised: dm-devel@redhat.com
[    3.933715] kernel: intel_pstate: CPU model not supported
[    3.933809] kernel: hidraw: raw HID events driver (C) Jiri Kosina
[    3.934752] kernel: usbcore: registered new interface driver usbhid
[    3.934754] kernel: usbhid: USB HID core driver
[    3.935478] kernel: netem: version 1.3
[    3.937084] kernel: Initializing XFRM netlink socket
[    3.938129] kernel: NET: Registered protocol family 10
[    3.939419] kernel: Segment Routing with IPv6
[    3.939866] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    3.940616] kernel: NET: Registered protocol family 17
[    3.940785] kernel: 9pnet: Installing 9P2000 support
[    3.940847] kernel: Key type dns_resolver registered
[ ---- executor 0 config DFS: Updating config file: /etc/beegfs/beegfs-mgmtd.conf

 8, 1048576 bytes, linear)
[    1.640407] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.640508] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.640602] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.640831] kernel: NET: Registered protocol family 1
[    1.641332] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.641345] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.641361] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.641421] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.641482] kernel: PCI: CLS 0 bytes, default 64
[    1.641686] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.641690] kernel: software IO TLB: mapped [mem 0xbbfe0000-0xbffe0000] (64MB)
[    1.641822] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 440795311.252586] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.253991] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    1.254966] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.258031] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.259100] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.266133] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.268101] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    1.272107] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.279920] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.280627] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.282071] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    1.287080] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.288083] kernel: pci 0000:00:12.---- executor 0 config DFS:  * Setting storage directory in config file...

d-in X.509 certificates for regulatory database
[    3.989496] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    3.989517] kernel: ALSA device list:
[    3.989521] kernel:   No soundcards found.
[    3.990558] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    3.990573] kernel: cfg80211: failed to load regulatory.db
[    4.101367] kernel: ata1.01: NODEV after polling detection
[    4.101577] kernel: ata2.01: NODEV after polling detection
[    4.101777] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    4.101782] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    4.101963] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    4.102861] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    4.103441] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.103642] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    4.103681] k9401 ns
[    1.641880] kernel: clocksource: Switched to clocksource tsc
[    1.643619] kernel: check: Scanning for low memory corruption every 60 seconds
[    1.646200] kernel: Initialise system trusted keyrings
[    1.646552] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.667198] kernel: fuse: init (API version 7.31)
[    1.672777] kernel: Key type asymmetric registered
[    1.672780] kernel: Asymmetric key parser 'x509' registered
[    1.672832] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.672835] kernel: io scheduler mq-deadline registered
[    1.672837] kernel: io scheduler kyber registered
[    1.674192] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.674429] kernel: ACPI: Power Button [PWRF]
[    2.775979] kernel: PCI Interrupt Link [LNKC] enabled at IRQ 11
[    3.887010] kernel: PCI Interrupt Link [LNKD] enabled at IRQ 10
[    3.888734] kernel: Serial: 8250/16550 driver, 4 ports0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.290084] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.299975] kernel: ACPI: PCI Interrupt Link [LNKA] (IRQs 5 *10 11)
[    1.301184] kernel: ACPI: PCI Interrupt Link [LNKB] (IRQs 5 *10 11)
[    1.302373] kernel: ACPI: PCI Interrupt Link [LNKC] (IRQs 5 10 *11)
[    1.303553] kernel: ACPI: PCI Interrupt Link [LNKD] (IRQs 5 10 *11)
[    1.304110] kernel: ACPI: PCI Interrupt Link [LNKS] (IRQs *9)
[    1.306257] kernel: iommu: Default domain type: Translated 
[    1.306340] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.306340] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.306340] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.306340] kernel: vgaarb: loaded
[    1.307356] kernel: SCSI subsystem initialized
[    1.307444] kernel: libata version 3.00 loaded.
[    1.307444] kernel: ACPI: bus type USB registered
[    1.307ernel: sd 0:0:0:0: [sda] Write Protect is off
[    4.103694] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    4.103749] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.104017] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    4.106825] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    4.125530] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.125540] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.127000] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    4.127426] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.583399] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.583994] kernel: md: Waiting for all devices to be available before autodetect
[    4.583997] kernel: md: If you don't use raid, use raid=noautodetect
[    4.585327] kernel: md: Autodetecting RAID arrays.
[    4.585329] ker, IRQ sharing enabled
[    3.919679] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    3.922229] kernel: Non-volatile memory driver v1.3
[    3.922391] kernel: Linux agpgart interface v0.103
[    3.940895] kernel: loop: module loaded
[    3.941628] kernel: ata_piix 0000:00:01.1: version 2.13
[    3.944546] kernel: scsi host0: ata_piix
[    3.945483] kernel: scsi host1: ata_piix
[    3.945813] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    3.945818] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    3.946356] kernel: libphy: Fixed MDIO Bus: probed
[    3.950128] kernel: e100: Intel(R) PRO/100 Network Driver, 3.5.24-k2-NAPI
[    3.950130] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    3.950586] kernel: e1000: Intel(R) PRO/1000 Network Driver - version 7.3.21-k8-NAPI
[    3.950589] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    3.950677] kernel: e1000e: Intel(R) PRO/1000 Networ   3.940867] kernel: Key type ceph registered
[    3.941252] kernel: libceph: loaded (mon/osd proto 15/24)
[    3.942024] kernel: IPI shorthand broadcast: enabled
[    3.942062] kernel: sched_clock: Marking stable (3936957444, 4900861)->(3976283730, -34425425)
[    3.942589] kernel: registered taskstats version 1
[    3.942592] kernel: Loading compiled-in X.509 certificates
[    3.946382] kernel: PM:   Magic number: 15:371:686
[    3.946468] kernel: printk: console [netcon0] enabled
[    3.946469] kernel: netconsole: network logging started
[    3.959601] kernel: IP-Config: Guessing netmask 255.255.255.0
[    3.959603] kernel: IP-Config: Complete:
[    3.959612] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:13, ipaddr=192.168.0.19, mask=255.255.255.0, gw=255.255.255.255
[    3.959616] kernel:      host=192.168.0.19, domain=, nis-domain=(none)
[    3.959621] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    3.959952] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    3.962637] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    3.962647] kernel: ALSA device list:
[    3.962649] kernel:   No soundcards found.
[    3.963105] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    3.963111] kernel: cfg80211: failed to load regulatory.db
[    4.076790] kernel: ata1.01: NODEV after polling detection
[    4.077011] kernel: ata2.01: NODEV after polling detection
[    4.077640] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    4.077653] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    4.077915] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    4.079594] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    4.080301] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.080465] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    4.080500] k479] kernel: usbcore: registered new interface driver usbfs
[    1.307548] kernel: usbcore: registered new interface driver hub
[    1.307602] kernel: usbcore: registered new device driver usb
[    1.308169] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.308171] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.308201] kernel: PTP clock support registered
[    1.308307] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.308397] kernel: PCI: Using ACPI for IRQ routing
[    1.308402] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.308538] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.308551] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    1.309672] kernel: NetLabel: Initializing
[    1.309675] kernel: NetLabel:  domain hash size = 128
[    1.309676] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.309800] kernel: NetLabel:  unlabeled traffic allnel: md: autorun ...
[    4.585330] kernel: md: ... autorun DONE.
[    4.621086] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null)
[    4.621157] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    4.622877] kernel: devtmpfs: mounted
[    4.623938] kernel: Freeing unused kernel image memory: 2108K
[    4.623942] kernel: Write protecting the kernel read-only data: 53248k
[    4.625583] kernel: Freeing unused kernel image memory: 2004K
[    4.626345] kernel: Freeing unused kernel image memory: 1668K
[    4.626353] kernel: Run /sbin/init as init process
[    4.735025] kernel: random: fast init done
[    4.851504] systemd[1]: systemd 245.4-4ubuntu3.15 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    4.853570] systemd[1]: Detected virtualization kvm.
[    4.853582] systemd[1]: Deteck Driver - 3.2.6-k
[    3.950679] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    3.950763] kernel: sky2: driver version 1.30
[    3.951362] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    3.951364] kernel: ehci-pci: EHCI PCI platform driver
[    3.951411] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    3.951424] kernel: ohci-pci: OHCI PCI platform driver
[    3.951477] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    3.951802] kernel: usbcore: registered new interface driver usblp
[    3.951865] kernel: usbcore: registered new interface driver usb-storage
[    3.952016] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    3.952780] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    3.952799] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    3.954027] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    3.954862] kerneowed by default
[    1.310170] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.310180] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.314110] kernel: clocksource: Switched to clocksource kvm-clock
[    1.431410] kernel: VFS: Disk quotas dquot_6.6.0
[    1.431457] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.431751] kernel: pnp: PnP ACPI init
[    1.432142] kernel: pnp 00:00: Plug and Play ACPI device, IDs PNP0b00 (active)
[    1.432478] kernel: pnp 00:01: Plug and Play ACPI device, IDs PNP0303 (active)
[    1.432775] kernel: pnp 00:02: Plug and Play ACPI device, IDs PNP0f13 (active)
[    1.432891] kernel: pnp 00:03: [dma 2]
[    1.432999] kernel: pnp 00:03: Plug and Play ACPI device, IDs PNP0700 (active)
[    1.433518] kernel: pnp 00:04: Plug and Play ACPI device, IDs PNP0400 (active)
[    1.433991] kernel: pnp 00:05: Plug and Play ACPI device, IDs PNP0501 (active)
[    1.436762] kernel: pnp: PnP ACPI: found 6 devices
[    1.ernel: sd 0:0:0:0: [sda] Write Protect is off
[    4.080514] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    4.080579] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.080959] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    4.083352] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    4.099188] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.099198] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.100655] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    4.101098] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.557337] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.557835] kernel: md: Waiting for all devices to be available before autodetect
[    4.557837] kernel: md: If you don't use raid, use raid=noautodetect
[    4.559134] kernel: md: Autodetecting RAID arrays.
[    4.559137] kerted architecture x86-64.
[    4.867553] systemd[1]: Set hostname to <dfs-fuzzing>.
[    4.928018] kernel: systemd-cryptse (105) used greatest stack depth: 26176 bytes left
[    4.985576] kernel: systemd-sysv-ge (114) used greatest stack depth: 25872 bytes left
[    5.012861] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    5.107375] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    5.107386] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    5.108190] systemd[1]: Created slice system-modprobe.slice.
[    5.108633] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    5.109085] systemd[1]: Created slice User and Session Slice.
[    5.109279] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    5.109437] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    5.110214] systemd[1]: Set up automounl: rtc_cmos 00:00: RTC can wake from S4
[    3.956129] kernel: rtc_cmos 00:00: registered as rtc0
[    3.956233] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    3.963233] kernel: device-mapper: ioctl: 4.41.0-ioctl (2019-09-16) initialised: dm-devel@redhat.com
[    3.963244] kernel: intel_pstate: CPU model not supported
[    3.963360] kernel: hidraw: raw HID events driver (C) Jiri Kosina
[    3.964495] kernel: usbcore: registered new interface driver usbhid
[    3.964497] kernel: usbhid: USB HID core driver
[    3.965587] kernel: netem: version 1.3
[    3.973029] kernel: Initializing XFRM netlink socket
[    3.974679] kernel: NET: Registered protocol family 10
[    3.976483] kernel: Segment Routing with IPv6
[    3.976962] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    3.977794] kernel: NET: Registered protocol family 17
[    3.977978] kernel: 9pnet: Installing 9P2000 support
[    3.978049] kernel: Key type dns_resolver registered
[ 448734] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    1.448737] kernel: thermal_sys: Registered thermal governor 'user_space'
[    1.453385] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.453408] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.453414] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.453421] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.453427] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.453433] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.453934] kernel: NET: Registered protocol family 2
[    1.454540] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.454626] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.455395] kernel: TCP bind hash table entries: 65536 (order:nel: md: autorun ...
[    4.559138] kernel: md: ... autorun DONE.
[    4.571873] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null)
[    4.571926] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    4.573209] kernel: devtmpfs: mounted
[    4.574453] kernel: Freeing unused kernel image memory: 2108K
[    4.574457] kernel: Write protecting the kernel read-only data: 53248k
[    4.577267] kernel: Freeing unused kernel image memory: 2004K
[    4.578083] kernel: Freeing unused kernel image memory: 1668K
[    4.578089] kernel: Run /sbin/init as init process
[    4.643138] kernel: random: fast init done
[    4.721244] systemd[1]: systemd 245.4-4ubuntu3.15 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    4.721430] systemd[1]: Detected virtualization kvm.
[    4.721442] systemd[1]: Detect Arbitrary Executable File Formats File System Automount Point.
[    5.110258] systemd[1]: Reached target Local Encrypted Volumes.
[    5.110279] systemd[1]: Reached target Network is Online.
[    5.110293] systemd[1]: Reached target Paths.
[    5.110308] systemd[1]: Reached target Remote File Systems.
[    5.110321] systemd[1]: Reached target Slices.
[    5.110337] systemd[1]: Reached target Swap.
[    5.110531] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    5.110860] systemd[1]: Listening on Syslog Socket.
[    5.111010] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    5.111475] systemd[1]: Listening on Journal Audit Socket.
[    5.111765] systemd[1]: Listening on Journal Socket (/dev/log).
[    5.112150] systemd[1]: Listening on Journal Socket.
[    5.112505] systemd[1]: Listening on udev Control Socket.
[    5.112712] systemd[1]: Listening on udev Kernel Socket.
[    5.115350] systemd[1]: Mounting Huge Pages File System...
[    5.117700] systemd[1]   3.978083] kernel: Key type ceph registered
[    3.978480] kernel: libceph: loaded (mon/osd proto 15/24)
[    3.979171] kernel: IPI shorthand broadcast: enabled
[    3.979212] kernel: sched_clock: Marking stable (3974176842, 4888295)->(4007962356, -28897219)
[    3.979760] kernel: registered taskstats version 1
[    3.979762] kernel: Loading compiled-in X.509 certificates
[    3.983891] kernel: PM:   Magic number: 15:371:686
[    3.983969] kernel: printk: console [netcon0] enabled
[    3.983971] kernel: netconsole: network logging started
[    3.997106] kernel: IP-Config: Guessing netmask 255.255.255.0
[    3.997109] kernel: IP-Config: Complete:
[    3.997115] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:12, ipaddr=192.168.0.18, mask=255.255.255.0, gw=255.255.255.255
[    3.997118] kernel:      host=192.168.0.18, domain=, nis-domain=(none)
[    3.997122] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    3.997381] kernel: cfg80211: Loading compile 8, 1048576 bytes, linear)
[    1.456276] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.456393] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.456512] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.456807] kernel: NET: Registered protocol family 1
[    1.462389] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.462406] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.462425] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.462503] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.462581] kernel: PCI: CLS 0 bytes, default 64
[    1.462843] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.462848] kernel: software IO TLB: mapped [mem 0xbbfe0000-0xbffe0000] (64MB)
[    1.463017] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x2563bf907c6, max_idle_ns: 44079531ted architecture x86-64.
[    4.730144] systemd[1]: Set hostname to <dfs-fuzzing>.
[    4.804884] kernel: systemd-cryptse (105) used greatest stack depth: 26944 bytes left
[    4.812793] kernel: systemd-fstab-g (107) used greatest stack depth: 26176 bytes left
[    4.874736] kernel: systemd-sysv-ge (114) used greatest stack depth: 25872 bytes left
[    4.939707] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    4.992055] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    4.992067] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    4.992843] systemd[1]: Created slice system-modprobe.slice.
[    4.993275] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    4.993623] systemd[1]: Created slice User and Session Slice.
[    4.993814] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    4.993972] systemd[1]: Started Forw: Mounting POSIX Message Queue File System...
[    5.120114] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    5.122210] systemd[1]: Mounting /sys/kernel/config...
[    5.124697] systemd[1]: Mounting /sys/kernel/debug...
[    5.128016] systemd[1]: Mounting Kernel Trace File System...
[    5.134223] systemd[1]: Starting Journal Service...
[    5.137365] systemd[1]: Starting Set the console keyboard layout...
[    5.137459] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    5.137531] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    5.154995] systemd[1]: Starting Load Kernel Modules...
[    5.158149] systemd[1]: Starting Remount Root and Kernel File Systems...
[    5.161080] systemd[1]: Starting udev Coldplug all Devices...
[    5.166327] systemd[1]: Mounted Huge Pages File System.
[    5.166645] systemd[1]: Mounted POSIX Message Queue File System.
[    5.166936] systemd[1]: Mounted /d-in X.509 certificates for regulatory database
[    3.999735] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    3.999748] kernel: ALSA device list:
[    3.999750] kernel:   No soundcards found.
[    4.000230] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    4.000236] kernel: cfg80211: failed to load regulatory.db
[    4.103344] kernel: ata1.01: NODEV after polling detection
[    4.103754] kernel: ata2.01: NODEV after polling detection
[    4.104196] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    4.104210] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    4.104569] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    4.105968] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    4.106702] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.107895] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    4.107978] k---- executor 0 config DFS:  * Disabling usage of uninitialized storage directory in config file...

9401 ns
[    1.463047] kernel: clocksource: Switched to clocksource tsc
[    1.463973] kernel: check: Scanning for low memory corruption every 60 seconds
[    1.466182] kernel: Initialise system trusted keyrings
[    1.472868] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.496119] kernel: fuse: init (API version 7.31)
[    1.500851] kernel: Key type asymmetric registered
[    1.500854] kernel: Asymmetric key parser 'x509' registered
[    1.500902] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.500904] kernel: io scheduler mq-deadline registered
[    1.500906] kernel: io scheduler kyber registered
[    1.501998] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.502207] kernel: ACPI: Power Button [PWRF]
[    2.346787] kernel: PCI Interrupt Link [LNKC] enabled at IRQ 11
[    3.192066] kernel: PCI Interrupt Link [LNKD] enabled at IRQ 10
[    3.193438] kernel: Serial: 8250/16550 driver, 4 portsard Password Requests to Wall Directory Watch.
[    4.994740] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    4.994785] systemd[1]: Reached target Local Encrypted Volumes.
[    4.994806] systemd[1]: Reached target Network is Online.
[    4.994819] systemd[1]: Reached target Paths.
[    4.994836] systemd[1]: Reached target Remote File Systems.
[    4.994848] systemd[1]: Reached target Slices.
[    4.994864] systemd[1]: Reached target Swap.
[    4.995060] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    4.995366] systemd[1]: Listening on Syslog Socket.
[    4.995516] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    4.996052] systemd[1]: Listening on Journal Audit Socket.
[    4.996340] systemd[1]: Listening on Journal Socket (/dev/log).
[    4.996708] systemd[1]: Listening on Journal Socket.
[    4.997040] systemd[1]: Listening on udev Control Socket.
[    4.997648] systemd[1]: Listening on udev Kernel Socketernel: sd 0:0:0:0: [sda] Write Protect is off
[    4.108006] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    4.108159] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.108608] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    4.123962] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    4.142374] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.142384] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.143934] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    4.144436] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.575413] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.575861] kernel: md: Waiting for all devices to be available before autodetect
[    4.575862] kernel: md: If you don't use raid, use raid=noautodetect
[    4.576736] kernel: md: Autodetecting RAID arrays.
[    4.576738] kerproc/sys/fs/binfmt_misc.
[    5.167221] systemd[1]: Mounted /sys/kernel/config.
[    5.167492] systemd[1]: Mounted /sys/kernel/debug.
[    5.167764] systemd[1]: Mounted Kernel Trace File System.
[    5.184196] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    5.193128] systemd[1]: Finished Load Kernel Modules.
[    5.196377] systemd[1]: Mounting FUSE Control File System...
[    5.201981] systemd[1]: Starting Apply Kernel Variables...
[    5.213026] systemd[1]: Mounted FUSE Control File System.
[    5.220475] kernel: EXT4-fs (sda): re-mounted. Opts: (null)
[    5.229802] systemd[1]: Finished Remount Root and Kernel File Systems.
[    5.236947] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    5.237008] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    5.243644] systemd[1]: Starting Load/Save Random Seed...
[    5.245948] systemd[1]: Starting Create System Users., IRQ sharing enabled
[    3.215846] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    3.217596] kernel: Non-volatile memory driver v1.3
[    3.217717] kernel: Linux agpgart interface v0.103
[    3.228582] kernel: loop: module loaded
[    3.233355] kernel: ata_piix 0000:00:01.1: version 2.13
[    3.236220] kernel: scsi host0: ata_piix
[    3.236987] kernel: scsi host1: ata_piix
[    3.237319] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    3.237324] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    3.237854] kernel: libphy: Fixed MDIO Bus: probed
[    3.242633] kernel: e100: Intel(R) PRO/100 Network Driver, 3.5.24-k2-NAPI
[    3.242635] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    3.243093] kernel: e1000: Intel(R) PRO/1000 Network Driver - version 7.3.21-k8-NAPI
[    3.243095] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    3.243169] kernel: e1000e: Intel(R) PRO/1000 Networ.
[    5.000041] systemd[1]: Mounting Huge Pages File System...
[    5.002366] systemd[1]: Mounting POSIX Message Queue File System...
[    5.004839] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    5.007221] systemd[1]: Mounting /sys/kernel/config...
[    5.009874] systemd[1]: Mounting /sys/kernel/debug...
[    5.014427] systemd[1]: Mounting Kernel Trace File System...
[    5.021210] systemd[1]: Starting Journal Service...
[    5.025356] systemd[1]: Starting Set the console keyboard layout...
[    5.025453] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    5.025533] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    5.032861] systemd[1]: Starting Load Kernel Modules...
[    5.038840] systemd[1]: Starting Remount Root and Kernel File Systems...
[    5.045963] systemd[1]: Starting udev Coldplug all Devices...
[    5.052120] systemd[1]: Mounted Huge Pages File System.
[    5.052440] nel: md: autorun ...
[    4.576739] kernel: md: ... autorun DONE.
[    4.586503] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null)
[    4.586570] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    4.588838] kernel: devtmpfs: mounted
[    4.590556] kernel: Freeing unused kernel image memory: 2108K
[    4.590563] kernel: Write protecting the kernel read-only data: 53248k
[    4.593091] kernel: Freeing unused kernel image memory: 2004K
[    4.594042] kernel: Freeing unused kernel image memory: 1668K
[    4.594053] kernel: Run /sbin/init as init process
[    4.639514] kernel: random: fast init done
[    4.703796] systemd[1]: systemd 245.4-4ubuntu3.15 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    4.704401] systemd[1]: Detected virtualization kvm.
[    4.704413] systemd[1]: Detec..
[    5.301068] systemd[1]: Finished Apply Kernel Variables.
[    5.309336] systemd[1]: Finished Create System Users.
[    5.311721] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.344056] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.346891] systemd[1]: Starting udev Kernel Device Manager...
[    5.380277] systemd[1]: Started Journal Service.
[    5.478908] kernel: random: crng init done
[    6.000619] kernel: SELinux: unrecognized netlink message: protocol=0 nlmsg_type=108 sclass=netlink_route_socket pig=161 comm=systemd-udevd
[    6.596794] kernel: beegfs-mon/Main (190) used greatest stack depth: 25616 bytes left
[    8.020855] kernel: mandb (233) used greatest stack depth: 25272 bytes left
k Driver - 3.2.6-k
[    3.243170] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    3.243235] kernel: sky2: driver version 1.30
[    3.243719] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    3.243721] kernel: ehci-pci: EHCI PCI platform driver
[    3.243758] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    3.243769] kernel: ohci-pci: OHCI PCI platform driver
[    3.243825] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    3.244175] kernel: usbcore: registered new interface driver usblp
[    3.244242] kernel: usbcore: registered new interface driver usb-storage
[    3.244400] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    3.245185] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    3.245204] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    3.246344] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    3.247669] kernesystemd[1]: Mounted POSIX Message Queue File System.
[    5.052730] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    5.053017] systemd[1]: Mounted /sys/kernel/config.
[    5.053291] systemd[1]: Mounted /sys/kernel/debug.
[    5.053571] systemd[1]: Mounted Kernel Trace File System.
[    5.063775] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    5.067382] systemd[1]: Finished Load Kernel Modules.
[    5.074417] systemd[1]: Mounting FUSE Control File System...
[    5.079218] systemd[1]: Starting Apply Kernel Variables...
[    5.084028] systemd[1]: Mounted FUSE Control File System.
[    5.091115] kernel: EXT4-fs (sda): re-mounted. Opts: (null)
[    5.113423] systemd[1]: Finished Remount Root and Kernel File Systems.
[    5.116220] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    5.116276] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    5.120861] systemd[1]: Sted architecture x86-64.
[    4.714784] systemd[1]: Set hostname to <dfs-fuzzing>.
[    4.767280] kernel: netplan (103) used greatest stack depth: 26176 bytes left
[    4.853560] kernel: systemd-sysv-ge (114) used greatest stack depth: 25872 bytes left
[    4.958095] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    4.980779] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    4.980791] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    4.981572] systemd[1]: Created slice system-modprobe.slice.
[    4.982005] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    4.982360] systemd[1]: Created slice User and Session Slice.
[    4.982554] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    4.982713] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    4.983514] systemd[1]: Set up automount Arbitrl: rtc_cmos 00:00: RTC can wake from S4
[    3.249263] kernel: rtc_cmos 00:00: registered as rtc0
[    3.249513] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    3.250766] kernel: device-mapper: ioctl: 4.41.0-ioctl (2019-09-16) initialised: dm-devel@redhat.com
[    3.250773] kernel: intel_pstate: CPU model not supported
[    3.250869] kernel: hidraw: raw HID events driver (C) Jiri Kosina
[    3.251861] kernel: usbcore: registered new interface driver usbhid
[    3.251862] kernel: usbhid: USB HID core driver
[    3.252600] kernel: netem: version 1.3
[    3.254274] kernel: Initializing XFRM netlink socket
[    3.255049] kernel: NET: Registered protocol family 10
[    3.256091] kernel: Segment Routing with IPv6
[    3.256432] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    3.257016] kernel: NET: Registered protocol family 17
[    3.257165] kernel: 9pnet: Installing 9P2000 support
[    3.257218] kernel: Key type dns_resolver registered
[ tarting Load/Save Random Seed...
[    5.128171] systemd[1]: Starting Create System Users...
[    5.170466] systemd[1]: Finished Apply Kernel Variables.
[    5.197483] systemd[1]: Finished Create System Users.
[    5.199930] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.252529] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.255485] systemd[1]: Starting udev Kernel Device Manager...
[    5.259293] systemd[1]: Started Journal Service.
[    5.557305] kernel: random: crng init done
[    5.857272] kernel: SELinux: unrecognized netlink message: protocol=0 nlmsg_type=108 sclass=netlink_route_socket pig=146 comm=systemd-udevd
[    6.470484] kernel: beegfs-mon/Main (189) used greatest stack depth: 25616 bytes left
[    6.862779] kernel: logrotate (201) used greatest stack depth: 25432 bytes left
[    7.711788] kernel: mandb (227) used greatest stack depth: 25272 bytes left
[    7.998668] kernel: fstrim (200) used greatest stack depth: 25048 bytes left
ary Executable File Formats File System Automount Point.
[    4.983559] systemd[1]: Reached target Local Encrypted Volumes.
[    4.983579] systemd[1]: Reached target Network is Online.
[    4.983594] systemd[1]: Reached target Paths.
[    4.983608] systemd[1]: Reached target Remote File Systems.
[    4.983621] systemd[1]: Reached target Slices.
[    4.983637] systemd[1]: Reached target Swap.
[    4.983825] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    4.984150] systemd[1]: Listening on Syslog Socket.
[    4.984296] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    4.984751] systemd[1]: Listening on Journal Audit Socket.
[    4.985429] systemd[1]: Listening on Journal Socket (/dev/log).
[    4.985797] systemd[1]: Listening on Journal Socket.
[    4.986163] systemd[1]: Listening on udev Control Socket.
[    4.986373] systemd[1]: Listening on udev Kernel Socket.
[    4.989003] systemd[1]: Mounting Huge Pages File System...
[    4.991268] systemd[1]: Mounti   3.257234] kernel: Key type ceph registered
[    3.257554] kernel: libceph: loaded (mon/osd proto 15/24)
[    3.258140] kernel: IPI shorthand broadcast: enabled
[    3.258169] kernel: sched_clock: Marking stable (3254387877, 3666939)->(3343952118, -85897302)
[    3.258766] kernel: registered taskstats version 1
[    3.258768] kernel: Loading compiled-in X.509 certificates
[    3.261702] kernel: PM:   Magic number: 15:371:686
[    3.261771] kernel: printk: console [netcon0] enabled
[    3.261772] kernel: netconsole: network logging started
[    3.274111] kernel: IP-Config: Guessing netmask 255.255.255.0
[    3.274114] kernel: IP-Config: Complete:
[    3.274124] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:11, ipaddr=192.168.0.17, mask=255.255.255.0, gw=255.255.255.255
[    3.274129] kernel:      host=192.168.0.17, domain=, nis-domain=(none)
[    3.274134] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    3.274508] kernel: cfg80211: Loading compile---- executor 0 config DFS: All done.

ng POSIX Message Queue File System...
[    4.993445] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    4.995747] systemd[1]: Mounting /sys/kernel/config...
[    4.998142] systemd[1]: Mounting /sys/kernel/debug...
[    5.006210] systemd[1]: Mounting Kernel Trace File System...
[    5.008559] systemd[1]: Starting Journal Service...
[    5.014755] systemd[1]: Starting Set the console keyboard layout...
[    5.014838] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    5.015270] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    5.030106] systemd[1]: Starting Load Kernel Modules...
[    5.034356] systemd[1]: Starting Remount Root and Kernel File Systems...
[    5.037255] systemd[1]: Starting udev Coldplug all Devices...
[    5.040496] systemd[1]: Mounted Huge Pages File System.
[    5.040808] systemd[1]: Mounted POSIX Message Queue File System.
[    5.041149] systemd[1]: Mounted /proc/sysd-in X.509 certificates for regulatory database
[    3.277299] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    3.277312] kernel: ALSA device list:
[    3.277314] kernel:   No soundcards found.
[    3.278162] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    3.278172] kernel: cfg80211: failed to load regulatory.db
[    3.393704] kernel: ata1.01: NODEV after polling detection
[    3.393934] kernel: ata2.01: NODEV after polling detection
[    3.394185] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    3.394191] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    3.394388] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    3.395415] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    3.396308] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    3.396510] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    3.396545] k/fs/binfmt_misc.
[    5.041435] systemd[1]: Mounted /sys/kernel/config.
[    5.041698] systemd[1]: Mounted /sys/kernel/debug.
[    5.041962] systemd[1]: Mounted Kernel Trace File System.
[    5.049912] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    5.074487] systemd[1]: Finished Load Kernel Modules.
[    5.077265] systemd[1]: Mounting FUSE Control File System...
[    5.079565] systemd[1]: Starting Apply Kernel Variables...
[    5.099860] kernel: EXT4-fs (sda): re-mounted. Opts: (null)
[    5.105323] systemd[1]: Finished Remount Root and Kernel File Systems.
[    5.117567] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    5.117629] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    5.120748] systemd[1]: Starting Load/Save Random Seed...
[    5.123624] systemd[1]: Starting Create System Users...
[    5.125492] systemd[1]: Mounted FUSE Control File System.
[    5.171425] systemd[1]: Finished Apply Kernel Variables.
[    5.176169] systemd[1]: Finished Create System Users.
[    5.178619] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.236144] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.239349] systemd[1]: Starting udev Kernel Device Manager...
[    5.263869] systemd[1]: Started Journal Service.
[    5.613252] kernel: random: crng init done
[    5.873750] kernel: SELinux: unrecognized netlink message: protocol=0 nlmsg_type=108 sclass=netlink_route_socket pig=145 comm=systemd-udevd
[    6.122226] kernel: setfont (177) used greatest stack depth: 24920 bytes left
ernel: sd 0:0:0:0: [sda] Write Protect is off
[    3.396558] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    3.396622] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    3.397093] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    3.400243] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    3.417966] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    3.417979] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    3.419940] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    3.420646] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    3.877383] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    3.877882] kernel: md: Waiting for all devices to be available before autodetect
[    3.877888] kernel: md: If you don't use raid, use raid=noautodetect
[    3.880689] kernel: md: Autodetecting RAID arrays.
[    3.880694] kernel: md: autorun ...
[    3.880698] kernel: md: ... autorun DONE.
[    3.910072] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null)
[    3.910135] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    3.911564] kernel: devtmpfs: mounted
[    3.912657] kernel: Freeing unused kernel image memory: 2108K
[    3.912661] kernel: Write protecting the kernel read-only data: 53248k
[    3.914401] kernel: Freeing unused kernel image memory: 2004K
[    3.915261] kernel: Freeing unused kernel image memory: 1668K
[    3.915270] kernel: Run /sbin/init as init process
[    3.984006] kernel: random: fast init done
[    4.079955] systemd[1]: systemd 245.4-4ubuntu3.15 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    4.080331] systemd[1]: Detected virtualization kvm.
[    4.080352] systemd[1]: Detected architecture x86-64.
[    4.096216] systemd[1]: Set hostname to <dfs-fuzzing>.
[    4.149407] kernel: systemd-bless-b (104) used greatest stack depth: 27328 bytes left
[    4.156629] kernel: netplan (103) used greatest stack depth: 26176 bytes left
[    4.214294] kernel: systemd-sysv-ge (114) used greatest stack depth: 25872 bytes left
[    4.281167] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    4.353568] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    4.353580] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    4.354355] systemd[1]: Created slice system-modprobe.slice.
[    4.354794] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    4.355159] systemd[1]: Created slice User and Session Slice.
[    4.355355] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    4.355516] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    4.356277] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    4.356322] systemd[1]: Reached target Local Encrypted Volumes.
[    4.356343] systemd[1]: Reached target Network is Online.
[    4.356356] systemd[1]: Reached target Paths.
[    4.356371] systemd[1]: Reached target Remote File Systems.
[    4.356384] systemd[1]: Reached target Slices.
[    4.356399] systemd[1]: Reached target Swap.
[    4.356597] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    4.356906] systemd[1]: Listening on Syslog Socket.
[    4.357065] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    4.357523] systemd[1]: Listening on Journal Audit Socket.
[    4.357803] systemd[1]: Listening on Journal Socket (/dev/log).
[    4.358580] systemd[1]: Listening on Journal Socket.
[    4.358927] systemd[1]: Listening on udev Control Socket.
[    4.359150] systemd[1]: Listening on udev Kernel Socket.
[    4.361399] systemd[1]: Mounting Huge Pages File System...
[    4.363705] systemd[1]: Mounting POSIX Message Queue File System...
[    4.365777] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    4.368165] systemd[1]: Mounting /sys/kernel/config...
[    4.370590] systemd[1]: Mounting /sys/kernel/debug...
[    4.374758] systemd[1]: Mounting Kernel Trace File System...
[    4.383002] systemd[1]: Starting Journal Service...
[    4.387185] systemd[1]: Starting Set the console keyboard layout...
[    4.387282] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    4.387359] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    4.390418] systemd[1]: Starting Load Kernel Modules...
[    4.392599] systemd[1]: Starting Remount Root and Kernel File Systems...
[    4.394761] systemd[1]: Starting udev Coldplug all Devices...
[    4.399913] systemd[1]: Mounted Huge Pages File System.
[    4.400215] systemd[1]: Mounted POSIX Message Queue File System.
[    4.400483] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    4.400771] systemd[1]: Mounted /sys/kernel/config.
[    4.401031] systemd[1]: Mounted /sys/kernel/debug.
[    4.401309] systemd[1]: Mounted Kernel Trace File System.
[    4.411309] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    4.420964] systemd[1]: Finished Load Kernel Modules.
[    4.423892] systemd[1]: Mounting FUSE Control File System...
[    4.425975] systemd[1]: Starting Apply Kernel Variables...
[    4.446111] systemd[1]: Mounted FUSE Control File System.
[    4.475596] kernel: EXT4-fs (sda): re-mounted. Opts: (null)
[    4.480845] systemd[1]: Finished Remount Root and Kernel File Systems.
[    4.481965] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    4.482016] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    4.484592] systemd[1]: Starting Load/Save Random Seed...
[    4.487101] systemd[1]: Starting Create System Users...
[    4.527576] systemd[1]: Finished Create System Users.
[    4.529898] systemd[1]: Starting Create Static Device Nodes in /dev...
[    4.531369] systemd[1]: Finished Apply Kernel Variables.
[    4.571793] systemd[1]: Finished Create Static Device Nodes in /dev.
[    4.574630] systemd[1]: Starting udev Kernel Device Manager...
[    4.640365] systemd[1]: Started Journal Service.
[    4.867075] kernel: random: crng init done
[    5.287212] kernel: SELinux: unrecognized netlink message: protocol=0 nlmsg_type=108 sclass=netlink_route_socket pig=147 comm=systemd-udevd
[    5.854505] kernel: beegfs-mon/Main (189) used greatest stack depth: 25616 bytes left
[    6.173195] kernel: e2scrub_all (193) used greatest stack depth: 25528 bytes left
[    7.055517] kernel: mandb (228) used greatest stack depth: 25272 bytes left
---- executor 0 config DFS: ● beegfs-mgmtd.service - BeeGFS Management Server

---- executor 0 config DFS:      Loaded: loaded (/lib/systemd/system/beegfs-mgmtd.service; disabled; vendor preset: enabled)

---- executor 0 config DFS:      Active: active (running) since Sat 2023-03-25 13:41:50 UTC; 33ms ago

---- executor 0 config DFS:        Docs: http://www.beegfs.com/content/documentation/

---- executor 0 config DFS:    Main PID: 384 (beegfs-mgmtd/Ma)

---- executor 0 config DFS:      CGroup: /system.slice/beegfs-mgmtd.service

---- executor 0 config DFS:              └─384 /opt/beegfs/sbin/beegfs-mgmtd cfgFile=/etc/beegfs/beegfs-mgmtd.conf runDaemonized=false

---- executor 0 config DFS: 

---- executor 0 config DFS: Mar 25 13:41:50 dfs-fuzzing systemd[1]: Started BeeGFS Management Server.

---- executor 0 config DFS: Mar 25 13:41:50 dfs-fuzzing beegfs-mgmtd[384]: call atexit in pid 384 tid 384

---- executor 0 config DFS: Mar 25 13:41:50 dfs-fuzzing beegfs-mgmtd[384]: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 384, pid 384, value 1

---- executor 0 config DFS: Mar 25 13:41:50 dfs-fuzzing beegfs-mgmtd[384]: executor __sanitizer_cov_trace_pc: retrieve shmid 1, thread 386, pid 384, value 1

---- executor 0 config DFS: Warning: Permanently added '192.168.0.18' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: Preparing storage directory: /root/beegfs-server/beegfs_meta

---- executor 0 config DFS:  * Creating format.conf file...

---- executor 0 config DFS:  * Creating server numeric ID file: /root/beegfs-server/beegfs_meta/nodeNumID

---- executor 0 config DFS: Updating config file: /etc/beegfs/beegfs-meta.conf

---- executor 0 config DFS:  * Setting management host: 192.168.0.17

---- executor 0 config DFS:  * Setting storage directory in config file...

---- executor 0 config DFS:  * Disabling usage of uninitialized storage directory in config file...

---- executor 0 config DFS:  * Fetching the underlying device...

---- executor 0 config DFS: Underlying device detected: /dev/root

---- executor 0 config DFS: Fetching UUID of the file system on that device...

---- executor 0 config DFS: Found UUID 

---- executor 0 config DFS: Writing UUID to config file...

---- executor 0 config DFS:  * Setting usage of extended attributes to: true

---- executor 0 config DFS: All done.

---- executor 0 config DFS: ● beegfs-meta.service - BeeGFS Metadata Server

---- executor 0 config DFS:      Loaded: loaded (/lib/systemd/system/beegfs-meta.service; disabled; vendor preset: enabled)

---- executor 0 config DFS:      Active: active (running) since Sat 2023-03-25 13:41:51 UTC; 70ms ago

---- executor 0 config DFS:        Docs: http://www.beegfs.com/content/documentation/

---- executor 0 config DFS:    Main PID: 413 (beegfs-meta/Mai)

---- executor 0 config DFS:      CGroup: /system.slice/beegfs-meta.service

---- executor 0 config DFS:              └─413 /opt/beegfs/sbin/beegfs-meta cfgFile=/etc/beegfs/beegfs-meta.conf runDaemonized=false

---- executor 0 config DFS: 

---- executor 0 config DFS: Mar 25 13:41:51 dfs-fuzzing systemd[1]: Started BeeGFS Metadata Server.

---- executor 0 config DFS: Mar 25 13:41:51 dfs-fuzzing beegfs-meta[413]: call atexit in pid 413 tid 413

---- executor 0 config DFS: Mar 25 13:41:51 dfs-fuzzing beegfs-meta[413]: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 413, pid 413, value 1

---- executor 0 config DFS: Warning: Permanently added '192.168.0.19' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: Preparing storage target directory: /root/beegfs-server/beegfs_storage

---- executor 0 config DFS:  * Creating format.conf file...

---- executor 0 config DFS:  * Creating chunks directory...

---- executor 0 config DFS:  * Creating buddymir directory...

---- executor 0 config DFS:  * Creating target numeric ID file: /root/beegfs-server/beegfs_storage/targetNumID

---- executor 0 config DFS:  * Creating server numeric ID file: /root/beegfs-server/beegfs_storage/nodeNumID

---- executor 0 config DFS: Updating config file: /etc/beegfs/beegfs-storage.conf

---- executor 0 config DFS:  * Setting management host: 192.168.0.17

---- executor 0 config DFS:  * Appending to target directory list in config file...

---- executor 0 config DFS:  * Disabling usage of uninitialized storage targets in config file...

---- executor 0 config DFS:  * Fetching the underlying device...

---- executor 0 config DFS: Underlying device detected: /dev/root

---- executor 0 config DFS: Fetching UUID of the file system on that device...

---- executor 0 config DFS: Found UUID 

---- executor 0 config DFS: Appending UUID to config file...

---- executor 0 config DFS: All done.

---- executor 0 config DFS: ● beegfs-storage.service - BeeGFS Storage Server

---- executor 0 config DFS:      Loaded: loaded (/lib/systemd/system/beegfs-storage.service; disabled; vendor preset: enabled)

---- executor 0 config DFS:      Active: active (running) since Sat 2023-03-25 13:41:52 UTC; 52ms ago

---- executor 0 config DFS:        Docs: http://www.beegfs.com/content/documentation/

---- executor 0 config DFS:    Main PID: 414 (beegfs-storage)

---- executor 0 config DFS:      CGroup: /system.slice/beegfs-storage.service

---- executor 0 config DFS:              └─414 /opt/beegfs/sbin/beegfs-storage cfgFile=/etc/beegfs/beegfs-storage.conf runDaemonized=false

---- executor 0 config DFS: 

---- executor 0 config DFS: Mar 25 13:41:52 dfs-fuzzing systemd[1]: Started BeeGFS Storage Server.

---- executor 0 config DFS: Mar 25 13:41:52 dfs-fuzzing beegfs-storage[414]: call atexit in pid 414 tid 414

---- executor 0 config DFS: Mar 25 13:41:52 dfs-fuzzing beegfs-storage[414]: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 414, pid 414, value 1

-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
---- executor 0 config DFS: Warning: Permanently added '192.168.0.20' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: Updating config file: /etc/beegfs/beegfs-client.conf

---- executor 0 config DFS:  * Setting management host: 192.168.0.17

---- executor 0 config DFS: All done.

---- executor 0 config DFS: ● beegfs-helperd.service - BeeGFS Helperd

---- executor 0 config DFS:      Loaded: loaded (/lib/systemd/system/beegfs-helperd.service; disabled; vendor preset: enabled)

---- executor 0 config DFS:      Active: active (running) since Sat 2023-03-25 13:41:52 UTC; 56ms ago

---- executor 0 config DFS:        Docs: http://www.beegfs.com/content/documentation/

---- executor 0 config DFS:    Main PID: 397 (beegfs-helperd/)

---- executor 0 config DFS:      CGroup: /system.slice/beegfs-helperd.service

---- executor 0 config DFS:              └─397 /opt/beegfs/sbin/beegfs-helperd cfgFile=/etc/beegfs/beegfs-helperd.conf runDaemonized=false

---- executor 0 config DFS: 

---- executor 0 config DFS: Mar 25 13:41:52 dfs-fuzzing systemd[1]: Started BeeGFS Helperd.

---- executor 0 config DFS: Mar 25 13:41:52 dfs-fuzzing beegfs-helperd[397]: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: Mar 25 13:41:52 dfs-fuzzing beegfs-helperd[397]: executor __sanitizer_cov_trace_pc: no pipe file

-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
---- executor 0 config DFS: ● beegfs-client.service - Start BeeGFS Client

---- executor 0 config DFS:      Loaded: loaded (/lib/systemd/system/beegfs-client.service; disabled; vendor preset: enabled)

---- executor 0 config DFS:      Active: active (exited) since Sat 2023-03-25 13:42:13 UTC; 20ms ago

---- executor 0 config DFS:     Process: 407 ExecStart=/etc/init.d/beegfs-client start (code=exited, status=0/SUCCESS)

---- executor 0 config DFS:    Main PID: 407 (code=exited, status=0/SUCCESS)

---- executor 0 config DFS: 

---- executor 0 config DFS: Mar 25 13:42:12 dfs-fuzzing systemd[1]: Starting Start BeeGFS Client...

---- executor 0 config DFS: Mar 25 13:42:12 dfs-fuzzing beegfs-client[407]: Starting BeeGFS Client:

---- executor 0 config DFS: Mar 25 13:42:12 dfs-fuzzing beegfs-client[407]: - Loading BeeGFS modules

---- executor 0 config DFS: Mar 25 13:42:12 dfs-fuzzing beegfs-client[407]: - Mounting directories from /etc/beegfs/beegfs-mounts.conf

---- executor 0 config DFS: Mar 25 13:42:13 dfs-fuzzing systemd[1]: Finished Start BeeGFS Client.

req.flags e82
----- executor 0 do_sandbox_none at begining
----- executor 0 do_sandbox_none before fork()
2023/03/25 14:42:13 ----- before executor 0 handshake recv reply &{0}
2023/03/25 14:42:13 ----- after executor 0 handshake recv reply &{195948557} at 16
2023/03/25 14:42:13 ----- handshake 0 finished <- nil
2023/03/25 14:42:13 ----- before executor 1 handshake recv reply &{195948557}
2023/03/25 14:42:13 ----- after executor 1 handshake recv reply &{195948557} at 16
2023/03/25 14:42:13 ----- handshake 1 finished <- nil
2023/03/25 14:42:13 ----- before executor 2 handshake recv reply &{195948557}
2023/03/25 14:42:13 ----- after executor 2 handshake recv reply &{195948557} at 16
2023/03/25 14:42:13 ----- handshake 2 finished <- nil
2023/03/25 14:42:13 ----- before executor 3 handshake recv reply &{195948557}
2023/03/25 14:42:13 ----- after executor 3 handshake recv reply &{195948557} at 16
2023/03/25 14:42:13 ----- handshake 3 finished <- nil
2023/03/25 14:42:13 ----- handshake timeout
2023/03/25 14:42:13 ----- handshake return
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3056
-----finish removing dir
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
mkdir time 34
executor 3 create dir /root/beegfs-client/dfs-0-0 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-0
receive_execute: 22517, 35
receive_execute: 22501, 35
receive_execute: 22507, 35
receive_execute: 0, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 1, 0
execute_one time: 1, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 22
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 8
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 435, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 435, flag collect 0
----- executor 3 signal number : 204
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3857, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3857, flag collect 0
----- executor 3 signal number : 1777
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3546, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3546, flag collect 0
----- executor 3 signal number : 193
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 158, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 158, flag collect 0
----- executor 3 signal number : 26
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 691, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 691, flag collect 0
----- executor 3 signal number : 17
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 444, pid 441, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 3 signal number : 9
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 2, 10
2023/03/25 14:42:13 for select break: 1
2023/03/25 14:42:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22542, 16, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/25 14:42:13 for select break: 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/25 14:42:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 36, 17, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 255, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 492
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 878, flag collect 0
----- executor 1 signal number : 207
executor 1 server cover_cnt 6 output_pos_value 815
2023/03/25 14:42:13 for select break: 1
2023/03/25 14:42:13 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:42:13 for select break: 1
2023/03/25 14:42:13 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:42:13 wg wait finish
time breakdown 1: 22536, 18, 0
before receive testcase: 0 0
time breakdown 2: 22553, 18, 0
before receive testcase: 0 0
2023/03/25 14:42:13 ------ all executors finish execution
2023/03/25 14:42:13 exec time: 54
2023/03/25 14:42:13 ----- PS len: 4
2023/03/25 14:42:13 [CLIENT] executor 3 has 20 replies
2023/03/25 14:42:13 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 204 signal and 0 cover from executor 3
2023/03/25 14:42:13 [SERVER] executor 0 has 0 replies
2023/03/25 14:42:13 fuzzer receive 1777 signal and 0 cover from executor 3
2023/03/25 14:42:13 [SERVER] executor 2 has 0 replies
2023/03/25 14:42:13 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 193 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:13 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:42:13 [SERVER] executor 1 has 6 replies
2023/03/25 14:42:13 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:42:13 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 14:42:13 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:42:13 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/25 14:42:13 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:13 ------- fuzzer executor 1 receive 207 signal and 0 cover from userspace component
2023/03/25 14:42:13 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:13 ----- no new client coverage: false, true
2023/03/25 14:42:13 mutate testcase with failures
2023/03/25 14:42:13 HasCrashFail: true, .HasNetFail: true
2023/03/25 14:42:13 disable threaded and collide
2023/03/25 14:42:13 prog length: 6
2023/03/25 14:42:13 prog length: 6
2023/03/25 14:42:13 prog length: 6
2023/03/25 14:42:13 prog length: 26
2023/03/25 14:42:13 HasCrashFail:true HasNetFail:true
14:42:13 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.18 -j DROP;iptables -A INPUT -s 192.168.0.19 -j DROP;iptables -A INPUT -s 192.168.0.20 -j DROP;iptables -A OUTPUT -d 192.168.0.18 -j DROP;iptables -A OUTPUT -d 192.168.0.19 -j DROP;iptables -A OUTPUT -d 192.168.0.20 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_down()
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
truncate(&(0x7f0000000000)='./file0\x00', 0x9)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file0\x00', 0x8, 0x2)
syz_failure_sync(0x4, 0x3)
mkdir(&(0x7f0000000100)='./file0\x00', 0x104)
syz_failure_sync(0x2, 0x3)
symlinkat(&(0x7f0000000140)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000180)='./file0\x00')
setxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@random={'system.', '(+@-]\x00'}, &(0x7f0000000240)='trusted.overlay.redirect\x00', 0x19, 0x1)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)={'L+', 0x9}, 0x16, 0x3)
lgetxattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000b80)=ANY=[@ANYBLOB="6f26e08a010100005e73782e282b402d5d00"], &(0x7f00000003c0)=""/92, 0x5c)
syz_failure_sync(0x3, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000500)='./file0\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000440)='./file0\x00', r0, r1)
r2 = open$dir(&(0x7f00000005c0)='./file0\x00', 0x101402, 0x5)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680)='./file0/../file0\x00', 0x11, 0x1)
mkdirat(r2, &(0x7f00000006c0)='./file0/../file0\x00', 0x1c9)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000700)='./file0\x00', &(0x7f0000000740), &(0x7f0000000780)={'L+', 0x732}, 0x16, 0x5)
syz_failure_sync(0x5, 0x3)
lgetxattr(&(0x7f00000007c0)='./file0\x00', &(0x7f0000000800)=@known='trusted.overlay.opaque\x00', &(0x7f0000000840)=""/140, 0x8c)
stat(&(0x7f0000000900)='./file0\x00', &(0x7f0000000940))
syz_failure_sync(0x0, 0x3)
openat(0xffffffffffffffff, &(0x7f00000009c0)='./file0/../file0\x00', 0x10000, 0x9f)
symlink(&(0x7f0000000a00)='./file0\x00', &(0x7f0000000a40)='./file0\x00')
open(&(0x7f0000000a80)='./file0/../file0\x00', 0x800, 0x10)
stat(&(0x7f0000000ac0)='./file0\x00', &(0x7f0000000b00))
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 560
----- executor 3 receive testcase
executor 3: prog_data_offset 2368, prog_size 4280
remove dir: /root/beegfs-client/dfs-0-0
----- executor 1 receive testcase
executor 1: prog_data_offset 1872, prog_size 248
remove dir time 6
-----finish removing dir
receive_execute: 2, 9
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-1 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-1
receive_execute: 4, 9
receive_execute: 2, 9
receive_execute: 1, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3811, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3811, flag collect 0
----- executor 3 signal number : 1825
----- completed 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 54
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 32, 0, 0
execute_one loop: 0, 0, 32
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 87726, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 87726, flag collect 0
-----executor 2 collect shmids 9
----- directly resend shmid 9
----- executor 3 signal number : 526
----- completed 3
execute_call 0, 39, 0, 1
execute_one loop: 0, 0, 40
cover_reset in execute_call
-----executor 2 collect shmids 11
----- directly resend shmid 11
----- executor 3 write_call_output, size 8885, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8885, flag collect 0
----- executor 3 signal number : 546
----- completed 4
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 46, 0, 0
execute_one loop: 0, 0, 46
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 340, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 229, flag collect 0
----- executor 1 signal number : 213
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 481
----- executor 1 executes write_coverage_signal cov->size 1859, flag collect 0
----- executor 1 signal number : 1064
----- executor 1 executes write_coverage_signal cov->size 807, flag collect 0
----- executor 1 signal number : 283
----- executor 1 executes write_coverage_signal cov->size 879, flag collect 0
----- executor 1 signal number : 105
----- executor 1 executes write_coverage_signal cov->size 902, flag collect 0
----- executor 1 signal number : 218
executor 1 server cover_cnt 7 output_pos_value 2465
-----executor 2 collect shmids 10
----- directly resend shmid 10
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 15
----- directly resend shmid 15
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 16
----- directly resend shmid 16
-----executor 2 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 21
----- directly resend shmid 21
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 2 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 17
----- directly resend shmid 17
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 31, 0, 0
execute_one loop: 0, 0, 31
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 67098, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 67098, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_call 0, 31, 0, 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 253, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 253, flag collect 0
----- executor 3 signal number : 26
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 725, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 725, flag collect 0
----- executor 3 signal number : 106
----- completed 7
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 766, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 766, flag collect 0
----- executor 3 signal number : 35
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 723, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 723, flag collect 0
----- executor 3 signal number : 51
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 82629, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 82629, flag collect 0
execute_call 0, 37, 0, 0
execute_one loop: 0, 0, 37
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 1, 116, 0
execute_one time: 1, 117
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 37, 0, 1
execute_one loop: 0, 0, 38
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 8
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 566, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 566, flag collect 0
----- executor 3 signal number : 60
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 2 collect shmids 6
----- directly resend shmid 6
-----executor 2 collect shmids 5
----- directly resend shmid 5
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 34091, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 34091, flag collect 0
----- executor 3 signal number : 2138
----- completed 13
execute_call 0, 5402, 0, 1
execute_one loop: 0, 0, 5403
cover_reset in execute_call
----- executor 3 write_call_output, size 3896, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3896, flag collect 0
----- executor 3 signal number : 333
----- completed 14
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 771, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 771, flag collect 0
----- executor 3 signal number : 15
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 6
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 505, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 505, flag collect 0
----- executor 3 signal number : 6
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5481, 0, 0
execute_one loop: 0, 0, 5481
execute_call 0, 21, 0, 0
execute_one loop: 0, 0, 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 5543, 0
execute_one time: 1, 5543
----- executor 3 write_call_output, size 45404, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 45404, flag collect 0
----- executor 3 signal number : 21
----- completed 18
execute_call 0, 20, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 713, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 713, flag collect 0
----- executor 3 signal number : 6
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 8
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5544, 0, 0
execute_one loop: 0, 0, 5544
execute_call 0, 44, 0, 0
execute_one loop: 0, 0, 44
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 98847, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 98847, flag collect 0
----- executor 3 signal number : 5
----- completed 21
execute_call 0, 43, 0, 2
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 418, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 3 signal number : 15
----- completed 22
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 567, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 567, flag collect 0
----- executor 3 signal number : 22
----- completed 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1650, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 1650, flag collect 0
----- executor 3 signal number : 160
----- completed 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 558, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 558, flag collect 0
----- executor 3 signal number : 9
----- completed 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 262143, pid 445, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 7600, 0
execute_one time: 2, 7600
----- executor 3 signal number : 6
----- completed 26
execute_call 0, 2010, 0, 3
execute_one loop: 0, 0, 2013
executor 3, execute_one inner time: 0, 7602, 0
execute_one time: 3, 7602
2023/03/25 14:42:20 for select break: 1
2023/03/25 14:42:20 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1994, flag collect 0
----- executor 0 signal number : 961
----- executor 0 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 0 signal number : 419
----- executor 1 signal number : 2466
----- executor 1 executes write_coverage_signal cov->size 838, flag collect 0
----- executor 1 signal number : 633
----- executor 1 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 2 signal number : 2987
----- executor 0 executes write_coverage_signal cov->size 3224, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 1130, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 924, flag collect 0
----- executor 1 signal number : 274
----- executor 1 executes write_coverage_signal cov->size 756, flag collect 0
----- executor 1 signal number : 41
----- executor 1 executes write_coverage_signal cov->size 304, flag collect 0
----- executor 1 signal number : 175
----- executor 1 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 1 signal number : 25
----- executor 1 executes write_coverage_signal cov->size 4265, flag collect 0
----- executor 2 signal number : 692
----- executor 1 signal number : 1515
----- executor 1 executes write_coverage_signal cov->size 58, flag collect 0
----- executor 1 signal number : 27
----- executor 1 executes write_coverage_signal cov->size 1000, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 272, flag collect 0
----- executor 0 signal number : 246
----- executor 1 signal number : 148
----- executor 1 executes write_coverage_signal cov->size 2026, flag collect 0
----- executor 2 signal number : 146
----- executor 1 signal number : 237
----- executor 1 executes write_coverage_signal cov->size 1967, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 69, flag collect 0
----- executor 1 signal number : 258
----- executor 1 executes write_coverage_signal cov->size 2670, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 1 signal number : 252
----- executor 1 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 1 signal number : 18
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 29
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 902, flag collect 0
----- executor 0 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 1 signal number : 68
executor 1 server cover_cnt 32 output_pos_value 8873
----- executor 2 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1001, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 53, flag collect 0
----- executor 2 signal number : 19
----- executor 0 signal number : 516
----- executor 0 executes write_coverage_signal cov->size 1681, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 62, flag collect 0
----- executor 2 signal number : 26
----- executor 2 executes write_coverage_signal cov->size 935, flag collect 0
----- executor 0 signal number : 886
----- executor 0 executes write_coverage_signal cov->size 2321, flag collect 0
----- executor 2 signal number : 584
----- executor 0 signal number : 635
----- executor 2 executes write_coverage_signal cov->size 79, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1966, flag collect 0
----- executor 2 signal number : 45
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
time breakdown 3: 13, 7608, 0
before receive testcase: 0 0
----- executor 0 signal number : 162
----- executor 0 executes write_coverage_signal cov->size 1775, flag collect 0
----- executor 0 signal number : 252
----- executor 0 executes write_coverage_signal cov->size 1277, flag collect 0
----- executor 0 signal number : 27
2023/03/25 14:42:20 for select break: 1
2023/03/25 14:42:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 2 signal number : 17
executor 2 server cover_cnt 22 output_pos_value 4629
executor 0 server cover_cnt 11 output_pos_value 4153
2023/03/25 14:42:20 for select break: 1
2023/03/25 14:42:20 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 11, 7611, 0
before receive testcase: 0 1
2023/03/25 14:42:20 for select break: 1
2023/03/25 14:42:20 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:42:20 wg wait finish
2023/03/25 14:42:20 ------ all executors finish execution
2023/03/25 14:42:20 exec time: 7625
2023/03/25 14:42:20 ----- PS len: 4
2023/03/25 14:42:20 [CLIENT] executor 3 has 26 replies
2023/03/25 14:42:20 fuzzer receive 1825 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 526 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 546 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 106 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 51 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 2138 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:42:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:20 [SERVER] executor 0 has 11 replies
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 961 signal and 0 cover from userspace component
2023/03/25 14:42:20 [SERVER] executor 1 has 32 replies
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:42:20 [SERVER] executor 2 has 22 replies
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 2987 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 419 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 246 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 692 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 146 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 29 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 516 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 886 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 635 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 162 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 252 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 0 receive 27 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 213 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 481 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 1064 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 283 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 105 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 218 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 2466 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 633 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 274 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 41 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 175 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 25 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 19 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 1515 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 27 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 148 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 237 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 258 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 26 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 252 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 18 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 584 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 45 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 1 receive 68 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:20 ------- fuzzer executor 2 receive 17 signal and 0 cover from userspace component
2023/03/25 14:42:20 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:20 ----- no new client coverage: false, true
2023/03/25 14:42:20 mutate testcase with failures
2023/03/25 14:42:20 ----- insertCall()
2023/03/25 14:42:20 ----- insertCall()
2023/03/25 14:42:20 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:42:20 disable threaded and collide
2023/03/25 14:42:20 prog length: 6
2023/03/25 14:42:20 prog length: 22
time breakdown 0: 11, 7616, 0
before receive testcase: 0 0
time breakdown 2: 11, 7613, 0
before receive testcase: 0 0
2023/03/25 14:42:20 HasCrashFail:true HasNetFail:false
14:42:20 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000000))
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000005200)=ANY=[@ANYBLOB="00fbaf041f612539839b76ede178f0b4cddce31c729628c8761069c5c665d08fbf0a31799b1151ebe17662527dcbab51f2ea2f632ac89a1655c0eedfe7745d861d2cfd3ded6e27e58e65f9644af39e089b7e9a831de4115359a88acf22d945fb807a30db3c57c801a81a0000000000000000e03f2c000fccc70874be69a90428c024d686e0d25174865e877b6e0f1df92248368684299fd2253ba0ea8733cc8096b4073700000000000000000000000000000000e3a5f4e73828a50d23e299a3d00b06483ab0884154f6127e2335ac458267342879733f25d506e26d380d9f98d696f4713740208a27003f25b5d451fa6f48a746526ce3bf8e533f5d6c540c95d7"], 0xaf, 0x1)
ioctl(0xffffffffffffffff, 0x7, &(0x7f0000000140)="9843dfe494eda6209b33e508193a16f1dc94da57722cbb020e06964f99d1369d20c15338ce4583e748598f4947ad4ed8e6c4d084a31d7a95e358464f6922c63874c98fcf8328b0d0bd529c92466e5ffc2b7a3c41c897af09596ee1b8e7e9090a1fcb59d2d0b8f03a682c14ec3b1180b0c76cb38c6e9760cf5fddcda2605d9291895491cb2da44e686ead")
syz_failure_sync(0x0, 0x3)
r0 = openat(0xffffffffffffffff, &(0x7f0000000200)='./file0\x00', 0x123900, 0x4)
lseek(r0, 0x70, 0x0)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x3)
write$binfmt_script(r0, &(0x7f0000000240)=ANY=[@ANYBLOB="2321202e2f66696c653020747275737465642e6f7665726c61792e757070657200202e24245c5d242e3c0a8c8da23bce3885387ee2c8d57d6c31b48608622c0ec487c6fb92621bd0ea77c29bc5aafb52d762b66504bfddb6afea51c9fda76fce1a000b2c3845008000005b712b8289291d5d088d54c46ff8f33e21161ed6c9d371e72c2dbcb5721790d123b178fd42a3c7da3f0a7e963e8c51e7959a3ad1bc12efbf5d5227efc1dd1e29e23a377d30f114af9c5f5574d67954f5"], 0xba)
fchown(r0, 0xffffffffffffffff, 0x0)
r1 = dup(0xffffffffffffffff)
r2 = fcntl$dupfd(r0, 0x0, r1)
fstat(r1, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fsetxattr$system_posix_acl(r1, &(0x7f0000000300)='system.posix_acl_default\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="02000000010003000000000002000200", @ANYRES32=r3, @ANYBLOB="02000000", @ANYRES32=0x0, @ANYBLOB="02000400", @ANYRES32=r4, @ANYBLOB="277236bc94f22c88499f8100e4a72800000000206100fa0000", @ANYRES32=0xee01, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000500", @ANYRES32=0xee00, @ANYBLOB="08000200", @ANYRES32=0xee00, @ANYBLOB="10000200000000002000010000000000"], 0x64, 0x3)
syz_failure_sync(0x1, 0x3)
r5 = fcntl$dupfd(r2, 0x406, 0xffffffffffffffff)
close(r5)
readlinkat(r2, &(0x7f0000000500)='./file0\x00', &(0x7f0000000540)=""/174, 0xae)
writev(r5, &(0x7f0000002980)=[{&(0x7f0000000600)="", 0x1000}, {&(0x7f0000001600)="c73251053fdbdef543cf6906c6b2d6fe24f549f48bbe82545d57351db41c6b147652f98bbda4710e287ae27892ff3342463ec8d28d2e2deddd93b5bc04122c8e0851cbb372eed5bf3818bb803d1a3ae86ff58c9f1cf7481eee2ff3235aab181636c0cc3089729c0f554a92298a647fa99b7bcde9b0db03bb3a46142afc28b3222dc280d870ffe8ecd9956cd9eeeb4d3aabda48e47a492dd54e41e8c41e27b2cfd340ef089f9d8eda938adf69ed150a10fd2e615d6210a23f3c977bb4c3fbcc2287f9e40eeb6166c04e3cb585268a31b5d2684fdc1c7382e6d9457476069a025a62", 0xe1}, {&(0x7f0000001700)="17dfea1dc17fc8c06ca6e376acfbee6060631f0f4782259462527b4ce47e748e3eb54faaf4125aba30d0c7122d210dc1d042cda46ec739022ecc75f00fdd96eb59c55a88252f6b90219bf8baca8ef0acc495d48ebc428f09b694b8c9c8b1e757cdc400433010df706111c4da40a4b6b8e5ad59fc151a51c5117f533dd04b70e0bd5cf89fb7a4f0680108f294d3e6bf4b06372650a9144f934a7367f701b04664362ba6ad6500864ceb532e9aa548aa52c31d7dd2b7da1f3d932e862e43fb4581987266ff3dded88c7ee000f6baf070ceebd1a5b98c680bc2f846721fc38d80", 0xdf}, {&(0x7f0000001800)="3ab63b4a198aced3674fcb63f48b1d26450fae8f56c3a64735f2a5e681b26826e84f47aee52ff534f5cc44f4534fc6d7db808a155c60976aef98f634be2828c29d522cfd5520790c9c46a67a7e59bd3974305e912e407b3430f53bdaa00028647175f88ad4b38f31e86e32e5", 0x6c}, {&(0x7f0000001880)="86ff4826d78ca5d5667108e722d4c096bdfa5b12c556538aa9a091ada18481dcb89847a5be9f719ef6f38b0d91a9f693c4a39dcb7e201877e77d77331a3ffc9e3fb156f6edc2a4856d1d68e7cd717df078464eca8c8ce1937eb6ae35ca83d493641983411abd8b5f18e237eb70fc1c4099ddb5eb735a5d58cd17f523d09b6279e091552e3001333797f737b68621f94188e0fa031f92962678ef0e9b9176314edf2774fc4f7415b281f595114c3b648a06131fa51a6945aff482e1cdeecbfcfb96fb379030720356a804c80d34fcf2ec55b16e0b6a7e4976a27aedc658922138cb02daeaa7b2181c462e233f8a", 0xed}, {&(0x7f0000001980)="24fac26d141655caacea025e8ab7bd74aa4a4bba6d00db4d928b4a6865c56bffd7a3c0c7ee98f94bb8dd1d04d5823523b6cc41de3859b9a605f58410212fc3372c638c59ff79cf41650820ad1a527a386068116504814fe5edd88d54c90598c1f9c8d785627de4407e27e7f6d7793612c40602905a9542764b477e5f1d21509993a74994218b1f9c24f322dba228e1ca9a95f2cf3d386cdcab0be74194b058bf728048f91f99033c292bca1d76d2283167d98a0e52b3dc098e70f1bfe2f6ad5df58d8d75829c6069e11b9bddbb9eff8107d9caf9c458fd743622c6dc136f646e6296381569bcf1e4579fbeb97e02e8c4910e3ed6172c778fe9c23e7a47cb6e8d72813d25033180eb8395fa863316a6900134a952c3d8bd9c009f8fe9df3c20e45cfa92f9a09cf610425ecf3fbbb48b42da582dd6234f30633b50d351c3feabf8c108f83f3358d3c5424b9cfe8e7bedfdac5dc21e8840f403715b44fb4e1b7adfa9d6619c39b71080cd5c0a72a8e9f21ec041eeaf1207524ab1860e0acb970ff30c1f19c7e7ae1feb16ddf41fe49ffe0931da4d08339329158faf00b48598bca56d376071f055af535a233e0280904e9871c87635bcc41f70599212988ff3c2a177b5a3169a34465abf3ca5bb42b789117678cea8320dfc784b19070bdad8df995ebdc43d5322b0cb8b2b46967775e94500b7c569179cf488db8f5545db784370a58b115d69ad53f07ef85ed0f1791a4db5e77d8c9a19e401e118a746c298a1ada320d9c4bc0988b11fe16c7db4db38b7e0938ac36ca4f29f140b6c043baea0e1f4496498556dc6d2de29172ce3e43676fa9bf2a0f14b7419f3658b2788f83611f86ecad635dd0ba1ed74b9ceb20c8f2529f491ce9d1405a20b18c4703813e9cac28108dd470b530b28ce8be48c00bbc5bf4dfe5120a15424e19aed164fa7d72a6dbe344d8102d48e1eb05d1b06ffd11d0e7f9c65f23f3a9d2ce877080719524760494ed9b2a0049d974189ea11c50586a87946feacdcaa92a23e9cc3dc92501db9bf0cef3352aa206c6df4a934bba2792e508c0275bffe5cd6736cda46d0355bc548b1e5031bd81eb3a6accc1704a9ab492f9a641045b6e2606fb740c69fd60fda435c0028fa82c61c7df663e4c219a9866e1a9e1cb97dbed3e5bd7fed194a9a4d18a9f37f5d894a3ed3c5ea07237232ef33207bc4ccfcaf941ca45ff85272a9f737c1f6d17137f8afedecbe3d2e883845a1c18eaef27a0b407d5d980bd3f0ec1fbcee326b93244701db578024c456c423f0572c2c776f8e5bfc204ee237f87cceb88d31aaf36696707d997b913da483872fdcbc8d760646ea62abab3681de7bf4701bd51c03c008f9365a20f2fa3813894ff861e005ebb624a64b548221b811a6c1402eadcbc8c06f975d8063da9c81f707c840825c683acf6c227a42f16110b08fc27c572513597f1575ed6b9568a7243c7e6da9228b31b0c63e3cbfd9a52060ed46349857a0761e062bf9f84fb14c88a9eb8f0e2473cedf2488d03bc35b78664bab6dc0cd8409e91a7b35f5d65e4a521282c19074e564d99418a0624b9418bd0191892818bd7ba8f2ec95d8129f289175c35b10b67219115633af57dedb2c591f657d9736a399edadfa1274438ad07faa7f5ad65e3339536ddf932fc5a54b0d8788ac99f3494db87328033319aef318c1587e7d1f0d5afcfba52174c74f9df25105119a9817f4baa3315eb7c5a7086f853fb8ea21a5cb20bea79333dcc4fa94912c3f6c34101384af8ad7553de7785fa41361cf02f0a95a5dadad273a0509402b54494357eb87ea2c87287a140f708f4df5b4bc92c23f41f71e7c06bdddc9f07315310eaebf23723ab15001c4604d99a7ecf21142ea43b4bbca088c486d6b0c95991ee2b845df3cd4cebd8cde3c8ac9f24d212dbf2a5b7c56f4c2052a32239303f785dc6892990a86602fa40bf6dd475866a1cfdffa1deb5f33b335af227a6bee76ec56937c8f9608ba18717087629a73bd823715f4777fab2ce82bbfded7e9299effb75fa8710c1858e7b6a2f8957e2e024d7996a3de6a5cd22056a6c3a62ad9b82aefb517bc48e9bae250fd00953eb3dfb40315a45872183c3d31a8b2c7c55eb7aa4c0f69a7a7773fcc5789a0e8eaecbe59b7dcc36c10a4fe6d0f4ebab531ecd6be5435996127f4d93eebccbe8c381ce8e1bf4a9ed5e995d8bdaa598f03e1aa2311b77c9abc769c1710773ed06618e8d4f636fa64e3c9bd8e3471bad5060fdad699beda0359da123b2de329ca6472d4d51c7b4af3154c5e4e10afeeefed1a8b6fa5464018aa71f14460576ed2565f1171a1a7679a436049c21f094a2b57cb8e8cfef97056192416592b03e6fcaa24577e8411ca615cb31fd9f5dbcce9edad46e07d50bb1ede91fae021bf890930ea6bea2e749dc4810625b9ba324abab5970fb72b6537114bd057f2ab33f5cf541bee35c8e162ce29137c9811c12c2959b4a43177eba7af91056c2ab181bb78317245b88e087f49bd15870a6e91fdd4ae6f7399584c012a7be038a83186be41d2768a6a53dd6290955dcc154d063a69b0de3e2e837ad73e59791bf38f835262ff8820630d335d47ba7a1d2f4bed3c3965f84428412a470ee9935495e471583334ab233ba59caf845db788bf6368e8320a90c61e197367d1dd42d387c825be5f7e3a0f402b37097f5aa18f6e4b1d3437c2c975438050668b0d7d1299c4e46997c5feb7819e41e3b30ad4ee1ee6747052093fbd75603d56a99d3081dd65d41857b2e0fa670d3c7a179b3586bce64cf1ad9d34e2f1c6970636cf0867545ec52828020efdb1870b6054fcab040a275a55703a4291db8c5b5ef26531cd940982488ec4cc7126688ddf1f2e3d315555705f93625b10456feeb1f155d56d6ec110899253dd72c013eff0df94d7b259fed849646cac2fb55a09f51ed87e17af654a06cfa864bdf332981f2fb071b5582538351a275d40caaf1d9d04ef32b9e987d58d242451b69ee01dedb31e8e91c2a5332b0d642181e190db3510ac5290c6ab3026746b2779a8de63123cbb731a913121b4c140295d21f7a7d2c5f6f7b9a0e58aee9a4fab9d6b797ab54a55cb0c460a7fb970a79fd4514079443d8e1c0f1b010f3ed4c4dd15d9f1aa306bf5fb7e928c54c305713e4fa0ad4e5524888c7ae614541e470dafa584982e31499718ca875ea8f17ff3909bfcaaf761797812042f0e0e57009592c116ec56bdbaa5840ac36fd66b363b0aadef7624abbeb0291e5314df7a8f7ece453fb90cb332f77b8f27a00cca3f2962949e264a003bb0ecca5e8cf4a79e7f5ae2f796bdd71e3254172970927460834d9635ded948b0341d9b67dae1b1678c6d15cfd32e665b1a763d287b84aa3c9497ea0feae14768935636c3486375fe84ef8bd5bff26bcb6d7867ddcde59ad752aa55fc23b5a26bb6d766aa158483b34a608c6b5455ef8d401327058d21c3549294d4de96c1889eddaa60f0b763b2ee1ccbdb7aedeffda2f416dc7383e94149658bfc2e4d587c0eadc98247b74ab4423f807e7bd7b6ceb0c618fbc504488be11182f226d4ffba3ec7a9b18f6bc840b67eab12393d8eaa6c4d6631eaa37e6060405207215343ff5bea27617098872e1e173671ba2cf13c46f436e6049f058c17c461bf0cd6c043823a5fcfededc935cd4d26131baa869efde6b4f7f1b9e265e2e111356e53f4af3d5000e821acb920382cf574ffc2bef976ee6673f1d7397513c39cb285be8420bc3087e4ff380516fd190657fdfedac1dc4046b0359b92c7e1abb3a4e6deb51144498528cd28d4b5423b109d879542e552dc6c308ce24b9eab118a2b3b88f25adebff9fdaeda1b46e7a54932b4fc8375a72c6e6c0624e371170f9dad6b5622ffa9f484dd87a3aa5ead70de33da915f953781c85bb4686c0cf46b9da17622aa7cc4a780b9e14ff3e2db8daeee6ca0894a0f09d3efbc0e2438e75653fc52b382cb39895d8232f9e253253e552bf8cc83aff55769b9eec55c8d9f5c67d61f098215c5d36e1dfa59be4d9ac76ae5583b080adb9a05e62e95df49285ee823be120bff1710ebe4050010e2fa74a22722c410ae54c15ac358f817ef5c43dae5ea246e7ca9a00cb987d152c9f3e109dc6c9271b71737c0af850c0345405faea57d47ff1672c80aa53d2a4230473c8dab3aa3b6d4449861ae985f9d34388fd2457c61ddf3197078d30a6d93b32a18265afe6aee4d7455fd2278328458da7f90581d9643ec08fe6332b46999e2f6069b736c5ec1ed6c225c62ab6d3d81b158c6db579033ca4b0fe8727138ec1f5655f808f6cb1237bcd7ce85460312477570618d842d292827ba6ac4a71fc01354b331cee941b025c04f66d0051c3b2bb9b03a84795148915dbfdab17138799ecc1fdae2aed6d732dcddcf332142e4a05e1cb990ba57f647d1844b9551f6d596c7d47022604cbd784d7e41d687846171224c7cc37a66c46c997c23cb5ce026360792b49511dc60b570e08610598d5d6a8d55a015b32cd6f3f27707ad9c4e41d1936773ca4f04e6fcfd26c0fc5e1f8f25115872fbff2f52f3244481825a5180d6612e03d1083a5a54e180e36aab43e2a676c7cbac18838aaa7efb3afd5a7d498272e1d78e57f8581f2d4fae99cd47317b8daaaa815122700637f14a2a8b7f2280bdc1f54e71997586a7b73f7454bcd79731e0803490e925f1f7b6d47d5f624afaedbea2168908a2d054962670e88a90d722f2609d240c405a19452dee74af7be99c97e41516d8e68013251a8e19dd446d0a69c1500558529bda5c96b1821425c02d0d0b263144a20651a47407a3762fbdec1bd0c2d5e318f701aa0074d06ad786af7878748ffe15bac303351190b86dc5926e69d49e93f22588defe806918daf831f73af851bb36b18df75d35427b98692f7c8a32dc5b03fe0ce90bc5fc6f028a99b38095c010dda7b57f07da7a7241dc193b13eef676b604f5ed396b3bfd0cd5887fa3373e893aa2e13eaabf095ec38ae2208755d6560ecae838f4ebc3107779b71b55e52408f6b49f98a0e38928b45b108f0771af4f8c8ff7208b49e1e87001af573b7f9e7f369a46f4d84db0e4bb24797d17bfadccf5abceb8c8dbda826d86debd65cdfce6faad7d76a8d85bb2312c4163733ba649a3318ffb988cc706fd9ac30272b71b178f0f72a8e1ddb4955c9a308f9a90535a6cc9c0bc681b26648984701ee9ba048608d846677b06910c969037eafcf2c5d89072799db4a74a095639e56d5018aa75c5ce0358121fc24eb83814ea88f55047030735d98cae2c18115f3e9f9feb7e9ad3507d4dbf934a5ee025d71577fafb847c7723d84a63baa0a9486fced025cb562b27e57bfe92f899679a2a28955663147d2c19e9eb470e4a2f56f155ead659bd520cf1a834530b533589d12a16541477fc1bf8201bfb350aff168a146110ac0aa46e0fdb8a368dc48fe7c87b0353022929b59580f133cbf9662d06500c6fb806ec23fb7d5296220cfdfa30883fb7ef6cec319ec8a033577d32eeed37b1e5d51bd04be9ce70ed499e9d2e7b443602a0410987c647264140fe8f4959d3a62499f62bc160e72d50a6b73bab77d1bc0ec745e1211d7355efb60cf532281bff12caac58a398942bce848e7761a3a6bd5570fd10a02b9a099434e80fe6462010b939f34e54acaae130245bd6fe7b0e6274ce9791d4fb7dc290fd21e48f9d508a07f9103e3f7a59eada1c27663bb7d8a26fb8bd7cb406e3fb67aad39198926521e7129ac50b24771e2ec3a6b45ed27c", 0x1000}], 0x6)
fsetxattr$trusted_overlay_origin(r0, &(0x7f0000002a00), &(0x7f0000002a40), 0x2, 0x1)
flock(0xffffffffffffffff, 0x2daba25260b4f7df)
writev(r1, &(0x7f0000005000)=[{&(0x7f0000002a80)="17676cb242dd3ccc0bf44040fb928e84494e8da5e2c5c7d0d45bf06915a69a85b515866e64c0e6208bca3fab2a5c0cd9427ef5a9603461abc86b751852d5b9a04d86b7c4d581d7db507c9e94d626fb2309c7719353f18fa1fa7a29c207d3133d1a69dd9eb8f4c1f25e98c64cb0a2e73836969c57a55c6edde79f3020f3d482293a63155ed96d000d83480d77be2991833f75e0b06414a6bc0e10", 0x9a}, {&(0x7f0000002b40)="94ade0471c65c9", 0x7}, {&(0x7f0000002b80)="70d83b7684539c93b21b799a4250df8983b8dc2e0034e472614ba807f14de47e8c800c1803beb6630ca6831a5b722f15a2fbe4b1254b47d406f2fe7167076205ad38acb58fb88fa233b5e4b44cba5ce169428ae564b53617c056e623c2ceaeb28af31459db3f5e9b34c540fcc316565b69e6f5e0884f45c1e5759f3963ff9f18d3c27d90437469db2357df2cda82dbbc0218ace63ae1345b226357df05556bd8cfbba3f5aba51664a069c8890ac6ffab8d71d16ed25fd08c29295ad3e04b5addb29d77ccbfe514d00e6da3a8948d24e0f3912638f9a3", 0xd6}, {&(0x7f0000002c80)="256e47812cc12db9c7b6101d699272b0a57e9a18ff1b7687d3cb6f4fb8bdb9dadd131b04495b40671df53d656cbfd0595718d87390acdcf88e4c90663b5f91c6da3778ad0cfc372c1b4d08fc85c35bd305f1665d614bf41eb71a16ad38a7c54952c694d394657d6a4ea5c6e14aa61dd3820161e6359ef4d9a8b66e458cda7431d1056fbb45cb9b21e49b74c080dd9c52772f89927b8b2b6791d610c18612ef34c62a62e4d6b01c668d5d130e4bf6f920b7f12701955b5b76c9beecc2058247aa60a99f044075f96e9d19a77ca8581b7475015a378c", 0xd5}, {&(0x7f0000002d80)="2b04eabadf3fb07c07d67bcce803cbb781b2116964ee54d578b700b5a6122ab20e8de0e2657f998624f3110d5574456cbdd0d26356b00817531b17a8b58e6df5243cce62f22333bf365c43709ad6f6c603725f4575b3e0c3a14ea66ff6d8fc3ae246b845387ffceac334b69067519e3a90", 0x71}, {&(0x7f0000002e00)="082297c85c778e1e097bda1fcc4c6dfcd107ed95371b5040ca62587867c592d4d7c92a05be3276f9e83a228b7a626bce76f78764efe7cac8e20b0ecc151f3bc1e1", 0x41}, {&(0x7f0000002e80)="ab6c47bf9acf4e53fd139ca9a4f23ee8fb7e20d776f918ab74a9d9cf78e91e95b7e185d513eb52174b3f825e5620fceb1f29582e639b0894237e4ea452a8b6fd8e15f6596021df3cf9837d5cb2bf19715a98c328e53e436c8685e02a197b7375bc04999122446db1ac613a61ae26d3ca74b11bff55bee5ed309ed0554b40a2f16651ce94e811765d18a30bb397b1d36b", 0x90}, {&(0x7f0000002f40)="", 0x1000}, {&(0x7f0000003f40)="", 0x1000}, {&(0x7f0000004f40)="2b260088461c627f3c719ec02c6cd9b8c1c07695850a1683e2db966d48aeaa7d2902247c02afd23c6783226ccfb0ae50b5926ad8d056b7b6969f17ec5258f0f5f9721d7977c5f3e64d77cf5870bfb9a9372c74010d68ffc2f3bd5c19aa29082c0d8769208b66d75fc418092de0cae3f546f55e0d9af4d170187d600c5a7312082c02ae5cd28ceba4972bf7042833e5b571fb4edcb6e59add759fd4c2843e5756b3a59234274b2fa59be6e89368", 0xad}], 0xa)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 24368
remove dir: /root/beegfs-client/dfs-0-1
remove dir time 19
-----finish removing dir
receive_execute: 8, 26
receive_execute: 5, 26
receive_execute: 3, 26
mkdir time 7
executor 3 create dir /root/beegfs-client/dfs-0-2 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-2
receive_execute: 11, 26
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 19
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 34, 0, 0
execute_one loop: 0, 0, 34
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 78262, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 78262, flag collect 0
----- executor 3 signal number : 536
----- completed 4
execute_call 0, 34, 0, 1
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 433, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 3 signal number : 205
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 8
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3835, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3835, flag collect 0
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----- executor 3 signal number : 1742
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 2441, 0, 0
execute_one loop: 0, 0, 2441
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2478, 0
execute_one time: 1, 2478
----- executor 3 write_call_output, size 262143, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
2023/03/25 14:42:23 for select break: 1
2023/03/25 14:42:23 --------- executor 3 receive reply, reply.done 1
----- executor 3 signal number : 9
----- completed 15
execute_call 0, 2441, 0, 3
execute_one loop: 0, 0, 2444
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 8
----- completed 17
execute_call 0, 0, 1, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 9
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 5
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 447, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2482, 0
execute_one time: 1, 2482
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 85, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1296, flag collect 0
----- executor 0 signal number : 900
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 584, flag collect 0
----- executor 0 signal number : 265
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 8
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 0 signal number : 9
executor 0 server cover_cnt 11 output_pos_value 1877
----- executor 1 signal number : 79
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 5448, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 1386
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 878, flag collect 0
----- executor 1 signal number : 697
executor 2 server cover_cnt 4 output_pos_value 1425
2023/03/25 14:42:23 for select break: 1
2023/03/25 14:42:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 2490, 0
before receive testcase: 0 0
executor 1 server cover_cnt 6 output_pos_value 840
2023/03/25 14:42:23 for select break: 1
2023/03/25 14:42:23 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:42:23 for select break: 1
2023/03/25 14:42:23 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:42:23 wg wait finish
2023/03/25 14:42:23 ------ all executors finish execution
2023/03/25 14:42:23 exec time: 2519
2023/03/25 14:42:23 ----- PS len: 4
2023/03/25 14:42:23 [CLIENT] executor 3 has 22 replies
2023/03/25 14:42:23 [SERVER] executor 0 has 11 replies
2023/03/25 14:42:23 [SERVER] executor 2 has 4 replies
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 900 signal and 0 cover from userspace component
2023/03/25 14:42:23 [SERVER] executor 1 has 6 replies
2023/03/25 14:42:23 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:42:23 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 14:42:23 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 265 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:42:23 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 536 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 205 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 1742 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:23 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:42:23 ------- fuzzer executor 1 receive 697 signal and 0 cover from userspace component
time breakdown 3: 37, 2487, 0
before receive testcase: 0 0
2023/03/25 14:42:23 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:23 ----- no new client coverage: false, true
2023/03/25 14:42:23 mutate testcase with failures
2023/03/25 14:42:23 ----- insertCall()
2023/03/25 14:42:23 ----- mutateArg()
2023/03/25 14:42:23 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:42:23 disable threaded and collide
2023/03/25 14:42:23 prog length: 6
2023/03/25 14:42:23 prog length: 22
2023/03/25 14:42:23 HasCrashFail:true HasNetFail:false
14:42:23 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lseek(0xffffffffffffffff, 0x5, 0x2)
syz_failure_sync(0x1, 0x3)
lseek(0xffffffffffffffff, 0x8, 0x1)
ioctl(0xffffffffffffffff, 0x8001, &(0x7f0000000000)="2d3d14495bd16bfd5f8b1d1e6a31e76698596f65e32ff73a3d0caaab3106f34a03e9bd84c2606595194cb80a49c97f455590193050bcc02c58a6c7d1c3030cbb5ef8a115c11b458954e469c699d2e1aca54f8567b399050fdb7470b0260bc0619f31f0efe762d56112cb01759b9ebffa941e27dffd682ac194c756e85740d36a73fd5f71c518312c0282")
r0 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x983, 0x48)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000100))
fsync(r0)
r1 = open$dir(&(0x7f0000000140)='./file0\x00', 0x20000, 0x130)
write$binfmt_script(r1, &(0x7f0000000180)={'#! ', './file0', [{}, {0x20, '(,-]/^'}, {}, {0x20, '{/\x14#'}, {0x20, '@$+^)\\\x11'}, {0x20, '+-.'}], 0xa, "37bd2f19862d3631d2e9ce8eb68e7e4e2fef2bebffacd65d4bb6673390de78f1d3a938eb3f111b25d7474204a512e8fbad2f2adbcdd793d84cab8b3a6819dc31b8f893660b4abb0453c5024fb00cb0ff5afb365c51d45243fdc295810750c7a8905725281a20e480ab421cb312395126bb8a5931887c6a7344be99efbbb7f70d187ab046dc0f7c5d77fe63f6f3bbaad698fd5d44cc6d1ec2ffd4cdce78352840"}, 0xc5)
r2 = fcntl$dupfd(r1, 0x406, r0)
r3 = fcntl$getown(r0, 0x9)
fcntl$setown(r2, 0x8, r3)
fsetxattr$security_evm(r1, &(0x7f0000000280), &(0x7f00000002c0)=@v1={0x2, "28d968da5982b4d53a84043aed76f1e2e86d92"}, 0x14, 0x2)
setxattr$smack_xattr_label(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='security.SMACK64IPIN\x00', &(0x7f0000000380)={'):@/'}, 0x5, 0x2)
r4 = openat(0xffffffffffffff9c, &(0x7f00000003c0)='./file0\x00', 0x20400, 0x180)
dup(r4)
readv(r0, &(0x7f00000007c0)=[{&(0x7f0000000400)=""/136, 0x88}, {&(0x7f00000004c0)=""/240, 0xf0}, {&(0x7f00000005c0)=""/12, 0xc}, {&(0x7f0000000600)=""/31, 0x58}, {&(0x7f0000000640)=""/107, 0x6b}, {&(0x7f00000006c0)=""/187, 0xbb}, {&(0x7f0000000780)=""/63, 0x3f}], 0x7)
r5 = fcntl$dupfd(r4, 0x406, r2)
linkat(r1, &(0x7f0000000840)='./file0\x00', r5, &(0x7f0000000880)='./file0\x00', 0x400)
r6 = dup(r4)
fsetxattr$system_posix_acl(r6, &(0x7f00000008c0)='system.posix_acl_access\x00', &(0x7f0000000ac0)={{}, {0x1, 0x2}, [{0x2, 0x4}, {}], {}, [{0x8, 0x2, 0xee00}, {}], {0x10, 0x2}, {0x20, 0x6}}, 0x44, 0x3)
---

end of program
time breakdown 2: 31, 2491, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5552
remove dir: /root/beegfs-client/dfs-0-2
time breakdown 1: 34, 2492, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 16
-----finish removing dir
receive_execute: 1, 21
receive_execute: 3, 20
receive_execute: 7, 17
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-3 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-3
receive_execute: 8, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 900, flag collect 0
----- executor 0 signal number : 562
executor 0 server cover_cnt 1 output_pos_value 566
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 40, 0, 0
execute_one loop: 0, 0, 40
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 82085, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 82085, flag collect 0
----- executor 3 signal number : 539
----- completed 1
execute_call 0, 39, 0, 2
execute_one loop: 0, 0, 41
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 3009, 0, 0
execute_one loop: 0, 0, 3009
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3051, 0
execute_one time: 1, 3051
----- executor 3 signal number : 5
----- completed 3
execute_call 0, 3008, 0, 4
execute_one loop: 0, 0, 3012
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 2096
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3455, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3455, flag collect 0
----- executor 3 signal number : 119
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 49
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 690, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 690, flag collect 0
----- executor 3 signal number : 18
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 5
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 166, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 166, flag collect 0
----- executor 3 signal number : 17
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 448, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3056, 0
execute_one time: 2, 3056
2023/03/25 14:42:26 for select break: 1
2023/03/25 14:42:26 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3819, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 767, flag collect 0
----- executor 2 signal number : 629
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 2 signal number : 30
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 263, flag collect 0
----- executor 1 signal number : 84
executor 2 server cover_cnt 5 output_pos_value 701
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 0 signal number : 2114
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 36
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 1 signal number : 42
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 0 signal number : 434
----- executor 0 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 488
----- executor 1 executes write_coverage_signal cov->size 799, flag collect 0
----- executor 1 signal number : 523
----- executor 1 executes write_coverage_signal cov->size 879, flag collect 0
----- executor 1 signal number : 98
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 0
----- executor 0 signal number : 553
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
executor 1 server cover_cnt 9 output_pos_value 1351
2023/03/25 14:42:26 for select break: 1
2023/03/25 14:42:26 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 17
executor 0 server cover_cnt 12 output_pos_value 3833
2023/03/25 14:42:26 for select break: 1
2023/03/25 14:42:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 3064, 0
time breakdown 3: 27, 3061, 0
before receive testcase: 0 0
2023/03/25 14:42:26 for select break: 1
2023/03/25 14:42:26 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:42:26 wg wait finish
2023/03/25 14:42:26 ------ all executors finish execution
2023/03/25 14:42:26 exec time: 3086
2023/03/25 14:42:26 ----- PS len: 4
2023/03/25 14:42:26 [CLIENT] executor 3 has 22 replies
2023/03/25 14:42:26 fuzzer receive 539 signal and 0 cover from executor 3
2023/03/25 14:42:26 [SERVER] executor 0 has 12 replies
2023/03/25 14:42:26 [SERVER] executor 1 has 9 replies
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/25 14:42:26 [SERVER] executor 2 has 5 replies
2023/03/25 14:42:26 ------- fuzzer executor 2 receive 629 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 562 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 2114 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 434 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 553 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 488 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 523 signal and 0 cover from userspace component
2023/03/25 14:42:26 ------- fuzzer executor 1 receive 98 signal and 0 cover from userspace component
2023/03/25 14:42:26 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 2096 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:26 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:26 ----- no new client coverage: false, true
time breakdown 2: 24, 3062, 0
before receive testcase: 0 0
2023/03/25 14:42:26 ----- enqueue testcases with server coveraged
before receive testcase: 0 0
time breakdown 0: 24, 3065, 0
before receive testcase: 0 0
2023/03/25 14:42:26 disable threaded and collide
2023/03/25 14:42:26 prog length: 6
2023/03/25 14:42:26 prog length: 22
2023/03/25 14:42:26 HasCrashFail:true HasNetFail:false
14:42:26 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lseek(0xffffffffffffffff, 0x5, 0x2)
syz_failure_sync(0x1, 0x3)
lseek(0xffffffffffffffff, 0x8, 0x1)
ioctl(0xffffffffffffffff, 0x8001, &(0x7f0000000000)="2d3d14495bd16bfd5f8b1d1e6a31e76698596f65e32ff73a3d0caaab3106f34a03e9bd84c2606595194cb80a49c97f455590193050bcc02c58a6c7d1c3030cbb5ef8a115c11b458954e469c699d2e1aca54f8567b399050fdb7470b0260bc0619f31f0efe762d56112cb01759b9ebffa941e27dffd682ac194c756e85740d36a73fd5f71c518312c0282")
r0 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x983, 0x48)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000100))
fsync(r0)
r1 = open$dir(&(0x7f0000000140)='./file0\x00', 0x20000, 0x130)
write$binfmt_script(r1, &(0x7f0000000180)={'#! ', './file0', [{}, {0x20, '(,-]/^'}, {}, {0x20, '{/\x14#'}, {0x20, '@$+^)\\\x11'}, {0x20, '+-.'}], 0xa, "37bd2f19862d3631d2e9ce8eb68e7e4e2fef2bebffacd65d4bb6673390de78f1d3a938eb3f111b25d7474204a512e8fbad2f2adbcdd793d84cab8b3a6819dc31b8f893660b4abb0453c5024fb00cb0ff5afb365c51d45243fdc295810750c7a8905725281a20e480ab421cb312395126bb8a5931887c6a7344be99efbbb7f70d187ab046dc0f7c5d77fe63f6f3bbaad698fd5d44cc6d1ec2ffd4cdce78352840"}, 0xc5)
r2 = fcntl$dupfd(r1, 0x406, r0)
r3 = fcntl$getown(r0, 0x9)
fcntl$setown(r2, 0x8, r3)
fsetxattr$security_evm(r1, &(0x7f0000000280), &(0x7f00000002c0)=@v1={0x2, "28d968da5982b4d53a84043aed76f1e2e86d92"}, 0x14, 0x2)
setxattr$smack_xattr_label(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='security.SMACK64IPIN\x00', &(0x7f0000000380)={'):@/'}, 0x5, 0x2)
r4 = openat(0xffffffffffffff9c, &(0x7f00000003c0)='./file0\x00', 0x20400, 0x180)
dup(r4)
readv(r0, &(0x7f00000007c0)=[{&(0x7f0000000400)=""/136, 0x88}, {&(0x7f00000004c0)=""/240, 0xf0}, {&(0x7f00000005c0)=""/12, 0xc}, {&(0x7f0000000600)=""/31, 0x58}, {&(0x7f0000000640)=""/107, 0x6b}, {&(0x7f00000006c0)=""/187, 0xbb}, {&(0x7f0000000780)=""/63, 0x3f}], 0x7)
r5 = fcntl$dupfd(r4, 0x406, r2)
linkat(r1, &(0x7f0000000840)='./file0\x00', r5, &(0x7f0000000880)='./file0\x00', 0x400)
r6 = dup(r4)
fsetxattr$system_posix_acl(r6, &(0x7f00000008c0)='system.posix_acl_access\x00', &(0x7f0000000ac0)={{}, {0x1, 0x2}, [{0x2, 0x4}, {}], {}, [{0x8, 0x2, 0xee00}, {}], {0x10, 0x2}, {0x20, 0x6}}, 0x44, 0x3)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
executor 3: prog_data_offset 1576, prog_size 5552
remove dir: /root/beegfs-client/dfs-0-3
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-4 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-4
receive_execute: 4, 7
receive_execute: 5, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 7, 9
receive_execute: 2, 10
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 78737, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 78737, flag collect 1
execute_call 0, 32, 0, 0
execute_one loop: 0, 0, 32
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
----- executor 3 cover number : 523, signal number : 543
----- completed 1
execute_call 0, 35, 0, 12
execute_one loop: 0, 0, 47
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 3 cover number : 21, signal number : 7
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 3014, 0, 0
execute_one loop: 0, 0, 3014
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3059, 0
execute_one time: 4, 3059
----- executor 3 write_call_output, size 262143, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 1
----- executor 3 cover number : 339, signal number : 0
----- completed 3
execute_call 0, 3014, 0, 38
execute_one loop: 0, 0, 3052
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 3 cover number : 21, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 1
----- executor 3 cover number : 20, signal number : 6
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5961, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 5961, flag collect 1
----- executor 3 cover number : 1938, signal number : 2029
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 1
----- executor 3 cover number : 20, signal number : 5
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3456, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3456, flag collect 1
----- executor 3 cover number : 1877, signal number : 120
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 3 cover number : 21, signal number : 2
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 4
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/25 14:42:29 for select break: 1
2023/03/25 14:42:29 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 1
----- executor 1 cover number : 64, signal number : 64
----- executor 1 executes write_coverage_signal cov->size 433, flag collect 1
----- executor 1 cover number : 81, signal number : 84
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 1
----- executor 1 cover number : 22, signal number : 22
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 6, signal number : 7
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 879, flag collect 1
----- executor 1 cover number : 670, signal number : 695
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 10103, flag collect 1
----- executor 1 cover number : 475, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 1
----- executor 1 cover number : 475, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1458, flag collect 1
----- executor 1 cover number : 973, signal number : 419
----- executor 3 write_call_output, size 2809, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2809, flag collect 1
----- executor 3 cover number : 1550, signal number : 81
----- completed 15
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 3878, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3878, flag collect 1
----- executor 3 cover number : 1942, signal number : 90
----- completed 16
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 7
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 3 cover number : 21, signal number : 5
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 166, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 166, flag collect 1
----- executor 3 cover number : 84, signal number : 17
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 449, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 1
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3113, 0
execute_one time: 2, 3113
time breakdown 3: 16, 3122, 0
before receive testcase: 0 0
executor 1 server cover_cnt 10 output_pos_value 4123
----- executor 0 cover number : 4522, signal number : 4917
----- executor 0 executes write_coverage_signal cov->size 113, flag collect 1
----- executor 0 cover number : 75, signal number : 48
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 1
----- executor 0 cover number : 47, signal number : 15
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1534, flag collect 1
----- executor 2 cover number : 606, signal number : 630
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 2 cover number : 8, signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 2 cover number : 4, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 1
----- executor 2 cover number : 13, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 1
----- executor 2 cover number : 18, signal number : 18
executor 2 server cover_cnt 5 output_pos_value 1339
2023/03/25 14:42:29 for select break: 1
2023/03/25 14:42:29 --------- executor 2 receive reply, reply.done 1
----- executor 0 cover number : 582, signal number : 555
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 1
----- executor 0 cover number : 76, signal number : 47
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 1
----- executor 0 cover number : 76, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 1
----- executor 0 cover number : 76, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 1
----- executor 0 cover number : 76, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 1
----- executor 0 cover number : 72, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 2: 12, 3128, 0
before receive testcase: 0 0
2023/03/25 14:42:29 for select break: 1
2023/03/25 14:42:29 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 11, 3127, 0
before receive testcase: 0 1
----- executor 0 cover number : 1427, signal number : 1625
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 0 cover number : 36, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 229, flag collect 1
----- executor 0 cover number : 228, signal number : 30
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 1
----- executor 0 cover number : 34, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 0 cover number : 36, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 1
----- executor 0 cover number : 38, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 34, flag collect 1
----- executor 0 cover number : 33, signal number : 0
executor 0 server cover_cnt 16 output_pos_value 14743
2023/03/25 14:42:29 for select break: 1
2023/03/25 14:42:29 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:42:29 wg wait finish
2023/03/25 14:42:29 ------ all executors finish execution
2023/03/25 14:42:29 exec time: 3147
2023/03/25 14:42:29 ----- PS len: 4
2023/03/25 14:42:29 [CLIENT] executor 3 has 22 replies
2023/03/25 14:42:29 fuzzer receive 543 signal and 523 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 7 signal and 21 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 339 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 21 cover from executor 3
2023/03/25 14:42:29 [SERVER] executor 0 has 16 replies
2023/03/25 14:42:29 [SERVER] executor 1 has 10 replies
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 64 signal and 64 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 84 signal and 81 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 4 signal and 4 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 22 signal and 22 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 7 signal and 6 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 695 signal and 670 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 2 signal and 475 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 0 signal and 475 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 4917 signal and 4522 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 1 receive 419 signal and 973 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 48 signal and 75 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 15 signal and 47 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 555 signal and 582 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 47 signal and 76 cover from userspace component
time breakdown 0: 12, 3138, 0
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 0 signal and 76 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 0 signal and 76 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 0 signal and 76 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 17 signal and 72 cover from userspace component
before receive testcase: 0 0
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 1625 signal and 1427 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 4 signal and 36 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 30 signal and 228 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 1 signal and 34 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 1 signal and 36 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 0 signal and 38 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 0 receive 0 signal and 33 cover from userspace component
2023/03/25 14:42:29 fuzzer receive 6 signal and 20 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 2029 signal and 1938 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 5 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 5 signal and 20 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 120 signal and 1877 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 2 signal and 21 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 4 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 81 signal and 1550 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 90 signal and 1942 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 7 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 5 signal and 21 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 17 signal and 84 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 0 signal and 19 cover from executor 3
2023/03/25 14:42:29 fuzzer receive 1 signal and 19 cover from executor 3
2023/03/25 14:42:29 [SERVER] executor 2 has 5 replies
2023/03/25 14:42:29 ------- fuzzer executor 2 receive 630 signal and 606 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 2 receive 8 signal and 8 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 2 receive 4 signal and 4 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 2 receive 14 signal and 13 cover from userspace component
2023/03/25 14:42:29 ------- fuzzer executor 2 receive 18 signal and 18 cover from userspace component
2023/03/25 14:42:29 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:29 ----- triage return due to empty signal extra
2023/03/25 14:42:29 mutate testcase with failures
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- mutateArg()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- mutateFailPos()
2023/03/25 14:42:29 insert call 0 at pos 0
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- mutateArg()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- insertCall()
2023/03/25 14:42:29 ----- mutateArg()
2023/03/25 14:42:29 ----- mutateArg()
2023/03/25 14:42:29 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:42:29 disable threaded and collide
2023/03/25 14:42:29 prog length: 6
2023/03/25 14:42:29 prog length: 22
2023/03/25 14:42:29 HasCrashFail:true HasNetFail:false
14:42:29 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = dup(0xffffffffffffffff)
r1 = dup(r0)
r2 = fcntl$dupfd(r0, 0x406, r0)
r3 = dup2(r2, r1)
r4 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x48800, 0x8)
fsetxattr$security_ima(r4, &(0x7f0000000040), &(0x7f0000000080)=@v1={0x2, "e215d39673082208a425"}, 0xb, 0x1)
syz_failure_sync(0x1, 0x3)
r5 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x400000, 0xa0)
fsetxattr$smack_xattr_label(r5, &(0x7f0000000100)='security.SMACK64\x00', &(0x7f0000000140)={'security.ima\x00'}, 0xe, 0x0)
fsetxattr$smack_xattr_label(r3, &(0x7f0000000180)='security.SMACK64\x00', &(0x7f0000000500)=ANY=[@ANYBLOB="73650000561f2cd7a60ade722a4e167d4f6f694d1fb716546465d2a60b664d89d9795201c1e4f8659b02574b7a77659bb19c5e3e77d2b95bd1ed51badc0041a65245c2926647f157c2d955c4a9ed868db94d9dc5e7e4621e278b845736964db0c6282f2e0bfe9545516f64151d902570070dc9f4b15eb22cb1c0eb2e8e93174ab3d0ab325c3834f13ff4fe64c002c6f22800acacad04b808a9f3b8af"], 0xe, 0x5)
r6 = dup(r4)
fsetxattr$security_ima(r6, &(0x7f0000000200), &(0x7f0000000240)=@md5={0x1, "5c136a648be7e7917a46943b71f8d6a5"}, 0x11, 0x1)
r7 = openat(r4, &(0x7f0000000280)='./file0\x00', 0x40, 0x81)
dup(r7)
fsetxattr$security_ima(r2, &(0x7f00000002c0), &(0x7f00000001c0)=@v1={0x2, "ad"}, 0x2, 0x1)
r8 = dup(r1)
write$binfmt_script(r8, &(0x7f0000000340)={'#! ', './file0', [{0x20, 'security.ima\x00'}, {0x20, '\'\\'}, {0x20, 'security.ima\x00'}, {}, {0x20, 'security.SMACK64\x00'}], 0xa, "3f7b4c9eed63814b34e8e573a51247af79c1efb85134ebc6"}, 0x55)
fsync(r6)
fsetxattr$smack_xattr_label(r3, &(0x7f0000000300)='security.SMACK64IPIN\x00', &(0x7f00000004c0)={'\xd1+/O\xa6\xd5\xc4v\xd5b\xa1\xe1c\x8ah8\f\xa8\x04\xdbV\x9a:r\xf5vn}1)f\xe3\x03-\xc1f\x84N\xcb\xd0\xa4\xd9\xa4\xf3\xd9h\xee\x9b\xea\x80h\xbee\b\xddt\xaa$q'}, 0x3c, 0x2)
r9 = open$dir(&(0x7f0000000440)='./file0\x00', 0x40, 0xf)
sendfile(r9, 0xffffffffffffffff, &(0x7f0000000480)=0x30, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4304
remove dir: /root/beegfs-client/dfs-0-4
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 3
-----finish removing dir
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
receive_execute: 7, 1
receive_execute: 15, 6
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-5 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-5
receive_execute: 16, 6
receive_execute: 19, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 server cover_cnt 2 output_pos_value 45
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 65526, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 65526, flag collect 0
----- executor 3 signal number : 566
----- completed 1
execute_call 0, 29, 0, 1
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 9
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 6
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 433, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 3 signal number : 198
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 9
----- directly resend shmid 9
execute_call 0, 2982, 0, 0
execute_one loop: 0, 0, 2982
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3013, 0
execute_one time: 2, 3013
----- executor 3 write_call_output, size 262143, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 13
----- completed 8
execute_call 0, 2983, 0, 3
execute_one loop: 0, 0, 2986
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 5
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 2
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12084, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 12084, flag collect 0
----- executor 3 signal number : 2416
----- completed 21
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 28, pid 450, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 3 signal number : 9
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3024, 3
execute_one time: 2, 3027
2023/03/25 14:42:32 for select break: 1
2023/03/25 14:42:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1231, flag collect 0
----- executor 0 signal number : 890
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 681, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 17
executor 0 server cover_cnt 13 output_pos_value 1979
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 8
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 1 signal number : 84
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 2 signal number : 30
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 1 signal number : 42
executor 2 server cover_cnt 4 output_pos_value 69
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 1901, flag collect 0
time breakdown 3: 25, 3032, 0
before receive testcase: 0 0
----- executor 1 signal number : 1413
----- executor 1 executes write_coverage_signal cov->size 1219, flag collect 0
----- executor 1 signal number : 719
----- executor 1 executes write_coverage_signal cov->size 2101, flag collect 0
----- executor 1 signal number : 753
----- executor 1 executes write_coverage_signal cov->size 878, flag collect 0
----- executor 1 signal number : 193
time breakdown 2: 21, 3035, 0
before receive testcase: 0 1
executor 1 server cover_cnt 10 output_pos_value 3322
2023/03/25 14:42:32 for select break: 1
2023/03/25 14:42:32 for select break: 1
2023/03/25 14:42:32 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:42:32 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 8, 3035, 0
before receive testcase: 0 1
2023/03/25 14:42:32 for select break: 1
2023/03/25 14:42:32 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:42:32 wg wait finish
2023/03/25 14:42:32 ------ all executors finish execution
2023/03/25 14:42:32 exec time: 3045
2023/03/25 14:42:32 ----- PS len: 4
2023/03/25 14:42:32 [CLIENT] executor 3 has 22 replies
2023/03/25 14:42:32 fuzzer receive 566 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 [SERVER] executor 1 has 10 replies
2023/03/25 14:42:32 [SERVER] executor 2 has 4 replies
2023/03/25 14:42:32 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 1413 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 719 signal and 0 cover from userspace component
2023/03/25 14:42:32 [SERVER] executor 0 has 13 replies
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 890 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 753 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 1 receive 193 signal and 0 cover from userspace component
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 2416 signal and 0 cover from executor 3
2023/03/25 14:42:32 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:32 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:42:32 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:32 ----- no new client coverage: false, true
2023/03/25 14:42:32 mutate testcase with failures
2023/03/25 14:42:32 ----- insertCall()
2023/03/25 14:42:32 ----- mutateArg()
2023/03/25 14:42:32 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:42:32 disable threaded and collide
2023/03/25 14:42:32 prog length: 6
2023/03/25 14:42:32 prog length: 6
2023/03/25 14:42:32 prog length: 6
2023/03/25 14:42:32 prog length: 26
2023/03/25 14:42:32 HasCrashFail:true HasNetFail:false
14:42:32 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_down()
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_up()
syz_failure_send(0x3)
---
syz_failure_recv(0x4)
syz_failure_down()
syz_failure_send(0x4)
syz_failure_recv(0x5)
syz_failure_up()
syz_failure_send(0x5)
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x82, 0x0)
chmod(&(0x7f0000000040)='./file0\x00', 0x22)
setxattr$security_capability(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100), &(0x7f0000001840)=@v2={0x2000000, [{0x2b8a017b, 0x3}, {0x10001, 0x1}]}, 0x14, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x2)
r1 = openat(r0, &(0x7f0000000200)='./file0\x00', 0x422100, 0x2e)
write$binfmt_script(r1, &(0x7f0000000240)={'#! ', './file0', [{0x20, '-\\(&'}], 0xa, "56595a47bf0a4c4300858a20acfeb1843890b72ba2f63e81ccff92511bdfb3b3bfcff06298158b08acc57d14badaabd55dcf2137c7453cbda4842cba9285941d6e75c43157dc2532444eb542327a3ccacece203a366eff815db8d57e505f54d212c3aa44935e967b171664bd0c12f277043fc2e73148940c490321c4d9e8ca97cffa2e60e37504853262ea9c23269abcf5c61f16ed4285aafbf956970ac84f5819f2cfacc59259387226cfda4382688aeeff205d28a71d40aa48394b7527117a71f00ec33accd107be0ab01f50084b90c663ba19f3891421e73169e331fdec8227b5e0136493e07b1e2e47355ffef6462e3f21b6"}, 0x104)
syz_failure_sync(0x4, 0x3)
fsetxattr$security_ima(r0, &(0x7f0000000380), &(0x7f00000003c0)=@v2={0x3, 0x2, 0x12, 0x81, 0xea, "d357026421c5965633eeaab14f38c1cea2755ed74c4e7c7a51cc7812138f70f2d205c93b754a06c085f02bbd3094971b0a35203ed6d8f42783478184d997115de22a1db8cb0657aba881e25b519056d9901604525dfdb6239be8fe0fb4626884a450afeea17e49e5402aa3d07548fcbb50f604bdf86e68f13e7385778ddb19f31ec3b1be6ef8ad8fee9b3d1051330e851b1de098ecbdba0cf57e6a68088f42bd2198803229ecd057f3c07fc7b5bd8035f912cdcceda93ed1116568c0bcac2bbbfeb09eb83f001ee3c0e1c9fe1285a9b58c2b77e97fdc7c05e7569be0dd99c9f88af8493ba8b4c0a4b454"}, 0xf3, 0x1)
fsetxattr$security_ima(r1, &(0x7f00000004c0), &(0x7f0000000500)=@md5={0x1, "6de257c19341499aae522043abb21c2d"}, 0x11, 0x0)
r2 = open$dir(&(0x7f0000000540)='./file0\x00', 0x8d01, 0x43)
fchmod(r0, 0x20)
fsetxattr$user(r0, &(0x7f0000000580), &(0x7f00000005c0)='--:\x00', 0x4, 0x3)
open$dir(&(0x7f0000000600)='./file0\x00', 0x0, 0x84)
lsetxattr$security_ima(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f00000006c0)=@md5={0x1, "a10d0779d5b6163d1c0ede084215ac9b"}, 0x11, 0x2)
syz_failure_sync(0x2, 0x3)
r3 = open$dir(&(0x7f0000000700)='./file0\x00', 0x400080, 0x100)
r4 = dup(r3)
open$dir(&(0x7f0000000740)='./file0\x00', 0x253013cdb4dfb474, 0x2)
r5 = fcntl$dupfd(r2, 0x406, r4)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(r5, &(0x7f0000000780)={'#! ', './file0', [{0x20, '#! '}, {0x20, 'trusted.overlay.opaque\x00'}, {}], 0xa, ""}, 0x1028)
syz_failure_sync(0x3, 0x3)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f00000017c0)='./file0\x00', 0x40)
syz_failure_sync(0x5, 0x3)
open$dir(&(0x7f0000001800)='./file0\x00', 0x400000, 0x117)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 2056, prog_size 9472
remove dir: /root/beegfs-client/dfs-0-5
executor 2: prog_data_offset 1808, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 22, 3038, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 248
remove dir time 41
-----finish removing dir
mkdir time 2
executor 3 create dir /root/beegfs-client/dfs-0-6 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-6
receive_execute: 4, 44
receive_execute: 10, 43
receive_execute: 6, 44
receive_execute: 7, 43
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 3 signal number : 199
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2780, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2780, flag collect 0
----- executor 3 signal number : 1540
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 51
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 3597, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3597, flag collect 0
----- executor 3 signal number : 360
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 4
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 57740, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 57740, flag collect 0
----- executor 3 signal number : 508
----- completed 7
execute_call 0, 25, 0, 2
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 9
----- directly resend shmid 9
-----executor 2 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 3535, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3535, flag collect 0
----- executor 3 signal number : 117
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2995, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2995, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 4
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 340, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 879, flag collect 0
----- executor 1 signal number : 695
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 5 output_pos_value 792
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 15
----- directly resend shmid 15
-----executor 2 collect shmids 16
----- directly resend shmid 16
-----executor 2 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 21
----- directly resend shmid 21
-----executor 2 collect shmids 17
----- directly resend shmid 17
----- executor 3 write_call_output, size 58957, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 58957, flag collect 0
----- executor 3 signal number : 8
----- completed 15
execute_call 0, 26, 0, 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 2
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 22, flag collect 0
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 1 collect shmids 12
----- directly resend shmid 12
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 0
----- executor 0 signal number : 35
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 10
----- executor 3 signal number : 4
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 1 collect shmids 11
----- directly resend shmid 11
executor 0 server cover_cnt 9 output_pos_value 127
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 14
----- directly resend shmid 14
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 51190, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 51190, flag collect 0
----- executor 3 signal number : 2
----- completed 20
execute_call 0, 22, 0, 4
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 2 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 144934, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 144934, flag collect 0
execute_call 0, 68, 0, 0
----- executor 3 signal number : 19
----- completed 22
execute_call 0, 61, 0, 2
execute_one loop: 0, 0, 63
cover_reset in execute_call
executor 3 waits for recv msg
execute_one loop: 0, 0, 68
execute_call 0, 61, 0, 0
execute_one loop: 0, 0, 61
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 147, 0
execute_one time: 1, 147
-----executor 2 collect shmids 6
----- directly resend shmid 6
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2877, 0, 0
execute_one loop: 0, 0, 2877
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3025, 0
execute_one time: 3, 3025
----- executor 3 signal number : 2
----- completed 23
execute_call 0, 2879, 0, 4
execute_one loop: 0, 0, 2883
cover_reset in execute_call
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 42145, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 42145, flag collect 0
----- executor 3 signal number : 2374
----- completed 24
execute_call 0, 5046, 0, 0
execute_one loop: 0, 0, 5046
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8051, 0, 0
execute_one loop: 0, 0, 8051
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 8092, 0
execute_one time: 1, 8092
2023/03/25 14:42:40 for select break: 1
----- executor 3 write_call_output, size 29288, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 29288, flag collect 0
----- executor 3 signal number : 14
----- completed 25
execute_call 0, 13, 0, 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 451, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 1
----- completed 26
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 8092, 0
execute_one time: 2, 8092
2023/03/25 14:42:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 5824, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1149
----- executor 2 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 2 signal number : 20
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 20
----- executor 2 executes write_coverage_signal cov->size 194, flag collect 0
----- executor 2 signal number : 129
----- executor 2 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 20
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 2 signal number : 9
executor 2 server cover_cnt 20 output_pos_value 1437
----- executor 0 signal number : 2604
----- executor 0 executes write_coverage_signal cov->size 1112, flag collect 0
----- executor 1 signal number : 2503
----- executor 1 executes write_coverage_signal cov->size 838, flag collect 0
----- executor 1 signal number : 657
----- executor 1 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 1 signal number : 168
----- executor 1 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 1770, flag collect 0
----- executor 1 signal number : 119
----- executor 1 executes write_coverage_signal cov->size 926, flag collect 0
----- executor 1 signal number : 34
----- executor 1 executes write_coverage_signal cov->size 304, flag collect 0
----- executor 1 signal number : 175
----- executor 1 executes write_coverage_signal cov->size 97, flag collect 0
----- executor 0 signal number : 866
----- executor 0 executes write_coverage_signal cov->size 1778, flag collect 0
----- executor 0 signal number : 435
----- executor 0 executes write_coverage_signal cov->size 1684, flag collect 0
----- executor 1 signal number : 25
----- executor 1 executes write_coverage_signal cov->size 3994, flag collect 0
----- executor 0 signal number : 235
----- executor 0 executes write_coverage_signal cov->size 134, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 0 signal number : 466
----- executor 0 executes write_coverage_signal cov->size 1418, flag collect 0
----- executor 0 signal number : 549
----- executor 0 executes write_coverage_signal cov->size 374, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1375, flag collect 0
----- executor 0 signal number : 504
----- executor 0 executes write_coverage_signal cov->size 1089, flag collect 0
----- executor 0 signal number : 49
----- executor 0 executes write_coverage_signal cov->size 1422, flag collect 0
----- executor 0 signal number : 228
executor 0 server cover_cnt 20 output_pos_value 6116
----- executor 1 signal number : 1648
----- executor 1 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 1 signal number : 26
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 1 signal number : 1240
----- executor 1 executes write_coverage_signal cov->size 1633, flag collect 0
----- executor 1 signal number : 265
----- executor 1 executes write_coverage_signal cov->size 1533, flag collect 0
----- executor 1 signal number : 48
----- executor 1 executes write_coverage_signal cov->size 1613, flag collect 0
----- executor 1 signal number : 41
----- executor 1 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 1 signal number : 17
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 965, flag collect 0
----- executor 1 signal number : 273
executor 1 server cover_cnt 30 output_pos_value 8133
2023/03/25 14:42:40 for select break: 1
2023/03/25 14:42:40 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:42:40 for select break: 1
2023/03/25 14:42:40 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:42:40 for select break: 1
2023/03/25 14:42:40 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:42:40 wg wait finish
2023/03/25 14:42:40 ------ all executors finish execution
2023/03/25 14:42:40 exec time: 8146
2023/03/25 14:42:40 ----- PS len: 4
2023/03/25 14:42:40 [CLIENT] executor 3 has 26 replies
2023/03/25 14:42:40 fuzzer receive 199 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 1540 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 51 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 360 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 508 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:42:40 [SERVER] executor 1 has 30 replies
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 695 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 2503 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 657 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 168 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 119 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 34 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 175 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 25 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 1648 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 1240 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 265 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 48 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 41 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 1 receive 273 signal and 0 cover from userspace component
2023/03/25 14:42:40 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 2374 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:42:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:42:40 [SERVER] executor 2 has 20 replies
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 1149 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 20 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 20 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 129 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 20 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
time breakdown 3: 53, 8100, 0
before receive testcase: 0 0
2023/03/25 14:42:40 [SERVER] executor 0 has 20 replies
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 35 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 2604 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 866 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 435 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 235 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 466 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 549 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 504 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 49 signal and 0 cover from userspace component
2023/03/25 14:42:40 ------- fuzzer executor 0 receive 228 signal and 0 cover from userspace component
time breakdown 2: 50, 8102, 0
before receive testcase: 0 0
2023/03/25 14:42:40 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:42:40 ----- no new client coverage: false, true
time breakdown 0: 50, 8102, 0
before receive testcase: 0 0
2023/03/25 14:42:40 mutate testcase with failures
2023/03/25 14:42:40 ----- insertCall()
2023/03/25 14:42:40 ----- mutateArg()
2023/03/25 14:42:40 ----- insertCall()
2023/03/25 14:42:40 ----- insertCall()
2023/03/25 14:42:40 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:42:40 disable threaded and collide
2023/03/25 14:42:40 prog length: 6
2023/03/25 14:42:40 prog length: 22
2023/03/25 14:42:40 HasCrashFail:true HasNetFail:false
14:42:40 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='security.selinux\x00', &(0x7f0000000080)='-#$]\x00', 0x5, 0x0)
setxattr$incfs_metadata(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)="baf362101e284adcc86df156cad3d2458f0898cb59af6258ea5ec6965a74b58589c202fd0755416bd7029f4ad92bc08120a183a2c0e326e193af24c5ed574befc91d96f5f9b3503dc321d7f3d4c0c35940cd5cb59a36c36888a50010ac02778fd54aafd859a435510516c3", 0x6b, 0x2)
syz_failure_sync(0x0, 0x3)
readlinkat(0xffffffffffffff9c, &(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=""/254, 0xfe)
lsetxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=ANY=[@ANYBLOB="7472d5437465642e2d23245d00"], &(0x7f0000000380)='.^&\x00', 0x4, 0x3)
setxattr$smack_xattr_label(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)='security.SMACK64\x00', &(0x7f0000000440)=ANY=[@ANYBLOB="7b2f23395b71bb1c36fdfaedd24b132f"], 0x10, 0x0)
lsetxattr$security_ima(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0), &(0x7f0000000500)=ANY=[@ANYBLOB="20e9a3bd0f00000000000000000000000000dfff"], 0x14, 0x3)
rename(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)='.\x00')
r0 = open$dir(&(0x7f0000000b80)='./file0\x00', 0x0, 0x0)
rename(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='./file0\x00')
syz_failure_sync(0x1, 0x3)
r1 = fcntl$dupfd(r0, 0x406, 0xffffffffffffffff)
readlinkat(r1, &(0x7f0000000680)='./file0\x00', &(0x7f00000006c0)=""/131, 0x83)
lsetxattr$security_smack_transmute(&(0x7f0000000780)='./file0\x00', &(0x7f00000007c0), &(0x7f0000000800), 0x4, 0x2)
mkdir(&(0x7f0000000840)='./file0\x00', 0x100)
mkdirat(r0, &(0x7f0000000880)='./file0/file0\x00', 0x30)
setxattr$trusted_overlay_opaque(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900), &(0x7f0000000940), 0x2, 0x3)
r2 = open$dir(&(0x7f0000000980)='./file0/file0\x00', 0x200, 0x145)
faccessat(r2, &(0x7f00000009c0)='./file0/file0\x00', 0x6)
r3 = open$dir(&(0x7f0000000a40)='./file0\x00', 0x2001, 0x0)
linkat(r0, &(0x7f0000000a00)='./file0/file1\x00', r3, &(0x7f0000000a80)='./file0/file0\x00', 0x1000)
setxattr(&(0x7f0000000ac0)='./file0\x00', &(0x7f00000005c0)=ANY=[@ANYBLOB="34a8a80a4dc53ae577262d8e516e171206"], &(0x7f0000000b40)='/\\\x00', 0x3, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4432
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 48, 8102, 0
before receive testcase: 0 0
remove dir: /root/beegfs-client/dfs-0-6
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-7 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-7
receive_execute: 5, 11
receive_execute: 7, 10
receive_execute: 8, 12
receive_execute: 5, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4072, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4072, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- executor 3 signal number : 1896
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 4146, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4146, flag collect 0
----- executor 3 signal number : 108
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 870, flag collect 0
----- executor 0 signal number : 774
executor 0 server cover_cnt 2 output_pos_value 793
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 39, 0, 0
execute_one loop: 0, 0, 39
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 92364, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 92364, flag collect 0
----- executor 3 signal number : 505
----- completed 3
execute_call 0, 43, 0, 7
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 4139, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4139, flag collect 0
----- executor 3 signal number : 61
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 21
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 652, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 652, flag collect 0
----- executor 3 signal number : 54
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 7
----- directly resend shmid 7
----- executor 3 write_call_output, size 5440, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 5440, flag collect 0
----- executor 3 signal number : 198
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 6
----- directly resend shmid 6
----- executor 3 write_call_output, size 4293, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4293, flag collect 0
----- executor 3 signal number : 68
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 2
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
----- directly resend shmid 2
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 2977, 0, 0
execute_one loop: 0, 0, 2977
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3036, 0
execute_one time: 2, 3037
----- executor 3 write_call_output, size 262143, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 13
----- completed 11
execute_call 0, 2977, 0, 5
execute_one loop: 0, 0, 2982
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 6
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 8
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6688, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6688, flag collect 0
----- executor 3 signal number : 156
----- completed 14
execute_call 0, 35814, 0, 11
execute_one loop: 0, 0, 35825
cover_reset in execute_call
----- executor 3 write_call_output, size 8996, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8996, flag collect 0
----- executor 3 signal number : 371
----- completed 15
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 158, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 158, flag collect 0
----- executor 3 signal number : 14
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 769, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 769, flag collect 0
----- executor 3 signal number : 131
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4353, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4353, flag collect 0
----- executor 3 signal number : 59
----- completed 18
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 417, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 417, flag collect 0
----- executor 3 signal number : 72
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 723, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 723, flag collect 0
----- executor 3 signal number : 32
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 206, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 3 signal number : 10
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 821, pid 453, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 821, flag collect 0
----- executor 3 signal number : 16
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 38874, 0
execute_one time: 1, 38874
2023/03/25 14:43:19 for select break: 1
2023/03/25 14:43:19 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2640, flag collect 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 932
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1031, flag collect 0
----- executor 1 signal number : 84
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 468, flag collect 0
----- executor 0 signal number : 2645
----- executor 0 executes write_coverage_signal cov->size 3536, flag collect 0
----- executor 0 signal number : 960
----- executor 0 executes write_coverage_signal cov->size 4607, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 8011, flag collect 0
----- executor 2 signal number : 2030
----- executor 2 executes write_coverage_signal cov->size 924, flag collect 0
----- executor 0 signal number : 732
----- executor 0 executes write_coverage_signal cov->size 4281, flag collect 0
----- executor 2 signal number : 720
----- executor 0 signal number : 261
----- executor 0 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 3102, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 272, flag collect 0
----- executor 0 signal number : 761
----- executor 0 executes write_coverage_signal cov->size 2293, flag collect 0
----- executor 2 signal number : 143
----- executor 1 signal number : 1772
----- executor 0 signal number : 916
----- executor 0 executes write_coverage_signal cov->size 2119, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 114, flag collect 0
----- executor 0 signal number : 375
----- executor 0 executes write_coverage_signal cov->size 2103, flag collect 0
----- executor 2 signal number : 57
----- executor 1 signal number : 7
----- executor 0 signal number : 317
----- executor 0 executes write_coverage_signal cov->size 2387, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2223, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2692, flag collect 0
----- executor 0 signal number : 343
----- executor 0 executes write_coverage_signal cov->size 982, flag collect 0
----- executor 0 signal number : 250
executor 0 server cover_cnt 13 output_pos_value 8402
----- executor 1 signal number : 697
----- executor 2 signal number : 306
----- executor 1 executes write_coverage_signal cov->size 1318, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 3120, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 531, flag collect 0
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 8778, flag collect 0
----- executor 1 signal number : 816
----- executor 1 executes write_coverage_signal cov->size 2147, flag collect 0
----- executor 1 signal number : 390
----- executor 2 signal number : 1959
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 934, flag collect 0
----- executor 2 signal number : 25
----- executor 1 signal number : 226
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
executor 1 server cover_cnt 11 output_pos_value 4980
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
2023/03/25 14:43:19 for select break: 1
2023/03/25 14:43:19 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
time breakdown 3: 20, 38878, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 0
----- executor 2 signal number : 66
executor 2 server cover_cnt 23 output_pos_value 5427
2023/03/25 14:43:19 for select break: 1
2023/03/25 14:43:19 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:19 for select break: 1
2023/03/25 14:43:19 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:43:19 wg wait finish
2023/03/25 14:43:19 ------ all executors finish execution
2023/03/25 14:43:19 exec time: 38897
2023/03/25 14:43:19 ----- PS len: 4
2023/03/25 14:43:19 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:19 fuzzer receive 1896 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 505 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 156 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 371 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 72 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/25 14:43:19 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:43:19 [SERVER] executor 0 has 13 replies
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 774 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 2645 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 960 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 732 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 261 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 761 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 916 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 375 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 317 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 343 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 0 receive 250 signal and 0 cover from userspace component
time breakdown 2: 17, 38885, 0
before receive testcase: 0 0
time breakdown 0: 17, 38881, 0
before receive testcase: 0 0
2023/03/25 14:43:19 [SERVER] executor 2 has 23 replies
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 2030 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 720 signal and 0 cover from userspace component
time breakdown 1: 16, 38884, 0
before receive testcase: 0 0
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 143 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 57 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 1959 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 25 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 2 receive 66 signal and 0 cover from userspace component
2023/03/25 14:43:19 [SERVER] executor 1 has 11 replies
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 932 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 1772 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 697 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 816 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 390 signal and 0 cover from userspace component
2023/03/25 14:43:19 ------- fuzzer executor 1 receive 226 signal and 0 cover from userspace component
2023/03/25 14:43:19 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:19 ----- no new client coverage: false, true
2023/03/25 14:43:19 mutate testcase with failures
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- mutateFailPos()
2023/03/25 14:43:19 insert call 1 at pos 2
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- mutateArg()
2023/03/25 14:43:19 ----- mutateFailPos()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- mutateArg()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- mutateArg()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- mutateArg()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 ----- insertCall()
2023/03/25 14:43:19 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:19 disable threaded and collide
2023/03/25 14:43:19 prog length: 6
2023/03/25 14:43:19 prog length: 22
2023/03/25 14:43:19 HasCrashFail:true HasNetFail:false
14:43:19 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
readlinkat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/9, 0x9)
syz_failure_sync(0x1, 0x3)
setxattr$security_ima(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000180)=ANY=[@ANYBLOB="02ccfada7ce154e6782e6e43"], 0xb, 0x3)
readlinkat(0xffffffffffffffff, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180), 0x0)
setxattr$security_evm(&(0x7f00000001c0)='./file2\x00', &(0x7f0000000200), &(0x7f00000005c0)=ANY=[@ANYRES16, @ANYRES64=0x0, @ANYRESDEC=0x0, @ANYRESDEC=0x0, @ANYRES16], 0x9, 0x1)
mkdir(&(0x7f0000000280)='./file0\x00', 0xc0)
mkdirat(0xffffffffffffffff, &(0x7f00000002c0)='./file0\x00', 0x30)
link(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='./file0\x00')
setxattr$trusted_overlay_upper(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400)={0x0, 0xfb, 0x9f, 0x0, 0xa7, "bf9e48ae683b530eb2e9b8ccc2907b75", "2072461d67f2d166ed8e83d46669fb03dfa8691cc898a3f18597162d2125d68da0b5e40fdfb109ae9524b081414887234cffc6f37d50d805012b50cb7d61a38347babe0ddcc16dbfb607937a68f0a7efe2b4e09b964f8bea6d09fcea88476717958577b20bec99319538f735cb79f8bede9885b63d111836c4b91ddd9e575e774154ceaae43d5b36d66d"}, 0x9f, 0x2)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500), &(0x7f0000000540)='system_u:object_r:dhcpd_initrc_exec_t:s0\x00', 0x29, 0x2)
setxattr$incfs_size(&(0x7f0000000580)='./file0\x00', &(0x7f0000000240), &(0x7f0000000600)=0x9338, 0x8, 0x3)
r0 = open$dir(&(0x7f0000000640)='./file0\x00', 0x10000, 0xa0)
faccessat(r0, &(0x7f0000000680)='./file0\x00', 0x28)
setxattr$incfs_id(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700), &(0x7f0000000740)={'0000000000000000000000000000000', 0x33}, 0x20, 0x2)
setxattr$incfs_metadata(&(0x7f0000000780)='./file0\x00', &(0x7f00000007c0), &(0x7f0000000800)="ad60e27975e705fd2f174ca5adf464c3c2f99b313e40b420da0c73dc67256c2d39668c505f90efc6681143923f3a9e02161671c9a193d7d7a2a6b285f466afe760075f47b1c0f6a2709c84ed39f9cc473d652d1047d63aae72e10bab9b854f650229710257c2fa42c2f925b666192987565dc2cec8a89d783f5fe65535e612a90c0719a99d6f265b033fc9e1628f2123a94a", 0x92, 0x2)
setxattr$trusted_overlay_origin(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900), &(0x7f0000000940), 0x2, 0x3)
chdir(&(0x7f0000000980)='./file0\x00')
open(&(0x7f00000009c0)='./file1\x00', 0x60000, 0x2a)
lsetxattr$security_evm(&(0x7f0000000a00)='./file0\x00', &(0x7f0000000a40), &(0x7f0000000a80)=@v2={0x5, 0x3, 0xe, 0x240}, 0x9, 0x3)
lsetxattr$user(&(0x7f0000000ac0)='./file0\x00', &(0x7f0000000b00), &(0x7f0000000b40)='^-+\x00', 0x4, 0x0)
open$dir(&(0x7f0000000b80)='./file2\x00', 0x0, 0x100)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5240
remove dir: /root/beegfs-client/dfs-0-7
remove dir time 12
-----finish removing dir
receive_execute: 8, 16
mkdir time 4
executor 3 create dir /root/beegfs-client/dfs-0-8 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-8
receive_execute: 10, 16
receive_execute: 13, 16
receive_execute: 6, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 59818, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 59818, flag collect 0
----- executor 3 signal number : 566
----- completed 1
execute_call 0, 25, 0, 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 455, write pid:-2130674324
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 74
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 455, write pid:-2130674324
execute_call 0, 163, 0, 0
execute_one loop: 0, 0, 163
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 190, 0
execute_one time: 1, 191
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 5
----- completed 3
execute_call 0, 163, 0, 3
execute_one loop: 0, 0, 166
cover_reset in execute_call
----- executor 3 write_call_output, size 4035, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4035, flag collect 0
----- executor 3 signal number : 1744
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4245, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4245, flag collect 0
----- executor 3 signal number : 97
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 10903, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 10903, flag collect 0
----- executor 3 signal number : 593
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 155, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 155, flag collect 0
----- executor 3 signal number : 12
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 959, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 959, flag collect 0
----- executor 3 signal number : 82
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 768, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 768, flag collect 0
----- executor 3 signal number : 102
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 694, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 3 signal number : 14
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 789, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 789, flag collect 0
----- executor 3 signal number : 12
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1320, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 1320, flag collect 0
----- executor 3 signal number : 230
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 777, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 777, flag collect 0
----- executor 3 signal number : 6
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 780, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 780, flag collect 0
----- executor 3 signal number : 6
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 756, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 756, flag collect 0
----- executor 3 signal number : 6
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 563, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 563, flag collect 0
----- executor 3 signal number : 23
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3385, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3385, flag collect 0
----- executor 3 signal number : 114
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3228, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3228, flag collect 0
----- executor 3 signal number : 26
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 8
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3360, pid 455, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3360, flag collect 0
----- executor 3 signal number : 27
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 208, 0
execute_one time: 1, 209
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 680, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2520, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 1616
----- executor 1 executes write_coverage_signal cov->size 1686, flag collect 0
----- executor 1 signal number : 383
----- executor 1 executes write_coverage_signal cov->size 1565, flag collect 0
----- executor 1 signal number : 23
----- executor 1 executes write_coverage_signal cov->size 1321, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 902, flag collect 0
----- executor 1 signal number : 216
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 18
executor 1 server cover_cnt 9 output_pos_value 2372
----- executor 0 signal number : 2581
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 584, flag collect 0
----- executor 0 signal number : 265
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 599
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 0 signal number : 9
executor 0 server cover_cnt 11 output_pos_value 3555
executor 2 server cover_cnt 4 output_pos_value 56
2023/03/25 14:43:20 for select break: 1
2023/03/25 14:43:20 --------- executor 3 receive reply, reply.done 1
2023/03/25 14:43:20 for select break: 1
2023/03/25 14:43:20 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:43:20 for select break: 1
2023/03/25 14:43:20 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:20 for select break: 1
2023/03/25 14:43:20 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:20 wg wait finish
2023/03/25 14:43:20 ------ all executors finish execution
2023/03/25 14:43:20 exec time: 232
2023/03/25 14:43:20 ----- PS len: 4
2023/03/25 14:43:20 [SERVER] executor 0 has 11 replies
2023/03/25 14:43:20 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 2581 signal and 0 cover from userspace component
2023/03/25 14:43:20 fuzzer receive 566 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 74 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 1744 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 265 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:20 [SERVER] executor 1 has 9 replies
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 599 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:20 [SERVER] executor 2 has 4 replies
2023/03/25 14:43:20 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:43:20 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 593 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 14:43:20 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:43:20 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 230 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 1616 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 383 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 23 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/25 14:43:20 ------- fuzzer executor 1 receive 216 signal and 0 cover from userspace component
time breakdown 3: 29, 212, 0
before receive testcase: 0 1
2023/03/25 14:43:20 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:20 ----- no new client coverage: false, true
2023/03/25 14:43:20 mutate testcase with failures
2023/03/25 14:43:20 ----- mutateFailPos()
2023/03/25 14:43:20 insert call 0 at pos 0
2023/03/25 14:43:20 ----- insertCall()
2023/03/25 14:43:20 ----- insertCall()
2023/03/25 14:43:20 ----- insertCall()
2023/03/25 14:43:20 ----- insertCall()
2023/03/25 14:43:20 ----- insertCall()
2023/03/25 14:43:20 ----- mutateArg()
2023/03/25 14:43:20 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:20 disable threaded and collide
2023/03/25 14:43:20 prog length: 6
2023/03/25 14:43:20 prog length: 22
2023/03/25 14:43:20 HasCrashFail:true HasNetFail:false
14:43:20 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lseek(0xffffffffffffffff, 0x5, 0x2)
syz_failure_sync(0x1, 0x3)
lseek(0xffffffffffffffff, 0x8, 0x1)
ioctl(0xffffffffffffffff, 0x8001, &(0x7f0000000000)="2d3d14495bd16bfd5f8b1d1e6a31e76698596f65e32ff73a3d0caaab3106f34a03e9bd84c2606595194cb80a49c97f455590193050bcc02c58a6c7d1c3030cbb5ef8a115c11b458954e469c699d2e1aca54f8567b399050fdb7470b0260bc0619f31f0efe762d56112cb01759b9ebffa941e27dffd682ac194c756e85740d36a73fd5f71c518312c0282")
r0 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x983, 0x48)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000100))
fsync(r0)
r1 = open$dir(&(0x7f0000000140)='./file0\x00', 0x63742, 0x130)
write$binfmt_script(r1, &(0x7f0000000900)=ANY=[@ANYBLOB="2321202e2f66696c65302020282c2d5d2f5e20207b2f14232040242b5e295c11202b2d2e0a37bd2f19862d3631d2e9ce8eb68e7e3293e21cfd6319fde48cdf1bec4e2fef2bebffacd65d4bb6673390de78f1d3a938eb3f111b25d7474204a512e8fbad2f2adbcdd7bbb79fbe0da07a2a5c6d9393d84cab8b3a6819dc31b8f893660b4abb0453c5024fb00cb0ff5afb365c51d45243fdc295810750c7a8905725281a20e480ab421cb312395126187ab046dc0f7c5d77fe63f6f3bbaad698fd5d44cc6d1ec2ffd4cdce783528400000000000000000000000000000000008b527d2ef95be66cc16d9a5f0afa69586a247f0fc97beaf292c2e8a89b59daaf80027ebb80b93c684552d215491a549d832185fc2cd9ce1050757b245d0e16922fba023d9ab96b8e2c3196b97cbb63c0c56c5417d9e51d741f6ead6a8ad00fa4b802472f9123e"], 0xc5)
r2 = fcntl$dupfd(r1, 0x406, r0)
r3 = fcntl$getown(r0, 0x9)
fcntl$setown(r2, 0x8, r3)
fsetxattr$security_evm(r1, &(0x7f0000000280), &(0x7f0000000200)=ANY=[@ANYBLOB="0228d968da5982b4d53a84043aed76f1e2e86d92eff8338f6f70f132a5a3ae7a72bbbf71087977c5d11cd00f7add20d803e98233286f3094c95184b088c31d1bfe099ac81bac883a6b8a41"], 0x14, 0x2)
setxattr$smack_xattr_label(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='security.SMACK64IPIN\x00', &(0x7f0000000380)={')X@/'}, 0x5, 0x2)
r4 = openat(0xffffffffffffff9c, &(0x7f00000003c0)='./file0\x00', 0x20400, 0x180)
dup(r4)
readv(r0, &(0x7f00000007c0)=[{&(0x7f0000000400)=""/136, 0x88}, {&(0x7f00000004c0)=""/240, 0xf0}, {&(0x7f00000005c0)=""/15, 0xf}, {&(0x7f0000000600)=""/31, 0x1f}, {&(0x7f0000000640)=""/107, 0x6b}, {&(0x7f00000006c0)=""/187, 0xbb}, {&(0x7f0000000780)=""/63, 0x3f}], 0x7)
r5 = fcntl$dupfd(r4, 0x406, r2)
linkat(0xffffffffffffffff, &(0x7f0000000840)='./file0\x00', r5, &(0x7f0000000880)='./file0\x00', 0x400)
r6 = dup(r4)
fsetxattr$system_posix_acl(r6, &(0x7f0000000180)='system.posix_acl_default\x00', &(0x7f0000000a80)=ANY=[@ANYBLOB="eeff00000100020000000000040000000000000008000200", @ANYRESDEC=r5, @ANYRES32, @ANYRES32=0x0, @ANYBLOB="10000200000000002000060000000000"], 0x34, 0x3)
---

end of program
time breakdown 0: 26, 215, 0
before receive testcase: 0 0
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4448
remove dir: /root/beegfs-client/dfs-0-8
executor 0: prog_data_offset 1312, prog_size 248
time breakdown 1: 24, 216, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 9
executor 3 create dir /root/beegfs-client/dfs-0-9 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-9
receive_execute: 3, 17
time breakdown 2: 22, 215, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
receive_execute: 3, 17
receive_execute: 5, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 1, 17
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 37
----- executor 0 executes write_coverage_signal cov->size 229, flag collect 0
----- executor 0 signal number : 199
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 4 output_pos_value 257
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 3 write_call_output, size 56341, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 56341, flag collect 0
----- executor 3 signal number : 539
----- completed 1
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 1006, 0, 0
execute_one loop: 0, 0, 1006
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 1030, 0
execute_one time: 3, 1030
----- executor 3 write_call_output, size 262143, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_call 0, 1007, 0, 3
execute_one loop: 0, 0, 1010
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6456, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6456, flag collect 0
----- executor 3 signal number : 2044
----- completed 6
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 10113, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 10113, flag collect 0
----- executor 3 signal number : 779
----- completed 9
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 29688, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 29688, flag collect 0
----- executor 3 signal number : 2488
----- completed 10
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 36, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 3 signal number : 17
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 301, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 301, flag collect 0
----- executor 3 signal number : 117
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3649, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3649, flag collect 0
----- executor 3 signal number : 217
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6465, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6465, flag collect 0
----- executor 3 signal number : 210
----- completed 16
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 56, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 56, flag collect 0
----- executor 3 signal number : 19
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 36, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 166, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 166, flag collect 0
----- executor 3 signal number : 20
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 56, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 56, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 262, pid 456, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262, flag collect 0
----- executor 3 signal number : 17
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 1055, 1
execute_one time: 2, 1057
2023/03/25 14:43:21 for select break: 1
2023/03/25 14:43:21 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 767, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 935, flag collect 0
----- executor 2 signal number : 629
----- executor 1 signal number : 79
----- executor 2 executes write_coverage_signal cov->size 860, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 140
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 3052, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 2 signal number : 174
----- executor 0 signal number : 2511
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 1 signal number : 1238
----- executor 2 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 0 signal number : 191
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4148, flag collect 0
----- executor 2 signal number : 13
----- executor 0 signal number : 608
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 17
executor 0 server cover_cnt 15 output_pos_value 3989
----- executor 2 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 1 signal number : 2108
----- executor 1 executes write_coverage_signal cov->size 3370, flag collect 0
----- executor 1 signal number : 964
----- executor 1 executes write_coverage_signal cov->size 4340, flag collect 0
----- executor 1 signal number : 799
----- executor 1 executes write_coverage_signal cov->size 4256, flag collect 0
time breakdown 3: 22, 1063, 0
before receive testcase: 0 0
----- executor 1 signal number : 164
2023/03/25 14:43:21 for select break: 1
2023/03/25 14:43:21 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 7 output_pos_value 5386
2023/03/25 14:43:21 for select break: 1
2023/03/25 14:43:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 1068, 0
before receive testcase: 0 0
time breakdown 0: 20, 1065, 0
before receive testcase: 0 0
2023/03/25 14:43:21 for select break: 1
2023/03/25 14:43:21 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:43:21 wg wait finish
2023/03/25 14:43:21 ------ all executors finish execution
2023/03/25 14:43:21 exec time: 1093
2023/03/25 14:43:21 ----- PS len: 4
2023/03/25 14:43:21 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:21 fuzzer receive 539 signal and 0 cover from executor 3
2023/03/25 14:43:21 [SERVER] executor 1 has 7 replies
2023/03/25 14:43:21 [SERVER] executor 0 has 15 replies
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 37 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 199 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 2511 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 191 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 608 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:43:21 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 2044 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 779 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 2488 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 217 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 210 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:21 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 14:43:21 [SERVER] executor 2 has 14 replies
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 629 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 174 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 130 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 370 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 938 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 2 receive 21 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 1238 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 2108 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 964 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 799 signal and 0 cover from userspace component
2023/03/25 14:43:21 ------- fuzzer executor 1 receive 164 signal and 0 cover from userspace component
----- executor 2 signal number : 130
----- executor 2 executes write_coverage_signal cov->size 563, flag collect 0
----- executor 2 signal number : 370
----- executor 2 executes write_coverage_signal cov->size 190, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 92, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 2038, flag collect 0
----- executor 2 signal number : 938
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 677, flag collect 0
----- executor 2 signal number : 306
2023/03/25 14:43:21 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:21 ----- no new client coverage: false, true
2023/03/25 14:43:21 mutate testcase with failures
2023/03/25 14:43:21 ----- insertCall()
2023/03/25 14:43:21 ----- mutateArg()
2023/03/25 14:43:21 ----- mutateFailPos()
2023/03/25 14:43:21 insert call 1 at pos 0
2023/03/25 14:43:21 ----- insertCall()
2023/03/25 14:43:21 ----- mutateArg()
2023/03/25 14:43:21 ----- insertCall()
2023/03/25 14:43:21 ----- mutateArg()
2023/03/25 14:43:21 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:21 disable threaded and collide
2023/03/25 14:43:21 prog length: 6
2023/03/25 14:43:21 prog length: 22
2023/03/25 14:43:21 HasCrashFail:true HasNetFail:false
14:43:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x101000, 0x181)
r1 = open(&(0x7f0000000040)='./file1\x00', 0x202000, 0x6)
fsetxattr$trusted_overlay_redirect(r1, &(0x7f0000000080), &(0x7f00000000c0)='./file1\x00', 0x8, 0x0)
close(r0)
getxattr(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140)=@random={'os2.', 'trusted.overlay.redirect\x00'}, &(0x7f0000000180)=""/27, 0x1b)
fstat(r1, &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f00000001c0)='./file1\x00', 0xffffffffffffffff, r2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)=ANY=[@ANYBLOB="00fb6900b25399d7bd8efe5449e1fe1e7cf6521e5101cfa9558093e3d948424760daf13aba4f13eb334842f9d57dbcca7870995492762cdae2b9a9d4609be371e2dc93c104e02abfdc362714ebd8b0a0b6c6b38ea0b9f6ade1"], 0x69, 0x1)
r3 = dup(r1)
fsetxattr$user(r3, &(0x7f0000000380), &(0x7f00000003c0)='--:-{\x00', 0x6, 0x1)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000400))
readlinkat(r3, &(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=""/92, 0x5c)
llistxattr(&(0x7f0000000500)='./file1\x00', &(0x7f0000000540)=""/187, 0xbb)
link(&(0x7f0000000600)='./file2\x00', &(0x7f0000000640)='./file0\x00')
fcntl$setown(r3, 0x8, 0xffffffffffffffff)
fstat(r1, &(0x7f0000000940)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
setxattr$security_capability(&(0x7f0000000680)='./file1\x00', &(0x7f00000006c0), &(0x7f0000000780)=@v3={0x3000000, [{0x8001, 0x40}, {0x6, 0x7}], r4}, 0x18, 0x1)
fcntl$setownex(r1, 0xf, &(0x7f00000007c0)={0x1})
setxattr$security_ima(&(0x7f0000000800)='./file1\x00', &(0x7f0000000840), &(0x7f0000000900)=ANY=[@ANYBLOB="b3555e68d8eb99cd404d3c1f34e8821a33baff299d8a"], 0x9, 0x2)
faccessat(0xffffffffffffffff, &(0x7f00000008c0)='./file1\x00', 0x128)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 2 signal number : 6
----- executor 2 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 2 signal number : 21
executor 2 server cover_cnt 14 output_pos_value 2794
time breakdown 2: 20, 1075, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3984
remove dir: /root/beegfs-client/dfs-0-9
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/beegfs-client/dfs-0-10 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-10
receive_execute: 4, 21
receive_execute: 11, 22
receive_execute: 30, 5
receive_execute: 28, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 11, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 37
----- executor 0 executes write_coverage_signal cov->size 229, flag collect 0
----- executor 0 signal number : 199
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 7 output_pos_value 288
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 78776, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 78776, flag collect 0
----- executor 3 signal number : 555
----- completed 1
execute_call 0, 36, 0, 1
execute_one loop: 0, 0, 37
cover_reset in execute_call
----- executor 3 write_call_output, size 4508, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4508, flag collect 0
----- executor 3 signal number : 1974
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4249, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4249, flag collect 0
----- executor 3 signal number : 84
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 6
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 8
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 72
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 9
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 444, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 3 signal number : 10
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4123, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4123, flag collect 0
----- executor 3 signal number : 89
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 14
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3312, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3312, flag collect 0
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
----- executor 3 signal number : 27
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3218, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3218, flag collect 0
----- executor 3 signal number : 26
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 5
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 2
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 2992, 0, 0
execute_one loop: 0, 0, 2992
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3034, 0
execute_one time: 3, 3034
----- executor 3 write_call_output, size 262143, pid 457, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 3
----- completed 22
execute_call 0, 2991, 0, 5
execute_one loop: 0, 0, 2997
executor 3, execute_one inner time: 0, 3039, 0
execute_one time: 3, 3039
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
----- executor 2 signal number : 633
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 1 signal number : 79
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 1 signal number : 42
----- executor 2 signal number : 30
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 1 signal number : 487
----- executor 1 executes write_coverage_signal cov->size 1544, flag collect 0
----- executor 1 signal number : 204
----- executor 1 executes write_coverage_signal cov->size 662, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 705
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 10 output_pos_value 931
2023/03/25 14:43:24 for select break: 1
2023/03/25 14:43:24 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 2564
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 0
----- executor 0 signal number : 599
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
time breakdown 3: 37, 3045, 0
before receive testcase: 0 1
----- executor 0 signal number : 43
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 17
executor 0 server cover_cnt 18 output_pos_value 3875
2023/03/25 14:43:24 for select break: 1
2023/03/25 14:43:24 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:24 for select break: 1
2023/03/25 14:43:24 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 33, 3048, 0
before receive testcase: 0 0
time breakdown 2: 25, 3049, 0
before receive testcase: 0 0
2023/03/25 14:43:24 for select break: 1
2023/03/25 14:43:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:24 wg wait finish
2023/03/25 14:43:24 ------ all executors finish execution
2023/03/25 14:43:24 exec time: 3071
2023/03/25 14:43:24 ----- PS len: 4
2023/03/25 14:43:24 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:24 fuzzer receive 555 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 1974 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 72 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:24 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/25 14:43:24 [SERVER] executor 0 has 18 replies
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 37 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 199 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 2564 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 599 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 43 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:43:24 [SERVER] executor 1 has 10 replies
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 487 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 204 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:24 [SERVER] executor 2 has 5 replies
2023/03/25 14:43:24 ------- fuzzer executor 2 receive 633 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:24 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:43:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:24 ----- no new client coverage: false, true
2023/03/25 14:43:24 mutate testcase with failures
2023/03/25 14:43:24 ----- mutateArg()
2023/03/25 14:43:24 ----- insertCall()
2023/03/25 14:43:24 ----- insertCall()
2023/03/25 14:43:24 ----- mutateArg()
2023/03/25 14:43:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:24 disable threaded and collide
2023/03/25 14:43:24 prog length: 6
2023/03/25 14:43:24 prog length: 22
2023/03/25 14:43:24 HasCrashFail:true HasNetFail:false
14:43:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$incfs_id(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'0000000000000000000000000000000', 0x32}, 0x20, 0x1)
lsetxattr$security_capability(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=@v3={0x3000000, [{0x800420, 0x9}, {0x20000a5, 0x7e6}], 0xee00}, 0x18, 0x1)
syz_failure_sync(0x0, 0x3)
faccessat(0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00', 0x8)
r0 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0xe5bc3d3126ec42ff, 0x10e)
r1 = openat(r0, &(0x7f0000000200)='./file0\x00', 0x10000, 0x20)
mkdir(&(0x7f0000000240)='./file0\x00', 0xc2)
syz_failure_sync(0x1, 0x3)
fdatasync(r1)
faccessat(r0, &(0x7f0000000280)='./file0\x00', 0x14)
mkdirat(r1, &(0x7f00000002c0)='./file0\x00', 0x8)
r2 = dup(r0)
mkdirat(r2, &(0x7f0000000300)='./file0\x00', 0x104)
fstat(r0, &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
chown(&(0x7f0000000340)='./file0\x00', 0xee00, r3)
setxattr$trusted_overlay_origin(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480), 0x2, 0x1)
getxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)=@known='user.incfs.id\x00', &(0x7f0000000540)=""/250, 0xfa)
r4 = dup(r0)
fsetxattr$user(r4, &(0x7f0000000640), &(0x7f0000000680)='(/.+%%[\'\x00', 0x9, 0x0)
fcntl$setownex(r1, 0xf, &(0x7f00000006c0)={0x1})
removexattr(&(0x7f0000000700)='./file0\x00', &(0x7f0000000740)=@known='trusted.overlay.redirect\x00')
readlink(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0)=""/129, 0x81)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 3808
remove dir: /root/beegfs-client/dfs-0-10
time breakdown 0: 35, 3049, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 19
-----finish removing dir
mkdir time 9
executor 3 create dir /root/beegfs-client/dfs-0-11 successfully
receive_execute: 3, 30
receive_execute: 3, 31
current dir: executor 3: /root/beegfs-client/dfs-0-11
receive_execute: 8, 29
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 3332, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3332, flag collect 0
----- executor 3 signal number : 1813
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 58
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
receive_execute: 2, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 68100, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 68100, flag collect 0
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 518
----- completed 3
execute_call 0, 30, 0, 2
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 8
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 3 signal number : 143
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8920, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8920, flag collect 0
----- executor 3 signal number : 555
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 2971, 0, 0
execute_one loop: 0, 0, 2971
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2998, 0
execute_one time: 9, 2999
----- executor 3 write_call_output, size 262143, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 9
----- completed 8
execute_call 0, 2970, 0, 4
execute_one loop: 0, 0, 2974
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 155, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 155, flag collect 0
----- executor 3 signal number : 12
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 155, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 155, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 8
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6457, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6457, flag collect 0
----- executor 3 signal number : 406
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3972, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3972, flag collect 0
----- executor 3 signal number : 94
----- completed 16
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 775, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 775, flag collect 0
----- executor 3 signal number : 66
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 1
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 618, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 618, flag collect 0
----- executor 3 signal number : 43
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6759, pid 458, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6759, flag collect 0
----- executor 3 signal number : 87
----- completed 22
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 3015, 0
execute_one time: 1, 3015
2023/03/25 14:43:27 for select break: 1
2023/03/25 14:43:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1227, flag collect 0
----- executor 0 signal number : 890
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 681, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 765, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 62
executor 0 server cover_cnt 11 output_pos_value 1960
----- executor 1 signal number : 79
----- executor 2 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 1 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 18
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 57
----- executor 1 signal number : 6
2023/03/25 14:43:27 for select break: 1
2023/03/25 14:43:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 3019, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 3358, flag collect 0
----- executor 1 signal number : 1911
----- executor 1 executes write_coverage_signal cov->size 3041, flag collect 0
----- executor 1 signal number : 134
----- executor 1 executes write_coverage_signal cov->size 1749, flag collect 0
----- executor 1 signal number : 166
----- executor 1 executes write_coverage_signal cov->size 1215, flag collect 0
----- executor 1 signal number : 139
----- executor 1 executes write_coverage_signal cov->size 899, flag collect 0
----- executor 1 signal number : 215
2023/03/25 14:43:27 for select break: 1
2023/03/25 14:43:27 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 11 output_pos_value 2787
time breakdown 2: 33, 3021, 0
before receive testcase: 0 0
time breakdown 3: 37, 3018, 0
before receive testcase: 0 0
2023/03/25 14:43:27 for select break: 1
2023/03/25 14:43:27 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:27 wg wait finish
2023/03/25 14:43:27 ------ all executors finish execution
2023/03/25 14:43:27 exec time: 3053
2023/03/25 14:43:27 ----- PS len: 4
2023/03/25 14:43:27 [SERVER] executor 0 has 11 replies
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 890 signal and 0 cover from userspace component
2023/03/25 14:43:27 [SERVER] executor 2 has 4 replies
2023/03/25 14:43:27 [SERVER] executor 1 has 11 replies
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
time breakdown 1: 34, 3022, 0
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 1911 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 134 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 166 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 139 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 14:43:27 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:27 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
2023/03/25 14:43:27 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:27 fuzzer receive 1813 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 518 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 143 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 555 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 406 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 66 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 43 signal and 0 cover from executor 3
2023/03/25 14:43:27 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/25 14:43:27 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:27 ----- no new client coverage: false, true
2023/03/25 14:43:27 mutate testcase with failures
2023/03/25 14:43:27 ----- splice()
2023/03/25 14:43:27 ----- mutateArg()
2023/03/25 14:43:27 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:27 disable threaded and collide
2023/03/25 14:43:27 prog length: 6
2023/03/25 14:43:27 prog length: 22
2023/03/25 14:43:27 HasCrashFail:true HasNetFail:false
14:43:27 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$incfs_size(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=0x5, 0x8, 0x2)
rename(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=@random={'btrfs.', 'user.incfs.size\x00'}, &(0x7f00000001c0)=""/176, 0xb0)
getxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=@random={'trusted.', '\x96\x00'}, &(0x7f0000000300)=""/221, 0xdd)
setxattr$incfs_size(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=0x6, 0x8, 0x2)
renameat(0xffffffffffffff9c, &(0x7f00000004c0)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000500)='./file0\x00')
r0 = open$dir(&(0x7f0000000540)='./file1\x00', 0x40, 0x8)
lsetxattr$security_selinux(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)='system_u:object_r:framebuf_device_t:s0\x00', 0x27, 0x2)
truncate(&(0x7f0000000640)='./file1\x00', 0x16ac1c77)
setxattr$incfs_size(&(0x7f0000000680)='./file1\x00', &(0x7f00000006c0), &(0x7f0000000700)=0x100000001, 0x8, 0x4)
rename(&(0x7f0000000740)='./file2\x00', &(0x7f0000000780)='./file1\x00')
mkdirat(r0, &(0x7f00000007c0)='./file1\x00', 0x114)
fstat(r0, &(0x7f0000000880)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000900)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000800)='./file2\x00', &(0x7f0000000840)='system.posix_acl_default\x00', &(0x7f0000000cc0)=ANY=[@ANYBLOB="02000000010006000000000019000200c3fb1632593760a0ddc0e75b608b6bc1", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=r1, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="040004000000000008000500", @ANYRES32=0xee00, @ANYBLOB="08000300", @ANYRES32=0xee01, @ANYBLOB="08000400", @ANYRES32=0x0, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee01, @ANYBLOB="08000400", @ANYRES32, @ANYBLOB="08000100", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=0xee00, @ANYBLOB="08000400", @ANYRES32=r2, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="10000200000000002000000000000000"], 0x84, 0x0)
r3 = dup2(r0, r0)
faccessat(r3, &(0x7f0000000a40)='./file0\x00', 0x40)
fgetxattr(r3, &(0x7f0000000a80)=@known='user.incfs.metadata\x00', &(0x7f0000000ac0)=""/37, 0x25)
getxattr(&(0x7f0000000b00)='./file2\x00', &(0x7f0000000b40)=@known='com.apple.FinderInfo\x00', &(0x7f0000000b80)=""/227, 0xe3)
openat(0xffffffffffffffff, &(0x7f0000000c80)='./file0\x00', 0x40400, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5104
remove dir: /root/beegfs-client/dfs-0-11
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-12 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-12
receive_execute: 1, 8
receive_execute: 2, 8
receive_execute: 3, 8
receive_execute: 5, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 57738, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 57738, flag collect 0
----- executor 3 signal number : 535
----- completed 1
execute_call 0, 25, 0, 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 11
----- directly resend shmid 11
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 53, 0
execute_one time: 1, 53
----- executor 3 write_call_output, size 35929, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 35929, flag collect 0
----- executor 3 signal number : 6
----- completed 2
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 33950, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 33950, flag collect 0
----- executor 3 signal number : 3518
----- completed 3
execute_call 0, 5250, 0, 1
execute_one loop: 0, 0, 5251
cover_reset in execute_call
----- executor 3 write_call_output, size 6094, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6094, flag collect 0
----- executor 3 signal number : 309
----- completed 4
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3343, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3343, flag collect 0
----- executor 3 signal number : 60
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 21
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 501, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 501, flag collect 0
----- executor 3 signal number : 21
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9506, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 9506, flag collect 0
----- executor 3 signal number : 762
----- completed 9
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 2994, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2994, flag collect 0
----- executor 3 signal number : 177
----- completed 10
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 358
----- completed 11
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 2879, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2879, flag collect 0
----- executor 3 signal number : 80
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3947, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3947, flag collect 0
----- executor 3 signal number : 91
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 160, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 3 signal number : 16
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 0
----- executor 3 signal number : 121
----- completed 15
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 5
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3401, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3401, flag collect 0
----- executor 3 signal number : 72
----- completed 17
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 8
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 342, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 3 signal number : 56
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3321, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3321, flag collect 0
----- executor 3 signal number : 72
----- completed 21
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 459, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 78
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 5329, 1
execute_one time: 1, 5331
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 13, 5335, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1610, flag collect 0
----- executor 2 signal number : 693
----- executor 2 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 209
----- executor 2 executes write_coverage_signal cov->size 269, flag collect 0
----- executor 2 signal number : 175
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 32
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 1649, flag collect 0
----- executor 2 signal number : 805
----- executor 2 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 2 signal number : 39
----- executor 2 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 2 signal number : 21
executor 2 server cover_cnt 9 output_pos_value 2019
----- executor 0 signal number : 1456
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 0
----- executor 0 signal number : 893
----- executor 0 executes write_coverage_signal cov->size 1097, flag collect 0
----- executor 0 signal number : 243
----- executor 0 executes write_coverage_signal cov->size 1632, flag collect 0
----- executor 0 signal number : 241
----- executor 0 executes write_coverage_signal cov->size 97, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 1004, flag collect 0
----- executor 0 signal number : 517
----- executor 0 executes write_coverage_signal cov->size 1083, flag collect 0
----- executor 1 signal number : 2506
----- executor 1 executes write_coverage_signal cov->size 855, flag collect 0
----- executor 1 signal number : 673
----- executor 0 signal number : 480
----- executor 0 executes write_coverage_signal cov->size 67, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 0 signal number : 569
----- executor 0 executes write_coverage_signal cov->size 338, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 2296, flag collect 0
----- executor 0 signal number : 312
----- executor 1 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 1770, flag collect 0
executor 0 server cover_cnt 11 output_pos_value 4773
----- executor 1 signal number : 131
----- executor 1 executes write_coverage_signal cov->size 1606, flag collect 0
----- executor 1 signal number : 106
----- executor 1 executes write_coverage_signal cov->size 304, flag collect 0
----- executor 1 signal number : 175
----- executor 1 executes write_coverage_signal cov->size 109, flag collect 0
----- executor 1 signal number : 25
----- executor 1 executes write_coverage_signal cov->size 3994, flag collect 0
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 1651
----- executor 1 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 1 signal number : 26
----- executor 1 executes write_coverage_signal cov->size 4289, flag collect 0
----- executor 1 signal number : 1631
----- executor 1 executes write_coverage_signal cov->size 4225, flag collect 0
----- executor 1 signal number : 697
----- executor 1 executes write_coverage_signal cov->size 3497, flag collect 0
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 423
----- executor 1 executes write_coverage_signal cov->size 5115, flag collect 0
----- executor 1 signal number : 1664
----- executor 1 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 1 signal number : 26
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 24 output_pos_value 10004
time breakdown 2: 10, 5337, 0
before receive testcase: 0 0
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:32 wg wait finish
2023/03/25 14:43:32 ------ all executors finish execution
2023/03/25 14:43:32 exec time: 5350
2023/03/25 14:43:32 ----- PS len: 4
2023/03/25 14:43:32 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:32 fuzzer receive 535 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 3518 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 309 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 762 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/25 14:43:32 [SERVER] executor 0 has 11 replies
2023/03/25 14:43:32 [SERVER] executor 2 has 9 replies
2023/03/25 14:43:32 [SERVER] executor 1 has 24 replies
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 1456 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 893 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 243 signal and 0 cover from userspace component
2023/03/25 14:43:32 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 241 signal and 0 cover from userspace component
2023/03/25 14:43:32 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:43:32 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 517 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 480 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 569 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 0 receive 312 signal and 0 cover from userspace component
time breakdown 1: 9, 5342, 0
before receive testcase: 0 0
2023/03/25 14:43:32 fuzzer receive 121 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 72 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 72 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 78 signal and 0 cover from executor 3
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 693 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 209 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 175 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 32 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 805 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 2506 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 673 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 39 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 21 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 131 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 106 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 175 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 25 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 1651 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 1631 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 697 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 423 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 1664 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
time breakdown 0: 11, 5338, 0
before receive testcase: 0 0
2023/03/25 14:43:32 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:32 ----- no new client coverage: false, true
2023/03/25 14:43:32 mutate testcase with failures
2023/03/25 14:43:32 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:32 disable threaded and collide
2023/03/25 14:43:32 prog length: 6
2023/03/25 14:43:32 prog length: 22
2023/03/25 14:43:32 HasCrashFail:true HasNetFail:false
14:43:32 ---executing program 0:
---
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x6)
fremovexattr(0xffffffffffffffff, &(0x7f0000000000)=@random={'system.', '}\x00'})
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000540)=ANY=[@ANYBLOB="922737544affaa0922a80a57c129d4a04e1b09b5529eddec66a826585829d0bc7562bf9244954622be931035356af490241484e513910512ea4d4d3254a223e87b136ca25558f37e526c8058bf8d0641c3f2fad58d5bd24d7421248c25e59d64eaf24b9ddca0"], 0x3, 0x1)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f00000000c0), &(0x7f0000000100)=@sha1={0x1, "65c3dba16dc17c7a97b1f019978a699fcaa5f12a"}, 0x15, 0x2)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$security_ima(r0, &(0x7f0000000140), &(0x7f0000000180)=@sha1={0x1, "85f24ec13b0f589b4e194185a0ce9daa729a727f"}, 0x15, 0x3)
fsetxattr$trusted_overlay_opaque(r0, &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x6)
r1 = dup(0xffffffffffffffff)
r2 = open(&(0x7f0000000240)='./file0\x00', 0x2040, 0x122)
fsetxattr$smack_xattr_label(r2, &(0x7f0000000280)='security.SMACK64IPOUT\x00', &(0x7f00000002c0)={'\x85'}, 0x2, 0x3)
syz_failure_sync(0x0, 0x3)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000300)='security.SMACK64IPOUT\x00', &(0x7f0000000340)={'}\x00'}, 0x3, 0x2)
syz_failure_sync(0x1, 0x3)
fcntl$setsig(r1, 0xa, 0xf)
r3 = dup2(r2, r2)
fsetxattr$user(r3, &(0x7f0000000380), &(0x7f00000003c0)='security.SMACK64EXEC\x00', 0x15, 0x2)
fcntl$notify(r1, 0x402, 0x80000008)
r4 = open(&(0x7f0000000400)='./file0\x00', 0x4a042, 0x0)
sendfile(r1, r4, &(0x7f0000000440)=0x8, 0x200)
fcntl$setstatus(r0, 0x4, 0x42000)
fstat(r3, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fsetxattr$system_posix_acl(r3, &(0x7f0000000480)='system.posix_acl_access\x00', &(0x7f0000000680)={{}, {}, [{0x2, 0x1, r5}, {0x2, 0x3}, {0x2, 0x4}], {0x4, 0x6}, [{0x8, 0x6}], {0x10, 0x8}, {0x20, 0x2}}, 0x44, 0x3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4912
remove dir: /root/beegfs-client/dfs-0-12
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
receive_execute: 10, 14
receive_execute: 10, 14
mkdir time 8
executor 3 create dir /root/beegfs-client/dfs-0-13 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-13
receive_execute: 12, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 19
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 10582, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 10582, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 2535
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
----- executor 3 write_call_output, size 307, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 119
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 2 write_server_output
cover_reset in execute_call
executor 3 waits for recv msg
executor 2 server cover_cnt 0 output_pos_value 1
receive_execute: 5, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
/root/beegfs-node-down.sh: 1: kill: No such process

-----executor 2 collect shmids 9
----- directly resend shmid 9
execute_call 0, 25, 0, 0
execute_one loop: 0, 0, 25
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 54300, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 54300, flag collect 0
----- executor 3 signal number : 480
----- completed 11
execute_call 0, 25, 0, 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 2 collect shmids 17
----- directly resend shmid 17
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 16
----- directly resend shmid 16
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 2 collect shmids 21
----- directly resend shmid 21
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 15
----- directly resend shmid 15
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 14
----- directly resend shmid 14
----- executor 3 write_call_output, size 91040, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 91040, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_call 0, 42, 0, 1
execute_one loop: 0, 0, 43
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 3
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 363, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 363, flag collect 0
----- executor 3 signal number : 32
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 67, 0
execute_one time: 4, 68
----- executor 3 write_call_output, size 6989, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6989, flag collect 0
----- executor 3 signal number : 233
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 86, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 3 signal number : 28
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3025, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3025, flag collect 0
----- executor 3 signal number : 218
----- completed 21
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 461, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 6
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 91, 4
execute_one time: 1, 95
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 680, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 5565, flag collect 0
----- executor 2 signal number : 1895
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 1 signal number : 3030
----- executor 1 executes write_coverage_signal cov->size 2440, flag collect 0
----- executor 1 signal number : 1070
----- executor 1 executes write_coverage_signal cov->size 2645, flag collect 0
----- executor 1 signal number : 239
----- executor 1 executes write_coverage_signal cov->size 1613, flag collect 0
----- executor 1 signal number : 259
----- executor 2 signal number : 24
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 8
executor 1 server cover_cnt 5 output_pos_value 4693
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 20
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 2 signal number : 12
executor 2 server cover_cnt 17 output_pos_value 2023
time breakdown 0: 24, 100, 0
before receive testcase: 0 1
time breakdown 2: 24, 103, 0
before receive testcase: 0 1
time breakdown 3: 27, 98, 0
before receive testcase: 0 1
time breakdown 1: 20, 101, 0
before receive testcase: 0 1
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:43:32 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:32 for select break: 1
2023/03/25 14:43:32 --------- executor 3 receive reply, reply.done 1
2023/03/25 14:43:32 wg wait finish
2023/03/25 14:43:32 ------ all executors finish execution
2023/03/25 14:43:32 exec time: 122
2023/03/25 14:43:32 ----- PS len: 4
2023/03/25 14:43:32 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:32 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 [SERVER] executor 1 has 5 replies
2023/03/25 14:43:32 [SERVER] executor 2 has 17 replies
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 1895 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 20 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 3030 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 1070 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 239 signal and 0 cover from userspace component
2023/03/25 14:43:32 ------- fuzzer executor 1 receive 259 signal and 0 cover from userspace component
2023/03/25 14:43:32 [SERVER] executor 0 has 0 replies
2023/03/25 14:43:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 2535 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 233 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 218 signal and 0 cover from executor 3
2023/03/25 14:43:32 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:32 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:32 ----- no new client coverage: false, true
-----executor 2 collect shmids 1
----- directly resend shmid 1
2023/03/25 14:43:32 mutate testcase with failures
2023/03/25 14:43:32 ----- insertCall()
2023/03/25 14:43:32 ----- mutateArg()
2023/03/25 14:43:32 ----- insertCall()
2023/03/25 14:43:32 ----- mutateArg()
2023/03/25 14:43:32 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:32 disable threaded and collide
2023/03/25 14:43:32 prog length: 6
2023/03/25 14:43:32 prog length: 22
2023/03/25 14:43:32 HasCrashFail:true HasNetFail:false
14:43:32 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fcntl$notify(0xffffffffffffffff, 0x402, 0x80000000)
fstat(0xffffffffffffffff, &(0x7f0000000000)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchown(0xffffffffffffffff, 0xffffffffffffffff, r0)
fsetxattr$security_selinux(0xffffffffffffffff, &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:usbmon_device_t:s0\x00', 0x25, 0x1)
fsetxattr$security_evm(0xffffffffffffffff, &(0x7f0000000100), &(0x7f0000000140)=@ng={0x4, 0x5, "5a9533049a22fda1cb"}, 0xb, 0x5)
r1 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$setstatus(r1, 0x4, 0x2000)
fsetxattr$security_evm(r1, &(0x7f0000000180), &(0x7f00000001c0)=@md5={0x1, "f3da08ee8f1ee8d952a9ab1b9d5ea296"}, 0x11, 0x2)
r2 = dup2(r1, r1)
fsetxattr$security_selinux(r2, &(0x7f0000000200), &(0x7f0000000240)='system_u:object_r:system_cron_spool_t:s0\x00', 0x29, 0x2)
fdatasync(r2)
r3 = dup(r1)
close(r3)
fcntl$F_SET_FILE_RW_HINT(r3, 0x40e, &(0x7f0000000280)=0x4)
fcntl$getflags(r1, 0x40b)
r4 = open(&(0x7f0000000340)='./file0\x00', 0x301c03, 0xd9)
fsetxattr$trusted_overlay_upper(r4, &(0x7f0000000300), &(0x7f0000000680)={0x0, 0xfb, 0x105, 0x6, 0x7, "fd00", "8259dfa09a3d7d5f86b2d829aeba397bed6c02b78c490f928bb47a64d573ab44bca95fbfd389182dcfaf67f7dacd53b4b466a71f8a68641d621704c1e033092359bdf6177844cd57f0e6c154358d57c8cff990a09acf2d0be99fdde4932b6367be71d692ab86405af6bb3aa3f08dbd41ad357137725196fc5485a404cbd1aac62b16595b0fce16ea3b5a7979d0aa61f9dbcbf43afafeafcc6e4660fa8345e5bc7b06ee7dbe1e3f18d3cf9d086320434800258ec9b454426cac5487cd39e8166e745ddd67d6e26dd49563438f4b2bbe30e569a8e0b18029d5cb2ea46f0fc72c64622755f94b99540d01858caada69543d"}, 0x105, 0x0)
write$binfmt_elf32(r2, &(0x7f0000000480)={{0x7f, 0x45, 0x4c, 0x46, 0x3, 0x5, 0x8, 0x0, 0x8541, 0x2, 0x0, 0x49bd, 0x2ff, 0x38, 0x330, 0xb90, 0x1ff, 0x20, 0x1, 0x3, 0x907, 0x1000}, [{0x70000000, 0x80000001, 0x8000, 0x4, 0x1ff, 0xffffffff, 0x7fff, 0xdc}], "79f8a86993e67616d873406196a6a9678fad75935b4e9d725f77b11f381c79cb763e57680c22da6e309ab79ee849798c608b533eca7eae9a5cf88f52d3fde20bdf087086f89f8a7d8638bf67915957d825dd05df5fdc4f94f85a51268fc21383b2132b9bacf43242d2346e918718d5d6927244e78f961524252a018f921452d24fd0df192b259222d3dc4fbbf421250f0bd24596045381a8b0c219f042308febf2515405282b46d481a7f0cca5f10964dd84ba6c324da71c39d71ecace7c758fbf12519aafb059be261c67e9679d1b55d55f5627632cd446142d54b313cbdd1f04eb7e33b768fa1d"}, 0x140)
r5 = dup(r3)
pwrite64(r5, &(0x7f00000005c0)="66f91c5b7562c4fb65c8b1f4d5e9dd3d9811b65cc95b974b7e2d474f984f553baca4303b105b26474337bdb95f323933309ec2df70900faf2452b6984e2346c5cafbeedc65d45980ebddf687a8c46e827a6c06bfba682c58f2daf6f3ace171195b27e7319a33869452d7d5aa7425c0d7d3dade17cc2d7e40d1a1f22cff6b4afd9662157c6fb715e2892ad4def13b16634e0c3c98", 0x94, 0x6)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5320
remove dir: /root/beegfs-client/dfs-0-13
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 5
-----finish removing dir
mkdir time 10
executor 3 create dir /root/beegfs-client/dfs-0-14 successfully
receive_execute: 11, 15
receive_execute: 9, 16
receive_execute: 8, 15
current dir: executor 3: /root/beegfs-client/dfs-0-14
receive_execute: 12, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 0 signal number : 39
----- executor 0 executes write_coverage_signal cov->size 213, flag collect 0
----- executor 0 signal number : 76
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 0 signal number : 39
----- executor 0 executes write_coverage_signal cov->size 242, flag collect 0
----- executor 0 signal number : 207
----- executor 0 executes write_coverage_signal cov->size 227, flag collect 0
----- executor 0 signal number : 114
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 0 signal number : 6
executor 0 server cover_cnt 6 output_pos_value 500
-----executor 2 collect shmids 2
----- directly resend shmid 2
execute_call 0, 39, 0, 0
execute_one loop: 0, 0, 40
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 95444, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 95444, flag collect 0
----- executor 3 signal number : 567
----- completed 1
execute_call 0, 39, 0, 2
execute_one loop: 0, 0, 41
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2983, 0, 0
execute_one loop: 0, 0, 2983
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3025, 0
execute_one time: 1, 3026
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2984, 0, 4
execute_one loop: 0, 0, 2988
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 8
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 8
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6236, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6236, flag collect 0
----- executor 3 signal number : 2000
----- completed 18
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 3
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 462, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 6
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3045, 0
execute_one time: 1, 3046
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1522, flag collect 0
----- executor 0 signal number : 1115
----- executor 0 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 584, flag collect 0
----- executor 0 signal number : 265
----- executor 0 executes write_coverage_signal cov->size 230, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2691, flag collect 0
----- executor 2 signal number : 1260
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 24
----- executor 2 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 2 signal number : 49
----- executor 2 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 44, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 76, flag collect 0
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 5487, flag collect 0
2023/03/25 14:43:35 for select break: 1
2023/03/25 14:43:35 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 586
----- executor 0 executes write_coverage_signal cov->size 67, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 1244
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 25
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 2 signal number : 10
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 178, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 255, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 0 signal number : 7
executor 0 server cover_cnt 17 output_pos_value 2562
----- executor 1 signal number : 84
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 1 signal number : 42
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 882, flag collect 0
----- executor 1 signal number : 688
----- executor 1 executes write_coverage_signal cov->size 802, flag collect 0
----- executor 1 signal number : 417
executor 2 server cover_cnt 21 output_pos_value 2724
executor 1 server cover_cnt 8 output_pos_value 1344
2023/03/25 14:43:35 for select break: 1
2023/03/25 14:43:35 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:43:35 for select break: 1
2023/03/25 14:43:35 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:35 for select break: 1
2023/03/25 14:43:35 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:35 wg wait finish
2023/03/25 14:43:35 ------ all executors finish execution
2023/03/25 14:43:35 exec time: 3068
2023/03/25 14:43:35 ----- PS len: 4
2023/03/25 14:43:35 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:35 fuzzer receive 567 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 6 signal and 0 cover from executor 3
time breakdown 0: 26, 3052, 0
2023/03/25 14:43:35 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 2000 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:35 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:35 [SERVER] executor 0 has 17 replies
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 39 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 39 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 14:43:35 [SERVER] executor 1 has 8 replies
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 688 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 1 receive 417 signal and 0 cover from userspace component
time breakdown 1: 25, 3052, 0
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 207 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 114 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 1115 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 265 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 586 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 14:43:35 [SERVER] executor 2 has 21 replies
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 1260 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 49 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 1244 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 25 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:35 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/25 14:43:35 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:35 ----- no new client coverage: false, true
2023/03/25 14:43:35 mutate testcase with failures
2023/03/25 14:43:35 ----- insertCall()
2023/03/25 14:43:35 ----- insertCall()
2023/03/25 14:43:35 ----- insertCall()
2023/03/25 14:43:35 ----- mutateArg()
2023/03/25 14:43:35 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:35 disable threaded and collide
2023/03/25 14:43:35 prog length: 6
2023/03/25 14:43:35 prog length: 22
2023/03/25 14:43:35 HasCrashFail:true HasNetFail:false
14:43:35 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fchmod(0xffffffffffffffff, 0xa5)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x41, 0x2)
syz_failure_sync(0x0, 0x3)
fcntl$addseals(r0, 0x409, 0x0)
r1 = dup(r0)
fcntl$setstatus(r1, 0x4, 0x0)
flock(r0, 0xf)
write$binfmt_elf32(r0, &(0x7f0000000040)={{0x7f, 0x45, 0x4c, 0x46, 0x8, 0xd7, 0x9, 0xe, 0x627, 0x2, 0x3e, 0x3, 0x38e, 0x38, 0x40, 0xffff, 0xffff, 0x20, 0x2, 0x5, 0x1, 0x8}, [{0x1, 0x8809, 0x7, 0x41dd, 0x2a4d374a, 0x2, 0x1c9, 0x81}], "b01b669ce1868233f836382e7363ba1d63daaacf0a580438c6998058065875cc62e7b2a2c884bc53dc87f7280366579b814a75d798d302223f3f0c317fa0106e036f6cc2c6cee065789f46a70f054addf823547b962f8d7d7b3c5d85229baed49c57b6886ae288870cb77195dac14f1402b64bfaf7c0f6126a00dc471ba06c9f1e16fed7a615c3b30c7acc3a9db0b506ebf83c865c8e515ff7a2715d446c39ffbcfbbb4d7b134c75bd41b615ae43307d32fec42407840e76f86e4d09e3cc5c4dc0649d7d8aad92b8342cd08749976fd8a1e6ce80142e699de8862c08055aa21e408a1f789953d269bbbf1d0184273b01ad91", ['\x00', '\x00', '\x00', '\x00', '\x00']}, 0x64a)
r2 = dup2(r1, r0)
write$binfmt_misc(r2, &(0x7f00000006c0)={'syz1', "1eb4cdf50f1bbd8df361be2ccff539046dd1df9f83319074db7050dd72747020773fca64a5c7938de28a0ccc86919151e48d7c07d09bf97f92ddd5f71567b19f6d1e4746fb47b5a45096d8c966a71dcc7d64f74a78fb60b6f9d643fe86ab4471b04509a0429084a2674fa1ec2f0480785efb243a0b7de4811b5961b76d5eb390a3b1bca3daa5b5100582bac5d315960d"}, 0x94)
preadv(r2, &(0x7f0000000940)=[{&(0x7f0000000780)=""/224, 0xe0}, {&(0x7f0000000880)=""/174, 0xae}], 0x2, 0x80000001, 0x1)
fsetxattr(r1, &(0x7f0000000980)=ANY=[@ANYBLOB="6274727e731900"], &(0x7f00000009c0)='-#\x00', 0x3, 0x3)
r3 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x40000, 0x20)
write$binfmt_misc(r3, &(0x7f0000000a40)={'syz0', "453b44f711a7dad46323"}, 0xe)
r4 = openat(r2, &(0x7f0000000a80)='./file0\x00', 0x200, 0x0)
fcntl$getflags(r4, 0xb)
fcntl$setpipe(r3, 0x407, 0x29000000)
fsetxattr$security_capability(r0, &(0x7f0000000ac0), &(0x7f0000000b00)=@v1={0x1000000, [{0x9, 0x2}]}, 0xc, 0x1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f0000000b40))
syz_failure_sync(0x1, 0x3)
fgetxattr(r3, &(0x7f0000000b80)=@random={'osx.', 'security.capability\x00'}, &(0x7f0000000bc0)=""/252, 0xfc)
fsetxattr$security_selinux(r1, &(0x7f0000000cc0), &(0x7f0000000d00)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x1)
---

end of program
time breakdown 2: 23, 3052, 0
before receive testcase: 0 0
----- executor 2 receive testcase
time breakdown 3: 28, 3050, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6616
remove dir: /root/beegfs-client/dfs-0-14
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 2
-----finish removing dir
receive_execute: 1, 9
receive_execute: 2, 8
receive_execute: 2, 8
mkdir time 7
executor 3 create dir /root/beegfs-client/dfs-0-15 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-15
receive_execute: 4, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 20
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9619, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 9619, flag collect 0
----- executor 3 signal number : 2487
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 9119, flag collect 0
----- executor 0 signal number : 1980
executor 0 server cover_cnt 1 output_pos_value 1984
execute_call 0, 45, 0, 1
execute_one loop: 0, 0, 46
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 94835, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 94835, flag collect 0
----- executor 3 signal number : 503
----- completed 3
execute_call 0, 46, 0, 2
execute_one loop: 0, 0, 48
cover_reset in execute_call
----- executor 3 write_call_output, size 49, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 3 signal number : 34
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 57, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 57, flag collect 0
----- executor 3 signal number : 18
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 45, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 45, flag collect 0
----- executor 3 signal number : 13
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 30, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 3 signal number : 13
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 370, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 370, flag collect 0
----- executor 3 signal number : 139
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 25237, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 25237, flag collect 0
----- executor 3 signal number : 2488
----- completed 9
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 368, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 368, flag collect 0
----- executor 3 signal number : 18
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 61, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 3 signal number : 35
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 355, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 3 signal number : 123
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6499, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6499, flag collect 0
----- executor 3 signal number : 371
----- completed 13
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 33, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 33, flag collect 0
----- executor 3 signal number : 4
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 417, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 417, flag collect 0
----- executor 3 signal number : 74
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 36, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 3 signal number : 5
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 206, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 3 signal number : 13
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 3009, 0, 0
execute_one loop: 0, 0, 3009
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3069, 0
execute_one time: 1, 3069
----- executor 3 write_call_output, size 262143, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 20
----- completed 20
execute_call 0, 3009, 0, 4
execute_one loop: 0, 0, 3013
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 48
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 220, pid 463, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 7
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3073, 5
execute_one time: 1, 3078
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 27388, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
----- executor 1 signal number : 64
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 767, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 603, flag collect 0
2023/03/25 14:43:38 for select break: 1
2023/03/25 14:43:38 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 84
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 4323
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 38
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2668, flag collect 0
----- executor 0 signal number : 436
----- executor 0 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 0
----- executor 0 signal number : 559
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 49
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 17
executor 0 server cover_cnt 12 output_pos_value 7472
----- executor 1 signal number : 1641
----- executor 1 executes write_coverage_signal cov->size 3569, flag collect 0
----- executor 1 signal number : 1481
----- executor 1 executes write_coverage_signal cov->size 1612, flag collect 0
----- executor 2 signal number : 629
----- executor 2 executes write_coverage_signal cov->size 761, flag collect 0
----- executor 2 signal number : 146
----- executor 2 executes write_coverage_signal cov->size 533, flag collect 0
----- executor 2 signal number : 177
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 2 signal number : 30
----- executor 2 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 1 signal number : 556
----- executor 1 executes write_coverage_signal cov->size 2510, flag collect 0
2023/03/25 14:43:38 for select break: 1
2023/03/25 14:43:38 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 224
time breakdown 3: 13, 3082, 0
before receive testcase: 0 1
executor 1 server cover_cnt 10 output_pos_value 4126
2023/03/25 14:43:38 for select break: 1
2023/03/25 14:43:38 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:38 for select break: 1
2023/03/25 14:43:38 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:38 wg wait finish
2023/03/25 14:43:38 ------ all executors finish execution
2023/03/25 14:43:38 exec time: 3095
2023/03/25 14:43:38 ----- PS len: 4
time breakdown 0: 10, 3087, 0
2023/03/25 14:43:38 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:38 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 2487 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 503 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 2488 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 371 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 74 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/25 14:43:38 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:38 [SERVER] executor 0 has 12 replies
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 1980 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 4323 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 38 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 436 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 559 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 49 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:43:38 [SERVER] executor 1 has 10 replies
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:43:38 [SERVER] executor 2 has 13 replies
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 629 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 146 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 177 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 1641 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 143 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 1481 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 556 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 969 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 1 receive 224 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/25 14:43:38 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 1: 10, 3086, 0
before receive testcase: 0 0
----- executor 2 signal number : 143
----- executor 2 executes write_coverage_signal cov->size 92, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 2035, flag collect 0
----- executor 2 signal number : 969
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 508, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 487, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 674, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 2 signal number : 6
executor 2 server cover_cnt 13 output_pos_value 2849
time breakdown 2: 11, 3084, 0
before receive testcase: 0 0
2023/03/25 14:43:38 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:38 ----- no new client coverage: false, true
2023/03/25 14:43:38 ----- enqueue testcases with server coveraged
2023/03/25 14:43:38 disable threaded and collide
2023/03/25 14:43:38 prog length: 6
2023/03/25 14:43:38 prog length: 22
2023/03/25 14:43:38 HasCrashFail:true HasNetFail:false
14:43:38 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
fchmod(0xffffffffffffffff, 0xa5)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x41, 0x2)
syz_failure_sync(0x0, 0x3)
fcntl$addseals(r0, 0x409, 0x0)
r1 = dup(r0)
fcntl$setstatus(r1, 0x4, 0x0)
flock(r0, 0xf)
write$binfmt_elf32(r0, &(0x7f0000000040)={{0x7f, 0x45, 0x4c, 0x46, 0x8, 0xd7, 0x9, 0xe, 0x627, 0x2, 0x3e, 0x3, 0x38e, 0x38, 0x40, 0xffff, 0xffff, 0x20, 0x2, 0x5, 0x1, 0x8}, [{0x1, 0x8809, 0x7, 0x41dd, 0x2a4d374a, 0x2, 0x1c9, 0x81}], "b01b669ce1868233f836382e7363ba1d63daaacf0a580438c6998058065875cc62e7b2a2c884bc53dc87f7280366579b814a75d798d302223f3f0c317fa0106e036f6cc2c6cee065789f46a70f054addf823547b962f8d7d7b3c5d85229baed49c57b6886ae288870cb77195dac14f1402b64bfaf7c0f6126a00dc471ba06c9f1e16fed7a615c3b30c7acc3a9db0b506ebf83c865c8e515ff7a2715d446c39ffbcfbbb4d7b134c75bd41b615ae43307d32fec42407840e76f86e4d09e3cc5c4dc0649d7d8aad92b8342cd08749976fd8a1e6ce80142e699de8862c08055aa21e408a1f789953d269bbbf1d0184273b01ad91", ['\x00', '\x00', '\x00', '\x00', '\x00']}, 0x64a)
r2 = dup2(r1, r0)
write$binfmt_misc(r2, &(0x7f00000006c0)={'syz1', "1eb4cdf50f1bbd8df361be2ccff539046dd1df9f83319074db7050dd72747020773fca64a5c7938de28a0ccc86919151e48d7c07d09bf97f92ddd5f71567b19f6d1e4746fb47b5a45096d8c966a71dcc7d64f74a78fb60b6f9d643fe86ab4471b04509a0429084a2674fa1ec2f0480785efb243a0b7de4811b5961b76d5eb390a3b1bca3daa5b5100582bac5d315960d"}, 0x94)
preadv(r2, &(0x7f0000000940)=[{&(0x7f0000000780)=""/224, 0xe0}, {&(0x7f0000000880)=""/174, 0xae}], 0x2, 0x80000001, 0x1)
fsetxattr(r1, &(0x7f0000000980)=ANY=[@ANYBLOB="6274727e731900"], &(0x7f00000009c0)='-#\x00', 0x3, 0x3)
r3 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x40000, 0x20)
write$binfmt_misc(r3, &(0x7f0000000a40)={'syz0', "453b44f711a7dad46323"}, 0xe)
r4 = openat(r2, &(0x7f0000000a80)='./file0\x00', 0x200, 0x0)
fcntl$getflags(r4, 0xb)
fcntl$setpipe(r3, 0x407, 0x29000000)
fsetxattr$security_capability(r0, &(0x7f0000000ac0), &(0x7f0000000b00)=@v1={0x1000000, [{0x9, 0x2}]}, 0xc, 0x1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f0000000b40))
syz_failure_sync(0x1, 0x3)
fgetxattr(r3, &(0x7f0000000b80)=@random={'osx.', 'security.capability\x00'}, &(0x7f0000000bc0)=""/252, 0xfc)
fsetxattr$security_selinux(r1, &(0x7f0000000cc0), &(0x7f0000000d00)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 6616
remove dir: /root/beegfs-client/dfs-0-15
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 10
-----finish removing dir
mkdir time 8
executor 3 create dir /root/beegfs-client/dfs-0-16 successfully
receive_execute: 5, 19
receive_execute: 7, 19
current dir: executor 3: /root/beegfs-client/dfs-0-16
receive_execute: 10, 19
receive_execute: 9, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 1
----- executor 3 cover number : 20, signal number : 20
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9717, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 9717, flag collect 1
----- executor 3 cover number : 2362, signal number : 2538
----- completed 2
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1251, flag collect 1
----- executor 0 cover number : 831, signal number : 878
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 0 cover number : 36, signal number : 37
----- executor 0 executes write_coverage_signal cov->size 229, flag collect 1
----- executor 0 cover number : 228, signal number : 199
executor 0 server cover_cnt 3 output_pos_value 2219
execute_call 0, 32, 0, 0
execute_one loop: 0, 0, 32
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 75041, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 75041, flag collect 1
----- executor 3 cover number : 543, signal number : 487
----- completed 3
execute_call 0, 32, 0, 10
execute_one loop: 0, 0, 42
cover_reset in execute_call
----- executor 3 write_call_output, size 49, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 49, flag collect 1
----- executor 3 cover number : 49, signal number : 34
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 57, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 57, flag collect 1
----- executor 3 cover number : 53, signal number : 18
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 45, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 45, flag collect 1
----- executor 3 cover number : 45, signal number : 13
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 30, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 30, flag collect 1
----- executor 3 cover number : 30, signal number : 13
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 370, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 370, flag collect 1
----- executor 3 cover number : 251, signal number : 139
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4791, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4791, flag collect 1
----- executor 3 cover number : 1654, signal number : 523
----- completed 9
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 368, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 368, flag collect 1
----- executor 3 cover number : 250, signal number : 5
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 61, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 61, flag collect 1
----- executor 3 cover number : 55, signal number : 35
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 355, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 355, flag collect 1
----- executor 3 cover number : 223, signal number : 123
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6462, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6462, flag collect 1
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 cover number : 2054, signal number : 270
----- completed 13
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 33, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 33, flag collect 1
----- executor 3 cover number : 33, signal number : 3
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 417, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 417, flag collect 1
----- executor 3 cover number : 192, signal number : 72
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 1
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 36, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 3 cover number : 36, signal number : 4
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 206, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 206, flag collect 1
----- executor 3 cover number : 90, signal number : 11
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 1
----- executor 3 cover number : 19, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 2976, 0, 0
execute_one loop: 0, 0, 2976
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3034, 0
execute_one time: 2, 3034
----- executor 3 write_call_output, size 262143, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 1
----- executor 3 cover number : 341, signal number : 12
----- completed 20
execute_call 0, 2977, 0, 52
execute_one loop: 0, 0, 3029
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 1
----- executor 3 cover number : 183, signal number : 45
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 220, pid 464, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 1
----- executor 3 cover number : 104, signal number : 7
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3082, 2
execute_one time: 5, 3084
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2575, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1546, flag collect 1
time breakdown 3: 30, 3094, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 603, flag collect 1
----- executor 0 cover number : 1722, signal number : 1212
----- executor 0 executes write_coverage_signal cov->size 144, flag collect 1
----- executor 1 cover number : 81, signal number : 84
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 1
----- executor 1 cover number : 42, signal number : 42
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 6, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 2255, flag collect 1
----- executor 0 cover number : 101, signal number : 40
----- executor 0 executes write_coverage_signal cov->size 990, flag collect 1
----- executor 0 cover number : 528, signal number : 345
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1265, signal number : 1343
----- executor 1 executes write_coverage_signal cov->size 1612, flag collect 1
----- executor 2 cover number : 608, signal number : 634
----- executor 2 executes write_coverage_signal cov->size 400, flag collect 1
----- executor 2 cover number : 101, signal number : 107
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 2 cover number : 4, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 1
----- executor 1 cover number : 1052, signal number : 594
----- executor 1 executes write_coverage_signal cov->size 2510, flag collect 1
----- executor 2 cover number : 13, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 1
----- executor 1 cover number : 1496, signal number : 785
----- executor 1 executes write_coverage_signal cov->size 3569, flag collect 1
----- executor 1 cover number : 2243, signal number : 853
----- executor 2 cover number : 18, signal number : 18
----- executor 2 executes write_coverage_signal cov->size 1816, flag collect 1
----- executor 2 cover number : 950, signal number : 980
----- executor 2 executes write_coverage_signal cov->size 512, flag collect 1
----- executor 2 cover number : 456, signal number : 319
----- executor 2 executes write_coverage_signal cov->size 487, flag collect 1
----- executor 2 cover number : 420, signal number : 49
----- executor 2 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 2 cover number : 605, signal number : 295
executor 1 server cover_cnt 9 output_pos_value 9954
executor 2 server cover_cnt 9 output_pos_value 5623
2023/03/25 14:43:42 for select break: 1
2023/03/25 14:43:42 --------- executor 3 receive reply, reply.done 1
2023/03/25 14:43:42 for select break: 1
2023/03/25 14:43:42 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:42 for select break: 1
2023/03/25 14:43:42 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 26, 3100, 0
before receive testcase: 0 0
----- executor 0 cover number : 1450, signal number : 1740
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 0 cover number : 53, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 1317, flag collect 1
----- executor 0 cover number : 780, signal number : 614
----- executor 0 executes write_coverage_signal cov->size 121, flag collect 1
time breakdown 1: 24, 3099, 0
before receive testcase: 0 0
----- executor 0 cover number : 80, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 120, flag collect 1
----- executor 0 cover number : 82, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 1
----- executor 0 cover number : 38, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 1
----- executor 0 cover number : 54, signal number : 0
executor 0 server cover_cnt 13 output_pos_value 11110
2023/03/25 14:43:42 for select break: 1
2023/03/25 14:43:42 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:42 wg wait finish
2023/03/25 14:43:42 ------ all executors finish execution
2023/03/25 14:43:42 exec time: 3123
2023/03/25 14:43:42 ----- PS len: 4
2023/03/25 14:43:42 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:42 fuzzer receive 20 signal and 20 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 2538 signal and 2362 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 487 signal and 543 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 34 signal and 49 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 18 signal and 53 cover from executor 3
2023/03/25 14:43:42 [SERVER] executor 1 has 9 replies
2023/03/25 14:43:42 [SERVER] executor 2 has 9 replies
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 634 signal and 608 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 84 signal and 81 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 4 signal and 4 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 42 signal and 42 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 7 signal and 6 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 107 signal and 101 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 4 signal and 4 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 14 signal and 13 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 18 signal and 18 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 1343 signal and 1265 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 980 signal and 950 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 319 signal and 456 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 594 signal and 1052 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 49 signal and 420 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 785 signal and 1496 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 2 receive 295 signal and 605 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 1 receive 853 signal and 2243 cover from userspace component
2023/03/25 14:43:42 [SERVER] executor 0 has 13 replies
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 878 signal and 831 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 37 signal and 36 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 199 signal and 228 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 1212 signal and 1722 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 40 signal and 101 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 345 signal and 528 cover from userspace component
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 1740 signal and 1450 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 13 signal and 45 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 13 signal and 30 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 139 signal and 251 cover from executor 3
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 18 signal and 53 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 523 signal and 1654 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 5 signal and 250 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 35 signal and 55 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 123 signal and 223 cover from executor 3
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 614 signal and 780 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 270 signal and 2054 cover from executor 3
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 4 signal and 80 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 3 signal and 33 cover from executor 3
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 0 signal and 82 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 72 signal and 192 cover from executor 3
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 0 signal and 38 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 1 signal and 19 cover from executor 3
2023/03/25 14:43:42 ------- fuzzer executor 0 receive 0 signal and 54 cover from userspace component
2023/03/25 14:43:42 fuzzer receive 4 signal and 36 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 11 signal and 90 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 0 signal and 19 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 12 signal and 341 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 45 signal and 183 cover from executor 3
2023/03/25 14:43:42 fuzzer receive 7 signal and 104 cover from executor 3
2023/03/25 14:43:42 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:42 ----- triage return due to empty signal extra
time breakdown 0: 24, 3104, 0
before receive testcase: 0 0
2023/03/25 14:43:42 mutate testcase with failures
2023/03/25 14:43:42 ----- mutateArg()
2023/03/25 14:43:42 ----- insertCall()
2023/03/25 14:43:42 ----- insertCall()
2023/03/25 14:43:42 ----- mutateArg()
2023/03/25 14:43:42 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:42 disable threaded and collide
2023/03/25 14:43:42 prog length: 6
2023/03/25 14:43:42 prog length: 22
2023/03/25 14:43:42 HasCrashFail:true HasNetFail:false
14:43:42 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x20000, 0x13)
syz_failure_sync(0x0, 0x3)
rename(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
setxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=@md5={0x1, "a309a71f2df080695510a7cf1b5e0670"}, 0x11, 0x2)
r1 = open$dir(&(0x7f0000000180)='./file0\x00', 0x100, 0x40)
r2 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x2003, 0x16)
chdir(&(0x7f0000000200)='./file0\x00')
write$binfmt_script(r2, &(0x7f0000000240)={'#! ', './file0', [{0x20, 'security.evm\x00'}, {}, {0x20, '\\'}, {0x20, 'security.evm\x00'}], 0xa, "9c47b5849223ef08f2bf5a29d6a7a796787b306d307d8d66013230a7716a303664641f45d8def7d1d638e4187d79e33de06adb9de70b65e03a55e9d947c9d5533e9ede15a36d287bb5c2fa5b7731cde6564be99a5e58513886532c374cc2b787cc71f0ccf51e017a74dd37112be51b2af5a7c570c3ebf2fc9ca39b0a2667d9466bc8ea9cc24c8d88e1ec42b846890b1548b33616d95fcabf0e4108cfee7e4e6251f17418d8abbe7b3fb6f5c704a54caed901a4f5c85b61cc0e948de519395f41c2b4d7b47d39316966c47335426f1b80284627dc570a61af1b10d0ac487ca53b51ecb8285a"}, 0x10f)
setxattr$incfs_id(&(0x7f0000000380)='./file0/file0\x00', &(0x7f00000003c0), &(0x7f0000000400)={'0000000000000000000000000000000', 0x33}, 0x20, 0x2)
removexattr(&(0x7f0000000440)='./file0/file0/file0\x00', &(0x7f0000000480)=@random={'osx.', '\x00'})
setxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)=@known='trusted.overlay.redirect\x00', &(0x7f0000000540)='\\', 0x1, 0x2)
lsetxattr$trusted_overlay_origin(&(0x7f0000000580)='./file2\x00', &(0x7f00000005c0), &(0x7f0000000600), 0x2, 0x3)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000640), &(0x7f0000000680)='./file0/file0/file0\x00', 0x14, 0x1)
syz_failure_sync(0x1, 0x3)
chdir(&(0x7f00000006c0)='./file0/file0/file0\x00')
unlink(&(0x7f0000000700)='./file0/file0/file0/file0\x00')
linkat(r1, &(0x7f0000000740)='./file0/file0/file0/file0\x00', 0xffffffffffffff9c, &(0x7f0000000780)='./file0/file0/file0\x00', 0xe00)
fsetxattr$security_smack_transmute(r2, &(0x7f00000007c0), &(0x7f0000000800), 0x4, 0x1)
setxattr$trusted_overlay_nlink(&(0x7f0000000840)='./file0/file0\x00', &(0x7f0000000880), &(0x7f00000008c0)={'L+', 0x7f}, 0x16, 0x2)
setxattr$trusted_overlay_nlink(&(0x7f0000000900)='./file1\x00', &(0x7f0000000940), &(0x7f0000000980)={'L-', 0x3}, 0x16, 0x1)
r3 = openat(r0, &(0x7f00000009c0)='./file0/file0/file0/file0\x00', 0x408040, 0x100)
fchown(r3, 0xee01, 0xee00)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5104
remove dir: /root/beegfs-client/dfs-0-16
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 8
-----finish removing dir
receive_execute: 9, 15
mkdir time 8
executor 3 create dir /root/beegfs-client/dfs-0-17 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-17
receive_execute: 4, 15
receive_execute: 8, 16
receive_execute: 12, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 412, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 412, flag collect 0
----- executor 3 signal number : 198
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 75068, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 75068, flag collect 0
----- executor 3 signal number : 561
----- completed 2
execute_call 0, 33, 0, 1
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 3 write_call_output, size 3468, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3468, flag collect 0
----- executor 3 signal number : 1727
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 83
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 690, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 690, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 690, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 690, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 444, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 3 signal number : 6
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3244, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3244, flag collect 0
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 80
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 2948, 0, 0
execute_one loop: 0, 0, 2948
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 2987, 0
execute_one time: 0, 2988
----- executor 3 write_call_output, size 262143, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 4
----- completed 14
execute_call 0, 2948, 0, 5
execute_one loop: 0, 0, 2953
cover_reset in execute_call
----- executor 3 write_call_output, size 6177, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6177, flag collect 0
----- executor 3 signal number : 232
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3357, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3357, flag collect 0
----- executor 3 signal number : 40
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 445, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 445, flag collect 0
----- executor 3 signal number : 5
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3235, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3235, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 4
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 465, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2993, 0
execute_one time: 3, 2993
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 510, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 2 signal number : 30
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 69
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 1 signal number : 491
----- executor 1 executes write_coverage_signal cov->size 685, flag collect 0
----- executor 1 signal number : 407
----- executor 1 executes write_coverage_signal cov->size 1324, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 1543, flag collect 0
----- executor 1 signal number : 195
executor 1 server cover_cnt 10 output_pos_value 1314
2023/03/25 14:43:45 for select break: 1
2023/03/25 14:43:45 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:43:45 for select break: 1
2023/03/25 14:43:45 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:43:45 for select break: 1
2023/03/25 14:43:45 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 24, 3003, 0
before receive testcase: 0 0
time breakdown 2: 24, 3002, 0
before receive testcase: 0 0
time breakdown 3: 28, 3000, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 253, flag collect 0
----- executor 0 signal number : 228
----- executor 0 executes write_coverage_signal cov->size 1220, flag collect 0
----- executor 0 signal number : 880
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 681, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 0 signal number : 9
executor 0 server cover_cnt 12 output_pos_value 2128
2023/03/25 14:43:45 for select break: 1
2023/03/25 14:43:45 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:43:45 wg wait finish
2023/03/25 14:43:45 ------ all executors finish execution
2023/03/25 14:43:45 exec time: 3028
2023/03/25 14:43:45 ----- PS len: 4
2023/03/25 14:43:45 [CLIENT] executor 3 has 22 replies
2023/03/25 14:43:45 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 561 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 1727 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:43:45 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:43:45 [SERVER] executor 0 has 12 replies
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 228 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 880 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:43:45 [SERVER] executor 1 has 10 replies
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:43:45 [SERVER] executor 2 has 4 replies
2023/03/25 14:43:45 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 407 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/25 14:43:45 ------- fuzzer executor 1 receive 195 signal and 0 cover from userspace component
2023/03/25 14:43:45 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:43:45 ----- no new client coverage: false, true
2023/03/25 14:43:45 mutate testcase with failures
2023/03/25 14:43:45 ----- insertCall()
2023/03/25 14:43:45 ----- insertCall()
2023/03/25 14:43:45 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:43:45 disable threaded and collide
2023/03/25 14:43:45 prog length: 6
2023/03/25 14:43:45 prog length: 22
2023/03/25 14:43:45 HasCrashFail:true HasNetFail:false
14:43:45 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$incfs_size(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=0x5, 0x8, 0x2)
rename(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=@random={'btrfs.', 'user.incfs.size\x00'}, &(0x7f00000001c0)=""/176, 0xb0)
getxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=ANY=[@ANYBLOB="00000000000000000200"], &(0x7f0000000300)=""/221, 0xdd)
setxattr$incfs_size(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=0x6, 0x8, 0x2)
renameat(0xffffffffffffff9c, &(0x7f00000004c0)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000500)='./file0\x00')
r0 = open$dir(&(0x7f0000000540)='./file1\x00', 0x40, 0x8)
lsetxattr$security_selinux(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)='system_u:object_r:framebuf_device_t:s0\x00', 0x27, 0x2)
truncate(&(0x7f0000000640)='./file1\x00', 0x16ac1c77)
setxattr$incfs_size(&(0x7f0000000680)='./file1\x00', &(0x7f00000006c0), &(0x7f0000000700)=0x100000001, 0x8, 0x4)
rename(&(0x7f0000000740)='./file2\x00', &(0x7f0000000780)='./file1\x00')
mkdirat(r0, &(0x7f00000007c0)='./file1\x00', 0x114)
fstat(r0, &(0x7f0000000880)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000900)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000800)='./file2\x00', &(0x7f0000000840)='system.posix_acl_default\x00', &(0x7f0000000980)={{}, {0x1, 0x6}, [{0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x1, r1}, {0x2, 0x3, 0xffffffffffffffff}], {0x4, 0x4}, [{0x8, 0x5, 0xee00}, {0x8, 0x3, 0xee01}, {0x8, 0x4}, {0x8, 0x0, 0xee01}, {0x8, 0x4, 0xffffffffffffffff}, {0x8, 0x1, 0xee01}, {0x8, 0x1, 0xee00}, {0x8, 0x4, r2}, {0x8, 0x3, 0xee00}], {0x10, 0x2}}, 0x84, 0x0)
r3 = dup2(r0, r0)
faccessat(r3, &(0x7f0000000a40)='./file0\x00', 0x40)
fgetxattr(r3, &(0x7f0000000a80)=@known='user.incfs.metadata\x00', &(0x7f0000000ac0)=""/37, 0x25)
getxattr(&(0x7f0000000b00)='./file2\x00', &(0x7f0000000b40)=@known='com.apple.FinderInfo\x00', &(0x7f0000000b80)=""/227, 0xe3)
openat(0xffffffffffffffff, &(0x7f0000000c80)='./file0\x00', 0x40400, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 3: prog_data_offset 1576, prog_size 5992
remove dir: /root/beegfs-client/dfs-0-17
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 0: 20, 3012, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 15
executor 3 create dir /root/beegfs-client/dfs-0-18 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-18
receive_execute: 11, 32
receive_execute: 12, 32
receive_execute: 2, 32
receive_execute: 14, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
executor 1 write_server_output
cover_reset in execute_call
executor 3 waits for recv msg
executor 1 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 54943, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 54943, flag collect 0
----- executor 3 signal number : 547
----- completed 1
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 15
----- directly resend shmid 15
----- executor 3 write_call_output, size 77092, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 77092, flag collect 0
----- executor 3 signal number : 5
----- completed 2
execute_call 0, 37, 0, 1
execute_one loop: 0, 0, 38
cover_reset in execute_call
execute_call 0, 37, 0, 0
execute_one loop: 0, 0, 37
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 64, 0
execute_one time: 1, 64
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 34438, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 34438, flag collect 0
----- executor 3 signal number : 3574
----- completed 3
execute_call 0, 15571, 0, 2
execute_one loop: 0, 0, 15573
cover_reset in execute_call
----- executor 3 write_call_output, size 6183, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6183, flag collect 0
----- executor 3 signal number : 314
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2820, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2820, flag collect 0
----- executor 3 signal number : 57
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 435, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 435, flag collect 0
----- executor 3 signal number : 21
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 501, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 501, flag collect 0
----- executor 3 signal number : 21
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9942, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 9942, flag collect 0
----- executor 3 signal number : 749
----- completed 9
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4098, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4098, flag collect 0
----- executor 3 signal number : 203
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6199, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6199, flag collect 0
----- executor 3 signal number : 336
----- completed 11
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 3646, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3646, flag collect 0
----- executor 3 signal number : 73
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3016, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3016, flag collect 0
----- executor 3 signal number : 58
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 160, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 3 signal number : 15
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2724, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2724, flag collect 0
----- executor 3 signal number : 114
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 5
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3389, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3389, flag collect 0
----- executor 3 signal number : 70
----- completed 17
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 8
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 322, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 55
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3379, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3379, flag collect 0
----- executor 3 signal number : 67
----- completed 21
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 414, pid 466, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 414, flag collect 0
----- executor 3 signal number : 78
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
2023/03/25 14:44:00 for select break: 1
2023/03/25 14:44:00 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 25, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2417, flag collect 0
----- executor 0 signal number : 14
----- executor 0 executes write_coverage_signal cov->size 3462, flag collect 0
----- executor 2 signal number : 959
----- executor 2 executes write_coverage_signal cov->size 462, flag collect 0
----- executor 2 signal number : 209
----- executor 2 executes write_coverage_signal cov->size 285, flag collect 0
----- executor 0 signal number : 1045
----- executor 0 executes write_coverage_signal cov->size 4576, flag collect 0
----- executor 2 signal number : 175
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 562
----- executor 2 executes write_coverage_signal cov->size 208, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4329, flag collect 0
----- executor 2 signal number : 14
----- executor 1 signal number : 2506
----- executor 1 executes write_coverage_signal cov->size 855, flag collect 0
----- executor 1 signal number : 673
----- executor 1 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 1 signal number : 170
----- executor 1 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 3284, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3135, flag collect 0
----- executor 1 signal number : 513
----- executor 1 executes write_coverage_signal cov->size 1638, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 217, flag collect 0
----- executor 1 signal number : 106
----- executor 1 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 1 signal number : 175
----- executor 1 executes write_coverage_signal cov->size 229, flag collect 0
----- executor 1 signal number : 25
----- executor 1 executes write_coverage_signal cov->size 8994, flag collect 0
----- executor 0 signal number : 17
----- executor 2 signal number : 1289
----- executor 0 executes write_coverage_signal cov->size 2212, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 760
----- executor 2 signal number : 81
executor 3, execute_one inner time: 0, 15655, 1
execute_one time: 1, 15657
time breakdown 3: 47, 15663, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 2537, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1660, flag collect 0
----- executor 2 signal number : 704
----- executor 1 signal number : 1966
----- executor 1 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 1 signal number : 26
----- executor 1 executes write_coverage_signal cov->size 4295, flag collect 0
----- executor 0 signal number : 639
----- executor 0 executes write_coverage_signal cov->size 2442, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 299
----- executor 2 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 3129, flag collect 0
----- executor 0 signal number : 477
----- executor 0 executes write_coverage_signal cov->size 2139, flag collect 0
----- executor 0 signal number : 76
----- executor 0 executes write_coverage_signal cov->size 1667, flag collect 0
executor 2 server cover_cnt 8 output_pos_value 3461
----- executor 0 signal number : 34
executor 0 server cover_cnt 11 output_pos_value 4253
2023/03/25 14:44:00 for select break: 1
2023/03/25 14:44:00 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:44:00 for select break: 1
2023/03/25 14:44:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 44, 15667, 0
2023/03/25 14:44:00 for select break: 1
2023/03/25 14:44:00 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:00 wg wait finish
2023/03/25 14:44:00 ------ all executors finish execution
2023/03/25 14:44:00 exec time: 15700
2023/03/25 14:44:00 ----- PS len: 4
2023/03/25 14:44:00 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:00 fuzzer receive 547 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 3574 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 314 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 57 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 749 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 203 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 336 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 70 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/25 14:44:00 fuzzer receive 78 signal and 0 cover from executor 3
2023/03/25 14:44:00 [SERVER] executor 0 has 11 replies
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 1045 signal and 0 cover from userspace component
time breakdown 0: 34, 15668, 0
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 562 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 760 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 639 signal and 0 cover from userspace component
2023/03/25 14:44:00 [SERVER] executor 2 has 8 replies
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 959 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 477 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 209 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 0 receive 34 signal and 0 cover from userspace component
2023/03/25 14:44:00 [SERVER] executor 1 has 24 replies
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 2506 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 175 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 673 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 170 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 513 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 106 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 175 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 25 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 704 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 1966 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 1651 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 726 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 445 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 1685 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 30 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:00 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:00 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/25 14:44:00 mutate testcase with failures
2023/03/25 14:44:00 ----- mutateArg()
2023/03/25 14:44:00 ----- insertCall()
2023/03/25 14:44:00 ----- mutateArg()
2023/03/25 14:44:00 HasCrashFail: true, .HasNetFail: true
2023/03/25 14:44:00 disable threaded and collide
2023/03/25 14:44:00 prog length: 6
----- executor 1 signal number : 1651
----- executor 1 executes write_coverage_signal cov->size 4228, flag collect 0
----- executor 1 signal number : 726
----- executor 1 executes write_coverage_signal cov->size 3497, flag collect 0
----- executor 1 signal number : 445
----- executor 1 executes write_coverage_signal cov->size 5114, flag collect 0
----- executor 1 signal number : 1685
----- executor 1 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 1 signal number : 30
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 24 output_pos_value 10797
time breakdown 1: 43, 15668, 0
before receive testcase: 0 0
2023/03/25 14:44:00 prog length: 6
2023/03/25 14:44:00 prog length: 24
before receive testcase: 0 0
2023/03/25 14:44:00 HasCrashFail:true HasNetFail:true
14:44:00 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.18 -j DROP;iptables -A INPUT -s 192.168.0.19 -j DROP;iptables -A INPUT -s 192.168.0.20 -j DROP;iptables -A OUTPUT -d 192.168.0.18 -j DROP;iptables -A OUTPUT -d 192.168.0.19 -j DROP;iptables -A OUTPUT -d 192.168.0.20 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_down()
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_up()
syz_failure_send(0x3)
---
---
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x6)
fremovexattr(0xffffffffffffffff, &(0x7f0000000000)=@random={'system.', '}\x00'})
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000080)={'}\x00'}, 0x3, 0x1)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f00000000c0), &(0x7f0000000100)=@sha1={0x1, "65c3dba16dc17c7a97b1f019978a699fcaa5f12a"}, 0x15, 0x2)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$security_ima(r0, &(0x7f0000000140), &(0x7f0000000180)=@sha1={0x1, "85f24ec13b0f589b4e194185a0ce9daa729a727f"}, 0x15, 0x3)
fsetxattr$trusted_overlay_opaque(r0, &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x6)
syz_failure_sync(0x0, 0x3)
r1 = dup(0xffffffffffffffff)
r2 = open(&(0x7f0000000240)='./file0\x00', 0x2040, 0x122)
fsetxattr$smack_xattr_label(r2, &(0x7f0000000280)='security.SMACK64IPOUT\x00', &(0x7f00000002c0)={'\x85'}, 0x2, 0x3)
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x1, 0x3)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000300)='security.SMACK64IPOUT\x00', &(0x7f0000000340)={'}\x00'}, 0x3, 0x2)
fcntl$setsig(r1, 0xa, 0xf)
r3 = dup2(r2, r2)
syz_failure_sync(0x3, 0x3)
fsetxattr$user(r3, &(0x7f0000000380), &(0x7f00000003c0)='security.SMACK64EXEC\x00', 0x15, 0x2)
fcntl$notify(r1, 0x402, 0x80000008)
r4 = open(&(0x7f0000000400)='./file0\x00', 0x4a042, 0x0)
sendfile(r1, r4, &(0x7f0000000440)=0x8, 0x200)
fcntl$setstatus(r0, 0x4, 0x42000)
fstat(0xffffffffffffffff, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
fsetxattr$system_posix_acl(r3, &(0x7f0000000480)='system.posix_acl_access\x00', &(0x7f0000000680)={{}, {}, [{0x2, 0x1, r5}, {0x2, 0x3}, {0x2, 0x4}], {0x4, 0x6}, [{0x8, 0x6}], {0x10, 0x8}, {0x20, 0x2}}, 0x44, 0x3)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 2120, prog_size 8
executor 1: prog_data_offset 1872, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 2128, prog_size 4976
remove dir: /root/beegfs-client/dfs-0-18
executor 0: prog_data_offset 1312, prog_size 560
remove dir time 7
-----finish removing dir
mkdir time 9
executor 3 create dir /root/beegfs-client/dfs-0-19 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-19
receive_execute: 5, 17
receive_execute: 9, 16
receive_execute: 6, 16
receive_execute: 5, 16
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 19
----- completed 1
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 44589, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 44589, flag collect 0
----- executor 3 signal number : 555
----- completed 8
execute_call 0, 20, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9550, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 9550, flag collect 0
----- executor 3 signal number : 2451
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 112
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 1, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30, 0, 0
execute_one loop: 0, 0, 30
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 255, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 1906, flag collect 0
----- executor 1 signal number : 1414
----- executor 1 executes write_coverage_signal cov->size 1174, flag collect 0
----- executor 1 signal number : 679
----- executor 1 executes write_coverage_signal cov->size 882, flag collect 0
----- executor 1 signal number : 287
executor 1 server cover_cnt 4 output_pos_value 2472
-----executor 1 collect shmids 4
----- directly resend shmid 4
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 66721, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 66721, flag collect 0
-----executor 1 collect shmids 11
----- directly resend shmid 11
----- executor 3 signal number : 8
----- completed 12
execute_call 0, 30, 0, 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 1 collect shmids 14
----- directly resend shmid 14
execute_call 0, 37, 0, 0
execute_one loop: 0, 0, 37
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 262143, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2006, 0, 0
execute_one loop: 0, 0, 2007
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2068, 0
execute_one time: 1, 2068
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 2007, 0, 5
execute_one loop: 0, 0, 2012
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 3
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2016, 0, 0
execute_one loop: 0, 0, 2016
execute_call 0, 42, 0, 0
execute_one loop: 0, 0, 42
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 95053, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 95053, flag collect 0
executor 1, execute_one inner time: 0, 2117, 0
execute_one time: 1, 2117
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 43, 0, 2
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 363, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 363, flag collect 0
----- executor 3 signal number : 33
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
----- executor 3 write_call_output, size 37048, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 37048, flag collect 0
----- executor 3 signal number : 2204
----- completed 20
execute_call 0, 5510, 0, 1
execute_one loop: 0, 0, 5511
cover_reset in execute_call
----- executor 3 write_call_output, size 86, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 3 signal number : 29
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 8
----- completed 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 468, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 10
----- completed 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 7631, 2
execute_one time: 1, 7633
2023/03/25 14:44:08 for select break: 1
2023/03/25 14:44:08 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 2 signal number : 55
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 194, flag collect 0
----- executor 2 signal number : 128
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 91, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 32
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 0
----- executor 2 signal number : 115
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 994, flag collect 0
----- executor 0 signal number : 827
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 1851, flag collect 0
----- executor 0 signal number : 246
----- executor 0 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1052, flag collect 0
----- executor 0 signal number : 577
----- executor 0 executes write_coverage_signal cov->size 898, flag collect 0
----- executor 0 signal number : 264
----- executor 0 executes write_coverage_signal cov->size 821, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 0 signal number : 28
----- executor 0 executes write_coverage_signal cov->size 1743, flag collect 0
----- executor 0 signal number : 244
executor 2 server cover_cnt 7 output_pos_value 436
executor 0 server cover_cnt 11 output_pos_value 2554
----- executor 1 signal number : 2600
----- executor 1 executes write_coverage_signal cov->size 838, flag collect 0
----- executor 1 signal number : 652
----- executor 1 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 1 signal number : 169
----- executor 1 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 51, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 276, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 841, flag collect 0
----- executor 1 signal number : 41
----- executor 1 executes write_coverage_signal cov->size 304, flag collect 0
----- executor 1 signal number : 175
----- executor 1 executes write_coverage_signal cov->size 109, flag collect 0
----- executor 1 signal number : 25
----- executor 1 executes write_coverage_signal cov->size 3994, flag collect 0
2023/03/25 14:44:08 for select break: 1
2023/03/25 14:44:08 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:44:08 for select break: 1
----- executor 1 signal number : 1637
2023/03/25 14:44:08 --------- executor 0 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 1 signal number : 38
----- executor 1 executes write_coverage_signal cov->size 3702, flag collect 0
----- executor 1 signal number : 899
----- executor 1 executes write_coverage_signal cov->size 2649, flag collect 0
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 2057, flag collect 0
----- executor 1 signal number : 256
----- executor 1 executes write_coverage_signal cov->size 2177, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 82, flag collect 0
----- executor 1 signal number : 18
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 28 output_pos_value 9538
time breakdown 0: 21, 7641, 0
before receive testcase: 0 0
time breakdown 2: 22, 7641, 0
before receive testcase: 0 0
2023/03/25 14:44:08 for select break: 1
2023/03/25 14:44:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 7645, 0
before receive testcase: 0 0
2023/03/25 14:44:08 wg wait finish
2023/03/25 14:44:08 ------ all executors finish execution
2023/03/25 14:44:08 exec time: 7662
2023/03/25 14:44:08 ----- PS len: 4
2023/03/25 14:44:08 [SERVER] executor 0 has 11 replies
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 827 signal and 0 cover from userspace component
2023/03/25 14:44:08 [CLIENT] executor 3 has 24 replies
2023/03/25 14:44:08 [SERVER] executor 1 has 28 replies
2023/03/25 14:44:08 [SERVER] executor 2 has 7 replies
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 55 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 128 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 32 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 2 receive 115 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 1414 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 679 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 287 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 2600 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 652 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 555 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 246 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 2451 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 169 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 41 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 175 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 25 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 1637 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 38 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 899 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 256 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 18 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:08 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 2204 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:08 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 577 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 264 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 28 signal and 0 cover from userspace component
2023/03/25 14:44:08 ------- fuzzer executor 0 receive 244 signal and 0 cover from userspace component
2023/03/25 14:44:08 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:08 ----- no new client coverage: false, true
2023/03/25 14:44:08 mutate testcase with failures
2023/03/25 14:44:08 ----- insertCall()
2023/03/25 14:44:08 ----- insertCall()
2023/03/25 14:44:08 ----- insertCall()
2023/03/25 14:44:08 ----- mutateArg()
2023/03/25 14:44:08 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:08 disable threaded and collide
2023/03/25 14:44:08 prog length: 6
2023/03/25 14:44:08 prog length: 22
2023/03/25 14:44:08 HasCrashFail:true HasNetFail:false
14:44:08 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000000)={{0x7f, 0x45, 0x4c, 0x46, 0x9, 0x40, 0x1, 0xe1, 0xeb, 0x786c0c0918463524, 0x3e, 0x7, 0x3cd, 0x40, 0x5d, 0x0, 0xbd51, 0x38, 0x2, 0x1ff, 0x8001, 0x1f}, [{0x6, 0x7, 0x9, 0xff, 0x1d, 0x3, 0x5, 0xfffffffffffffe00}], "fc30c796c020cab71495b49003da72a17533152b4c47c2100b2dae9f226b727c611723e66738cf159150a690af15be4aa09097455ecd9d7c92950235745a25eaae207c3ba4ba2b681a5f18ffd5c1b9419cc8eac142541778716151a2e4d15bc2bdf7d07e023b8caaf584c462f8789d764cba75881cd6d4292a61f1f8", ['\x00', '\x00']}, 0x2f4)
r0 = dup(0xffffffffffffffff)
write$binfmt_elf32(0xffffffffffffffff, &(0x7f0000001300)=ANY=[@ANYBLOB="7f454c46ff073f0708000000000000000300060002000000d000000038000000d002000009000000080020000200e0ff0100fcff000000000700000004000000030000007e0000000004000020000000ffffffff3a7ba686d035efcbe1ac33199704f2abfb7deb2b161ce254e0d9dc7553da54300643fbf259c8611f2d8ee90ca0eabcf841fb217b710ae54e2cf578063733330adeb5032fe80579b5800ed2cac19dba2a7d4150d9018c31d9600e7bd3be34a12905e4da1f0843de49b57d53195ed95d0ed45cf875c3a51b8acc80e5cba8d45c50cbdc490b24a9712952cea1278667db1a6e1eb6d0abb242fd06911d337d8e8f18999379beafcc7d7f776fa11705d660c43a2b81b4dc0fb72c37430674412e57a8c46f0e898f0c0a5cb8e3790394706a723cb1cfe532d8b86ab0da13effc99651cff8a6aab19317c5b1d93de9115539ac39ed96f8adeb91ecc23b0b932"], 0x458)
fcntl$addseals(r0, 0x409, 0x4)
syz_failure_sync(0x0, 0x3)
r1 = dup2(r0, r0)
syz_failure_sync(0x1, 0x3)
fdatasync(r1)
write$binfmt_aout(r0, &(0x7f0000000780)={{0x107, 0x1, 0x81, 0xed, 0x252, 0x5, 0x189, 0x3}, "7bd1b21955f0b8166b7e5e650395908b204bcd9f549367963094c8596fc4eaa0f15c19c6f14790636b56281fcddbab9a303b8c25cff31b388ad6abf076f1d4276f75a4b5bb11ee56f10e754be9e15f1de0f57b588976ec552b3f43a21c5e11c971d038100947ce5ac08f11965bf13127ffa8abb7d4af1b858a0eb7f7c96c775308377c28b92f0db9057a55425e793762a19fd70dbaa2a4e0d12eaba545acb0dc6492d476fffc9e0a001c7b30bd765b8645962e7432b9bcaa5cd5"}, 0xda)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000880), &(0x7f00000008c0), 0x4, 0xf0a9b04fd98341b5)
write$binfmt_elf64(r1, &(0x7f0000000300)=ANY=[@ANYBLOB="7f454c460708f609010000000000000003003800ffff0000430100000000000040000000000000008010f90200000000000005000000ff01380001008500010408000500000003000000040000000000000073b30000000000000800000000000000000000000000000006000000000000000000000000000000e705065df5bfb2b4cb6c1c68e39aa98bea001deb6f65f2a28cfd18a47be79e9afb9902015081de7a88a74a4f46c3763287187de34156c799edbaa154e577ed2ef252192f9cb86dc42dbd3641f442a291d575f6a26972b6e9d41e7f1794b11bfe927772075531cb9996fabdfc46fe0af6f47c337669b31d251b17dff1881e666c48588d72f4820cabfbd6dfd1501b9ee4b48d14caa2d880d622f182b1fc5f6a6e2f1786ef0c75b0b2a2145f84da3be48e69b0c8d8a7fcaabe0d33b6d87b778642fd5ca89e4b7a01de613f8d35f1276d137c50e4303fddf3e5853289c97450ff6ee4c61cf8b84c49b600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000"/866], 0x360)
getdents64(r0, &(0x7f0000000c80)=""/146, 0x92)
pwritev(r0, &(0x7f0000000f40)=[{&(0x7f0000000d40)="feb6d5461f1e8779060e4d52f9f2affaf1013df5bf73613e1019ce02acf404e6772a3e9384829ffabbfcfbc103456d44b861ede09365bcd8069a5583f5ea76fe0258560c981bcb2c728a64ab757b54ec91e4ae6307858dc6e310169e955ed5381ee95fece3f795b2f98cf07c90e10682530f9bbf406115c0dd30f2ebee2445a7b5adc92c4efbf3c2d51c", 0x8a}, {&(0x7f0000000e00)="449156e29501889b2cfafc61ed59501634f1bb76f26f2fb9aa73072b7c689d336b60f23ee52f1324fa0d922be3608aba0b1fd112029b6a848304d1f0ca873ab5f92a447573c0c1f755be89eca822331f66c02481e77a0c", 0x57}, {&(0x7f0000000e80)="155cca15e8672b65e9c234331c4e1016c40c6a2e201a05cf1ab450556edc55a734468483450420e875c4cc88e6a4dde1e78b4d67527d5e6e3bd6d0c93207e3fc491e86a3b8ff764f3ac2957022d600d71b2f14edb1e4bb83db34672b149c7fef13dd4f365e035bb00f53ee9525d5750d979fe7659bdf9fba3cd497ea0c59c7384192502c7f82300860221e064b5b49ea373ef6a595f7787fa17ded129d0fc2409049857a4132b29a782fce2aac6da5c2", 0xb0}], 0x3, 0x2, 0x319)
r2 = openat(0xffffffffffffffff, &(0x7f0000000f80)='./file0\x00', 0x1, 0x0)
fcntl$F_GET_FILE_RW_HINT(r2, 0x40d, &(0x7f0000000fc0))
r3 = open(&(0x7f0000001000)='./file0\x00', 0x8401, 0x100)
write(r3, &(0x7f0000001040)="29ed07aa78c2d35f978cce0132b57a616a84c287f3833b04a5d90ffb44ae62f786384d4da3e5c695d418d9ba2329c4c0c86620cab2fa55e95d8364182d15d8ff6541793a5bc07ca72b73207427311fdebf48cada9d44a5cb82b826b5fa72e5d7e1ce50106c2d4f76be1e88b268db234a8d988903e54568c2f8b64599bd52d6995e1c3716847122e6aec52835b5445cee13a6ec395f8d8e99ab3e118ca97fba05", 0xa0)
fsetxattr$trusted_overlay_upper(r3, &(0x7f0000001100), &(0x7f0000001140)={0x0, 0xfb, 0x9b, 0x6, 0x5, "026acea502cb9a462a9f086f2ba8b09d", "dac3c838d23517143a34b4bdbbc3a3f799b6b7b21a7dce40bdb9f91a91f56cf0d8cc092ddd5ae9cbc68d613867da6f1f7597987f16a3d71b118f811761cac38fbb840dc7f97546d28a01bc532a422c8e579c5fb076c357dd139e2875f67a97483eb4ef226a2303a0eb800e46b9d4b947eddf1d3656ebacc7ab84be1a26fc601fcf9cb019aaef"}, 0x9b, 0x3)
r4 = fcntl$dupfd(0xffffffffffffffff, 0x0, r2)
fcntl$dupfd(r0, 0x406, r4)
r5 = dup2(r2, r3)
fsetxattr$trusted_overlay_upper(r5, &(0x7f0000001200), &(0x7f0000001240)={0x0, 0xfb, 0xa7, 0x1, 0x7, "7612f90bdfe29f7d1ba45a98aa7a4e0f", "25447a610d3fb7bdfcc9707c0843948d7c0423d0fe1a514fc3c1d915fb83898ba41673ba22eb9d635e40f29f2e7f6a25f2de789660fd0ccbdcb8048c66abb038d5d0711c7db01ad36ff98f5b8e03f27deff4adcefabf40e9027ab313733b3315f3651c508e60bd06e1dae4c881bc8459d80f5f28515d43411c8f9098ed3b282acf54a904040bf3cfee137377dbc07cf0f96e"}, 0xa7, 0x7)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 3: 26, 7638, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 9520
remove dir: /root/beegfs-client/dfs-0-19
remove dir time 10
-----finish removing dir
receive_execute: 6, 16
receive_execute: 10, 17
receive_execute: 10, 17
mkdir time 5
executor 3 create dir /root/beegfs-client/dfs-0-20 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-20
receive_execute: 1, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 1
executor 3 before execute_one
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 21
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 61830, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 61830, flag collect 0
----- executor 3 signal number : 536
----- completed 5
execute_call 0, 30, 0, 2
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 544, 0, 0
execute_one loop: 0, 0, 544
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 577, 0
execute_one time: 1, 577
----- executor 3 signal number : 1
----- completed 7
execute_call 0, 544, 0, 4
execute_one loop: 0, 0, 548
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 7
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 7
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 185
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2932, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2932, flag collect 0
----- executor 3 signal number : 1535
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 470, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 582, 0
execute_one time: 2, 583
executor 0 write_server_output
2023/03/25 14:44:09 for select break: 1
2023/03/25 14:44:09 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 85, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 2 signal number : 30
executor 2 server cover_cnt 2 output_pos_value 50
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 1 signal number : 42
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 882, flag collect 0
----- executor 1 signal number : 688
executor 1 server cover_cnt 5 output_pos_value 843
2023/03/25 14:44:09 for select break: 1
2023/03/25 14:44:09 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 27, 590, 0
before receive testcase: 0 0
2023/03/25 14:44:09 for select break: 1
2023/03/25 14:44:09 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 591, 0
before receive testcase: 0 0
time breakdown 3: 16, 588, 0
----- executor 0 executes write_coverage_signal cov->size 1465, flag collect 0
----- executor 0 signal number : 1066
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 584, flag collect 0
----- executor 0 signal number : 265
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 0 signal number : 9
executor 0 server cover_cnt 11 output_pos_value 2043
2023/03/25 14:44:09 for select break: 1
2023/03/25 14:44:09 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:09 wg wait finish
2023/03/25 14:44:09 ------ all executors finish execution
2023/03/25 14:44:09 exec time: 620
2023/03/25 14:44:09 ----- PS len: 4
2023/03/25 14:44:09 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:09 [SERVER] executor 0 has 11 replies
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 1066 signal and 0 cover from userspace component
2023/03/25 14:44:09 [SERVER] executor 2 has 2 replies
2023/03/25 14:44:09 [SERVER] executor 1 has 5 replies
2023/03/25 14:44:09 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 1 receive 688 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 265 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:44:09 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 536 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 1535 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:09 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:09 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:44:09 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:09 ----- no new client coverage: false, true
2023/03/25 14:44:09 mutate testcase with failures
2023/03/25 14:44:09 ----- mutateArg()
2023/03/25 14:44:09 ----- insertCall()
2023/03/25 14:44:09 ----- mutateArg()
2023/03/25 14:44:09 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:09 disable threaded and collide
2023/03/25 14:44:09 prog length: 6
2023/03/25 14:44:09 prog length: 22
2023/03/25 14:44:09 HasCrashFail:true HasNetFail:false
14:44:09 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)="18972fd3dcdd47e5c99d7f6e1e9f2d890b2fe1aacb8f18e790080460d451ec188da72022f9243e2c6f585dcfeca8bc53257d0e4f5395c08427a48d445aaefc335570f16ec5b35a5d17ed9fb172336c58e53e5076a9", 0x55, 0x0)
lsetxattr$user(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180)='user.incfs.metadata\x00', 0x14, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='./file0\x00', 0x8, 0x2)
setxattr$security_smack_transmute(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f00000004c0), 0x4, 0x3)
lsetxattr$user(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)='{*@)}:\x00', 0x7, 0x1)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)={'U+'}, 0x16, 0x1)
lsetxattr$security_ima(&(0x7f0000000b80)='./file0\x00', &(0x7f0000000500), &(0x7f0000000540)=@ng={0x4, 0xd, "a44fe19b15616b775e44"}, 0xc, 0x1)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600), 0x2, 0x0)
faccessat(0xffffffffffffff9c, &(0x7f0000000640)='./file0\x00', 0x100)
mkdir(&(0x7f0000000680)='./file0\x00', 0x141)
lsetxattr$smack_xattr_label(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)='security.SMACK64IPOUT\x00', &(0x7f0000000740)={'{*@)}:\x00'}, 0x8, 0x0)
setxattr$security_evm(&(0x7f0000000780)='./file0\x00', &(0x7f00000007c0), &(0x7f0000000800)=@v1={0x2, "a6c976d96c3a0360b89e"}, 0xb, 0x1)
r0 = open$dir(&(0x7f0000000840)='./file0\x00', 0x0, 0x100)
mkdirat(r0, &(0x7f0000000880)='./file0\x00', 0x3)
lsetxattr(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900)=@random={'system.', '\x00'}, &(0x7f0000000940)='}#-:!\x00', 0x6, 0x0)
chmod(&(0x7f0000000980)='./file0\x00', 0x21)
lsetxattr$security_capability(&(0x7f00000009c0)='./file0\x00', &(0x7f0000000a00), &(0x7f0000000a40)=@v3={0x3000000, [{0x20, 0x6}, {0x3, 0x2}], 0xee00}, 0x18, 0x6)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000a80)='./file0\x00', 0x0, 0x1c4)
openat(r1, &(0x7f0000000ac0)='./file1\x00', 0x3, 0x1)
renameat(r1, &(0x7f0000000b00)='./file0\x00', r1, &(0x7f0000000b40)='\x00')
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 2: prog_data_offset 1568, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5280
remove dir: /root/beegfs-client/dfs-0-20
remove dir time 3
-----finish removing dir
mkdir time 5
executor 3 create dir /root/beegfs-client/dfs-0-21 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-21
receive_execute: 15, 8
receive_execute: 2, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
time breakdown 0: 27, 604, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
receive_execute: 1, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 2
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_call 0, 3, 0, 0
executor 3 waits for recv msg
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 11355, flag collect 0
----- executor 0 signal number : 3224
executor 0 server cover_cnt 1 output_pos_value 3228
receive_execute: 15, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 36, 0, 0
execute_one loop: 0, 0, 36
----- executor 3 write_call_output, size 51858, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 51858, flag collect 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 587
----- completed 1
execute_call 0, 37, 0, 1
execute_one loop: 0, 0, 38
cover_reset in execute_call
----- executor 3 write_call_output, size 3272, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3272, flag collect 0
----- executor 3 signal number : 1755
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 3368, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3368, flag collect 0
----- executor 3 signal number : 120
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3376, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3376, flag collect 0
----- executor 3 signal number : 23
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4114, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4114, flag collect 0
----- executor 3 signal number : 57
----- completed 5
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4134, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4134, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4098, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4098, flag collect 0
----- executor 3 signal number : 16
----- completed 7
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 16
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2993, 0, 0
execute_one loop: 0, 0, 2993
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3046, 0
execute_one time: 2, 3046
----- executor 3 signal number : 9
----- completed 9
execute_call 0, 2995, 0, 5
execute_one loop: 0, 0, 3000
cover_reset in execute_call
----- executor 3 write_call_output, size 6087, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6087, flag collect 0
----- executor 3 signal number : 136
----- completed 10
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8933, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8933, flag collect 0
----- executor 3 signal number : 432
----- completed 12
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 777, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 777, flag collect 0
----- executor 3 signal number : 143
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 793, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 793, flag collect 0
----- executor 3 signal number : 8
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1275, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 1275, flag collect 0
----- executor 3 signal number : 220
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8802, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8802, flag collect 0
----- executor 3 signal number : 77
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 709, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 709, flag collect 0
----- executor 3 signal number : 14
----- completed 17
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3199, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3199, flag collect 0
----- executor 3 signal number : 189
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3322, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3322, flag collect 0
----- executor 3 signal number : 58
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1318, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 1318, flag collect 0
----- executor 3 signal number : 15
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3505, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3505, flag collect 0
----- executor 3 signal number : 112
----- completed 21
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 567, pid 471, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 567, flag collect 0
----- executor 3 signal number : 28
----- completed 22
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 3079, 0
execute_one time: 1, 3082
2023/03/25 14:44:12 for select break: 1
2023/03/25 14:44:12 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 12, 3086, 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 14341, flag collect 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 2 signal number : 633
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 18
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 1445, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 1912
----- executor 0 executes write_coverage_signal cov->size 144, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 693
----- executor 0 signal number : 31
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 610, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 0 signal number : 365
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 0 signal number : 21
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 3716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 127, flag collect 0
----- executor 0 signal number : 33
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1894
----- executor 1 executes write_coverage_signal cov->size 2836, flag collect 0
----- executor 1 signal number : 161
2023/03/25 14:44:12 for select break: 1
2023/03/25 14:44:12 --------- executor 2 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 4727, flag collect 0
----- executor 1 signal number : 126
----- executor 1 executes write_coverage_signal cov->size 3331, flag collect 0
----- executor 1 signal number : 182
----- executor 1 executes write_coverage_signal cov->size 1801, flag collect 0
----- executor 1 signal number : 227
----- executor 0 signal number : 2168
executor 0 server cover_cnt 7 output_pos_value 7776
executor 1 server cover_cnt 11 output_pos_value 2812
2023/03/25 14:44:12 for select break: 1
2023/03/25 14:44:12 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:44:12 for select break: 1
2023/03/25 14:44:12 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:12 wg wait finish
2023/03/25 14:44:12 ------ all executors finish execution
2023/03/25 14:44:12 exec time: 3101
2023/03/25 14:44:12 ----- PS len: 4
2023/03/25 14:44:12 [SERVER] executor 0 has 7 replies
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 3224 signal and 0 cover from userspace component
2023/03/25 14:44:12 [SERVER] executor 1 has 11 replies
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
time breakdown 1: 23, 3092, 0
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:12 [SERVER] executor 2 has 5 replies
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 1912 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 2 receive 633 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 1894 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 161 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 126 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 31 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 182 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 365 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 21 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 33 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 0 receive 2168 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/25 14:44:12 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:12 fuzzer receive 587 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 1755 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 120 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 57 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 432 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 143 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 220 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 77 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 189 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/25 14:44:12 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 14:44:12 ------- fuzzer executor 1 receive 227 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:12 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
time breakdown 2: 23, 3089, 0
before receive testcase: 0 0
2023/03/25 14:44:12 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:12 ----- no new client coverage: false, true
2023/03/25 14:44:12 mutate testcase with failures
2023/03/25 14:44:12 ----- insertCall()
2023/03/25 14:44:12 ----- insertCall()
2023/03/25 14:44:12 ----- insertCall()
2023/03/25 14:44:12 ----- mutateArg()
2023/03/25 14:44:12 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:12 disable threaded and collide
2023/03/25 14:44:12 prog length: 6
2023/03/25 14:44:12 prog length: 22
2023/03/25 14:44:12 HasCrashFail:true HasNetFail:false
14:44:12 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='system.advise\x00')
syz_failure_sync(0x1, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000080)={'#! ', './file1', [{0x20, '\'/,'}, {0x20, ':\x8e'}, {0x20, '\x1f[{%!--\x12'}], 0xa, "b1084655a7e67496be304de0b2a2c7b98016f900d28b98de06e440721eb319b4590dd582dd67fb7ab910b94832e0abd24af02996571b0fc9fc85eb888d64078f5d21aec4939d2c5b3ac6460043f3eda1cf2686656af253092d735d47fd7bfc6b4927853f2930338d4cf4f38fd901641c9ac088869d8f3cf1ecdc610be22a27955bba542ab26b30512a563c3f1a320850f953416c21250e858836dfe19f4ce77b"}, 0xbb)
setxattr$smack_xattr_label(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)='security.SMACK64MMAP\x00', &(0x7f00000001c0), 0x1, 0x3)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0x600501, 0x1a8)
fsetxattr$security_selinux(r0, &(0x7f0000000240), &(0x7f0000000280)='system_u:object_r:init_exec_t:s0\x00', 0x21, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)='./file1\x00', 0x8, 0x1)
fsetxattr$trusted_overlay_origin(0xffffffffffffffff, &(0x7f0000000380), &(0x7f00000003c0), 0x2, 0x0)
symlink(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440)='./file1\x00')
chown(&(0x7f0000000480)='./file1\x00', 0x0, 0x0)
r1 = openat(r0, &(0x7f00000004c0)='./file0\x00', 0x200, 0x44)
write$binfmt_script(r1, &(0x7f0000001ac0)={'#! ', './file0', [{0x20, '\x9a\xc5O\xf0\xb6E\x9c\x86\xe1muZb\x92\xe9\x05\xcf\x87\xde:%X\x95[2>J,\xe2\x02mE1\xf8\xe6\xa6\x0e\x9f\xaa\xf2\xcfk\xff\xf0\x84\xf6q\xb3\xbb?\x90e\xa5O\xfa+C,\xc4\xa5~H{\xa9\xcd\x90\xff\xae\x1c+\xa2\xca\xde\x1e\\\xa9y\\\xe5q\xcc~t2\xc7\xbe\xab\x84.\xd9\xb3\xf6\xdc\xc8P\xec\xd9\xe6\x0fS\x01\xc2@\xd3|\x8dOV\x8c\xf6\x15W\xcd\x1a\x15?\x17\xe5\xf0\rtG\xaaZ\xa5\xe9\xf2%\x8b\x95R\xae\a\x17\xd4\v\xc9\x93\xc3\xa5)7\x8a/o\x1a~\n\x86\xf1^\x13\x9b,\xffw\x18x\x95\x88s\xb7\x92@\b\x90\xddU\xa8\xb2\x00\x00\x00\x00'}, {0x20, ':\x8e'}, {0x20, ':\x8e'}], 0xa, "1bcdf08171cdc838b1614c0e6b7d8740769abbe607000000ef54482eaf5ed220e9cd0b7f010000000000000094715233ad0f0486d61a57f805b1ec4df9fbab463c6092a043d8146d311087f2"}, 0x10c)
fcntl$F_GET_RW_HINT(r1, 0x40b, &(0x7f0000000580))
ioctl(r1, 0x1, &(0x7f00000005c0)="df0f863168cea8")
fcntl$F_GET_RW_HINT(r1, 0x40b, &(0x7f0000000600))
fgetxattr(r0, &(0x7f0000000640)=@random={'security.', 'y\x00'}, &(0x7f0000000680)=""/4096, 0x1000)
setxattr$incfs_size(&(0x7f0000001680)='./file0\x00', &(0x7f00000016c0), &(0x7f0000001700)=0x9, 0x8, 0x0)
lsetxattr$user(&(0x7f0000001740)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)='#! ', 0x3, 0x2)
r2 = open$dir(&(0x7f0000001800)='./file1\x00', 0x420100, 0x29)
fsetxattr$trusted_overlay_upper(r2, &(0x7f0000001840), &(0x7f0000001880)={0x0, 0xfb, 0x9d, 0x9, 0x5, "710186b528ccc4359787efbd52789222", "39528e5515b90809c405b3fecad106557de5785c26555f26e0ab98f0c106bc9bffd93deeb4ce76bab2210368ff94461408f97921fc79269ef3fcc8fe9e28a19ede883b37f1f8d41bb5b2e8707423b0b33d4cea24eba076d01e159288a9a8475eae6112049c6b1ca7fafad8688d3dbef0257d504a41d42b2c856dae3931ae69a5837f385d85c4bc38"}, 0x9d, 0x2)
openat(r1, &(0x7f0000001940)='./file2\x00', 0x12000, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
time breakdown 0: 10, 3091, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5592
remove dir: /root/beegfs-client/dfs-0-21
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-22 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-22
receive_execute: 8, 10
receive_execute: 4, 12
receive_execute: 2, 11
receive_execute: 2, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 2, 0
executor 3 waits for recv msg
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 37
executor 0 server cover_cnt 1 output_pos_value 41
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 77226, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 77226, flag collect 0
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 558
----- completed 1
execute_call 0, 34, 0, 2
execute_one loop: 0, 0, 36
cover_reset in execute_call
----- executor 3 write_call_output, size 3288, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3288, flag collect 0
----- executor 3 signal number : 1767
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 write_call_output, size 262143, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2986, 0, 0
execute_one loop: 0, 0, 2986
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 3023, 0
execute_one time: 2, 3024
----- executor 3 signal number : 4
----- completed 3
execute_call 0, 2986, 0, 4
execute_one loop: 0, 0, 2990
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 5
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6497, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6497, flag collect 0
----- executor 3 signal number : 181
----- completed 5
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 8
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3341, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3341, flag collect 0
----- executor 3 signal number : 112
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 18064, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 18064, flag collect 0
----- executor 3 signal number : 883
----- completed 10
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 262143, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 2655
----- completed 11
execute_call 0, 258, 0, 6
execute_one loop: 0, 0, 264
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 3 signal number : 138
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2844, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2844, flag collect 0
----- executor 3 signal number : 52
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 15
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 3
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 1
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 412, pid 473, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 412, flag collect 0
----- executor 3 signal number : 9
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3307, 0
execute_one time: 2, 3307
2023/03/25 14:44:15 for select break: 1
2023/03/25 14:44:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 18, 3313, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 1 signal number : 681
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1546, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 11135, flag collect 0
----- executor 2 signal number : 634
----- executor 2 executes write_coverage_signal cov->size 8208, flag collect 0
----- executor 2 signal number : 112
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 1724
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 573, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 0 signal number : 217
----- executor 0 executes write_coverage_signal cov->size 35, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 1277, flag collect 0
----- executor 1 signal number : 42
----- executor 0 signal number : 853
----- executor 0 executes write_coverage_signal cov->size 736, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 67, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 1143, flag collect 0
----- executor 2 signal number : 14
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 1 signal number : 7
----- executor 0 signal number : 609
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 7
----- executor 2 signal number : 30
executor 0 server cover_cnt 17 output_pos_value 3873
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4977, flag collect 0
----- executor 2 signal number : 550
----- executor 2 executes write_coverage_signal cov->size 4739, flag collect 0
----- executor 2 signal number : 490
----- executor 2 executes write_coverage_signal cov->size 4977, flag collect 0
----- executor 1 signal number : 2517
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4739, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 28
2023/03/25 14:44:15 for select break: 1
2023/03/25 14:44:15 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 4266, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 4062, flag collect 0
----- executor 2 signal number : 24
----- executor 1 signal number : 314
----- executor 2 executes write_coverage_signal cov->size 6130, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 599
----- executor 2 executes write_coverage_signal cov->size 4739, flag collect 0
----- executor 2 signal number : 30
----- executor 2 executes write_coverage_signal cov->size 4977, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4739, flag collect 0
----- executor 1 signal number : 1442
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 29
----- executor 2 executes write_coverage_signal cov->size 4977, flag collect 0
----- executor 1 signal number : 715
executor 1 server cover_cnt 10 output_pos_value 5845
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4739, flag collect 0
----- executor 2 signal number : 29
----- executor 2 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 2 signal number : 21
executor 2 server cover_cnt 18 output_pos_value 2652
time breakdown 0: 13, 3316, 0
before receive testcase: 0 0
2023/03/25 14:44:15 for select break: 1
2023/03/25 14:44:15 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 16, 3320, 0
before receive testcase: 0 0
2023/03/25 14:44:15 for select break: 1
2023/03/25 14:44:15 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:44:15 wg wait finish
2023/03/25 14:44:15 ------ all executors finish execution
2023/03/25 14:44:15 exec time: 3332
2023/03/25 14:44:15 ----- PS len: 4
2023/03/25 14:44:15 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:15 [SERVER] executor 1 has 10 replies
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 681 signal and 0 cover from userspace component
2023/03/25 14:44:15 [SERVER] executor 2 has 18 replies
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 634 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 112 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:15 fuzzer receive 558 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 1767 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 181 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:15 [SERVER] executor 0 has 17 replies
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 37 signal and 0 cover from userspace component
time breakdown 1: 13, 3321, 0
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 1724 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 217 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 853 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 609 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/25 14:44:15 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 883 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 2655 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 138 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:15 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 550 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 490 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 28 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 24 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 599 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 29 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 29 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 2 receive 21 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 2517 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 314 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 1442 signal and 0 cover from userspace component
2023/03/25 14:44:15 ------- fuzzer executor 1 receive 715 signal and 0 cover from userspace component
2023/03/25 14:44:15 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:15 ----- no new client coverage: false, true
2023/03/25 14:44:15 mutate testcase with failures
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- mutateArg()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- mutateArg()
2023/03/25 14:44:15 ----- mutateArg()
before receive testcase: 0 0
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- removeCall()
2023/03/25 14:44:15 ----- insertCall()
2023/03/25 14:44:15 ----- generateCall 250 fsync fsync
2023/03/25 14:44:15 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:15 disable threaded and collide
2023/03/25 14:44:15 prog length: 6
2023/03/25 14:44:15 prog length: 22
2023/03/25 14:44:15 HasCrashFail:true HasNetFail:false
14:44:15 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fstat(0xffffffffffffffff, &(0x7f0000000000)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fchmod(0xffffffffffffffff, 0x1)
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000ac0)=ANY=[@ANYBLOB="7f454c4606803f000300000000000000360c06001f000000570300000000000040000000000000001a02000000000000ffff000000043800010005000400010002000000050000000101000000000000070000000000000001800000000000000700000000000000f5ef236a00000048000900000000000000070000001b000000ff0f0000000000009d03000000000000ff0100000000000006000000000000000002000000000000920d000000000000c9564655308494e2b9cfb708346ccb3ff017127c2d4a5166be11f308f3d0f141ac3e6d8022545ab905e98dada793a5d35e938e069fd7fb64f22912a387ba4b5e6301c08706e4b7e56b0304a9ea35721dcdbc7b75d336fa1d8ba16f9515830521d9d765c3b2d288c3a691255aa8a52e08e5d6d7b29832aadbf86fdb42f7d5e8aae9f67aa57434511df5b9dd187b08d8c2dfe1d235f16ba54a2e79bf4a21787e430a8a5514866a5d4e026992b977be10a60559b038981cf25dd441cf17ae23dc067bedb509741832487b845f40014d8285bc2a77788c409400"/1416], 0x587)
r1 = openat(0xffffffffffffffff, &(0x7f0000000640)='./file0\x00', 0x40000, 0x41)
fcntl$lock(r1, 0x5, &(0x7f0000000680)={0x1, 0xb72d594cbada7ca9, 0x5, 0xfffe000000000000})
r2 = dup(r1)
fsetxattr$trusted_overlay_redirect(r2, &(0x7f00000006c0), &(0x7f0000000700)='./file0\x00', 0x8, 0x3)
fsync(r1)
stat(&(0x7f0000000080)='./file0\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
chown(&(0x7f0000000740)='./file0\x00', r3, r0)
r4 = open$dir(&(0x7f0000000840)='./file0\x00', 0x40000, 0x8)
fcntl$getown(r4, 0x9)
r5 = open(&(0x7f0000000880)='./file1\x00', 0x8000, 0x82)
openat(r5, &(0x7f00000008c0)='./file0\x00', 0x2080, 0xc0)
r6 = dup(r1)
fchown(r6, r3, r0)
r7 = openat(r6, &(0x7f0000000a80)='./file1\x00', 0x10000, 0x14)
dup(r7)
lsetxattr$security_evm(&(0x7f0000000940)='./file1\x00', &(0x7f0000000980), &(0x7f00000009c0)=@ng={0x4, 0x3, "17d15568c0e7d6015ee9a88c54dc38b216e9cba0"}, 0x16, 0x1)
symlink(&(0x7f0000000a00)='./file0\x00', &(0x7f0000000a40)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4664
remove dir: /root/beegfs-client/dfs-0-22
remove dir time 4
-----finish removing dir
receive_execute: 4, 8
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-23 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-23
receive_execute: 9, 8
receive_execute: 11, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 8
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 60584, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 60584, flag collect 0
----- executor 3 signal number : 555
----- completed 1
execute_call 0, 26, 0, 2
execute_one loop: 0, 0, 28
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2749, 0, 0
execute_one loop: 0, 0, 2749
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2779, 0
execute_one time: 1, 2779
----- executor 3 signal number : 4
----- completed 2
execute_call 0, 2750, 0, 4
execute_one loop: 0, 0, 2754
cover_reset in execute_call
----- executor 3 write_call_output, size 32, pid 474, write pid:-2130675452
----- executor 3 executes write_coverage_signal cov->size 32, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 3 signal number : 178
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5947, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 5947, flag collect 0
----- executor 3 signal number : 1868
----- completed 11
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 3319, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3319, flag collect 0
----- executor 3 signal number : 122
----- completed 12
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 3464, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3464, flag collect 0
----- executor 3 signal number : 78
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3314, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3314, flag collect 0
----- executor 3 signal number : 28
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 412, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 412, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 5
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 412, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 412, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3346, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3346, flag collect 0
----- executor 3 signal number : 33
----- completed 21
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 17989, pid 474, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17989, flag collect 0
----- executor 3 signal number : 904
----- completed 22
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 0, 2813, 0
execute_one time: 2, 2814
2023/03/25 14:44:18 for select break: 1
2023/03/25 14:44:18 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 18, 2819, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 200, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 935, flag collect 0
----- executor 2 signal number : 107
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2387, flag collect 0
----- executor 1 signal number : 1579
----- executor 1 executes write_coverage_signal cov->size 2272, flag collect 0
----- executor 1 signal number : 492
----- executor 1 executes write_coverage_signal cov->size 3268, flag collect 0
----- executor 1 signal number : 1041
----- executor 1 executes write_coverage_signal cov->size 2638, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 1 signal number : 452
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 1830, flag collect 0
----- executor 2 signal number : 1003
----- executor 2 executes write_coverage_signal cov->size 677, flag collect 0
executor 1 server cover_cnt 9 output_pos_value 3716
----- executor 0 signal number : 2629
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 487
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 646, flag collect 0
----- executor 0 signal number : 301
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
executor 2 server cover_cnt 6 output_pos_value 1652
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 599
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 0 signal number : 9
2023/03/25 14:44:18 for select break: 1
2023/03/25 14:44:18 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 11 output_pos_value 3639
2023/03/25 14:44:18 for select break: 1
2023/03/25 14:44:18 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12, 2821, 0
before receive testcase: 0 0
2023/03/25 14:44:18 for select break: 1
2023/03/25 14:44:18 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:18 wg wait finish
2023/03/25 14:44:18 ------ all executors finish execution
2023/03/25 14:44:18 exec time: 2830
2023/03/25 14:44:18 ----- PS len: 4
2023/03/25 14:44:18 [SERVER] executor 0 has 11 replies
2023/03/25 14:44:18 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 2629 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 555 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:18 [SERVER] executor 1 has 9 replies
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 301 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:18 [SERVER] executor 2 has 6 replies
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 599 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 2 receive 107 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 2 receive 1003 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 2 receive 487 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 178 signal and 0 cover from executor 3
time breakdown 0: 17, 2823, 0
before receive testcase: 0 0
2023/03/25 14:44:18 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 1868 signal and 0 cover from executor 3
2023/03/25 14:44:18 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:44:18 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 78 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/25 14:44:18 fuzzer receive 904 signal and 0 cover from executor 3
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 1579 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 1041 signal and 0 cover from userspace component
2023/03/25 14:44:18 ------- fuzzer executor 1 receive 452 signal and 0 cover from userspace component
2023/03/25 14:44:18 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:18 ----- no new client coverage: false, true
2023/03/25 14:44:18 mutate testcase with failures
2023/03/25 14:44:18 ----- mutateArg()
2023/03/25 14:44:18 HasCrashFail: true, .HasNetFail: true
2023/03/25 14:44:18 disable threaded and collide
2023/03/25 14:44:18 prog length: 6
2023/03/25 14:44:18 prog length: 6
2023/03/25 14:44:18 prog length: 24
2023/03/25 14:44:18 HasCrashFail:true HasNetFail:true
14:44:18 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.17 -j DROP;iptables -A INPUT -s 192.168.0.19 -j DROP;iptables -A INPUT -s 192.168.0.20 -j DROP;iptables -A OUTPUT -d 192.168.0.17 -j DROP;iptables -A OUTPUT -d 192.168.0.19 -j DROP;iptables -A OUTPUT -d 192.168.0.20 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_down()
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_up()
syz_failure_send(0x3)
---
fchmod(0xffffffffffffffff, 0xa5)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x41, 0x2)
fcntl$addseals(r0, 0x409, 0x0)
r1 = dup(r0)
fcntl$setstatus(r1, 0x4, 0x0)
syz_failure_sync(0x2, 0x3)
syz_failure_sync(0x3, 0x3)
syz_failure_sync(0x0, 0x3)
flock(r0, 0xf)
write$binfmt_elf32(r0, &(0x7f0000000040)={{0x7f, 0x45, 0x4c, 0x46, 0x8, 0xd7, 0x9, 0xe, 0x627, 0x2, 0x3e, 0x3, 0x38e, 0x38, 0x40, 0xffff, 0xffff, 0x20, 0x2, 0x5, 0x1, 0x8}, [{0x1, 0x8809, 0x7, 0x41dd, 0x2a4d374a, 0x2, 0x1c9, 0x81}], "b01b669ce1868233f836382e7363ba1d63daaacf0a580438c6998058065875cc62e7b2a2c884bc53dc87f7280366579b814a75d798d302223f3f0c317fa0106e036f6cc2c6cee065789f46a70f054addf823547b962f8d7d7b3c5d85229baed49c57b6886ae288870cb77195dac14f1402b64bfaf7c0f6126a00dc471ba06c9f1e16fed7a615c3b30c7acc3a9db0b506ebf83c865c8e515ff7a2715d446c39ffbcfbbb4d7b134c75bd41b615ae43307d32fec42407840e76f86e4d09e3cc5c4dc0649d7d8aad92b8342cd08749976fd8a1e6ce80142e699de8862c08055aa21e408a1f789953d269bbbf1d0184273b01ad91", ['\x00', '\x00', '\x00', '\x00', '\x00']}, 0x64a)
syz_failure_sync(0x1, 0x3)
r2 = dup2(r1, r0)
write$binfmt_misc(r2, &(0x7f00000006c0)={'syz1', "1eb4cdf50f1bbd8df361be2ccff539046dd1df9f83319074db7050dd72747020773fca64a5c7938de28a0ccc86919151e48d7c07d09bf97f92ddd5f71567b19f6d1e4746fb47b5a45096d8c966a71dcc7d64f74a78fb60b6f9d643fe86ab4471b04509a0429084a2674fa1ec2f0480785efb243a0b7de4811b5961b76d5eb390a3b1bca3daa5b5100582bac5d315960d"}, 0x94)
preadv(r2, &(0x7f0000000940)=[{&(0x7f0000000780)=""/224, 0xe0}, {&(0x7f0000000880)=""/174, 0xae}], 0x2, 0x80000001, 0x1)
fsetxattr(r1, &(0x7f0000000980)=@random={'btrfs.', '\x00'}, &(0x7f00000009c0)='-#\x00', 0x3, 0x3)
r3 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x40000, 0x1a6)
write$binfmt_misc(r3, &(0x7f0000000a40)={'syz1', "453b44f711a7dad46323"}, 0xe)
r4 = openat(r2, &(0x7f0000000a80)='./file0\x00', 0x200, 0x0)
fcntl$getflags(r4, 0xb)
fcntl$setpipe(r3, 0x407, 0x29000000)
fsetxattr$security_capability(r0, &(0x7f0000000ac0), &(0x7f0000000b00)=@v1={0x1000000, [{0x9, 0x2}]}, 0xc, 0x1)
fcntl$F_GET_RW_HINT(r4, 0x40b, &(0x7f0000000b40))
fgetxattr(r3, &(0x7f0000000b80)=@random={'osx.', 'security.capability\x00'}, &(0x7f0000000bc0)=""/252, 0xfc)
fsetxattr$security_selinux(r1, &(0x7f0000000cc0), &(0x7f0000000d00)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 12, 2821, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 560
----- executor 2 receive testcase
executor 2: prog_data_offset 1880, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 2128, prog_size 6800
remove dir: /root/beegfs-client/dfs-0-23
remove dir time 5
-----finish removing dir
mkdir time 15
executor 3 create dir /root/beegfs-client/dfs-0-24 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-24
receive_execute: 1, 21
receive_execute: 3, 21
receive_execute: 7, 20
receive_execute: 5, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 20
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9933, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 9933, flag collect 0
----- executor 3 signal number : 2488
----- completed 2
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 49, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 3 signal number : 36
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 57, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 57, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 45, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 45, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 67846, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 67846, flag collect 0
execute_call 0, 29, 0, 0
execute_one loop: 0, 0, 29
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 505
----- completed 6
execute_call 0, 29, 0, 1
execute_one loop: 0, 0, 30
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 2 collect shmids 9
----- directly resend shmid 9
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 2 collect shmids 10
----- directly resend shmid 10
-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 2 collect shmids 16
----- directly resend shmid 16
-----executor 2 collect shmids 15
----- directly resend shmid 15
-----executor 2 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 17
----- directly resend shmid 17
-----executor 2 collect shmids 21
----- directly resend shmid 21
----- executor 3 write_call_output, size 85569, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 85569, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 38, 0, 1
execute_one loop: 0, 0, 39
execute_call 0, 86, 0, 0
execute_one loop: 0, 0, 86
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 37, 0, 0
execute_one loop: 0, 0, 37
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 83, 0
execute_one time: 1, 83
----- executor 3 write_call_output, size 66546, pid 475, write pid:-2130674324
execute_call 0, 28, 0, 0
execute_one loop: 0, 0, 28
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 executes write_coverage_signal cov->size 66546, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_call 0, 29, 0, 1
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 30, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 3 signal number : 13
----- completed 9
execute_call 0, 0, 1, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 370, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 370, flag collect 0
----- executor 3 signal number : 139
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
execute_call 0, 2007, 0, 0
execute_one loop: 0, 0, 2007
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2124, 0
execute_one time: 1, 2124
----- executor 3 write_call_output, size 262143, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_call 0, 2007, 0, 4
execute_one loop: 0, 0, 2011
cover_reset in execute_call
----- executor 3 write_call_output, size 24960, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 24960, flag collect 0
----- executor 3 signal number : 2401
----- completed 12
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 368, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 368, flag collect 0
----- executor 3 signal number : 17
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 61, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 3 signal number : 35
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 355, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 3 signal number : 122
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6422, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6422, flag collect 0
----- executor 3 signal number : 345
----- completed 16
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 33, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 33, flag collect 0
----- executor 3 signal number : 4
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 417, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 417, flag collect 0
----- executor 3 signal number : 68
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 36, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 3 signal number : 5
----- completed 20
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 206, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 206, flag collect 0
----- executor 3 signal number : 13
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 46
----- completed 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 220, pid 475, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 7
----- completed 24
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2162, 3
execute_one time: 5, 2166
2023/03/25 14:44:20 for select break: 1
2023/03/25 14:44:20 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1494, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
time breakdown 3: 27, 2174, 0
----- executor 0 executes write_coverage_signal cov->size 18, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 806, flag collect 0
----- executor 1 signal number : 622
----- executor 1 executes write_coverage_signal cov->size 595, flag collect 0
----- executor 1 signal number : 79
----- executor 0 signal number : 709
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 868, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 1 signal number : 13
----- executor 0 signal number : 223
----- executor 0 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 0 signal number : 232
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2519, flag collect 0
----- executor 1 signal number : 1566
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 0 signal number : 39
----- executor 0 executes write_coverage_signal cov->size 857, flag collect 0
----- executor 0 signal number : 520
----- executor 0 executes write_coverage_signal cov->size 574, flag collect 0
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 757, flag collect 0
----- executor 0 signal number : 263
----- executor 0 executes write_coverage_signal cov->size 548, flag collect 0
----- executor 0 signal number : 106
----- executor 0 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 0 signal number : 93
----- executor 2 signal number : 1895
----- executor 2 executes write_coverage_signal cov->size 924, flag collect 0
----- executor 2 signal number : 692
----- executor 2 executes write_coverage_signal cov->size 272, flag collect 0
----- executor 2 signal number : 144
----- executor 2 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 2 signal number : 19
----- executor 2 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 2 signal number : 98
----- executor 2 executes write_coverage_signal cov->size 789, flag collect 0
----- executor 2 signal number : 145
----- executor 2 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 2 signal number : 172
----- executor 1 executes write_coverage_signal cov->size 3588, flag collect 0
executor 0 server cover_cnt 11 output_pos_value 2530
----- executor 2 executes write_coverage_signal cov->size 62, flag collect 0
----- executor 2 signal number : 26
----- executor 2 executes write_coverage_signal cov->size 53, flag collect 0
----- executor 2 signal number : 19
----- executor 2 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 2 signal number : 129
----- executor 1 signal number : 1479
----- executor 1 executes write_coverage_signal cov->size 3578, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 175, flag collect 0
----- executor 1 signal number : 904
----- executor 1 executes write_coverage_signal cov->size 1618, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 2130, flag collect 0
----- executor 2 signal number : 972
----- executor 2 executes write_coverage_signal cov->size 276, flag collect 0
----- executor 1 signal number : 280
executor 1 server cover_cnt 9 output_pos_value 4981
2023/03/25 14:44:20 for select break: 1
2023/03/25 14:44:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 2179, 0
before receive testcase: 0 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 591, flag collect 0
----- executor 2 signal number : 317
----- executor 2 executes write_coverage_signal cov->size 573, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 760, flag collect 0
2023/03/25 14:44:20 for select break: 1
2023/03/25 14:44:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 302
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 88, flag collect 0
----- executor 2 signal number : 18
executor 2 server cover_cnt 22 output_pos_value 5114
time breakdown 1: 24, 2180, 0
before receive testcase: 0 0
2023/03/25 14:44:20 for select break: 1
2023/03/25 14:44:20 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:44:20 wg wait finish
2023/03/25 14:44:20 ------ all executors finish execution
2023/03/25 14:44:20 exec time: 2204
2023/03/25 14:44:20 ----- PS len: 4
2023/03/25 14:44:20 [CLIENT] executor 3 has 24 replies
2023/03/25 14:44:20 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 2488 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 505 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 2401 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 345 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/25 14:44:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:20 [SERVER] executor 0 has 11 replies
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 709 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 223 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 232 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 39 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 520 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 263 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 106 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 0 receive 93 signal and 0 cover from userspace component
time breakdown 2: 24, 2182, 0
2023/03/25 14:44:20 [SERVER] executor 1 has 9 replies
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 622 signal and 0 cover from userspace component
2023/03/25 14:44:20 [SERVER] executor 2 has 22 replies
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 1895 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 692 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 144 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 1566 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 19 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 98 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 145 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 1479 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 172 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 26 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 19 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 904 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 129 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 1 receive 280 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 972 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 317 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 302 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:20 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:44:20 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:20 ----- no new client coverage: false, true
2023/03/25 14:44:20 mutate testcase with failures
2023/03/25 14:44:20 ----- insertCall()
2023/03/25 14:44:20 ----- insertCall()
2023/03/25 14:44:20 ----- insertCall()
2023/03/25 14:44:20 ----- insertCall()
2023/03/25 14:44:20 ----- mutateArg()
2023/03/25 14:44:20 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:20 disable threaded and collide
2023/03/25 14:44:20 prog length: 6
2023/03/25 14:44:20 prog length: 22
2023/03/25 14:44:20 HasCrashFail:true HasNetFail:false
14:44:20 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000000)={{0x7f, 0x45, 0x4c, 0x46, 0x6, 0x40, 0x1, 0xe1, 0xeb, 0x786c0c0918463524, 0x3e, 0x7, 0x3cd, 0x40, 0x5d, 0x0, 0xbd51, 0x38, 0x2, 0x1ff, 0x8001, 0x1f}, [{0x6, 0x7, 0x9, 0xff, 0x1d, 0x3, 0x5, 0xfffffffffffffe00}], "fc30c796c020cab71495b49003da72a17533152b4c47c2100b2dae9f226b727c611723e66738cf159150a690af15be4aa09097455ecd9d7c92950235745a25eaae207c3ba4ba2b681a5f18ffd5c1b9419cc8eac142541778716151a2e4d15bc2bdf7d07e023b8caaf584c462f8789d764cba75881cd6d4292a61f1f8", ['\x00', '\x00']}, 0x2f4)
r0 = dup(0xffffffffffffffff)
write$binfmt_elf32(0xffffffffffffffff, &(0x7f0000000300)={{0x7f, 0x45, 0x4c, 0x46, 0xff, 0x7, 0x3f, 0x7, 0x8, 0x3, 0x6, 0x2, 0xd0, 0x38, 0x2d0, 0x9, 0x8, 0x20, 0x2, 0xffe0, 0x1, 0xfffc}, [{0x7, 0x4, 0x3, 0x7e, 0x400, 0x20, 0xffffffff, 0x7b3a}], "", ['\x00', '\x00', '\x00', '\x00']}, 0x458)
fcntl$addseals(r0, 0x409, 0x4)
r1 = dup2(r0, r0)
fdatasync(r1)
write$binfmt_aout(r0, &(0x7f0000000780)={{0x107, 0x1, 0x81, 0xed, 0x252, 0x5, 0x189, 0x3}, "7bd1b21955f0b8166b7e5e650395908b204bcd9f549367963094c8596fc4eaa0f15c19c6f14790636b56281fcddbab9a303b8c25cff31b388ad6abf076f1d4276f75a4b5bb11ee56f10e754be9e15f1de0f57b588976ec552b3f43a21c5e11c971d038100947ce5ac08f11965bf13127ffa8abb7d4af1b858a0eb7f7c96c775308377c28b92f0db9057a55425e793762a19fd70dbaa2a4e0d12eaba545acb0dc6492d476fffc9e0a001c7b30bd765b8645962e7432b9bcaa5cd5"}, 0xda)
fsetxattr$security_smack_transmute(r1, &(0x7f0000000880), &(0x7f00000008c0), 0x4, 0xf0a9b04fd98341b5)
write$binfmt_elf64(r1, &(0x7f0000000900)={{0x7f, 0x45, 0x4c, 0x46, 0x7, 0x8, 0xf6, 0x9, 0x1, 0x3, 0x38, 0xffff, 0x143, 0x40, 0x280, 0x5, 0x1ff, 0x38, 0x1, 0x85, 0x401, 0x8}, [{0x5, 0x3, 0x4, 0xb373, 0x8, 0x0, 0x6}], "e705065df5bfb2b4cb6c1c68e39aa98bea001deb6f65f2a28cfd18a47be79e9afb9902015081de7a88a74a4f46c3763287187de34156c799edbaa154e577ed2ef252192f9cb86dc42dbd3641f442a291d575f6a26972b6e9d41e7f1794b11bfe927772075531cb9996fabdfc46fe0af6f47c337669b31d251b17dff1881e666c48588d72f4820cabfbd6dfd1501b9ee4b48d14caa2d880d622f1828efc5f6a6e2f1786ef0c75b0b2a2145f84da3be48e69b0c8d8a7fcaabe0d33b6d87b778642fd5ca89e4b7a01de613f8d35f1276d137c50e4303fddf3e5853289c97450ff6ee4c61cf8b84c49b6", ['\x00', '\x00']}, 0x360)
getdents64(r0, &(0x7f0000000c80)=""/146, 0x92)
pwritev(r0, &(0x7f0000000ec0)=[{&(0x7f0000000d40)="9c73e8059d1f4d57d19d0c7c02aa558ee8defad8efc46c99db55f1cb1a58bc4cda699e634f2f7922e933028834b8fd15dbab802654ca53863e093d104a899ef6b0dde4999952b17c327d3d312d931346cae8ac5365b6ee69c10b3a43a31fcb8da72c44e1337e3aa60c291e94c59cbcd873861535644fa77ff973391b6d10a54d0f4db82da69ab248a132938301fe9a007e8966b511c89eb11a8e91c8bce2fe211fa3b2d4ad114983bf09a478c1af", 0xae}, {&(0x7f0000000e00)="2e4d1abfd79c4b7ad149cfccc3c47cc68b8ba69cdddb64197e8262a76b903e308f499cd64204b9611ce3d8ef95aadae4b5f40b9356632a44978f", 0x3a}, {&(0x7f0000000e40)="7a471be3aa70c1d2baf9a218db5d7ae14c6bb108487e413fe12115bde91055fcd9f93c46680565197ae6170b676aee98b8e5175fe74e5efb9c427236f85532f2a32f46e4c5f9b7d647427623dd8ea4f2c0b445f38fcc40bd6f453ff126c8fcbf81460204fe7d5e6e8e21f28cda903bcf8acad5239d21c8615b", 0x79}], 0x3, 0x2, 0x319)
r2 = openat(0xffffffffffffffff, &(0x7f0000000f80)='./file0\x00', 0x1, 0x0)
fcntl$F_GET_FILE_RW_HINT(r2, 0x40d, &(0x7f0000000fc0))
syz_failure_sync(0x1, 0x3)
r3 = open(&(0x7f0000001000)='./file0\x00', 0x8401, 0x100)
write(r3, &(0x7f0000001040)="29ed07aa78c2d35f978cce0132b57a616a84c287f3833b04a5d90ffb44ae62f786384d4da3e5c695d418d9ba2329c4c0c86620cab2fa55e95d8364182d15d8ff6541793a5bc07ca72b73207427311fdebf48cada9d44a5cb82b826b5fa72e5d7e1ce50106c2d4f76be1e88b268db234a8d988903e54568c2f8b64599bd52d6995e1c3716847122e6aec52835b5445cee13a6ec395f8d8e99ab3e118ca97fba05", 0xa0)
fsetxattr$trusted_overlay_upper(r3, &(0x7f0000001100), &(0x7f0000001140)={0x0, 0xfb, 0x9b, 0x6, 0x5, "026acea502cb9a462a9f086f2ba8b09d", "dac3c838d23517143a34b4bdbbc3a3f799b6b7b21a7dce40bdb9f91a91f56cf0d8cc092ddd5ae9cbc68d613867da6f1f7597987f16a3d71b118f811761cac38fbb840dc7f97546d28a01bc532a422c8e579c5fb076c357dd139e2875f67a97483eb4ef226a2303a0eb800e46b9d4b947eddf1d3656ebacc7ab84be1a26fc601fcf9cb019aaef"}, 0x9b, 0x3)
r4 = fcntl$dupfd(0xffffffffffffffff, 0x0, r2)
fcntl$dupfd(r0, 0x406, r4)
r5 = dup2(r2, r3)
fsetxattr$trusted_overlay_upper(r5, &(0x7f0000001200), &(0x7f0000001240)={0x0, 0xfb, 0xa7, 0x1, 0x7, "7612f90bdfe29f7d1ba45a98aa7a4e0f", "25447a610d3fb7bdfcc9707c0843948d7c0423d0fe1a514fc3c1d915fb83898ba41673ba22eb9d635e40f29f2e7f6a25f2de789660fd0ccbdcb8048c66abb038d5d0711c7db01ad36ff98f5b8e03f27deff4adcefabf40e9027ab313733b3315f3651c508e60bd06e1dae4c881bc8459d80f5f28515d43411c8f9098ed3b282acf54a904040bf3cfee137377dbc07cf0f96e"}, 0xa7, 0x7)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 11568
remove dir: /root/beegfs-client/dfs-0-24
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-25 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-25
receive_execute: 5, 11
receive_execute: 11, 11
receive_execute: 6, 12
receive_execute: 2, 12
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 61953, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 61953, flag collect 0
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 555
----- completed 1
execute_call 0, 27, 0, 1
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 5
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 6
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 7
----- completed 11
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 22, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 3 signal number : 7
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 3 signal number : 178
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 949, 0, 0
execute_one loop: 0, 0, 949
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 982, 0
execute_one time: 1, 982
----- executor 3 write_call_output, size 262143, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 4
----- completed 15
execute_call 0, 948, 0, 4
execute_one loop: 0, 0, 952
cover_reset in execute_call
----- executor 3 write_call_output, size 3384, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3384, flag collect 0
----- executor 3 signal number : 1745
----- completed 16
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 21, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 476, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 994, 0
execute_one time: 2, 994
2023/03/25 14:44:21 for select break: 1
2023/03/25 14:44:21 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 998, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 4605, flag collect 0
----- executor 2 signal number : 1359
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 1 signal number : 42
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 882, flag collect 0
----- executor 1 signal number : 688
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1158, flag collect 0
----- executor 0 signal number : 830
----- executor 0 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 584, flag collect 0
----- executor 0 signal number : 265
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1049, flag collect 0
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 0 signal number : 9
executor 0 server cover_cnt 11 output_pos_value 1807
executor 1 server cover_cnt 5 output_pos_value 843
executor 2 server cover_cnt 2 output_pos_value 1379
2023/03/25 14:44:21 for select break: 1
2023/03/25 14:44:21 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 14, 1000, 0
before receive testcase: 0 0
2023/03/25 14:44:21 for select break: 1
2023/03/25 14:44:21 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:44:21 for select break: 1
2023/03/25 14:44:21 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:21 wg wait finish
2023/03/25 14:44:21 ------ all executors finish execution
2023/03/25 14:44:21 exec time: 1014
2023/03/25 14:44:21 ----- PS len: 4
2023/03/25 14:44:21 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:21 fuzzer receive 555 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 1745 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/25 14:44:21 [SERVER] executor 0 has 11 replies
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 830 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 265 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/25 14:44:21 [SERVER] executor 1 has 5 replies
2023/03/25 14:44:21 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 1 receive 688 signal and 0 cover from userspace component
2023/03/25 14:44:21 [SERVER] executor 2 has 2 replies
2023/03/25 14:44:21 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:21 ------- fuzzer executor 2 receive 1359 signal and 0 cover from userspace component
2023/03/25 14:44:21 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:21 ----- no new client coverage: false, true
2023/03/25 14:44:21 mutate testcase with failures
2023/03/25 14:44:21 ----- insertCall()
2023/03/25 14:44:21 ----- mutateArg()
2023/03/25 14:44:21 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:21 disable threaded and collide
2023/03/25 14:44:21 prog length: 6
2023/03/25 14:44:21 prog length: 22
2023/03/25 14:44:21 HasCrashFail:true HasNetFail:false
14:44:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@random={'trusted.', '\x00'})
syz_failure_sync(0x0, 0x3)
llistxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=""/79, 0x4f)
setxattr$trusted_overlay_origin(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x1)
fsetxattr(0xffffffffffffffff, &(0x7f0000000200)=@known='trusted.overlay.nlink\x00', &(0x7f0000000240)='trusted.', 0x8, 0x3)
setxattr$security_selinux(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)='system_u:object_r:devtty_t:s0\x00', 0x1e, 0x3)
r0 = open$dir(&(0x7f0000000340)='./file0\x00', 0x20800, 0x100)
r1 = open$dir(&(0x7f0000000380)='./file0\x00', 0x40, 0xc)
r2 = open$dir(&(0x7f0000000400)='./file0\x00', 0x10100, 0x0)
renameat(r1, &(0x7f00000003c0)='./file0\x00', r2, &(0x7f0000000440)='./file0\x00')
fsetxattr$trusted_overlay_origin(r1, &(0x7f0000000480), &(0x7f00000004c0), 0x2, 0x1)
r3 = openat(r1, &(0x7f0000000500)='./file0\x00', 0x40000, 0x100)
fgetxattr(r3, &(0x7f0000000540)=@known='trusted.overlay.metacopy\x00', &(0x7f0000000580)=""/148, 0x94)
syz_failure_sync(0x1, 0x3)
lsetxattr(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680)=@known='trusted.overlay.upper\x00', &(0x7f00000006c0)='system_u:object_r:devtty_t:s0\x00', 0x1e, 0x0)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f0000000700))
dup2(r0, r3)
lsetxattr$security_smack_transmute(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x4, 0x1)
fstat(0xffffffffffffffff, &(0x7f0000000840)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
chown(&(0x7f0000000800)='./file1\x00', 0xee00, r4)
setxattr$incfs_size(&(0x7f00000008c0)='./file1\x00', &(0x7f0000000900), &(0x7f0000000940)=0xffffffffffffcb05, 0x8, 0x2)
getxattr(&(0x7f0000000980)='./file1\x00', &(0x7f00000009c0)=@known='user.incfs.metadata\x00', &(0x7f0000000a00)=""/56, 0x38)
---

end of program
time breakdown 1: 16, 1001, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
time breakdown 0: 18, 1002, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4200
remove dir: /root/beegfs-client/dfs-0-25
remove dir time 5
-----finish removing dir
mkdir time 6
executor 3 create dir /root/beegfs-client/dfs-0-26 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-26
receive_execute: 1, 12
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
receive_execute: 3, 12
receive_execute: 6, 11
receive_execute: 3, 12
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
----- executor 3 write_call_output, size 3278, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3278, flag collect 0
----- executor 3 signal number : 1801
----- completed 1
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 830
executor 0 server cover_cnt 1 output_pos_value 834
/root/beegfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 84318, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 84318, flag collect 0
execute_call 0, 36, 0, 0
execute_one loop: 0, 0, 36
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 538
----- completed 2
execute_call 0, 36, 0, 2
execute_one loop: 0, 0, 38
cover_reset in execute_call
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
----- executor 3 write_call_output, size 3317, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3317, flag collect 0
----- executor 3 signal number : 126
----- completed 3
execute_call 0, 7, 0, 0
-----executor 0 collect shmids 7
----- directly resend shmid 7
execute_one loop: 0, 0, 7
cover_reset in execute_call
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 9
----- directly resend shmid 9
----- executor 3 write_call_output, size 3361, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3361, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 8
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 3360, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3360, flag collect 0
----- executor 3 signal number : 11
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3453, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3453, flag collect 0
----- executor 3 signal number : 188
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7294, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 7294, flag collect 0
----- executor 3 signal number : 662
----- completed 8
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3485, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3485, flag collect 0
----- executor 3 signal number : 118
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 166, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 166, flag collect 0
----- executor 3 signal number : 37
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 297, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 297, flag collect 0
----- executor 3 signal number : 102
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 417, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 417, flag collect 0
----- executor 3 signal number : 14
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 13
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
----- executor 3 write_call_output, size 262143, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 2975, 0, 0
execute_one loop: 0, 0, 2975
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 3038, 0
execute_one time: 1, 3039
----- executor 3 signal number : 11
----- completed 14
execute_call 0, 2976, 0, 3
execute_one loop: 0, 0, 2979
cover_reset in execute_call
----- executor 3 write_call_output, size 5869, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 5869, flag collect 0
----- executor 3 signal number : 123
----- completed 15
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 19, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 3 signal number : 4
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 3 signal number : 5
----- completed 17
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3317, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3317, flag collect 0
----- executor 3 signal number : 17
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 23, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 23, flag collect 0
----- executor 3 signal number : 8
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3556, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3556, flag collect 0
----- executor 3 signal number : 90
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3320, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3320, flag collect 0
----- executor 3 signal number : 16
----- completed 21
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 3304, pid 477, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3304, flag collect 0
----- executor 3 signal number : 20
----- completed 22
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 3063, 7
execute_one time: 2, 3070
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 64, flag collect 0
----- executor 1 signal number : 64
----- executor 1 executes write_coverage_signal cov->size 1275, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2616, flag collect 0
----- executor 1 signal number : 856
----- executor 1 executes write_coverage_signal cov->size 3892, flag collect 0
----- executor 2 signal number : 633
----- executor 1 signal number : 1005
----- executor 1 executes write_coverage_signal cov->size 2664, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 8
----- executor 1 signal number : 259
----- executor 1 executes write_coverage_signal cov->size 3803, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 4
----- executor 1 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 61
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 2 signal number : 30
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 0 signal number : 482
----- executor 0 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 0 signal number : 18
executor 1 server cover_cnt 10 output_pos_value 3343
----- executor 0 executes write_coverage_signal cov->size 49, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 1088, flag collect 0
----- executor 0 signal number : 616
executor 2 server cover_cnt 5 output_pos_value 705
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 0 signal number : 17
time breakdown 3: 17, 3076, 0
before receive testcase: 0 1
executor 0 server cover_cnt 12 output_pos_value 2123
time breakdown 2: 15, 3080, 0
before receive testcase: 0 1
2023/03/25 14:44:24 for select break: 1
2023/03/25 14:44:24 for select break: 1
2023/03/25 14:44:24 for select break: 1
2023/03/25 14:44:24 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:44:24 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:44:24 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:24 for select break: 1
2023/03/25 14:44:24 --------- executor 3 receive reply, reply.done 1
2023/03/25 14:44:24 wg wait finish
2023/03/25 14:44:24 ------ all executors finish execution
2023/03/25 14:44:24 exec time: 3094
2023/03/25 14:44:24 ----- PS len: 4
2023/03/25 14:44:24 [SERVER] executor 1 has 10 replies
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 856 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 1005 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 259 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/25 14:44:24 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:24 fuzzer receive 1801 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 538 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 188 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 662 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 118 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:44:24 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/25 14:44:24 [SERVER] executor 2 has 5 replies
2023/03/25 14:44:24 ------- fuzzer executor 2 receive 633 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
time breakdown 1: 15, 3079, 0
before receive testcase: 0 1
2023/03/25 14:44:24 [SERVER] executor 0 has 12 replies
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 830 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 482 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 616 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:24 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/25 14:44:24 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:24 ----- no new client coverage: false, true
2023/03/25 14:44:24 mutate testcase with failures
2023/03/25 14:44:24 ----- mutateArg()
2023/03/25 14:44:24 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:24 disable threaded and collide
2023/03/25 14:44:24 prog length: 6
2023/03/25 14:44:24 prog length: 22
2023/03/25 14:44:24 HasCrashFail:true HasNetFail:false
14:44:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000000000)='./file0\x00', 0xca)
lchown(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
chdir(&(0x7f0000000080)='./file0\x00')
lsetxattr$security_selinux(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='system_u:object_r:init_exec_t:s0\x00', 0x21, 0x2)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='./file0\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x1)
readlinkat(0xffffffffffffff9c, &(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=""/190, 0xbe)
r0 = open$dir(&(0x7f0000000400)='./file0\x00', 0x101800, 0x100)
linkat(r0, &(0x7f0000000440)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000480)='./file0\x00', 0x1800)
symlink(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)='./file0\x00')
readlink(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)=""/248, 0xf8)
setxattr$incfs_metadata(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0), &(0x7f0000000700)="efe600182557ff418b258e40c9611c3a2652ccd7f99cde874f510b7440f56a9a97", 0x21, 0x2)
lsetxattr$security_selinux(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0)='system_u:object_r:hald_sonypic_exec_t:s0\x00', 0x29, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000800)='./file0\x00', &(0x7f0000000840), &(0x7f0000000880)={0x0, 0xfb, 0x42, 0x6, 0x4, "dd194c3342e402d411d6f72d3f861cfa", "94a72454bbf513ec61bae0e7ab7eeb5c16bd28bb079c2e15e53a42c611af3a96bf5d69e244218b590a571d2af2"}, 0x42, 0x1)
chmod(&(0x7f0000000900)='./file0\x00', 0x282)
rename(&(0x7f0000000c00)='./file0\x00', &(0x7f0000000980)='./file0\x00')
readlinkat(0xffffffffffffff9c, &(0x7f00000009c0)='./file0\x00', &(0x7f0000000a00)=""/195, 0xc3)
llistxattr(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000b40)=""/177, 0xb1)
fsync(r0)
openat(0xffffffffffffffff, &(0x7f0000000c40)='./file0\x00', 0x101000, 0x81)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4192
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/beegfs-client/dfs-0-26
time breakdown 0: 13, 3081, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 9
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-27 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-27
receive_execute: 4, 12
receive_execute: 7, 13
receive_execute: 4, 13
receive_execute: 2, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1247, flag collect 0
----- executor 0 signal number : 876
executor 0 server cover_cnt 1 output_pos_value 880
execute_call 0, 34, 0, 0
execute_one loop: 0, 0, 34
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 80380, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 80380, flag collect 0
----- executor 3 signal number : 538
----- completed 1
execute_call 0, 34, 0, 1
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 8702, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8702, flag collect 0
----- executor 3 signal number : 2135
----- completed 2
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 3196, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3196, flag collect 0
----- executor 3 signal number : 297
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3369, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3369, flag collect 0
----- executor 3 signal number : 99
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3189, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3189, flag collect 0
----- executor 3 signal number : 82
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 2992, 0, 0
execute_one loop: 0, 0, 2992
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3035, 0
execute_one time: 1, 3036
----- executor 3 write_call_output, size 262143, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 9
----- completed 6
execute_call 0, 2991, 0, 4
execute_one loop: 0, 0, 2995
cover_reset in execute_call
----- executor 3 write_call_output, size 6595, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6595, flag collect 0
----- executor 3 signal number : 172
----- completed 7
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3878, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3878, flag collect 0
----- executor 3 signal number : 22
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 444, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 3 signal number : 16
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 708, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 708, flag collect 0
----- executor 3 signal number : 153
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 14801, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 14801, flag collect 0
----- executor 3 signal number : 620
----- completed 12
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 11901, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 11901, flag collect 0
----- executor 3 signal number : 305
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 262143, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 2191
----- completed 14
execute_call 0, 191, 0, 6
execute_one loop: 0, 0, 197
cover_reset in execute_call
----- executor 3 write_call_output, size 4066, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4066, flag collect 0
----- executor 3 signal number : 91
----- completed 15
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3568, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3568, flag collect 0
----- executor 3 signal number : 85
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 262143, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
----- executor 3 signal number : 2591
----- completed 17
execute_call 0, 292, 0, 4
execute_one loop: 0, 0, 296
cover_reset in execute_call
----- executor 3 write_call_output, size 6934, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6934, flag collect 0
----- executor 3 signal number : 134
----- completed 18
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 12416, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 12416, flag collect 0
----- executor 3 signal number : 131
----- completed 19
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 2929, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2929, flag collect 0
----- executor 3 signal number : 71
----- completed 20
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 0
----- executor 3 signal number : 7
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 478, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 3 signal number : 22
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3576, 0
execute_one time: 2, 3576
2023/03/25 14:44:28 for select break: 1
2023/03/25 14:44:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2319, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1558, flag collect 0
----- executor 1 signal number : 681
----- executor 1 executes write_coverage_signal cov->size 22610, flag collect 0
----- executor 2 signal number : 634
----- executor 2 executes write_coverage_signal cov->size 16608, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2575, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 0 signal number : 952
----- executor 0 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 1 signal number : 42
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 30
----- executor 0 executes write_coverage_signal cov->size 1005, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 112
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 9478, flag collect 0
----- executor 2 signal number : 566
----- executor 2 executes write_coverage_signal cov->size 9954, flag collect 0
----- executor 2 signal number : 450
----- executor 2 executes write_coverage_signal cov->size 9478, flag collect 0
----- executor 2 signal number : 55
----- executor 2 executes write_coverage_signal cov->size 9954, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9478, flag collect 0
----- executor 1 signal number : 3291
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 56
----- executor 2 executes write_coverage_signal cov->size 9954, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9478, flag collect 0
----- executor 0 signal number : 1740
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 18
----- executor 2 signal number : 56
----- executor 2 executes write_coverage_signal cov->size 9243, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 8801, flag collect 0
----- executor 2 signal number : 52
----- executor 2 executes write_coverage_signal cov->size 11063, flag collect 0
----- executor 1 signal number : 464
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2003, flag collect 0
----- executor 0 signal number : 614
----- executor 0 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 0 signal number : 0
time breakdown 3: 20, 3581, 0
before receive testcase: 0 0
----- executor 2 signal number : 600
----- executor 2 executes write_coverage_signal cov->size 9478, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 2 signal number : 58
----- executor 2 executes write_coverage_signal cov->size 9954, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 1 signal number : 805
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 55, flag collect 0
----- executor 0 signal number : 2
executor 0 server cover_cnt 15 output_pos_value 4738
executor 2 server cover_cnt 17 output_pos_value 2728
----- executor 1 signal number : 1691
----- executor 1 executes write_coverage_signal cov->size 902, flag collect 0
----- executor 1 signal number : 232
executor 1 server cover_cnt 11 output_pos_value 7343
time breakdown 0: 15, 3587, 0
before receive testcase: 0 1
2023/03/25 14:44:28 for select break: 1
2023/03/25 14:44:28 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:44:28 for select break: 1
2023/03/25 14:44:28 --------- executor 0 receive reply, reply.done 1
2023/03/25 14:44:28 for select break: 1
2023/03/25 14:44:28 --------- executor 1 receive reply, reply.done 1
2023/03/25 14:44:28 wg wait finish
2023/03/25 14:44:28 ------ all executors finish execution
2023/03/25 14:44:28 exec time: 3601
2023/03/25 14:44:28 ----- PS len: 4
2023/03/25 14:44:28 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:28 fuzzer receive 538 signal and 0 cover from executor 3
2023/03/25 14:44:28 [SERVER] executor 1 has 11 replies
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 681 signal and 0 cover from userspace component
2023/03/25 14:44:28 [SERVER] executor 2 has 17 replies
2023/03/25 14:44:28 fuzzer receive 2135 signal and 0 cover from executor 3
2023/03/25 14:44:28 [SERVER] executor 0 has 15 replies
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 876 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 952 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 30 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 1740 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 614 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 42 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 3291 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 464 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 805 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 1691 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 1 receive 232 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 634 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 112 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 566 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 450 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 55 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 56 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 56 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 52 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 600 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 58 signal and 0 cover from userspace component
2023/03/25 14:44:28 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/25 14:44:28 fuzzer receive 297 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 153 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 620 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 305 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 2191 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 2591 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/25 14:44:28 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/25 14:44:28 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:28 ----- no new client coverage: false, true
2023/03/25 14:44:28 ----- enqueue testcases with server coveraged
time breakdown 1: 17, 3587, 0
before receive testcase: 0 0
2023/03/25 14:44:28 disable threaded and collide
2023/03/25 14:44:28 prog length: 6
2023/03/25 14:44:28 prog length: 22
time breakdown 2: 17, 3586, 0
before receive testcase: 0 1
2023/03/25 14:44:28 HasCrashFail:true HasNetFail:false
14:44:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000000000)='./file0\x00', 0xca)
lchown(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
chdir(&(0x7f0000000080)='./file0\x00')
lsetxattr$security_selinux(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='system_u:object_r:init_exec_t:s0\x00', 0x21, 0x2)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='./file0\x00', 0x8, 0x2)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x1)
readlinkat(0xffffffffffffff9c, &(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=""/190, 0xbe)
r0 = open$dir(&(0x7f0000000400)='./file0\x00', 0x101800, 0x100)
linkat(r0, &(0x7f0000000440)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000480)='./file0\x00', 0x1800)
symlink(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)='./file0\x00')
readlink(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)=""/248, 0xf8)
setxattr$incfs_metadata(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0), &(0x7f0000000700)="efe600182557ff418b258e40c9611c3a2652ccd7f99cde874f510b7440f56a9a97", 0x21, 0x2)
lsetxattr$security_selinux(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0)='system_u:object_r:hald_sonypic_exec_t:s0\x00', 0x29, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000800)='./file0\x00', &(0x7f0000000840), &(0x7f0000000880)={0x0, 0xfb, 0x42, 0x6, 0x4, "dd194c3342e402d411d6f72d3f861cfa", "94a72454bbf513ec61bae0e7ab7eeb5c16bd28bb079c2e15e53a42c611af3a96bf5d69e244218b590a571d2af2"}, 0x42, 0x1)
chmod(&(0x7f0000000900)='./file0\x00', 0x282)
rename(&(0x7f0000000c00)='./file0\x00', &(0x7f0000000980)='./file0\x00')
readlinkat(0xffffffffffffff9c, &(0x7f00000009c0)='./file0\x00', &(0x7f0000000a00)=""/195, 0xc3)
llistxattr(&(0x7f0000000b00)='./file0\x00', &(0x7f0000000b40)=""/177, 0xb1)
fsync(r0)
openat(0xffffffffffffffff, &(0x7f0000000c40)='./file0\x00', 0x101000, 0x81)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4192
remove dir: /root/beegfs-client/dfs-0-27
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/beegfs-client/dfs-0-28 successfully
receive_execute: 5, 10
receive_execute: 5, 11
current dir: executor 3: /root/beegfs-client/dfs-0-28
receive_execute: 11, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 5, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 37267, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 37267, flag collect 1
-----executor 0 collect shmids 8
----- directly resend shmid 8
----- executor 3 cover number : 519, signal number : 539
----- completed 1
execute_call 0, 26, 0, 5
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 8225, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 8225, flag collect 1
----- executor 3 cover number : 2039, signal number : 2141
----- completed 2
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 3158, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3158, flag collect 1
----- executor 3 cover number : 1796, signal number : 299
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4168, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 4168, flag collect 1
----- executor 3 cover number : 1794, signal number : 199
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 9
----- directly resend shmid 9
----- executor 3 write_call_output, size 3187, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3187, flag collect 1
----- executor 3 cover number : 1675, signal number : 84
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 262143, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 1
execute_call 0, 2470, 0, 0
execute_one loop: 0, 0, 2470
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2512, 0
execute_one time: 1, 2512
----- executor 3 cover number : 338, signal number : 14
----- completed 6
execute_call 0, 2470, 0, 51
execute_one loop: 0, 0, 2521
cover_reset in execute_call
----- executor 3 write_call_output, size 6001, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6001, flag collect 1
----- executor 3 cover number : 1860, signal number : 151
----- completed 7
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 3366, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3366, flag collect 1
----- executor 3 cover number : 1795, signal number : 28
----- completed 8
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 3340, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3340, flag collect 1
----- executor 3 cover number : 1781, signal number : 29
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3474, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 3 cover number : 1913, signal number : 200
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 1
----- executor 3 cover number : 16, signal number : 4
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17515, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 17515, flag collect 1
----- executor 3 cover number : 2485, signal number : 634
----- completed 12
execute_call 0, 6, 0, 4
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 12961, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 12961, flag collect 1
----- executor 3 cover number : 2162, signal number : 311
----- completed 13
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 262143, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 1
----- executor 3 cover number : 2116, signal number : 2417
----- completed 14
execute_call 0, 201, 0, 39
execute_one loop: 0, 0, 240
cover_reset in execute_call
----- executor 3 write_call_output, size 3512, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3512, flag collect 1
----- executor 3 cover number : 1782, signal number : 89
----- completed 15
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3065, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3065, flag collect 1
----- executor 3 cover number : 1639, signal number : 84
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 262143, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 1
----- executor 3 cover number : 2402, signal number : 3370
----- completed 17
execute_call 0, 185, 0, 40
execute_one loop: 0, 0, 225
cover_reset in execute_call
----- executor 3 write_call_output, size 6399, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 6399, flag collect 1
----- executor 3 cover number : 1755, signal number : 150
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 13625, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 13625, flag collect 1
----- executor 3 cover number : 2415, signal number : 210
----- completed 19
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 2930, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 2930, flag collect 1
----- executor 3 cover number : 1578, signal number : 89
----- completed 20
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 20, flag collect 1
----- executor 3 cover number : 20, signal number : 7
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 413, pid 480, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 413, flag collect 1
----- executor 3 cover number : 188, signal number : 30
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3066, 0
execute_one time: 3, 3066
2023/03/25 14:44:31 for select break: 1
2023/03/25 14:44:31 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1546, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 1494, flag collect 1
----- executor 1 cover number : 601, signal number : 622
----- executor 1 executes write_coverage_signal cov->size 22865, flag collect 1
----- executor 2 cover number : 608, signal number : 634
----- executor 2 executes write_coverage_signal cov->size 16600, flag collect 1
----- executor 2 cover number : 101, signal number : 107
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 2 cover number : 4, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 39, flag collect 1
----- executor 2 cover number : 13, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 30, flag collect 1
----- executor 1 cover number : 77, signal number : 79
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 22, flag collect 1
----- executor 1 cover number : 22, signal number : 22
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 6, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 30, signal number : 30
----- executor 2 executes write_coverage_signal cov->size 9982, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1427, signal number : 1749
----- executor 0 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 0 cover number : 36, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 915, flag collect 1
----- executor 0 cover number : 260, signal number : 235
----- executor 0 executes write_coverage_signal cov->size 1255, flag collect 1
----- executor 0 cover number : 868, signal number : 838
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 1
----- executor 0 cover number : 59, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 652, flag collect 1
----- executor 0 cover number : 315, signal number : 260
----- executor 0 executes write_coverage_signal cov->size 72, flag collect 1
----- executor 0 cover number : 70, signal number : 38
----- executor 0 executes write_coverage_signal cov->size 67, flag collect 1
----- executor 0 cover number : 65, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
time breakdown 3: 22, 3072, 0
before receive testcase: 0 0
----- executor 0 cover number : 598, signal number : 599
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 1
----- executor 0 cover number : 76, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 1
----- executor 0 cover number : 77, signal number : 10
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 1
----- executor 0 cover number : 24, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 28, flag collect 1
----- executor 0 cover number : 24, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 23, flag collect 1
----- executor 0 cover number : 22, signal number : 7
executor 0 server cover_cnt 14 output_pos_value 7774
----- executor 2 cover number : 555, signal number : 550
----- executor 2 executes write_coverage_signal cov->size 9576, flag collect 1
----- executor 2 cover number : 612, signal number : 552
----- executor 2 executes write_coverage_signal cov->size 9982, flag collect 1
2023/03/25 14:44:31 for select break: 1
2023/03/25 14:44:31 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 555, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 9576, flag collect 1
----- executor 1 cover number : 3136, signal number : 3830
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 16, 3079, 0
before receive testcase: 0 1
----- executor 2 cover number : 612, signal number : 84
----- executor 2 executes write_coverage_signal cov->size 9982, flag collect 1
----- executor 2 cover number : 555, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9576, flag collect 1
----- executor 2 cover number : 612, signal number : 84
----- executor 2 executes write_coverage_signal cov->size 9269, flag collect 1
----- executor 2 cover number : 555, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 8892, flag collect 1
----- executor 1 cover number : 3217, signal number : 1276
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 612, signal number : 78
----- executor 2 executes write_coverage_signal cov->size 11111, flag collect 1
----- executor 2 cover number : 1111, signal number : 619
----- executor 2 executes write_coverage_signal cov->size 9576, flag collect 1
----- executor 2 cover number : 612, signal number : 86
----- executor 2 executes write_coverage_signal cov->size 9982, flag collect 1
----- executor 1 cover number : 2588, signal number : 904
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 555, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 9576, flag collect 1
----- executor 2 cover number : 612, signal number : 85
executor 2 server cover_cnt 17 output_pos_value 11295
2023/03/25 14:44:31 for select break: 1
2023/03/25 14:44:31 --------- executor 1 receive reply, reply.done 1
----- executor 1 cover number : 2853, signal number : 990
----- executor 1 executes write_coverage_signal cov->size 905, flag collect 1
----- executor 1 cover number : 663, signal number : 225
executor 1 server cover_cnt 11 output_pos_value 21185
2023/03/25 14:44:31 for select break: 1
2023/03/25 14:44:31 --------- executor 2 receive reply, reply.done 1
2023/03/25 14:44:31 wg wait finish
2023/03/25 14:44:31 ------ all executors finish execution
2023/03/25 14:44:31 exec time: 3117
2023/03/25 14:44:31 ----- PS len: 4
2023/03/25 14:44:31 [SERVER] executor 1 has 11 replies
2023/03/25 14:44:31 [SERVER] executor 0 has 14 replies
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 622 signal and 601 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 1749 signal and 1427 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 79 signal and 77 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 4 signal and 4 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 22 signal and 22 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 12 signal and 36 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 7 signal and 6 cover from userspace component
2023/03/25 14:44:31 [SERVER] executor 2 has 17 replies
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 3830 signal and 3136 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 634 signal and 608 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 107 signal and 101 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 4 signal and 4 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 1276 signal and 3217 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 14 signal and 13 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 30 signal and 30 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 550 signal and 555 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 904 signal and 2588 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 552 signal and 612 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 990 signal and 2853 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 1 signal and 555 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 1 receive 225 signal and 663 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 84 signal and 612 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 0 signal and 555 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 84 signal and 612 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 0 signal and 555 cover from userspace component
2023/03/25 14:44:31 [CLIENT] executor 3 has 22 replies
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 235 signal and 260 cover from userspace component
2023/03/25 14:44:31 fuzzer receive 539 signal and 519 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 2141 signal and 2039 cover from executor 3
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 838 signal and 868 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 78 signal and 612 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 619 signal and 1111 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 86 signal and 612 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 1 signal and 555 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 2 receive 85 signal and 612 cover from userspace component
2023/03/25 14:44:31 fuzzer receive 299 signal and 1796 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 199 signal and 1794 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 84 signal and 1675 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 14 signal and 338 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 151 signal and 1860 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 28 signal and 1795 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 29 signal and 1781 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 200 signal and 1913 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 4 signal and 16 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 634 signal and 2485 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 311 signal and 2162 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 2417 signal and 2116 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 89 signal and 1782 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 84 signal and 1639 cover from executor 3
time breakdown 2: 16, 3106, 0
2023/03/25 14:44:31 fuzzer receive 3370 signal and 2402 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 150 signal and 1755 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 210 signal and 2415 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 89 signal and 1578 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 7 signal and 20 cover from executor 3
2023/03/25 14:44:31 fuzzer receive 30 signal and 188 cover from executor 3
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 32 signal and 59 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 260 signal and 315 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 38 signal and 70 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 8 signal and 65 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 599 signal and 598 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 22 signal and 76 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 10 signal and 77 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 0 signal and 24 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 0 signal and 24 cover from userspace component
2023/03/25 14:44:31 ------- fuzzer executor 0 receive 7 signal and 22 cover from userspace component
before receive testcase: 0 0
2023/03/25 14:44:31 fsMds: [map[] map[] map[] map[]]
2023/03/25 14:44:31 ----- triage return due to empty signal extra
2023/03/25 14:44:31 mutate testcase with failures
time breakdown 1: 16, 3104, 0
before receive testcase: 0 0
2023/03/25 14:44:31 ----- mutateFailPos()
2023/03/25 14:44:31 insert call 1 at pos 2
2023/03/25 14:44:31 ----- mutateArg()
2023/03/25 14:44:31 ----- insertCall()
2023/03/25 14:44:31 ----- mutateArg()
2023/03/25 14:44:31 ----- insertCall()
2023/03/25 14:44:31 ----- insertCall()
2023/03/25 14:44:31 ----- mutateFailPos()
2023/03/25 14:44:31 insert call 2 at pos 3
2023/03/25 14:44:31 HasCrashFail: true, .HasNetFail: false
2023/03/25 14:44:31 disable threaded and collide
2023/03/25 14:44:31 prog length: 6
2023/03/25 14:44:31 prog length: 22
2023/03/25 14:44:31 HasCrashFail:true HasNetFail:false
14:44:31 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
readlinkat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/9, 0x9)
setxattr$security_ima(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=@v1={0x2, "ccda7ce154e6782e6e65"}, 0xb, 0x3)
syz_failure_sync(0x1, 0x3)
readlinkat(0xffffffffffffffff, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180), 0x0)
setxattr$security_evm(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000180)=ANY=[@ANYBLOB="236cd1ed7aac946cb0"], 0x9, 0x1)
mkdir(&(0x7f0000000280)='./file0\x00', 0xc0)
mkdirat(0xffffffffffffffff, &(0x7f00000002c0)='./file0\x00', 0x30)
link(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='./file0\x00')
setxattr$trusted_overlay_upper(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400)={0x0, 0xfb, 0x9f, 0x0, 0xa7, "bf9e48ae683b530eb2e9b8ccc2907b75", "2072461d67f2d166ed8e83d46669fb03dfa8691cc898a3f18597162d2125d68da0b5e40fdfb109ae9524b081414887234cffc6f37d50d805012b50cb7d61a38347babe0ddcc16dbfb607937a68f0a7efe2b4e09b964f8bea6d09fcea88476717958577b20bec99319538f735cb79f8bede9885b63d111836c4b91ddd9e575e774154ceaae43d5b36d66d"}, 0x9f, 0x2)
lsetxattr$security_selinux(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500), &(0x7f0000000540)='system_u:object_r:dhcpd_initrc_exec_t:s0\x00', 0x29, 0x2)
setxattr$incfs_size(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)=0x80000000, 0x8, 0x3)
r0 = open$dir(&(0x7f0000000640)='./file0\x00', 0x10000, 0xa0)
faccessat(r0, &(0x7f0000000680)='./file0\x00', 0x28)
setxattr$incfs_id(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700), &(0x7f0000000740)={'0000000000000000000000000000000', 0x33}, 0x20, 0x2)
setxattr$incfs_metadata(&(0x7f0000000780)='./file0\x00', &(0x7f00000007c0), &(0x7f0000000800)="ad60e27975e705fd2f174ca5adf464c3c2f99b313e40b420da0c73dc67256c2d39668c505f90efc6681143923f3a9e02161671c9a193d7d7a2a6b285f466afe760075f47b1c0f6a2709c84ed39f9cc473d652d1047d63aae72e10bab9b854f650229710257c2fa42c2f925b666192987565dc2cec8a89d783f5fe65535e612a90c0719a99d6f265b033fc9e1628f2123a94a", 0x92, 0x2)
setxattr$trusted_overlay_origin(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900), &(0x7f0000000940), 0x2, 0x3)
chdir(&(0x7f0000000980)='./file0\x00')
open(&(0x7f00000009c0)='./file1\x00', 0x60000, 0x2a)
lsetxattr$security_evm(&(0x7f0000000a00)='./file0\x00', &(0x7f0000000a40), &(0x7f0000000240)=ANY=[@ANYBLOB="05030e0000024000368374f59c86f8267ab120da628e6d3fba2adc562113c4cae04fa71e39092ab412fa8f0ab60bd515cad253b51191265e410eb3b166f7a3"], 0x3f, 0x3)
lsetxattr$user(&(0x7f0000000ac0)='./file0\x00', &(0x7f0000000b00), &(0x7f0000000b40)='^-+\x00', 0x4, 0x0)
open$dir(&(0x7f0000000b80)='./file2\x00', 0x0, 0x100)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 3: prog_data_offset 1576, prog_size 5024
remove dir: /root/beegfs-client/dfs-0-28
remove dir time 7
-----finish removing dir
receive_execute: 29, 18
receive_execute: 3, 19
receive_execute: 2, 19
mkdir time 5
executor 3 create dir /root/beegfs-client/dfs-0-29 successfully
current dir: executor 3: /root/beegfs-client/dfs-0-29
receive_execute: 35, 19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
executor 0 write_server_output
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
/root/beegfs-node-down.sh: 1: kill: No such process

execute_call 0, 34, 0, 0
execute_one loop: 0, 0, 34
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 79499, pid 481, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 79499, flag collect 0
----- executor 3 signal number : 539
----- completed 1
execute_call 0, 34, 0, 1
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 481, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 72
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3274, pid 481, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 3274, flag collect 0
----- executor 3 signal number : 1709
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 7
----- directly resend shmid 7
Node-0:/root/daemon-log.938
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 0
----- directly resend shmid 0
=================================================================
==938==ERROR: AddressSanitizer: heap-use-after-free on address 0x617000000270 at pc 0x5555556c3cc4 bp 0x7fffffffd720 sp 0x7fffffffd710
READ of size 8 at 0x617000000270 thread T0 (beegfs-mgmtd/Ma)
    #0 0x5555556c3cc3 in Atomic<unsigned long>::read() const /root/beegfs-v7/packages/build/common/source/common/threading/Atomics.h:154
    #1 0x5555556c3cc3 in App::signalHandler(int) /root/beegfs-v7/packages/build/mgmtd/source/app/App.cpp:913
    #2 0x7ffff705b0bf  (/lib/x86_64-linux-gnu/libc.so.6+0x430bf)
    #3 0x7ffff75ca23c in UnregisterGlobal ../../../../src/libsanitizer/asan/asan_globals.cc:226
    #4 0x7ffff75ca23c in __asan_unregister_globals ../../../../src/libsanitizer/asan/asan_globals.cc:390
    #5 0x7ffff75ca23c in __asan_unregister_globals ../../../../src/libsanitizer/asan/asan_globals.cc:381
    #6 0x7ffff7fe0f5a  (/lib64/ld-linux-x86-64.so.2+0x11f5a)
    #7 0x7ffff705e8d6  (/lib/x86_64-linux-gnu/libc.so.6+0x468d6)
    #8 0x7ffff705ea8f in exit (/lib/x86_64-linux-gnu/libc.so.6+0x46a8f)
    #9 0x7ffff703c0b9 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x240b9)
    #10 0x5555556b382d in _start (/opt/beegfs/sbin/beegfs-mgmtd+0x15f82d)

0x617000000270 is located 496 bytes inside of 760-byte region [0x617000000080,0x617000000378)
freed by thread T0 (beegfs-mgmtd/Ma) here:
    #0 0x7ffff76a3c65 in operator delete(void*, unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:177
    #1 0x5555556af83c in Program::main(int, char**) /root/beegfs-v7/packages/build/mgmtd/source/program/Program.cpp:18

previously allocated by thread T0 (beegfs-mgmtd/Ma) here:
    #0 0x7ffff76a2587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104
    #1 0x5555556af790 in Program::main(int, char**) /root/beegfs-v7/packages/build/mgmtd/source/program/Program.cpp:12

SUMMARY: AddressSanitizer: heap-use-after-free /root/beegfs-v7/packages/build/common/source/common/threading/Atomics.h:154 in Atomic<unsigned long>::read() const
Shadow bytes around the buggy address:
  0x0c2e7fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c2e7fff8000: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8010: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2e7fff8020: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2e7fff8030: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c2e7fff8040: fd fd fd fd fd fd fd fd fd fd fd fd fd fd[fd]fd
  0x0c2e7fff8050: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2e7fff8060: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fa
  0x0c2e7fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2e7fff8090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==938==ABORTING
----- executor 3 write_call_output, size 262143, pid 481, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 262143, flag collect 0
execute_call 0, 697, 0, 0
execute_one loop: 0, 0, 697
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 736, 0
execute_one time: 1, 736
----- executor 3 signal number : 3
----- completed 4
execute_call 0, 697, 0, 5
execute_one loop: 0, 0, 702
cover_reset in execute_call
----- executor 3 write_call_output, size 16, pid 481, write pid:-2130674324
----- executor 3 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call

VM DIAGNOSIS:
14:44:32  Registers:
info registers vcpu 0
RAX=dffffc0000000000 RBX=ff110002650351c0 RCX=1fe220004ca06a38 RDX=ff110002650351a0
RSI=ff1100026194f7b8 RDI=ff110002650351c0 RBP=0000000000000001 RSP=ff1100026194f7f0
R8 =0000000000000000 R9 =ffd4000008f90c80 R10=000000000000000a R11=000000000023e432
R12=ffd4000008f80700 R13=0000000000000002 R14=ff110002bfffa000 R15=ffd4000008f80708
RIP=ffffffff815d51e5 RFL=00000046 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fffee927008 CR3=000000000440e005 CR4=00761ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00007fffffffca500000003000000008 XMM01=00007fffffffc1c00000003000000008
XMM02=00007ffff76c65703030303000000000 XMM03=000000000000000000007fffffffbf80
XMM04=2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f2f XMM05=000000000000001200007ffff14596c4
XMM06=00007ffff76c657000007fff00000000 XMM07=00007fff0000000000007fffffffc090
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=ffffffff83726170 RBX=ff110002635cea40 RCX=ffffffff83726e69 RDX=1fe220004c6b9d48
RSI=0000000000000008 RDI=ff110002635cea40 RBP=ffe21c004c6b9d48 RSP=ff11000263607dd0
R8 =0000000000000001 R9 =ffe21c004c6b9d49 R10=ffe21c004c6b9d48 R11=ff110002635cea47
R12=0000000000000001 R13=0000000000000001 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff83726193 RFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265100000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003c000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003a000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff0010bd8 CR3=0000000261580001 CR4=00761ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=ffffffffff000000ffffffff0000ff00 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffffffffffffffff0000 XMM05=00000000000000000000000000000000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
