a068efae4b78f11c79052ec6e86cd2c75553e06af482d4508e15444536b6b328d394b50ad7e3d0b34f24115677c25af9436205243af8e35be2c1289503aee04494b8c8e9400aaec6022afc9d966ab3c8669a1daefa80c0b5bdc24be2547b4163ac618350e53b1a8cfa45ff3a074e46e460d09ce5ee60e42073429d7f0920e6193b5bad23c40626275aeeaea542ecd0f35cdedfd9f77c408078e42da802521802b533f9522418458c2068eba167d3f293e6544e0fc611e77ae6287a4075ac317649510bd647ac50464b8cf9962b1b5302d24270323d45bf0b8baee4c5f635c9cef4cb68887063ff913676b51a20e04a77c30703ac32a9a3675bd3516977a93c31f3d09a6d05efa45ca8047e39e77eeeb9aaf5d1c9f4b527312b61ac03d8cecbd2797b2c6a997be98cd5d737a2283a3eccf462686050f4c215c317c8681d94ccc0d93f31b40bf34480ae5fcaa3006d03a97827beae03c2b1b5d9c183193abc294d4be121e63efb7a5e9d5a2e8672e738e15107c2be34c61de308d1bb34ba70b1cd0ec89230d8d9d00f7fbb71dc216c1b5496c875577101994bc28c248f5bb06816577532ad79725334c821652408219f4d32b6f0ee54a0112b425ad823f5fe010f35db50ec19fd8fac7c90656081c507623e5415796b65271f4a8c5a74264d7fe856a1a4d0d14aa85474bbbe7d64b1e77aba8d6633e4af74e32ddcac79b09118b9f799f67f84e0275ab5743d1c3e197ae97447f28d864aa9e45b85c31cd088f731be98d8cd5917f9c023aa09a3db5fba4c77ad838056538c25920d748f43e6529121256f475097f73b063a3e4e8e467e3b501debd7c257cd67bc8567d214f5feb40267c5fa2704ef2acaf8886b760d737e912c5c1679035c0873e1af554d26000c8606129aa215795d071a3832f71579f52f03fcdd29cc25c2c0a850857b01b0b01d6fa1c5521fd79b66bf19caea1f88dea075243d2e3a2811071403c99f49853baeb607d6296f3d0b713184ef623cd261efd2c13f5d0e2df2ef0a1f6e8167ee32bdeb77d98f919c81fde931ad60f730dcc7368bac5d21db2148a263c0df7cb4acbeb3df9a5c2a2ba55c097e044da3350f0e35a9cc916c5b1d832fc4a2b86f9fb43a801e4a39d680e561452bfe38338bd9743edb16131823757f086fffe9a52eaf07d025f3e445f4b2ac4727a57f8e5e15a824d191f103ff531e6793a5e7ba78720bea7ae1b776b4657c3acf4f5103bf99a9e421cabf4e360a9c670c612a41effce9cd96e592629021efab93d78f7bf3046eee76638f643b4c74df8255c7b3d6533450c7f8c07e4cd4229b5b60e28eab28d7cc1da59803d5a16cf9d85487135cc4cfc26b6338a898c57b25aa86a0c82ad64371743cac374235ed2c664f6013f9d13a7213aa093d1d9dbe60d630caaccc750b3332f8eb18ed6f0e22789d5dc90d9851f9e3f51ea0569352adc66be26ec9f753afa2344a6d556df0342d63f24eb27ada5f21b3ca1108d7ade8804677cfc1de18500989bf50f5db71cbc9423ba81be28b291fac50bb7c98212d85d4b1d11fd93c7e141aa36939128f48b0d846983845bfaea45682185eb4c74b73d1cf62a3fcba0e77f12c515b0ffb3f579fd858357e3272a18ae2a91e59b4a61ae7b0e48e579a7d4ded491e88223f543ad7bde20d1439de25c6fb869f3176a31e009c45ef366110288a509de609598a6d6056e132bd90adc634aa773e90a9e5555e51fa91fdf11be8d47694a10ca72a8ae7bcb0d4a0ec560c165215845950156f6d54da1918e5275f4d663effde460ef641327b5ce9e4ad089518b2b4541e27ed62ace6a7be1d7637023f46c16db7666765a567aa78bd5b85cba37778c6af85139f90d4b0924dab9e7eb1e813f7d1bd4711be55f28fb99039892b4bd2e3b4a3692a496c84d32906c56cce3becb54a94ee5551767dce9d1c087044cf0e852bfd5cfe7b7b97368b597b35c2ed35d1d48bfe3c315f16ee7cd858a1d7bd46cc55172d8fc36421b9bd0d88c4a3061e9d6224a6048cef839637c07122333dc124795709ba560bf7b5490b7016cafad9ada91a58f5bb14b7fb10dbf1e00114f3523418d9ce74168adc91c2788582e081db07b6468f9031f77bbb97f18b4706c680b83af20a53afb5439f52c99b7a9d61f928e27b27113b2d5d69ad202fbbb3032279916fe8cfeda434b5f25290a8ee64114df67c647609ab678078d96faad80c3c9361ed083dd03dfdea219821f2f5ad55f315c473a38aa5eb14514597abcf85c268b7fe11ce7adb0db2fc8914a208aae1063d40c6f356f4d6dd0d0bd41d24cf3f6300f0d0c41b6dd16e3f4042ed9a3d0eb959614f4d2df66195ad1d3556dbb4e3ba64c275fc032d3f3e766207f2cd88b8882e595937ef46bcd2cca9e9802fae4fbae7f957d5acc8b0045beb149b6c50506d2a3f50429e51a763ed61f23f29bf90e91cec18586f01720998dd2e416c24ee818bb8b216a984bd5f434d5b3e913a3671129e07642e9991f8f9854a99cf28f5e4f312afec60c3ff21b519c51209ced8ac36e3177d00619e6d923780bd91bc6cbce701c6ca02ab34e27c270d17e77f0e069344de6f07f7ac83795d4ff45be4b3671e4999c902711a53f637fa47874f0d7b5273295dcca39b12639ebbd6abadcbd15f09309d2b54bfaacb8191c7565cc908f39ffdad9b15024d040f4b2ade928695ca76a6387e841b3cf40af3ca5660ec83cce8f213fdc0341d242bcf1d7ad396a1018670dbfe82d6cf77ff8d53d5b14d6bf158a2c5bcc27fb3983978156cd4e8d4a94d5ace537b55cc1ccc2fe3a9f17c5dba28bacbd9d4dd00df2334df64fb942ce7591d677f4d8e4a523ab4db882889f5af0b8c16485341bae817f0514d2eac5b27271ae6f7b4d1526a2bb8786ae3a25ceead78abe4261d0a91dbe4cffbb777e2f53cae2c34fb827a6f723895b0f3f08586a575dd44df4cf75b01a9ed99b276b45d22d5105683b33474f49446badcacfe5928ad498e56007d1d81a287a98077efe68994648b1a1d3842835a6ee9ce275d3137d92e41500ab20d6c3a703b77aacf855805f75902958b2673ba13271b25e882d2a476666c7e3cd515fde977ac53f258409c8cc9e8d49562cbc79e933d3c5e9f2344fba6fc45c3488c91960ec6b77aacb84bf9ba83af7cbf7c46ace4ac37f9d57a01663c24e9951c6fb9ca10a8bad5bf0965e8c24b6a8a1e047a009448b5f8ff5d452084ae8bf4ac6a3d825440b0a85f08437b6cf5361e64c1981fff9ce984548efcc7afb7b92d4d7ec724d8cb50dc8c3ee0070d9b89fa6c841b0e7f9c9084cf1d950d3da7051b479db3a4ca9f758c3e48cc2f61f22e9044b6304b27c0339952549703a9e87cacb9cf9e637fb0c1900109151e1d7d87c586d2a3bc56722cbed2fdf6a4c61987af7fd340fc2b467b0e5ef801dbc9764286d91a7411ff397e4e0453c71dff05860ee866680607da7244322c9ba6e780b06464cf5d85387517a675719e5930550b38341e92634c6f0e9b57cfb0605066a71154da53f7f2d7cfbb1a9a65e70eccc0a38c0aa7253f7b4202607bb28ffa4761dd90002a002b0d2c87beb12d63a8f6589eb5ed21e4d42ae9c78f603933a36b7df3f439be133391aca1f0f1cdf03ddcb8de47dce704e4e87192d1af5d50330573d5f96d52612655191b05470ac9ebea9c591da163800a03b987ddec75145abbf157560c694bdd44952497ca6f1482a3bd16b845078d79c42b5ab07d4b8eb87b4ae6d87247f947220da03d79b509342a7819a17ba2af63ce5521fb712a3ba05883f711b878f1e02bcc01a3c4d556bb167d9d9883080dd465fdcb60e9642d91a24a0af37cbd22e2a4c8db7cdf661a0cf7fdddf61746f705b0650e2019e619734d9d5dcb9e8d7c3163bc4fc320fdf1c06b18a47d9f5a8f6f9d9745032081bee9a457f727361dce305553c4d504f228ec788436e38df991bc8eff84c84b4df74c7d9bbb5a7d8bb522107988ead"}, 0x1015, 0x3)
mkdirat(0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00', 0x0)
setxattr$incfs_metadata(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000180)="4d20ccea56ba9de194f0f719be2a91f2b540390142ca1cf1d74fc3c7783c78d25ab7b865f174623a7528b98301d70cc1c3b9d3ee7d8fcbaa46d3c10bd234676e5c7a9a1917a68b4af2fbc5cb4e7a3fec6b6e41977fca824844c9b0c799c2054fc3c2fa051e28b9a8d03e03a91c7bba561f51d54eb35f050a4da7a4d3768f69bab31bd43e5a9decd765766e77916503eb8d0cbfda32f9a5d8274c58512ad6c57f11f44790b505ec4d026a4fb87ba452dab8fba12a58d3d0", 0xb7, 0x3)
lsetxattr$trusted_overlay_upper(&(0x7f0000000240)='./file1\x00', &(0x7f0000000300), &(0x7f00000003c0)=ANY=[@ANYBLOB="00fb2203af98769263296e5daf39ee810dd000cde401b9dddf4a4cb0c6464584401c649f004fed32694ad181890300eb70b13bdcde70d2e800defa89c80de295c54db2e1fb7dad13e51badb2881bbc4f22beb95ee61320f1e67314693556b85543189df370e0861d133c0224232b23649bcd84511f8d8367078202e23f0001e200fa8c81ab238e00dce930019859fb26927f4a8207c457cbb331576af71f37572c7d4b634e348c1bb7b6ba5c8309bac85842e12ea54f4c18f5d55d5d72e5e41cebfa3a"], 0x22, 0x3)
fstat(r0, &(0x7f0000000340)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000280)='./file0\x00', 0xee01, r1)
stat(&(0x7f00000015c0)='./file1\x00', &(0x7f0000001600)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000001680)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000001700)='./file0\x00', &(0x7f0000001740)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
setxattr$system_posix_acl(&(0x7f0000001540)='./file0\x00', &(0x7f0000001580)='system.posix_acl_default\x00', &(0x7f00000017c0)={{}, {0x1, 0x5}, [{0x2, 0x2, r2}], {0x4, 0x4}, [{0x8, 0x5, r3}, {0x8, 0x1, r4}, {0x8, 0x3, r1}], {0x10, 0x4}, {0x20, 0x7}}, 0x44, 0x0)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file1\x00')
setxattr$system_posix_acl(&(0x7f0000000100)='.\x00', &(0x7f0000000140)='system.posix_acl_default\x00', &(0x7f0000000400), 0x24, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8792
remove dir: /root/cephfs-client/dfs-0-2427
time breakdown 1: 45, 9, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 61
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-2428 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2428
receive_execute: 6, 70
receive_execute: 4, 70
receive_execute: 3, 69
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 70
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 424, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 162
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 293, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 293, flag collect 0
----- executor 3 signal number : 118
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 4
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 68
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 23
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 244, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 244, flag collect 0
----- executor 3 signal number : 26
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 48
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 9180, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 59
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 39
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 3, 44, 0
execute_one time: 1, 47
----- executor 2 signal number : 1383
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1130
----- executor 2 executes write_coverage_signal cov->size 1072, flag collect 0
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 74, 50, 0
before receive testcase: 0 0
time breakdown 3: 76, 49, 0
before receive testcase: 0 0
----- executor 2 signal number : 7792
----- executor 2 executes write_coverage_signal cov->size 3446, flag collect 0
----- executor 2 signal number : 380
----- executor 2 executes write_coverage_signal cov->size 23523, flag collect 0
----- executor 2 signal number : 3947
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1993
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 75, 49, 0
before receive testcase: 0 0
----- executor 2 signal number : 1499
executor 2 server cover_cnt 9 output_pos_value 18225
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:10 wg wait finish
2023/03/30 19:46:10 ------ all executors finish execution
2023/03/30 19:46:10 exec time: 124
2023/03/30 19:46:10 ----- PS len: 4
2023/03/30 19:46:10 [CLIENT] executor 3 has 13 replies
2023/03/30 19:46:10 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 118 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/30 19:46:10 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 2 has 9 replies
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1383 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1130 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 7792 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 380 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 3947 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1993 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1499 signal and 0 cover from userspace component
time breakdown 2: 73, 54, 0
before receive testcase: 0 0
2023/03/30 19:46:10 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:10 ----- no new client coverage: false, true
2023/03/30 19:46:10 mutate testcase with failures
2023/03/30 19:46:10 ----- mutateArg()
2023/03/30 19:46:10 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:10 prog length: 14
2023/03/30 19:46:10 HasCrashFail:false HasNetFail:false
19:46:10 ---executing program 0:
---
---
---
setxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000140)=@known='security.selinux\x00', &(0x7f00000001c0)='\x00', 0x1, 0x0)
linkat(0xffffffffffffffff, &(0x7f0000000400)='./file0/file1\x00', 0xffffffffffffffff, &(0x7f0000000480)='./file1/file0\x00', 0x1000)
symlink(&(0x7f0000000240)='./file1\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_size(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=0xbc26, 0x8, 0x2)
mkdir(&(0x7f0000000440)='./file0\x00', 0x88)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000280), &(0x7f00000003c0)='./file0\x00', 0x8, 0x1)
sync()
rename(&(0x7f0000000000)='./file2\x00', &(0x7f0000000040)='./file0\x00')
stat(&(0x7f0000000600)='./file1/file0\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
open$dir(&(0x7f00000002c0)='./file0/file1\x00', 0x10001, 0x100)
lchown(&(0x7f0000000200)='./file2\x00', 0xee00, r0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
open$dir(&(0x7f00000005c0)='./file0\x00', 0x0, 0x41)
open(&(0x7f0000000180)='./file2\x00', 0x202080, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2392
remove dir: /root/cephfs-client/dfs-0-2428
remove dir time 22
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2429 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2429
receive_execute: 7, 24
receive_execute: 2, 24
receive_execute: 8, 23
receive_execute: 6, 24
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 343
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1331, pid 9185, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 1331, flag collect 0
----- executor 3 signal number : 357
----- completed 7
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 207, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 207, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 628, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 628, flag collect 0
----- executor 3 signal number : 129
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 302, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 302, flag collect 0
----- executor 3 signal number : 3
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9185, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 28, 8, 0
execute_one time: 1, 36
time breakdown 3: 31, 37, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1404
----- executor 2 executes write_coverage_signal cov->size 27187, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 627, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1255, flag collect 0
----- executor 0 signal number : 732
----- executor 0 executes write_coverage_signal cov->size 2123, flag collect 0
----- executor 0 signal number : 312
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 332
executor 0 server cover_cnt 4 output_pos_value 1408
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 30, 38, 0
before receive testcase: 0 1
----- executor 2 signal number : 6721
----- executor 2 executes write_coverage_signal cov->size 21, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 21274, flag collect 0
----- executor 2 signal number : 3427
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25525, flag collect 0
time breakdown 0: 31, 38, 0
before receive testcase: 0 1
----- executor 2 signal number : 1333
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 888
executor 2 server cover_cnt 9 output_pos_value 14913
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:10 wg wait finish
2023/03/30 19:46:10 ------ all executors finish execution
2023/03/30 19:46:10 exec time: 65
2023/03/30 19:46:10 ----- PS len: 4
2023/03/30 19:46:10 [CLIENT] executor 3 has 14 replies
2023/03/30 19:46:10 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 343 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 357 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 [SERVER] executor 0 has 4 replies
2023/03/30 19:46:10 ------- fuzzer executor 0 receive 732 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 0 receive 312 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 0 receive 332 signal and 0 cover from userspace component
time breakdown 2: 26, 42, 0
before receive testcase: 0 0
2023/03/30 19:46:10 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 2 has 9 replies
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 6721 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 3427 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1333 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 888 signal and 0 cover from userspace component
2023/03/30 19:46:10 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:10 ----- no new client coverage: false, true
2023/03/30 19:46:10 mutate testcase with failures
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:10 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:10 prog length: 4
2023/03/30 19:46:10 HasCrashFail:false HasNetFail:false
19:46:10 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
r0 = open$dir(&(0x7f0000000080)='./file1\x00', 0x4402, 0x0)
open$dir(&(0x7f0000000040)='./file1\x00', 0x1, 0x24)
write$binfmt_misc(r0, &(0x7f00000000c0)={'syz1'}, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 576
remove dir: /root/cephfs-client/dfs-0-2429
remove dir time 12
-----finish removing dir
receive_execute: 6, 14
receive_execute: 2, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
receive_execute: 6, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2430 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2430
receive_execute: 8, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 9188, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 9188, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 191, pid 9188, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1031, pid 9188, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1031, flag collect 0
----- executor 3 signal number : 827
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 0, 11
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1360
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
----- executor 2 signal number : 874
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 12010, flag collect 0
----- executor 2 signal number : 5021
----- executor 2 executes write_coverage_signal cov->size 17204, flag collect 0
time breakdown 0: 20, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 956
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 562
time breakdown 1: 20, 14, 0
before receive testcase: 0 1
executor 2 server cover_cnt 6 output_pos_value 8855
time breakdown 2: 16, 15, 0
before receive testcase: 0 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 12, 0
before receive testcase: 0 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:10 wg wait finish
2023/03/30 19:46:10 ------ all executors finish execution
2023/03/30 19:46:10 exec time: 32
2023/03/30 19:46:10 ----- PS len: 4
2023/03/30 19:46:10 [CLIENT] executor 3 has 4 replies
2023/03/30 19:46:10 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 827 signal and 0 cover from executor 3
2023/03/30 19:46:10 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 2 has 6 replies
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1360 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 874 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 5021 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 956 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 562 signal and 0 cover from userspace component
2023/03/30 19:46:10 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:10 ----- no new client coverage: false, true
2023/03/30 19:46:10 mutate testcase with failures
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 2810 renameat renameat
2023/03/30 19:46:10 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:10 prog length: 5
2023/03/30 19:46:10 HasCrashFail:false HasNetFail:false
19:46:10 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
r1 = open$dir(&(0x7f0000000080)='./file1\x00', 0x4402, 0x0)
r2 = dup(r0)
renameat(r1, &(0x7f0000000040)='./file1\x00', r2, &(0x7f0000000100)='./file1\x00')
write$binfmt_misc(r1, &(0x7f00000000c0)={'syz1'}, 0x4)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 760
remove dir: /root/cephfs-client/dfs-0-2430
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 34
-----finish removing dir
receive_execute: 6, 47
receive_execute: 6, 47
receive_execute: 5, 47
mkdir time 12
executor 3 create dir /root/cephfs-client/dfs-0-2431 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2431
receive_execute: 8, 46
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 9191, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 9191, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9191, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9191, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1029, pid 9191, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1029, flag collect 0
----- executor 3 signal number : 824
----- completed 5
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 15, 15, 0
execute_one time: 1, 30
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 54, 32, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1391
----- executor 2 executes write_coverage_signal cov->size 4862, flag collect 0
----- executor 2 signal number : 892
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11921, flag collect 0
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5021
----- executor 2 executes write_coverage_signal cov->size 741, flag collect 0
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 2513, flag collect 0
time breakdown 1: 53, 33, 0
before receive testcase: 0 0
time breakdown 0: 53, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 1111
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25296, flag collect 0
----- executor 2 signal number : 1320
----- executor 2 executes write_coverage_signal cov->size 6249, flag collect 0
----- executor 2 signal number : 590
executor 2 server cover_cnt 9 output_pos_value 10708
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:10 wg wait finish
2023/03/30 19:46:10 ------ all executors finish execution
2023/03/30 19:46:10 exec time: 84
2023/03/30 19:46:10 ----- PS len: 4
2023/03/30 19:46:10 [CLIENT] executor 3 has 5 replies
2023/03/30 19:46:10 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 824 signal and 0 cover from executor 3
2023/03/30 19:46:10 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 2 has 9 replies
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1391 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 892 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 5021 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1111 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1320 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 590 signal and 0 cover from userspace component
time breakdown 2: 52, 37, 0
before receive testcase: 0 0
2023/03/30 19:46:10 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:10 ----- no new client coverage: false, true
2023/03/30 19:46:10 mutate testcase with failures
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 2780 readlink readlink
2023/03/30 19:46:10 ----- mutateArg()
2023/03/30 19:46:10 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:10 prog length: 8
2023/03/30 19:46:10 HasCrashFail:false HasNetFail:false
19:46:10 ---executing program 0:
---
---
---
open$dir(&(0x7f00000002c0)='./file1\x00', 0x13b043, 0x0)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file1\x00')
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
r0 = open$dir(&(0x7f0000000440)='./file2\x00', 0x622c2, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x1f5ffffff)
mkdir(&(0x7f00000001c0)='./file0\x00', 0x0)
readlink(&(0x7f00000000c0)='./file2\x00', &(0x7f0000000200)=""/136, 0x88)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1104
remove dir: /root/cephfs-client/dfs-0-2431
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2432 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2432
receive_execute: 8, 17
receive_execute: 7, 16
receive_execute: 3, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 16
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 978, pid 9194, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 978, flag collect 0
----- executor 3 signal number : 439
----- completed 6
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 32
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9194, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 17, 2, 0
execute_one time: 0, 19
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1426
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 946
----- executor 2 executes write_coverage_signal cov->size 508, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 31583, flag collect 0
----- executor 2 signal number : 7151
----- executor 2 executes write_coverage_signal cov->size 13431, flag collect 0
time breakdown 3: 25, 20, 0
before receive testcase: 0 1
----- executor 2 signal number : 2948
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 24837, flag collect 0
time breakdown 0: 23, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 1341
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1447
executor 2 server cover_cnt 8 output_pos_value 15354
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:10 for select break: 1
2023/03/30 19:46:10 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:46:10 wg wait finish
2023/03/30 19:46:10 ------ all executors finish execution
2023/03/30 19:46:10 exec time: 44
2023/03/30 19:46:10 ----- PS len: 4
2023/03/30 19:46:10 [CLIENT] executor 3 has 8 replies
2023/03/30 19:46:10 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 439 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:46:10 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/30 19:46:10 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:10 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1426 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 946 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 7151 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 2948 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1341 signal and 0 cover from userspace component
2023/03/30 19:46:10 ------- fuzzer executor 2 receive 1447 signal and 0 cover from userspace component
2023/03/30 19:46:10 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:10 ----- no new client coverage: false, true
2023/03/30 19:46:10 mutate testcase with failures
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 122 chown chown
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 3970 unlink unlink
2023/03/30 19:46:10 ----- insertCall()
2023/03/30 19:46:10 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:46:10 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:10 prog length: 10
2023/03/30 19:46:10 HasCrashFail:false HasNetFail:false
19:46:10 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x780c2, 0x5b3f646ff0a8a829)
r0 = open$dir(&(0x7f0000000040)='./file1\x00', 0x2101, 0x0)
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000080)='./file0\x00', 0xee01, r1)
setxattr$trusted_overlay_opaque(0x0, 0x0, 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000140)='./file0\x00', 0x101000, 0x0)
fcntl$lock(r0, 0x5, &(0x7f0000000200)={0x2, 0x2, 0x2, 0x5, 0xffffffffffffffff})
unlink(&(0x7f00000001c0)='./file0\x00')
lchown(&(0x7f0000000540)='./file1\x00', 0x0, 0xffffffffffffffff)
open$dir(&(0x7f0000000180)='./file0\x00', 0x200000, 0x111)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 19, 28, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1528
remove dir: /root/cephfs-client/dfs-0-2432
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2433 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2433
receive_execute: 11, 40
receive_execute: 10, 39
receive_execute: 10, 39
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 229
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 9197, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 360, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 360, flag collect 0
----- executor 3 signal number : 149
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9197, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 2, 0
execute_one time: 0, 10
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 49, 12, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 49, 13, 0
before receive testcase: 0 0
receive_execute: 4, 39
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14541, flag collect 0
----- executor 2 signal number : 951
----- executor 2 executes write_coverage_signal cov->size 12018, flag collect 0
----- executor 2 signal number : 1101
----- executor 2 executes write_coverage_signal cov->size 24317, flag collect 0
----- executor 2 signal number : 6744
----- executor 2 executes write_coverage_signal cov->size 988, flag collect 0
----- executor 2 signal number : 257
executor 2 server cover_cnt 4 output_pos_value 9066
time breakdown 3: 51, 11, 0
before receive testcase: 0 0
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:11 wg wait finish
2023/03/30 19:46:11 ------ all executors finish execution
2023/03/30 19:46:11 exec time: 54
2023/03/30 19:46:11 ----- PS len: 4
2023/03/30 19:46:11 [CLIENT] executor 3 has 10 replies
2023/03/30 19:46:11 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/30 19:46:11 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:11 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:11 [SERVER] executor 2 has 4 replies
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 951 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 1101 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 6744 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/30 19:46:11 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 43, 15, 0
before receive testcase: 0 0
2023/03/30 19:46:11 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:11 ----- no new client coverage: false, true
2023/03/30 19:46:11 mutate testcase with failures
2023/03/30 19:46:11 ----- mutateArg()
2023/03/30 19:46:11 ----- mutateArg()
2023/03/30 19:46:11 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:11 prog length: 5
2023/03/30 19:46:11 HasCrashFail:false HasNetFail:false
19:46:11 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
symlink(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140)='./file0\x00')
r0 = open$dir(&(0x7f00000006c0)='./file1\x00', 0x0, 0x100)
setxattr$incfs_size(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), 0x0, 0x0, 0x0)
fsync(r0)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 736
----- executor 0 receive testcase
remove dir: /root/cephfs-client/dfs-0-2433
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2434 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2434
receive_execute: 5, 25
receive_execute: 4, 24
receive_execute: 5, 24
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 24
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 9200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 9200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 0
----- executor 3 signal number : 132
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 9200, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 62
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 184, pid 9200, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 184, flag collect 0
----- executor 3 signal number : 61
----- completed 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 13, 0, 0
execute_one time: 1, 13
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 15863, flag collect 0
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 963
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 7921
----- executor 2 executes write_coverage_signal cov->size 1019, flag collect 0
----- executor 2 signal number : 292
----- executor 2 executes write_coverage_signal cov->size 13321, flag collect 0
time breakdown 3: 30, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 2824
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 17040, flag collect 0
----- executor 2 signal number : 763
----- executor 2 executes write_coverage_signal cov->size 29718, flag collect 0
----- executor 2 signal number : 1175
executor 2 server cover_cnt 9 output_pos_value 15447
2023/03/30 19:46:11 for select break: 1
2023/03/30 19:46:11 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:11 wg wait finish
2023/03/30 19:46:11 ------ all executors finish execution
2023/03/30 19:46:11 exec time: 45
2023/03/30 19:46:11 ----- PS len: 4
2023/03/30 19:46:11 [CLIENT] executor 3 has 5 replies
2023/03/30 19:46:11 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/30 19:46:11 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/30 19:46:11 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:11 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:11 [SERVER] executor 2 has 9 replies
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 963 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 7921 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 292 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 2824 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 763 signal and 0 cover from userspace component
2023/03/30 19:46:11 ------- fuzzer executor 2 receive 1175 signal and 0 cover from userspace component
time breakdown 2: 25, 21, 0
before receive testcase: 0 0
2023/03/30 19:46:11 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:11 ----- no new client coverage: false, true
2023/03/30 19:46:11 mutate testcase with failures
2023/03/30 19:46:11 ----- insertCall()
2023/03/30 19:46:11 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:11 ----- insertCall()
2023/03/30 19:46:11 ----- generateCall 2341 lchown lchown
2023/03/30 19:46:11 ----- insertCall()
2023/03/30 19:46:11 ----- generateCall 248 fstat fstat
2023/03/30 19:46:11 ----- insertCall()
2023/03/30 19:46:11 ----- generateCall 2341 lchown lchown
2023/03/30 19:46:11 ----- insertCall()
2023/03/30 19:46:11 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/30 19:46:11 ----- mutateArg()
2023/03/30 19:46:11 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:11 prog length: 10
2023/03/30 19:46:11 HasCrashFail:false HasNetFail:false
19:46:11 ---executing program 0:
---
---
---
sync()
r0 = open$dir(&(0x7f0000000240)='./file0\x00', 0x5a1c0, 0x0)
fstat(r0, &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
r3 = dup(r0)
fsetxattr$trusted_overlay_redirect(r3, &(0x7f0000000280), &(0x7f00000002c0)='./file0/file0\x00', 0xe, 0xb9ce0c09d003cdcc)
lchown(&(0x7f0000000040)='./file0/file0\x00', r1, 0xee01)
r4 = open$dir(&(0x7f0000000000)='./file0\x00', 0x400, 0x190)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x0, 0x0)
fstat(r4, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
lchown(&(0x7f0000000200)='./file0/file0\x00', r5, r2)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1544
remove dir: /root/cephfs-client/dfs-0-2434
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2435 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2435
receive_execute: 6, 25
receive_execute: 2, 25
receive_execute: 6, 25
receive_execute: 7, 24
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 942, pid 9203, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 942, flag collect 0
----- executor 3 signal number : 367
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 613, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 613, flag collect 0
----- executor 3 signal number : 443
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 475, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 475, flag collect 0
----- executor 3 signal number : 61
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 397, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 397, flag collect 0
----- executor 3 signal number : 67
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 9203, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 20
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9203, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 52
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 25, 53, 0
execute_one time: 1, 78
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 31, 2186, 0
----- executor 2 executes write_coverage_signal cov->size 2763, flag collect 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 1107, flag collect 0
----- executor 2 signal number : 1378
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 74
----- executor 0 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 0 signal number : 53
----- executor 0 executes write_coverage_signal cov->size 286, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 560
----- executor 2 executes write_coverage_signal cov->size 23397, flag collect 0
----- executor 0 signal number : 1534
----- executor 0 executes write_coverage_signal cov->size 1366, flag collect 0
----- executor 0 signal number : 366
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 2 signal number : 1025
----- executor 0 signal number : 20
----- executor 2 executes write_coverage_signal cov->size 1418, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 2187, 0
before receive testcase: 0 1
----- executor 0 signal number : 863
----- executor 0 executes write_coverage_signal cov->size 2074, flag collect 0
----- executor 0 signal number : 486
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7133
----- executor 2 executes write_coverage_signal cov->size 1788, flag collect 0
----- executor 2 signal number : 265
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 418
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1680
----- executor 0 executes write_coverage_signal cov->size 1656, flag collect 0
----- executor 0 signal number : 18
executor 0 server cover_cnt 10 output_pos_value 5248
----- executor 2 signal number : 1574
----- executor 2 executes write_coverage_signal cov->size 2841, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 335, flag collect 0
----- executor 2 signal number : 138
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 2190, 0
before receive testcase: 0 0
----- executor 2 signal number : 491
----- executor 2 executes write_coverage_signal cov->size 18029, flag collect 0
----- executor 2 signal number : 3583
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1488
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1449
executor 2 server cover_cnt 15 output_pos_value 19965
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 2217
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 10 replies
2023/03/30 19:46:13 fuzzer receive 367 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 443 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 10 replies
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 53 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 1534 signal and 0 cover from userspace component
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
time breakdown 2: 27, 2193, 0
2023/03/30 19:46:13 [SERVER] executor 2 has 15 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1378 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 560 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1025 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 7133 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 265 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 418 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1574 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 138 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3583 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1488 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1449 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 366 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 863 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 486 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 1680 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 4
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x17b043, 0x0)
open$dir(&(0x7f0000000200)='./file0\x00', 0x20401, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x141)
lchown(&(0x7f0000000080)='./file0\x00', 0x0, 0xffffffffffffffff)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 552
remove dir: /root/cephfs-client/dfs-0-2435
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 19
-----finish removing dir
receive_execute: 5, 23
receive_execute: 8, 23
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 1, 0
receive_execute: 11, 23
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-2436 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2436
receive_execute: 12, 24
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9208, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 9208, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 229
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9208, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 547, pid 9208, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 547, flag collect 0
----- executor 3 signal number : 133
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 0, 11
executor 0 write_server_output
time breakdown 3: 36, 12, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4457, flag collect 0
----- executor 2 signal number : 591
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 12811, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1071
----- executor 2 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 24020, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 31, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 6624
----- executor 2 executes write_coverage_signal cov->size 12047, flag collect 0
----- executor 2 signal number : 1428
executor 2 server cover_cnt 5 output_pos_value 9797
time breakdown 1: 34, 15, 0
before receive testcase: 0 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 39
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 4 replies
2023/03/30 19:46:13 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 5 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1071 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 6624 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1428 signal and 0 cover from userspace component
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2374 mkdirat mkdirat
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 3
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x100c0, 0x0)
setxattr$security_ima(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000700)=@v2={0x0, 0x0, 0x0, 0x0, 0xff8, ""}, 0x1001, 0x1)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x14d)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4856
remove dir: /root/cephfs-client/dfs-0-2436
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 28, 15, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2437 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2437
receive_execute: 4, 34
receive_execute: 2, 34
receive_execute: 3, 34
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9211, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 426, pid 9211, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 136
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9211, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 0, 0
execute_one time: 1, 17
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8287, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 19044, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 36, 20, 0
before receive testcase: 0 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 38, 20, 0
before receive testcase: 0 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 56
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 3 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 5 replies
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1292 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 5788 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 633 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 4
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
setxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file1\x00', 0x8, 0x2)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x801, 0x0)
r1 = open(&(0x7f00000010c0)='./file1\x00', 0x0, 0x0)
dup2(r0, r1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/cephfs-client/dfs-0-2437
----- executor 2 signal number : 5788
----- executor 2 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 12391, flag collect 0
----- executor 2 signal number : 633
executor 2 server cover_cnt 5 output_pos_value 8035
time breakdown 2: 36, 22, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 37, 21, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2438 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2438
receive_execute: 4, 27
receive_execute: 2, 26
receive_execute: 4, 26
receive_execute: 3, 26
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 85, pid 9214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9214, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 28, 5, 0
time breakdown 0: 29, 5, 0
before receive testcase: 0 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 32
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 4 replies
2023/03/30 19:46:13 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 0 replies
2023/03/30 19:46:13 fuzzer receive 27 signal and 0 cover from executor 3
time breakdown 1: 30, 5, 0
before receive testcase: 0 0
2023/03/30 19:46:13 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 8
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000140)='./file1\x00', 0x0, 0x0)
r1 = dup(r0)
r2 = fcntl$dupfd(r1, 0x0, r0)
mkdirat(r2, &(0x7f0000000000)='./file1\x00', 0x0)
lsetxattr$security_capability(&(0x7f0000000040)='./file1/file0\x00', &(0x7f0000000080), 0x0, 0x0, 0x3)
rmdir(&(0x7f0000000200)='./file1/file1\x00')
fsync(r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 31, 3, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/cephfs-client/dfs-0-2438
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 3
-----finish removing dir
receive_execute: 1, 4
receive_execute: 1, 4
executor 0 before execute_one
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2439 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2439
receive_execute: 2, 4
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 515, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 523, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 523, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 546, pid 9217, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 546, flag collect 0
----- executor 3 signal number : 37
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 1, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 362, pid 9217, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 362, flag collect 0
----- executor 3 signal number : 213
----- completed 8
execute_one loop: 0, 1, 31
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 37, 0, 0
execute_one time: 0, 37
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6, 38, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 5, 39, 0
before receive testcase: 0 0
2023/03/30 19:46:13 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12483, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 14714, flag collect 0
----- executor 2 signal number : 945
----- executor 2 executes write_coverage_signal cov->size 516, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6860
----- executor 2 executes write_coverage_signal cov->size 5889, flag collect 0
----- executor 2 signal number : 389
----- executor 2 executes write_coverage_signal cov->size 22562, flag collect 0
----- executor 2 signal number : 3343
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28971, flag collect 0
----- executor 2 signal number : 1657
executor 2 server cover_cnt 8 output_pos_value 14677
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 5, 43, 0
before receive testcase: 0 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 54
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 8 replies
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 945 signal and 0 cover from userspace component
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 6860 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 389 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3343 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1657 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 213 signal and 0 cover from executor 3
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2458 open open
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2347 llistxattr llistxattr
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 6
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x100, 0x6)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r1, r0)
llistxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/193, 0xc1)
fcntl$lock(r1, 0x4, &(0x7f0000000040)={0x0, 0x4, 0xffffffffffffffff, 0x3, 0xffffffffffffffff})
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/cephfs-client/dfs-0-2439
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 18, 36, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2440 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2440
receive_execute: 10, 27
receive_execute: 15, 28
receive_execute: 14, 27
receive_execute: 4, 27
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 9220, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 9220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 41
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9220, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 27, 0, 0
execute_one time: 0, 27
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 43, 27, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12245, flag collect 0
executor 0 write_server_output
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4981
time breakdown 1: 31, 30, 0
----- executor 2 executes write_coverage_signal cov->size 9189, flag collect 0
before receive testcase: 0 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 41, 30, 0
----- executor 2 signal number : 574
before receive testcase: 0 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6906
time breakdown 2: 37, 31, 0
before receive testcase: 0 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 60
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 6 replies
2023/03/30 19:46:13 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 4 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 4981 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 574 signal and 0 cover from userspace component
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 220 flock flock
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 12
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
flock(r0, 0x1)
r1 = open$dir(&(0x7f00000001c0)='./file1\x00', 0x240000, 0x0)
r2 = dup2(r1, r1)
r3 = dup2(r0, r2)
r4 = dup2(r3, r0)
flock(r4, 0xb)
r5 = dup2(r2, 0xffffffffffffffff)
write$binfmt_elf64(r2, &(0x7f0000000840)={{0x7f, 0x45, 0x4c, 0x46, 0x9, 0xc4, 0x7, 0x8, 0x2, 0x3, 0x3e, 0x1, 0x5a, 0x40, 0x298, 0x8, 0x8, 0x38, 0x1, 0x40, 0x1f, 0x4b4e}, [{0x1, 0xd1, 0x5, 0x80, 0x1, 0x3, 0x7, 0xd9f0}, {0x5, 0x8, 0x1, 0x80000001, 0xfffffffffffffffc, 0x1f, 0x7, 0x4}], "77a7f8b181d6f6d723f6dab4aa0bd2862d793b91af041c824c2aba29d51d93fd3b0c1699116f54c49766418be9f9ef287ae97c4aca765af0d487ec5f13e57eb8cb00fe22a961df4d79c36041158b645c69e4bbeaba8e1fe7bc9992973c", ['\x00', '\x00']}, 0x30d)
write$binfmt_elf64(r5, &(0x7f0000000240)={{0x7f, 0x45, 0x4c, 0x46, 0x40, 0x1, 0xff, 0xf7, 0x2, 0x3, 0x3e, 0x1000, 0x140, 0x40, 0x372, 0x55, 0x7, 0x38, 0x2, 0x7, 0xcbe5, 0x9bc5}, [{0x5, 0x10001, 0x40, 0x3, 0x4, 0x81, 0x9, 0xffffffffffff0001}], "fe6a5f99673777285141c89798651752cf6768528932a151fb52a84cb5f61eca9b30d37577f2333db2203d88307d020b4d6fffc6c54594077eccc8d213c401a1eaf0cb6c7b58b7bf31a9293bb316b296b574e93772e944", ['\x00', '\x00', '\x00', '\x00', '\x00']}, 0x5cf)
r6 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0x0, 0x0)
dup2(r3, r6)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6432
remove dir: /root/cephfs-client/dfs-0-2440
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2441 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2441
receive_execute: 4, 18
receive_execute: 7, 18
receive_execute: 3, 18
receive_execute: 4, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 9223, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 121
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1333, pid 9223, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1333, flag collect 0
----- executor 3 signal number : 948
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9223, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9223, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 36, pid 9223, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 3 signal number : 23
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 0, 9
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 10, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10316, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 12625, flag collect 0
----- executor 2 signal number : 1000
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 22185, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 6778
----- executor 2 executes write_coverage_signal cov->size 2083, flag collect 0
----- executor 2 signal number : 323
----- executor 2 executes write_coverage_signal cov->size 11488, flag collect 0
----- executor 2 signal number : 2641
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 20188, flag collect 0
----- executor 2 signal number : 1791
executor 2 server cover_cnt 8 output_pos_value 14019
before receive testcase: 0 0
time breakdown 0: 23, 12, 0
before receive testcase: 0 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 31
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1000 signal and 0 cover from userspace component
2023/03/30 19:46:13 [CLIENT] executor 3 has 12 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 121 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 6778 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 323 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 948 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 2641 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1791 signal and 0 cover from userspace component
time breakdown 2: 21, 14, 0
before receive testcase: 0 0
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2458 open open
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 8
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x5b3f646ff0a8a829)
lsetxattr$smack_xattr_label(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='security.SMACK64\x00', &(0x7f0000000280)=ANY=[], 0x2, 0x2)
truncate(&(0x7f0000000080)='./file1\x00', 0x80)
stat(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200))
open(&(0x7f0000000180)='./file1\x00', 0x40802, 0x180)
open$dir(&(0x7f0000000040)='./file1\x00', 0x2101, 0x100)
open(&(0x7f0000000140)='./file1\x00', 0x20002, 0x0)
lchown(&(0x7f0000000480)='./file1\x00', 0xffffffffffffffff, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1152
remove dir: /root/cephfs-client/dfs-0-2441
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2442 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2442
receive_execute: 5, 7
receive_execute: 3, 7
receive_execute: 5, 6
receive_execute: 2, 6
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 522, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 522, flag collect 0
----- executor 3 signal number : 209
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 810, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 3 signal number : 124
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 97
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 330, pid 9226, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 330, flag collect 0
----- executor 3 signal number : 71
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
time breakdown 3: 12, 10, 0
executor 0 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 4780, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 13928, flag collect 0
time breakdown 0: 10, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 1071
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 11, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 7872
----- executor 2 executes write_coverage_signal cov->size 1991, flag collect 0
----- executor 2 signal number : 336
----- executor 2 executes write_coverage_signal cov->size 12355, flag collect 0
----- executor 2 signal number : 2984
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 22453, flag collect 0
----- executor 2 signal number : 1378
executor 2 server cover_cnt 8 output_pos_value 14327
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 25
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 8 replies
2023/03/30 19:46:13 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 fuzzer receive 209 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 124 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1071 signal and 0 cover from userspace component
time breakdown 2: 8, 20, 0
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 7872 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 336 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 2984 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1378 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2344 linkat linkat
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/30 19:46:13 ----- splice()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 251 ftruncate ftruncate
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2341 lchown lchown
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 20
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
r1 = open(&(0x7f0000000180)='./file0\x00', 0x183e7, 0x0)
setxattr$trusted_overlay_upper(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0, 0x0, 0x0)
setxattr(&(0x7f0000001500)='./file0\x00', &(0x7f0000001540)=@known='user.incfs.id\x00', 0x0, 0x0, 0x3)
setxattr$user(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
lsetxattr$security_selinux(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180)='system_u:object_r:crack_exec_t:s0\x00', 0x22, 0x1)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
r2 = open$dir(&(0x7f00000006c0)='./file0\x00', 0x0, 0x0)
fsync(r2)
fcntl$getownex(r2, 0x10, &(0x7f00000001c0)={0x0, <r3=>0x0})
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
rename(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0)='./file0\x00')
r4 = fcntl$dupfd(r2, 0x0, r2)
fcntl$setownex(r4, 0xf, &(0x7f0000000280)={0x0, r3})
getxattr(&(0x7f0000000b40)='./file1\x00', &(0x7f0000000040)=ANY=[@ANYRES64=r2], 0x0, 0x0)
r5 = dup(r1)
lchown(&(0x7f00000002c0)='./file1\x00', 0xee00, 0x0)
ftruncate(r5, 0x0)
r6 = dup2(r2, r0)
linkat(r0, &(0x7f0000000200)='./file0\x00', r6, &(0x7f0000000240)='./file1\x00', 0x3400)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3384
remove dir: /root/cephfs-client/dfs-0-2442
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2443 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2443
receive_execute: 11, 8
receive_execute: 2, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 5
----- completed 2
execute_one loop: 0, 0, 2
receive_execute: 10, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 405, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 405, flag collect 0
----- executor 3 signal number : 130
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 806, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 806, flag collect 0
----- executor 3 signal number : 76
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 8, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 452, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 452, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 540, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 3 signal number : 32
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 686, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 686, flag collect 0
----- executor 3 signal number : 53
----- completed 7
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 9229, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 132
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 591, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 591, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 702, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 702, flag collect 0
----- executor 3 signal number : 9
----- completed 12
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9229, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 43, 31, 0
execute_one time: 0, 74
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
time breakdown 3: 19, 75, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1412
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1133
----- executor 2 executes write_coverage_signal cov->size 2243, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 18, 76, 0
before receive testcase: 0 0
time breakdown 1: 16, 76, 0
before receive testcase: 0 1
----- executor 2 signal number : 7578
----- executor 2 executes write_coverage_signal cov->size 7637, flag collect 0
----- executor 2 signal number : 521
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5809
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1560
executor 2 server cover_cnt 8 output_pos_value 18108
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 87
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 20 replies
2023/03/30 19:46:13 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:13 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1412 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 76 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1133 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 7578 signal and 0 cover from userspace component
2023/03/30 19:46:13 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 10, 79, 0
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 5809 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1560 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 6
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x340, 0x10)
setxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f00000002c0)=ANY=[@ANYBLOB="73656375726974792e009be3ad8104cac30c7ab1dbf8b4253fc13aa9e4ee698094002433426a6daee9f42c4d8c95a61b577dbce2efc24298000000004358c1e585e3ec723f0b3e31b4a6515daf01539c10a3e27862b544153b011a8d548bbeae30fb03fd2ad28b5347f6f12d0bf72a3c79646a35e9fa9fea644c3d74e8bb82c533825d021383ea29bf53b4b34da9799e063e1603582d73d1f8e40acd93a75cb4a16fa3795609713f88a1fe7a9a03bdf6e2638f111e491096fa56b8e128b5cf080f2f48795478aecb213e72e834ed1176bc5ef28e6a413ccaac8533c596802314ee6f2fde12963956f357472585d9a62ff139bd165e9220e1f08a923a4b36748c770444f77d885363e211ff995a3f8e973807ee42b1c682d01dd4ae46b6d5286104fe"], 0x0, 0x0, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x8102, 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x28200, 0x18a)
open$dir(&(0x7f0000000000)='./file0\x00', 0x2201, 0x124)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000140), 0x0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/cephfs-client/dfs-0-2443
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2444 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2444
receive_execute: 7, 8
receive_execute: 2, 8
receive_execute: 5, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 9233, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 9233, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 160
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 9233, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 123
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 636, pid 9233, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 636, flag collect 0
----- executor 3 signal number : 126
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 580, pid 9233, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 580, flag collect 0
----- executor 3 signal number : 6
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 9233, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 0, 7
receive_execute: 5, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 15, 8, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 21578, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1403
----- executor 2 executes write_coverage_signal cov->size 16998, flag collect 0
----- executor 2 signal number : 996
----- executor 2 executes write_coverage_signal cov->size 644, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28116, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 6902
----- executor 2 executes write_coverage_signal cov->size 1779, flag collect 0
----- executor 2 signal number : 321
----- executor 2 executes write_coverage_signal cov->size 19917, flag collect 0
----- executor 2 signal number : 4090
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 13, 12, 0
before receive testcase: 0 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 2188
executor 2 server cover_cnt 8 output_pos_value 15995
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 22
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 6 replies
2023/03/30 19:46:13 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1403 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 996 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 10, 14, 0
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 6902 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 321 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 4090 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 2188 signal and 0 cover from userspace component
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 121 chmod chmod
2023/03/30 19:46:13 ----- mutateArg()
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 3765 symlinkat symlinkat
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 7
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
open$dir(&(0x7f00000002c0)='.\x00', 0x3a042, 0x0)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
r0 = open$dir(&(0x7f0000000200)='./file0\x00', 0x0, 0x49)
chmod(&(0x7f0000000080)='./file0\x00', 0x9)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x101000, 0x0)
symlinkat(&(0x7f00000000c0)='./file1\x00', r1, &(0x7f0000000140)='./file0/file0\x00')
lseek(r0, 0x400, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/cephfs-client/dfs-0-2444
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2445 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2445
receive_execute: 2, 8
receive_execute: 6, 9
receive_execute: 8, 8
receive_execute: 4, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 26
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 21
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 330
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9236, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 2
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 16, 4, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 1953, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4177, flag collect 0
----- executor 2 signal number : 2164
----- executor 2 executes write_coverage_signal cov->size 329, flag collect 0
----- executor 2 signal number : 238
executor 2 server cover_cnt 4 output_pos_value 3492
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 5, 0
before receive testcase: 0 0
time breakdown 2: 10, 7, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 20
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 7 replies
2023/03/30 19:46:13 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 330 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 4 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 238 signal and 0 cover from userspace component
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 3967 truncate truncate
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 6
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x340, 0x0)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x222000, 0x110)
chown(&(0x7f00000002c0)='./file0\x00', 0xffffffffffffffff, 0xee01)
truncate(&(0x7f0000000000)='./file0\x00', 0x80000001)
open$dir(&(0x7f0000000040)='./file0\x00', 0x8102, 0x0)
truncate(&(0x7f0000000100)='./file0\x00', 0x8)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 776
remove dir: /root/cephfs-client/dfs-0-2445
time breakdown 0: 15, 10, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2446 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2446
receive_execute: 9, 9
receive_execute: 3, 8
receive_execute: 6, 9
receive_execute: 8, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 624, pid 9239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 9239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 140
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 9239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 90
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 9239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 89
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 510, pid 9239, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 510, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 102, 0
execute_one time: 0, 114
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1415
----- executor 2 executes write_coverage_signal cov->size 23474, flag collect 0
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 29299, flag collect 0
----- executor 2 signal number : 6994
----- executor 2 executes write_coverage_signal cov->size 2826, flag collect 0
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 118, 0
before receive testcase: 0 0
time breakdown 3: 18, 115, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 1237, flag collect 0
----- executor 0 signal number : 731
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 1067, flag collect 0
----- executor 0 signal number : 478
executor 0 server cover_cnt 4 output_pos_value 1308
----- executor 2 signal number : 4894
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1731
executor 2 server cover_cnt 8 output_pos_value 16512
2023/03/30 19:46:13 for select break: 1
2023/03/30 19:46:13 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:13 wg wait finish
2023/03/30 19:46:13 ------ all executors finish execution
2023/03/30 19:46:13 exec time: 129
2023/03/30 19:46:13 ----- PS len: 4
2023/03/30 19:46:13 [CLIENT] executor 3 has 6 replies
2023/03/30 19:46:13 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/30 19:46:13 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/30 19:46:13 [SERVER] executor 0 has 4 replies
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 731 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 0 receive 478 signal and 0 cover from userspace component
2023/03/30 19:46:13 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:13 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1415 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 6994 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 4894 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:13 ------- fuzzer executor 2 receive 1731 signal and 0 cover from userspace component
time breakdown 0: 11, 119, 0
before receive testcase: 0 0
time breakdown 2: 15, 121, 0
before receive testcase: 0 0
2023/03/30 19:46:13 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:13 ----- no new client coverage: false, true
2023/03/30 19:46:13 mutate testcase with failures
2023/03/30 19:46:13 ----- insertCall()
2023/03/30 19:46:13 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/30 19:46:13 ----- splice()
2023/03/30 19:46:13 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:13 prog length: 15
2023/03/30 19:46:13 HasCrashFail:false HasNetFail:false
19:46:13 ---executing program 0:
---
---
---
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000000))
setxattr(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)=@known='system.posix_acl_default\x00', &(0x7f0000000180)='trusted.overlay.origin\x00', 0x17, 0x3)
rename(0x0, 0x0)
llistxattr(&(0x7f0000000700)='./file0\x00', &(0x7f0000000340)=""/39, 0x27)
open$dir(&(0x7f0000000080)='./file0\x00', 0x100c0, 0x0)
stat(&(0x7f00000006c0)='./file0\x00', &(0x7f00000001c0))
setxattr$security_capability(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580), &(0x7f00000005c0)=@v2={0x2000000, [{0x9, 0x3}, {0x7, 0x1}]}, 0x14, 0x1)
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000380)='./file0\x00', r0, r1)
setxattr$security_selinux(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)='system_u:object_r:crond_var_run_t:s0\x00', 0x25, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0), 0x2, 0x3)
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
r2 = open$dir(&(0x7f0000000300)='./file1\x00', 0x0, 0x0)
lseek(r2, 0x0, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2736
remove dir: /root/cephfs-client/dfs-0-2446
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 98
-----finish removing dir
receive_execute: 6, 100
receive_execute: 3, 100
receive_execute: 5, 100
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2447 successfully
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 3: /root/cephfs-client/dfs-0-2447
receive_execute: 9, 99
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 471
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 123
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 445, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 445, flag collect 0
----- executor 3 signal number : 84
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1127, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1127, flag collect 0
----- executor 3 signal number : 108
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 553, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 553, flag collect 0
----- executor 3 signal number : 45
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 547, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 547, flag collect 0
----- executor 3 signal number : 3
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 37
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 7
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 9244, write pid:-2127077857
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 39, 0
execute_one time: 1, 56
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:14 for select break: 1
time breakdown 1: 106, 62, 0
2023/03/30 19:46:14 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 957
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 108, 62, 0
before receive testcase: 0 1
----- executor 2 signal number : 1199
----- executor 2 executes write_coverage_signal cov->size 2142, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 6840
----- executor 2 executes write_coverage_signal cov->size 30964, flag collect 0
----- executor 2 signal number : 437
----- executor 2 executes write_coverage_signal cov->size 27312, flag collect 0
----- executor 2 signal number : 5344
----- executor 2 executes write_coverage_signal cov->size 1361, flag collect 0
----- executor 2 signal number : 310
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1422
executor 0 write_server_output
executor 2 server cover_cnt 8 output_pos_value 16603
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 103, 67, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 0 signal number : 71
----- executor 0 executes write_coverage_signal cov->size 1216, flag collect 0
----- executor 0 signal number : 630
----- executor 0 executes write_coverage_signal cov->size 19221, flag collect 0
----- executor 0 signal number : 2712
executor 0 server cover_cnt 3 output_pos_value 3423
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:14 wg wait finish
2023/03/30 19:46:14 ------ all executors finish execution
2023/03/30 19:46:14 exec time: 168
2023/03/30 19:46:14 ----- PS len: 4
2023/03/30 19:46:14 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:14 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:14 [SERVER] executor 0 has 3 replies
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 957 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 0 receive 630 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1199 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 0 receive 2712 signal and 0 cover from userspace component
2023/03/30 19:46:14 [CLIENT] executor 3 has 15 replies
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 6840 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 437 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 5344 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1422 signal and 0 cover from userspace component
2023/03/30 19:46:14 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:14 ----- no new client coverage: false, true
time breakdown 0: 105, 69, 0
before receive testcase: 0 0
2023/03/30 19:46:14 mutate testcase with failures
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 2809 rename rename
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 3764 symlink symlink
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/30 19:46:14 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:14 prog length: 10
2023/03/30 19:46:14 HasCrashFail:false HasNetFail:false
19:46:14 ---executing program 0:
---
---
---
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='./file1\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0), &(0x7f0000000500), 0x2, 0x1)
lsetxattr$user(&(0x7f0000000080)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='y\x00', 0x2, 0x3)
symlink(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000600)='./file1\x00')
setxattr$security_capability(&(0x7f0000000200)='./file1\x00', &(0x7f0000000240), &(0x7f0000000380)=@v2={0x2000000, [{0x8000, 0xf8000000}, {0x1ff800, 0x101}]}, 0x14, 0x2)
rename(&(0x7f0000000540)='./file1\x00', &(0x7f0000000580)='./file1\x00')
setxattr$smack_xattr_label(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400)='security.SMACK64\x00', &(0x7f0000000440), 0x1, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000140), 0x2, 0x3)
setxattr$incfs_id(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680), &(0x7f00000006c0)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
llistxattr(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)=""/136, 0x88)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2488
remove dir: /root/cephfs-client/dfs-0-2447
remove dir time 17
-----finish removing dir
receive_execute: 4, 18
receive_execute: 2, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2448 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2448
receive_execute: 10, 18
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 139
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 82
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 9, 18
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 489, pid 9248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 90
----- completed 10
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 4, 0
execute_one time: 0, 18
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 28, 19, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 10513, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 15200, flag collect 0
time breakdown 0: 21, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 958
----- executor 2 executes write_coverage_signal cov->size 650, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 31665, flag collect 0
----- executor 2 signal number : 7384
----- executor 2 executes write_coverage_signal cov->size 15374, flag collect 0
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 3007
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
time breakdown 1: 28, 23, 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 20174, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1158
executor 2 server cover_cnt 7 output_pos_value 13987
time breakdown 2: 22, 26, 0
before receive testcase: 0 1
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:14 wg wait finish
2023/03/30 19:46:14 ------ all executors finish execution
2023/03/30 19:46:14 exec time: 47
2023/03/30 19:46:14 ----- PS len: 4
2023/03/30 19:46:14 [CLIENT] executor 3 has 10 replies
2023/03/30 19:46:14 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/30 19:46:14 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:14 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:14 [SERVER] executor 2 has 7 replies
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:46:14 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 958 signal and 0 cover from userspace component
2023/03/30 19:46:14 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 7384 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 3007 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1158 signal and 0 cover from userspace component
2023/03/30 19:46:14 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:14 ----- no new client coverage: false, true
2023/03/30 19:46:14 mutate testcase with failures
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 3766 sync sync
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 3761 stat stat
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 2809 rename rename
2023/03/30 19:46:14 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:14 prog length: 8
2023/03/30 19:46:14 HasCrashFail:false HasNetFail:false
19:46:14 ---executing program 0:
---
---
---
sync()
sync()
open$dir(0x0, 0x5a1c0, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x0, 0x0)
rename(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='.\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0)='./file0\x00', 0x8, 0x2)
setxattr(0x0, &(0x7f0000000080)=@known='user.syz\x00', 0x0, 0x0, 0x2)
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1136
remove dir: /root/cephfs-client/dfs-0-2448
remove dir time 8
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-2449 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2449
receive_execute: 12, 16
receive_execute: 5, 17
receive_execute: 7, 17
receive_execute: 11, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 986, pid 9251, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 986, flag collect 0
----- executor 3 signal number : 386
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 9251, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 3
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9251, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 45
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 76, pid 9251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 76, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 10702, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 5945, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 287
executor 0 server cover_cnt 2 output_pos_value 362
----- executor 2 signal number : 707
----- executor 2 executes write_coverage_signal cov->size 226, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8166, flag collect 0
----- executor 2 signal number : 1995
----- executor 2 executes write_coverage_signal cov->size 11400, flag collect 0
----- executor 2 signal number : 2918
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 26003, flag collect 0
----- executor 2 signal number : 1786
executor 2 server cover_cnt 7 output_pos_value 8888
time breakdown 2: 22, 11, 0
before receive testcase: 0 1
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 28, 9, 0
time breakdown 1: 24, 11, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:46:14 wg wait finish
2023/03/30 19:46:14 ------ all executors finish execution
2023/03/30 19:46:14 exec time: 30
2023/03/30 19:46:14 ----- PS len: 4
2023/03/30 19:46:14 [CLIENT] executor 3 has 8 replies
2023/03/30 19:46:14 [SERVER] executor 0 has 2 replies
2023/03/30 19:46:14 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:14 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/30 19:46:14 [SERVER] executor 2 has 7 replies
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 707 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 0: 27, 13, 0
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1995 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 2918 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1786 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:46:14 fuzzer receive 386 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:46:14 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/30 19:46:14 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:14 ----- no new client coverage: false, true
2023/03/30 19:46:14 mutate testcase with failures
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:14 prog length: 7
2023/03/30 19:46:14 HasCrashFail:false HasNetFail:false
19:46:14 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000240)='./file0\x00', 0x5a1c0, 0x0)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x0, 0x0)
setxattr$incfs_size(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)=0x40, 0x8, 0x0)
setxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='user.syz\x00', 0x0, 0x0, 0x2)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x4, 0x0)
lsetxattr$security_selinux(&(0x7f0000000200)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)='system_u:object_r:klogd_var_run_t:s0\x00', 0x25, 0x1)
llistxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1624
remove dir: /root/cephfs-client/dfs-0-2449
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 1
-----finish removing dir
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-2450 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2450
receive_execute: 5, 7
receive_execute: 4, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 401, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 401, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 4, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 741, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 741, flag collect 0
----- executor 3 signal number : 81
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 512, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 3 signal number : 4
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 2, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 446, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 446, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 540, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 3 signal number : 22
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 9255, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 49
----- completed 7
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 15, 5, 0
execute_one time: 1, 20
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 21146, flag collect 0
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 1091
----- executor 2 executes write_coverage_signal cov->size 1424, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7620
----- executor 2 executes write_coverage_signal cov->size 5043, flag collect 0
----- executor 2 signal number : 435
----- executor 2 executes write_coverage_signal cov->size 28320, flag collect 0
----- executor 2 signal number : 4677
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 12, 31, 0
before receive testcase: 0 0
----- executor 2 signal number : 1338
executor 2 server cover_cnt 8 output_pos_value 16654
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12, 36, 0
before receive testcase: 0 0
2023/03/30 19:46:14 for select break: 1
2023/03/30 19:46:14 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:46:14 wg wait finish
2023/03/30 19:46:14 ------ all executors finish execution
2023/03/30 19:46:14 exec time: 50
2023/03/30 19:46:14 ----- PS len: 4
2023/03/30 19:46:14 [CLIENT] executor 3 has 7 replies
2023/03/30 19:46:14 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/30 19:46:14 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/30 19:46:14 [SERVER] executor 2 has 8 replies
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/30 19:46:14 [SERVER] executor 0 has 0 replies
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1091 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 7620 signal and 0 cover from userspace component
2023/03/30 19:46:14 [SERVER] executor 1 has 0 replies
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 435 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 4677 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:46:14 ------- fuzzer executor 2 receive 1338 signal and 0 cover from userspace component
2023/03/30 19:46:14 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:46:14 ----- no new client coverage: false, true
2023/03/30 19:46:14 mutate testcase with failures
2023/03/30 19:46:14 ----- insertCall()
2023/03/30 19:46:14 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 ----- mutateArg()
2023/03/30 19:46:14 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:46:14 prog length: 9
2023/03/30 19:46:14 HasCrashFail:false HasNetFail:false
19:46:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x622c2, 0x188)
setxattr$security_selinux(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='system_u:object_r:textrel_shlib_t:s0\x00', 0x25, 0x2)
lsetxattr$trusted_overlay_nlink(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), &(0x7f0000000340)={'U+', 0x6}, 0x16, 0x0)
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x100000000)
fcntl$lock(r0, 0x26, &(0x7f0000000000)={0x1})
r1 = fcntl$getown(r0, 0x9)
fcntl$lock(r0, 0x7, &(0x7f0000000180)={0x0, 0x0, 0x6, 0x6, r1})
symlinkat(&(0x7f0000000380)='./file0\x00', r0, &(0x7f0000000280)='./file1\x00')
symlinkat(&(0x7f00000001c0)='./file0\x00', r0, &(0x7f0000000200)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2120
remove dir: /root/cephfs-client/dfs-0-2450
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 12, 42, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 2, 18
receive_execute: 7, 18
receive_execute: 12, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2451 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2451
receive_execute: 14, 17
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 9259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 9259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 767, pid 9259, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 767, flag collect 0
----- executor 3 signal number : 400
----- completed 4
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 9259, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 120
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9259, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9259, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 212, pid 9259, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 3
----- completed 9
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83334, 1, 0
execute_one time: 1, 83335
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 31, 83337, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 26318, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1529
----- executor 2 executes write_coverage_signal cov->size 28592, flag collect 0
----- executor 0 signal number : 1005
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 48
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 74
2023/03/30 19:47:37 for select break: 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:47:37 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 616
----- executor 0 signal number : 1402
----- executor 0 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 0 signal number : 48
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 386
----- executor 0 executes write_coverage_signal cov->size 4493, flag collect 0
----- executor 0 signal number : 117
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 337
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 20, 83338, 0
before receive testcase: 0 1
----- executor 0 signal number : 570
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 277
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 833
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 667
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 308
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1323
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1813
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 519
----- executor 0 executes write_coverage_signal cov->size 26318, flag collect 0
----- executor 0 signal number : 314
----- executor 0 executes write_coverage_signal cov->size 5185, flag collect 0
----- executor 0 signal number : 108
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1024
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 130
----- executor 0 executes write_coverage_signal cov->size 4340, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 304, flag collect 0
----- executor 0 signal number : 198
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 242
executor 0 server cover_cnt 24 output_pos_value 11932
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 83349, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1342
----- executor 2 executes write_coverage_signal cov->size 30072, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7059
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 746
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1686
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3228
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 242
----- executor 2 executes write_coverage_signal cov->size 5388, flag collect 0
----- executor 2 signal number : 384
----- executor 2 executes write_coverage_signal cov->size 5296, flag collect 0
----- executor 2 signal number : 171
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2500
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4082
----- executor 2 executes write_coverage_signal cov->size 57, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1286
----- executor 2 executes write_coverage_signal cov->size 1283, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1480
executor 2 server cover_cnt 18 output_pos_value 26537
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:47:37 wg wait finish
2023/03/30 19:47:37 ------ all executors finish execution
2023/03/30 19:47:37 exec time: 83377
2023/03/30 19:47:37 ----- PS len: 4
2023/03/30 19:47:37 [CLIENT] executor 3 has 9 replies
2023/03/30 19:47:37 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 120 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:47:37 [SERVER] executor 0 has 24 replies
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 1005 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 1402 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 48 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 386 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 117 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 337 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 570 signal and 0 cover from userspace component
2023/03/30 19:47:37 [SERVER] executor 1 has 0 replies
2023/03/30 19:47:37 [SERVER] executor 2 has 18 replies
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1529 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 48 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 277 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 616 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 833 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 667 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 308 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1342 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 1323 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 7059 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 746 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 1813 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 519 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 314 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 108 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1686 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 3228 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 1024 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 130 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 242 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 384 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 198 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 171 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 242 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 2500 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 4082 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1286 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1480 signal and 0 cover from userspace component
2023/03/30 19:47:37 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:47:37 ----- no new client coverage: false, true
2023/03/30 19:47:37 mutate testcase with failures
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 2809 rename rename
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 171 dup2 dup2
2023/03/30 19:47:37 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:47:37 prog length: 13
2023/03/30 19:47:37 HasCrashFail:false HasNetFail:false
19:47:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x0)
symlinkat(&(0x7f0000000180)='./file0\x00', r0, &(0x7f0000000200)='./file0\x00')
fcntl$lock(r1, 0x7, &(0x7f0000000400)={0x1, 0x0, 0x3f})
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
rename(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
symlinkat(&(0x7f0000000040)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
fcntl$lock(r2, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x0, 0xffffffffffffffff})
r3 = dup(r1)
fcntl$addseals(r3, 0x409, 0x3)
r4 = openat(r1, &(0x7f00000002c0)='./file0\x00', 0x10400, 0x8)
dup2(r0, r4)
fcntl$lock(r0, 0x6, &(0x7f00000000c0)={0x2, 0x0, 0x88, 0x5})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2424
remove dir: /root/cephfs-client/dfs-0-2451
time breakdown 2: 25, 83357, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 43
-----finish removing dir
receive_execute: 4, 46
receive_execute: 12, 46
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 46
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2452 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2452
receive_execute: 25, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9267, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 565, pid 9267, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 3 signal number : 259
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9267, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 112
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9267, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9267, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9267, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 9267, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 8
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 17, 12
execute_one time: 0, 32
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10307, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 21102, flag collect 0
----- executor 2 signal number : 1016
----- executor 2 executes write_coverage_signal cov->size 742, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 58, 35, 0
before receive testcase: 0 0
----- executor 2 signal number : 7027
----- executor 2 executes write_coverage_signal cov->size 11502, flag collect 0
----- executor 2 signal number : 2637
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19800, flag collect 0
time breakdown 3: 71, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 1755
executor 2 server cover_cnt 7 output_pos_value 13920
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:47:37 wg wait finish
2023/03/30 19:47:37 ------ all executors finish execution
2023/03/30 19:47:37 exec time: 84
2023/03/30 19:47:37 ----- PS len: 4
2023/03/30 19:47:37 [CLIENT] executor 3 has 13 replies
2023/03/30 19:47:37 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 259 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 112 signal and 0 cover from executor 3
time breakdown 2: 50, 37, 0
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/30 19:47:37 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:47:37 [SERVER] executor 0 has 0 replies
2023/03/30 19:47:37 [SERVER] executor 2 has 7 replies
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1016 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 7027 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 2637 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1755 signal and 0 cover from userspace component
2023/03/30 19:47:37 [SERVER] executor 1 has 0 replies
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/30 19:47:37 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:47:37 ----- no new client coverage: false, true
2023/03/30 19:47:37 mutate testcase with failures
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:47:37 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:47:37 prog length: 11
2023/03/30 19:47:37 HasCrashFail:false HasNetFail:false
19:47:37 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open$dir(&(0x7f0000000200)='./file0\x00', 0x20401, 0x0)
truncate(&(0x7f00000003c0)='./file0\x00', 0x8c)
open$dir(&(0x7f0000000180)='./file0/file0\x00', 0x1, 0x4)
link(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
lsetxattr$security_capability(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340), &(0x7f0000000380)=@v3={0x3000000, [{0x10001, 0x7}, {0x8, 0x3ff}]}, 0x18, 0x2)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)={'U+', 0x2}, 0x16, 0x2)
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
openat(r0, &(0x7f0000000080)='./file0/file0\x00', 0x5010cd76eb5b1168, 0x1)
lchown(&(0x7f0000000580)='./file1\x00', 0xee00, 0x0)
---

end of program
time breakdown 1: 72, 32, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2112
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2452
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2453 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2453
receive_execute: 6, 21
receive_execute: 5, 20
receive_execute: 3, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 621, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 606, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 606, flag collect 0
----- executor 3 signal number : 101
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 388, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 3 signal number : 94
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 533, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 533, flag collect 0
----- executor 3 signal number : 149
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 567, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 567, flag collect 0
----- executor 3 signal number : 16
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 214, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 3 signal number : 61
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 248, pid 9271, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 248, flag collect 0
----- executor 3 signal number : 63
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 41, 5, 0
execute_one time: 0, 56
2023/03/30 19:47:37 for select break: 1
time breakdown 3: 27, 57, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14759, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 18474, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 942
----- executor 2 executes write_coverage_signal cov->size 606, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 25, 59, 0
before receive testcase: 0 1
----- executor 2 signal number : 7969
----- executor 2 executes write_coverage_signal cov->size 9419, flag collect 0
----- executor 2 signal number : 602
----- executor 2 executes write_coverage_signal cov->size 20917, flag collect 0
2023/03/30 19:47:37 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 4538
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2224
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 8 output_pos_value 17771
time breakdown 1: 25, 61, 0
before receive testcase: 0 0
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:47:37 wg wait finish
2023/03/30 19:47:37 ------ all executors finish execution
2023/03/30 19:47:37 exec time: 81
2023/03/30 19:47:37 ----- PS len: 4
2023/03/30 19:47:37 [CLIENT] executor 3 has 11 replies
2023/03/30 19:47:37 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 63 signal and 0 cover from executor 3
time breakdown 2: 23, 61, 0
2023/03/30 19:47:37 [SERVER] executor 2 has 8 replies
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/30 19:47:37 [SERVER] executor 0 has 0 replies
2023/03/30 19:47:37 [SERVER] executor 1 has 0 replies
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 942 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 7969 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 602 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 4538 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 2224 signal and 0 cover from userspace component
2023/03/30 19:47:37 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:47:37 ----- no new client coverage: false, true
2023/03/30 19:47:37 mutate testcase with failures
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 3967 truncate truncate
2023/03/30 19:47:37 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:47:37 prog length: 14
2023/03/30 19:47:37 HasCrashFail:false HasNetFail:false
19:47:37 ---executing program 0:
---
---
---
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000140)='./file1\x00', 0x0, 0x0)
r1 = dup(r0)
r2 = dup(r1)
r3 = fcntl$dupfd(r0, 0x0, r2)
r4 = open(&(0x7f0000000180)='./file0\x00', 0x2401, 0x10)
fcntl$getown(r4, 0x9)
lsetxattr$trusted_overlay_redirect(&(0x7f00000001c0)='./file1/file0\x00', &(0x7f0000000280), &(0x7f00000002c0)='./file0\x00', 0x8, 0x1)
mkdirat(r3, &(0x7f0000000000)='./file1\x00', 0x0)
r5 = fcntl$dupfd(r2, 0x0, r2)
getdents64(r5, &(0x7f0000000440)=""/65, 0x41)
renameat(r1, &(0x7f0000000200)='./file1\x00', r3, &(0x7f0000000240)='./file0\x00')
getdents64(r3, &(0x7f0000000040)=""/194, 0xc2)
truncate(&(0x7f0000000300)='./file0\x00', 0xb0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1976
remove dir: /root/cephfs-client/dfs-0-2453
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2454 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2454
receive_execute: 6, 15
receive_execute: 2, 16
receive_execute: 2, 15
receive_execute: 5, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 108
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 328, pid 9274, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 96
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 55
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 127, pid 9274, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 127, flag collect 0
----- executor 3 signal number : 26
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9274, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 6, 0
execute_one time: 0, 15
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 17, 0
executor 2 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 19803, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 27700, flag collect 0
----- executor 2 signal number : 1028
----- executor 2 executes write_coverage_signal cov->size 864, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7390
----- executor 2 executes write_coverage_signal cov->size 3483, flag collect 0
----- executor 2 signal number : 378
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5765
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1354
executor 2 server cover_cnt 8 output_pos_value 17411
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:47:37 for select break: 1
time breakdown 2: 17, 22, 0
2023/03/30 19:47:37 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:47:37 wg wait finish
before receive testcase: 0 0
2023/03/30 19:47:37 ------ all executors finish execution
2023/03/30 19:47:37 exec time: 37
2023/03/30 19:47:37 ----- PS len: 4
2023/03/30 19:47:37 [CLIENT] executor 3 has 14 replies
2023/03/30 19:47:37 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 96 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:47:37 [SERVER] executor 0 has 0 replies
2023/03/30 19:47:37 [SERVER] executor 1 has 0 replies
2023/03/30 19:47:37 [SERVER] executor 2 has 8 replies
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1028 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 7390 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 378 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 5765 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1354 signal and 0 cover from userspace component
2023/03/30 19:47:37 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:47:37 ----- no new client coverage: false, true
2023/03/30 19:47:37 mutate testcase with failures
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/30 19:47:37 ----- mutateArg()
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/30 19:47:37 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:47:37 prog length: 8
2023/03/30 19:47:37 HasCrashFail:false HasNetFail:false
19:47:37 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
fcntl$dupfd(r0, 0x0, r0)
r1 = open$dir(&(0x7f0000000200)='./file0\x00', 0x42000, 0x10)
write$binfmt_misc(0xffffffffffffffff, &(0x7f0000000040)={'syz0'}, 0x4)
r2 = open$dir(&(0x7f0000000080)='./file1\x00', 0x4002, 0x0)
write$binfmt_misc(r2, &(0x7f00000000c0)={'syz1'}, 0x4)
fsetxattr$trusted_overlay_redirect(r1, &(0x7f0000000240), &(0x7f0000000280)='./file0\x00', 0x8, 0x0)
write$binfmt_misc(r2, &(0x7f0000000100)={'syz1', "abd51ad48dd84dddabf86d95876437ff3f85aa5472f2e2922004a5328b3966041a037c5371600befd428bef8a524784567eccaa8e27e54b92eedbe20106a1a79aa267a8d8f38be417071cd31fbb5a0002a0c55458e04fe273c55dede716ef1e4f2dd8caaa6cbc4795453eff123ab01a5ee1841d176bda47e9a788aca8a7b0fc7ec1e9cc093d2cee9e3a29a5e94a0328e081a87eac5d835c66b57e7ee2d56a020e00b290c67e5c9ce518990ef1b2ec5d7225bca3594560c78c8759455e243bac0c7e35191ce20de58f33d373242db"}, 0xd2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1528
remove dir: /root/cephfs-client/dfs-0-2454
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 18, 17, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 20, 18, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2455 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2455
receive_execute: 7, 17
receive_execute: 3, 17
receive_execute: 6, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 624, pid 9278, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9278, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 9278, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 91
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 7, 17
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 9278, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 9278, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 33
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1015, pid 9278, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1015, flag collect 0
----- executor 3 signal number : 809
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9278, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 951, pid 9278, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 951, flag collect 0
----- executor 3 signal number : 11
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7316, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 1 output_pos_value 23
----- executor 2 signal number : 1350
----- executor 2 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 22084, flag collect 0
----- executor 2 signal number : 6033
----- executor 2 executes write_coverage_signal cov->size 1051, flag collect 0
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 565
time breakdown 3: 24, 18, 0
before receive testcase: 0 0
time breakdown 1: 24, 19, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 8312
time breakdown 0: 23, 20, 0
before receive testcase: 0 0
2023/03/30 19:47:37 for select break: 1
2023/03/30 19:47:37 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:47:37 wg wait finish
2023/03/30 19:47:37 ------ all executors finish execution
2023/03/30 19:47:37 exec time: 39
2023/03/30 19:47:37 ----- PS len: 4
2023/03/30 19:47:37 [CLIENT] executor 3 has 8 replies
2023/03/30 19:47:37 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 809 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:47:37 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/30 19:47:37 [SERVER] executor 0 has 1 replies
2023/03/30 19:47:37 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:47:37 [SERVER] executor 1 has 0 replies
2023/03/30 19:47:37 [SERVER] executor 2 has 5 replies
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 1350 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 6033 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/03/30 19:47:37 ------- fuzzer executor 2 receive 565 signal and 0 cover from userspace component
time breakdown 2: 20, 22, 0
before receive testcase: 0 0
2023/03/30 19:47:37 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:47:37 ----- no new client coverage: false, true
2023/03/30 19:47:37 mutate testcase with failures
2023/03/30 19:47:37 ----- mutateArg()
2023/03/30 19:47:37 ----- insertCall()
2023/03/30 19:47:37 ----- generateCall 3765 symlinkat symlinkat
2023/03/30 19:47:37 ----- mutateArg()
2023/03/30 19:47:37 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:47:37 prog length: 13
2023/03/30 19:47:37 HasCrashFail:false HasNetFail:false
19:47:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x0)
symlinkat(&(0x7f0000000180)='./file0\x00', r0, &(0x7f0000000200)='./file0\x00')
fcntl$lock(r1, 0x7, &(0x7f0000000400)={0x1, 0x0, 0x3f})
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
fcntl$lock(r2, 0x25, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x0, 0xffffffffffffffff})
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000280)={0x0, <r3=>0x0})
fcntl$lock(r0, 0x26, &(0x7f00000002c0)={0x0, 0x0, 0xfe3, 0x5, r3})
setxattr$trusted_overlay_origin(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x0)
chmod(&(0x7f0000000240)='./file0\x00', 0xa)
fcntl$lock(r0, 0x6, &(0x7f00000000c0)={0x2, 0x0, 0x88, 0x5})
symlinkat(&(0x7f00000003c0)='./file0\x00', r1, &(0x7f0000000440)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2840
remove dir: /root/cephfs-client/dfs-0-2455
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2456 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2456
receive_execute: 6, 19
receive_execute: 4, 19
receive_execute: 2, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 5, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 811, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 289
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 9281, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 93
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 9281, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 25
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9281, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 11
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9281, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 217, pid 9281, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 217, flag collect 0
----- executor 3 signal number : 1
----- completed 13
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83335, 1, 0
execute_one time: 1, 83336
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13159, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 29988, flag collect 0
----- executor 2 signal number : 1529
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 0 signal number : 74
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 48
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 28592, flag collect 0
----- executor 0 signal number : 48
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 670
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 386
----- executor 0 executes write_coverage_signal cov->size 3838, flag collect 0
----- executor 2 signal number : 1330
----- executor 2 executes write_coverage_signal cov->size 19787, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 117
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 708
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 25, 83338, 0
before receive testcase: 0 1
----- executor 0 signal number : 554
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 83342, 0
before receive testcase: 0 0
----- executor 2 signal number : 7933
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 771
----- executor 0 signal number : 276
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 0 signal number : 835
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1705
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 717
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4927
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 280
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 232
----- executor 2 executes write_coverage_signal cov->size 4364, flag collect 0
----- executor 2 signal number : 346
----- executor 2 executes write_coverage_signal cov->size 4880, flag collect 0
----- executor 2 signal number : 164
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1334
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1467
----- executor 2 executes write_coverage_signal cov->size 31696, flag collect 0
----- executor 0 signal number : 2631
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5663
----- executor 2 executes write_coverage_signal cov->size 66, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 536
----- executor 0 executes write_coverage_signal cov->size 13159, flag collect 0
----- executor 0 signal number : 324
----- executor 0 executes write_coverage_signal cov->size 5185, flag collect 0
----- executor 0 signal number : 107
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2851
----- executor 2 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1128
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1722
executor 2 server cover_cnt 18 output_pos_value 31498
----- executor 0 signal number : 270
----- executor 0 executes write_coverage_signal cov->size 4457, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 112, flag collect 0
----- executor 0 signal number : 20
executor 0 server cover_cnt 22 output_pos_value 12964
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 21, 83348, 0
before receive testcase: 0 0
time breakdown 0: 23, 83348, 0
before receive testcase: 0 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 83372
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 13 replies
2023/03/30 19:49:01 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 289 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 22 replies
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 48 signal and 0 cover from userspace component
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 18 replies
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 386 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1529 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 117 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 48 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 708 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 554 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 670 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 276 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1330 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 835 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 717 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 280 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 1334 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 7933 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 771 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1705 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 2631 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 536 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 324 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 107 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 1128 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 270 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 4927 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 232 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 346 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 164 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1467 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 5663 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 2851 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1722 signal and 0 cover from userspace component
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2462 openat openat
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 4
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
openat(r0, &(0x7f0000000000)='./file0\x00', 0x200, 0x70)
open$dir(&(0x7f0000000080)='./file0\x00', 0x100c0, 0x0)
setxattr$security_ima(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000700)=@v2={0x0, 0x0, 0x0, 0x0, 0xff8, ""}, 0x1001, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4928
remove dir: /root/cephfs-client/dfs-0-2456
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2457 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2457
receive_execute: 7, 11
receive_execute: 7, 11
receive_execute: 13, 11
receive_execute: 17, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9286, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9286, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9286, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 136
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
executor 1 write_server_output
time breakdown 3: 29, 5, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8161, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 21113, flag collect 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 6, 0
before receive testcase: 0 1
2023/03/30 19:49:01 for select break: 1
time breakdown 0: 18, 6, 0
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5677
----- executor 2 executes write_coverage_signal cov->size 18650, flag collect 0
----- executor 2 signal number : 652
executor 2 server cover_cnt 4 output_pos_value 7698
time breakdown 2: 18, 7, 0
before receive testcase: 0 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 24
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 4 replies
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 4 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 5677 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 652 signal and 0 cover from userspace component
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 6
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
lsetxattr$security_selinux(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:cpu_device_t:s0\x00', 0x22, 0x2)
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
symlink(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140)='./file0\x00')
r0 = open$dir(&(0x7f00000006c0)='./file0\x00', 0x0, 0x0)
setxattr$incfs_size(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), 0x0, 0x0, 0x0)
fsync(r0)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/cephfs-client/dfs-0-2457
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 20
executor 3 create dir /root/cephfs-client/dfs-0-2458 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2458
receive_execute: 7, 43
receive_execute: 9, 43
receive_execute: 8, 43
receive_execute: 7, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 655, pid 9289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 655, flag collect 0
----- executor 3 signal number : 493
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 9289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 38
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 571, pid 9289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 111
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 514, pid 9289, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 514, flag collect 0
----- executor 3 signal number : 62
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 184, pid 9289, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 184, flag collect 0
----- executor 3 signal number : 61
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 0, 13
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7470, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 16896, flag collect 0
----- executor 2 signal number : 985
----- executor 2 executes write_coverage_signal cov->size 772, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 50, 16, 0
----- executor 2 signal number : 8223
----- executor 2 executes write_coverage_signal cov->size 7992, flag collect 0
----- executor 2 signal number : 1560
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 30856, flag collect 0
time breakdown 3: 52, 14, 0
before receive testcase: 0 0
time breakdown 1: 51, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 876
executor 2 server cover_cnt 7 output_pos_value 13125
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 61
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 6 replies
2023/03/30 19:49:01 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 493 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 2 has 7 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 985 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 8223 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1560 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 876 signal and 0 cover from userspace component
time breakdown 2: 50, 18, 0
before receive testcase: 0 0
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 3764 symlink symlink
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 3967 truncate truncate
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 16
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
truncate(&(0x7f0000000780)='./file0\x00', 0xeb)
symlinkat(&(0x7f0000000100)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00')
rename(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)='./file0\x00')
readlinkat(0xffffffffffffff9c, &(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=""/114, 0x72)
symlink(&(0x7f0000000180)='./file0/file0\x00', &(0x7f0000000740)='./file0/file1\x00')
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
renameat(r0, &(0x7f0000000480)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f00000004c0)='./file0\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file0\x00', 0x8, 0x2)
setxattr$user(&(0x7f0000000400)='./file0/file0\x00', &(0x7f0000000500), &(0x7f0000000540)='-\\ %\'!\x00', 0x7, 0x3)
setxattr$incfs_id(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)={'0000000000000000000000000000000', 0x31}, 0x20, 0x1)
stat(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000640)='./file0\x00', r1, 0xee01)
setxattr$trusted_overlay_origin(&(0x7f00000007c0)='./file0/file1\x00', &(0x7f0000000800), &(0x7f0000000840), 0x2, 0x2)
setxattr(&(0x7f00000003c0)='./file0/file0\x00', &(0x7f0000000400)=ANY=[@ANYBLOB], &(0x7f0000000440)='security.evm\x00', 0xd, 0x2)
readlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), 0x0)
lsetxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@sha1={0x1, "46ca186e205b152d1565c560b44073a05c5a302e"}, 0x15, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3280
remove dir: /root/cephfs-client/dfs-0-2458
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2459 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2459
receive_execute: 5, 16
receive_execute: 5, 15
receive_execute: 4, 15
receive_execute: 2, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 485, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 10
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 469, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 469, flag collect 0
----- executor 3 signal number : 160
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 532, pid 9292, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 3 signal number : 121
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 1, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 11, 12
executor 1 write_server_output
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 11221, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1333
----- executor 2 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 27722, flag collect 0
----- executor 2 signal number : 6190
----- executor 2 executes write_coverage_signal cov->size 18561, flag collect 0
time breakdown 1: 20, 27, 0
before receive testcase: 0 1
time breakdown 3: 21, 25, 0
before receive testcase: 0 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 608
executor 2 server cover_cnt 4 output_pos_value 8213
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 19, 27, 0
time breakdown 2: 17, 28, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 44
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 16 replies
2023/03/30 19:49:01 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 121 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 4 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1333 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 6190 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 608 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2462 openat openat
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 4
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x86342, 0x0)
read(r0, 0x0, 0x0)
r1 = dup(r0)
openat(r1, &(0x7f0000000040)='./file0\x00', 0x12040, 0x27)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
remove dir: /root/cephfs-client/dfs-0-2459
remove dir time 62
-----finish removing dir
receive_execute: 2, 64
receive_execute: 2, 64
receive_execute: 3, 64
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2460 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2460
receive_execute: 5, 64
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 624, pid 9296, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 208, pid 9296, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 208, flag collect 0
----- executor 3 signal number : 173
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9296, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9296, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2953, flag collect 0
time breakdown 3: 69, 2, 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1164
----- executor 2 executes write_coverage_signal cov->size 10498, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4746
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 541
executor 2 server cover_cnt 3 output_pos_value 6461
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 4, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 66, 4, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 70
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 4 replies
2023/03/30 19:49:01 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 173 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 2 has 3 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1164 signal and 0 cover from userspace component
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 4746 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 541 signal and 0 cover from userspace component
time breakdown 0: 66, 4, 0
before receive testcase: 0 1
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 250 fsync fsync
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 516 getxattr getxattr
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2809 rename rename
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 14
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x622c2, 0x0)
open$dir(&(0x7f0000000180)='./file0\x00', 0x42000, 0x20)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x28100, 0x100)
write$binfmt_script(r1, &(0x7f0000000280)={'#! ', './file0', [{0x20, 'trusted.overlay.nlink\x00'}, {0x20, 'trusted.overlay.nlink\x00'}, {0x20, '\'^$'}, {0x20, 'trusted.overlay.nlink\x00'}, {0x20, '.*:}'}, {0x20, '(@){%\\'}, {0x20, '@^:@'}, {0x20, 'trusted.overlay.nlink\x00'}], 0xa, "90ec374bfcf0dbc0fb41b6f68dfb0330891770cea366c96253222f87d8c23dbd2d956655642e3686151722717461ac8acc6c17f0b99288ab26079b2f6d5cf744c2dd31ae4c62f1a95b20fa60e9953f2fae9b761f72321464644ec9cf127e96c4557f84e70e34915e8c3235b7027c"}, 0xea)
r2 = dup(r0)
fchmod(r2, 0xc)
getxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000080)=@known='trusted.overlay.nlink\x00', &(0x7f00000000c0)=""/154, 0x9a)
r3 = dup(r0)
r4 = fcntl$dupfd(r3, 0x406, r0)
fsync(r4)
r5 = fcntl$dupfd(r0, 0x406, r4)
rename(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='./file0\x00')
r6 = dup(r5)
fsync(r6)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2616
remove dir: /root/cephfs-client/dfs-0-2460
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2461 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2461
receive_execute: 4, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 13
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 625, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9299, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 82
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 187, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 187, flag collect 0
----- executor 3 signal number : 62
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9299, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 182
----- completed 10
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9299, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9299, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12, pid 9299, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 3 signal number : 6
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 1, 0
execute_one time: 1, 17
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8657, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 8197, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 946
----- executor 2 executes write_coverage_signal cov->size 287, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15429, flag collect 0
----- executor 2 signal number : 5594
----- executor 2 executes write_coverage_signal cov->size 705, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 11264, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 2937
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 20188, flag collect 0
----- executor 2 signal number : 1783
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 21, 0
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 13026
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 34
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 14 replies
2023/03/30 19:49:01 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 14, 24, 0
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 182 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 6 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 946 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 5594 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 2937 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1783 signal and 0 cover from userspace component
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 9
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000240)='./file0\x00', 0x5a1c0, 0x0)
open$dir(&(0x7f0000000400)='./file0\x00', 0x301081, 0x99)
open$dir(&(0x7f00000003c0)='./file0\x00', 0x6206c0, 0x100)
setxattr$trusted_overlay_nlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x48, 0x0)
setxattr$incfs_size(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380)=0x40, 0x8, 0x0)
setxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000440)=@known='trusted.overlay.origin\x00', 0x0, 0x0, 0x2)
setxattr$security_smack_transmute(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x4, 0x0)
lsetxattr$security_selinux(&(0x7f0000000200)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)='system_u:object_r:klogd_var_run_t:s0\x00', 0x25, 0x1)
llistxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 18, 19, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1904
remove dir: /root/cephfs-client/dfs-0-2461
remove dir time 8
-----finish removing dir
receive_execute: 2, 9
receive_execute: 4, 9
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2462 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2462
receive_execute: 5, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 3, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 737, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 737, flag collect 0
----- executor 3 signal number : 175
----- completed 5
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 487, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 487, flag collect 0
----- executor 3 signal number : 10
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 420, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 22
----- completed 8
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 471, pid 9302, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 471, flag collect 0
----- executor 3 signal number : 48
----- completed 9
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 45, 8, 0
execute_one time: 0, 53
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 14, 59, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 23101, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 28389, flag collect 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1064
----- executor 2 executes write_coverage_signal cov->size 1189, flag collect 0
----- executor 2 signal number : 69
2023/03/30 19:49:01 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 13, 61, 0
before receive testcase: 0 0
----- executor 2 signal number : 7758
----- executor 2 executes write_coverage_signal cov->size 4800, flag collect 0
----- executor 2 signal number : 424
----- executor 2 executes write_coverage_signal cov->size 30068, flag collect 0
----- executor 2 signal number : 5197
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1391
executor 2 server cover_cnt 8 output_pos_value 17337
time breakdown 1: 24, 48, 0
before receive testcase: 0 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 74
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 9 replies
2023/03/30 19:49:01 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 175 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
time breakdown 2: 11, 65, 0
before receive testcase: 0 0
2023/03/30 19:49:01 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1064 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 7758 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 5197 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1391 signal and 0 cover from userspace component
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 20
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r1, 0x6, &(0x7f0000000040)={0x0, 0x0, 0x3c, 0x3, 0xffffffffffffffff})
fcntl$getownex(r0, 0x10, &(0x7f0000000200))
fcntl$lock(r1, 0x5, &(0x7f0000000240)={0x1, 0x2, 0x7fffffff, 0x80000000000000e4})
chmod(&(0x7f00000003c0)='./file0\x00', 0x20)
fcntl$getown(r1, 0x9)
fcntl$lock(r1, 0x2, &(0x7f0000000280)={0x0, 0x4, 0x4, 0x2e})
fcntl$getownex(r1, 0x10, &(0x7f00000004c0)={0x0, <r2=>0x0})
listxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540), 0x0)
fcntl$lock(r0, 0x25, &(0x7f0000000340)={0x0, 0x1, 0x3, 0x7})
r3 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0, 0x90)
chmod(&(0x7f0000000380)='./file0\x00', 0x142)
fcntl$lock(r1, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x0, 0x9, r2})
open$dir(&(0x7f0000000480)='./file0\x00', 0x100, 0x100)
symlinkat(&(0x7f0000000080)='./file0\x00', r3, &(0x7f0000000180)='./file0\x00')
symlink(&(0x7f0000000540)='./file0\x00', &(0x7f0000000440)='./file0\x00')
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000002c0)={0x0, <r4=>0x0})
open$dir(&(0x7f0000000400)='./file0/file0\x00', 0x42c42, 0x199)
fcntl$lock(r0, 0x24, &(0x7f0000000300)={0x0, 0x1, 0x1, 0x8001000, r4})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3904
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2462
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
receive_execute: 2, 26
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2463 successfully
receive_execute: 6, 26
current dir: executor 3: /root/cephfs-client/dfs-0-2463
receive_execute: 8, 26
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 7, 26
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9305, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 71
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9305, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 7
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 9305, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 10
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9305, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 9305, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 11
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 1, 0
execute_one time: 0, 18
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19436, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1334
----- executor 2 executes write_coverage_signal cov->size 713, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 6556
----- executor 2 executes write_coverage_signal cov->size 3656, flag collect 0
----- executor 2 signal number : 336
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
----- executor 2 signal number : 537
executor 2 server cover_cnt 6 output_pos_value 8853
time breakdown 3: 34, 20, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 49
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:01 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 2 has 6 replies
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1334 signal and 0 cover from userspace component
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 6556 signal and 0 cover from userspace component
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 336 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 537 signal and 0 cover from userspace component
time breakdown 2: 28, 23, 0
before receive testcase: 0 0
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2809 rename rename
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 516 getxattr getxattr
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 7
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000240)='./file0\x00', 0x242, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x4)
rename(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000280)=@v3={0x3000000, [{0x0, 0x3}, {0x7, 0x10000}], r0}, 0x18, 0x1)
open$dir(&(0x7f0000000040)='./file0\x00', 0x101080, 0x8)
getxattr(&(0x7f00000002c0)='./file0/file0\x00', &(0x7f0000000300)=@known='system.posix_acl_access\x00', &(0x7f0000000480)=""/230, 0xe6)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1416
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2463
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 33, 21, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 48
-----finish removing dir
receive_execute: 3, 50
receive_execute: 4, 50
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2464 successfully
receive_execute: 2, 50
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
current dir: executor 3: /root/cephfs-client/dfs-0-2464
receive_execute: 5, 50
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 177
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 230, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 230, flag collect 0
----- executor 3 signal number : 60
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 4
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 94, pid 9309, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 9, 0
execute_one time: 0, 11
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 53, 13, 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 55, 12, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12939, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 15097, flag collect 0
----- executor 2 signal number : 1016
----- executor 2 executes write_coverage_signal cov->size 509, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 27759, flag collect 0
----- executor 2 signal number : 7596
----- executor 2 executes write_coverage_signal cov->size 343, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 14868, flag collect 0
----- executor 2 signal number : 3468
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2157
executor 2 server cover_cnt 8 output_pos_value 15963
time breakdown 2: 52, 16, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 73
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 7 replies
2023/03/30 19:49:01 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1016 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 7596 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3468 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 2157 signal and 0 cover from userspace component
time breakdown 1: 54, 23, 0
before receive testcase: 0 0
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2458 open open
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 5
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='\x00', 0x0, 0x0)
setxattr$incfs_metadata(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000180)="d1b6d391baf9c17c1316adeda8735b82e53279f17b1b84d68ca8b9a15d9439ce0f4ef639061063bb7b66a286b00975b670db7102e3c88d94a3ef54be24308c93a792cd9748ee4994c401820aeff8cdc6b71c70fc53b86beba6a31520dbdf8bbe69d361c33529c359bb98b6b6ee23efd1b2ef8dadce2199aec16d5d7f7677f7d05e61fe035f5c10d5a87dff41bc98416494a481989e48ddc45a4c44bd10fcca82f6475771f36d633bbd424fb047", 0xad, 0x5)
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x3, 0xffffffffffffffff})
open(&(0x7f0000000040)='./file0\x00', 0x1, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/cephfs-client/dfs-0-2464
remove dir time 9
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-2465 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2465
receive_execute: 13, 10
receive_execute: 9, 11
receive_execute: 11, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 93, pid 9313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9313, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 2, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
time breakdown 3: 23, 3, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 336, flag collect 0
----- executor 2 signal number : 251
executor 2 server cover_cnt 1 output_pos_value 255
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 13, 4, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 15
2023/03/30 19:49:01 ----- PS len: 4
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:01 [CLIENT] executor 3 has 5 replies
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 1 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 251 signal and 0 cover from userspace component
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 20, 4, 0
2023/03/30 19:49:01 ----- no new client coverage: false, true
before receive testcase: 0 1
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- splice()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 20
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
close(0xffffffffffffffff)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
open(&(0x7f0000000380)='./file0\x00', 0x14000, 0x2)
open$dir(&(0x7f0000000580)='./file0\x00', 0xa40800, 0x10)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x8002, 0x104)
fcntl$lock(r1, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x3, 0xffffffffffffffff})
readlink(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=""/206, 0xce)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f00000005c0))
r2 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x22)
fcntl$getownex(r0, 0x10, &(0x7f0000000200)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x6, &(0x7f0000000240)={0x0, 0x1, 0x7fffffff, 0x10000, r3})
write(r0, &(0x7f00000003c0), 0x0)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000003c0))
fcntl$lock(r2, 0x7, &(0x7f0000000400)={0x1, 0x2, 0x43, 0x5, r3})
fcntl$getown(r1, 0x9)
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r4 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r4, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x3, 0xffffffffffffffff})
fcntl$setownex(r1, 0xf, &(0x7f0000000080)={0x1})
open$dir(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3384
remove dir: /root/cephfs-client/dfs-0-2465
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2466 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2466
receive_execute: 1, 3
receive_execute: 2, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 0: 21, 4, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 1, 3
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 1, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 624, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 114
----- completed 6
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 614, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 614, flag collect 0
----- executor 3 signal number : 129
----- completed 9
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 15
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 304, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 304, flag collect 0
----- executor 3 signal number : 1
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9316, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9316, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 67, 1, 1
execute_one time: 1, 69
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 5, 73, 0
before receive testcase: 0 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16107, flag collect 0
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 28855, flag collect 0
----- executor 2 signal number : 1083
----- executor 2 executes write_coverage_signal cov->size 1065, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7204
----- executor 2 executes write_coverage_signal cov->size 6102, flag collect 0
----- executor 2 signal number : 419
----- executor 2 executes write_coverage_signal cov->size 22239, flag collect 0
----- executor 2 signal number : 3982
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28237, flag collect 0
----- executor 2 signal number : 2115
executor 2 server cover_cnt 8 output_pos_value 16300
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 4, 76, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 4, 74, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 82
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1083 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 7204 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 419 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3982 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 2115 signal and 0 cover from userspace component
2023/03/30 19:49:01 [SERVER] executor 0 has 0 replies
time breakdown 1: 4, 79, 0
before receive testcase: 0 0
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- mutateArg()
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 9
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
stat(&(0x7f0000001100)='./file1\x00', &(0x7f0000001140)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000011c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000001240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000012c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000001340)='./file1\x00', &(0x7f0000001380)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000001080)='./file1\x00', &(0x7f00000010c0)='system.posix_acl_access\x00', &(0x7f0000001500)=ANY=[@ANYBLOB="02000000010001000000000002000500", @ANYRES32=r0, @ANYBLOB="02000200", @ANYRES32=0xee00, @ANYBLOB="184dea5a3c4168ee061931f894b8e84be1cedafb3822bf5fc35c81f0e6723c7b29b0c6eed511b5bf84884b4f1c198257101cbf9b9f1747e30f0380334e1eb30c1a92f14939868392dd4b73a6d9a20872dd104a8dcbb3d941eaedfb926272ca26d5f95eb9df8a12cba80055fc9e5d55af3ebb1ee9ab81992e763f1cd8e9fbfe65ea366fd3d560a132ee544f0f422d3bd63636a8c716", @ANYRES32=r1, @ANYBLOB="02000200", @ANYRES32=r2, @ANYBLOB="02000500", @ANYRES32=r3, @ANYBLOB="02000100", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="040007000000000008000000", @ANYRES32=r4, @ANYBLOB="10000600000000002000000000000000"], 0x6c, 0x2)
r5 = open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
r6 = fcntl$dupfd(r5, 0x0, r5)
write$binfmt_misc(r6, &(0x7f0000000040)=ANY=[@ANYBLOB=""], 0x400000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6416
remove dir: /root/cephfs-client/dfs-0-2466
remove dir time 8
-----finish removing dir
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 3, 26
receive_execute: 8, 26
receive_execute: 6, 26
mkdir time 17
executor 3 create dir /root/cephfs-client/dfs-0-2467 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2467
receive_execute: 10, 25
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- executor 3 write_call_output, size 85, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 662, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 3 signal number : 448
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9320, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 84874, pid 9320, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 84874, flag collect 0
----- executor 3 signal number : 950
----- completed 9
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 189, 1, 0
execute_one time: 0, 191
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10664, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 0 signal number : 128
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 597, flag collect 0
----- executor 0 signal number : 306
executor 0 server cover_cnt 4 output_pos_value 534
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 19097, flag collect 0
----- executor 2 signal number : 911
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28531, flag collect 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6015
----- executor 2 executes write_coverage_signal cov->size 1107, flag collect 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 10562, flag collect 0
time breakdown 1: 29, 192, 0
before receive testcase: 0 0
----- executor 2 signal number : 2435
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 28974, flag collect 0
time breakdown 0: 34, 193, 0
before receive testcase: 0 0
----- executor 2 signal number : 1918
time breakdown 3: 35, 192, 0
before receive testcase: 0 0
2023/03/30 19:49:01 for select break: 1
2023/03/30 19:49:01 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:01 wg wait finish
2023/03/30 19:49:01 ------ all executors finish execution
2023/03/30 19:49:01 exec time: 227
2023/03/30 19:49:01 ----- PS len: 4
2023/03/30 19:49:01 [CLIENT] executor 3 has 9 replies
2023/03/30 19:49:01 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 448 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:01 fuzzer receive 950 signal and 0 cover from executor 3
2023/03/30 19:49:01 [SERVER] executor 0 has 4 replies
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/30 19:49:01 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:01 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 911 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 6015 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 2435 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:01 ------- fuzzer executor 2 receive 1918 signal and 0 cover from userspace component
2023/03/30 19:49:01 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:01 ----- no new client coverage: false, true
2023/03/30 19:49:01 mutate testcase with failures
2023/03/30 19:49:01 ----- insertCall()
2023/03/30 19:49:01 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:49:01 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:01 prog length: 20
2023/03/30 19:49:01 HasCrashFail:false HasNetFail:false
19:49:01 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r1, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x3, 0xffffffffffffffff})
r2 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x20000, 0x30)
fcntl$getownex(r0, 0x10, &(0x7f0000000200)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x6, &(0x7f0000000240)={0x0, 0x1, 0x7fffffff, 0xea, r3})
open$dir(&(0x7f00000000c0)='./file0/file0\x00', 0x10280, 0x8)
chmod(&(0x7f00000003c0)='./file0\x00', 0x20)
r4 = fcntl$getown(r1, 0x9)
fcntl$lock(r0, 0x24, &(0x7f0000000280)={0x0, 0x3, 0x4, 0x2e, r3})
fcntl$getownex(r1, 0x10, &(0x7f00000004c0)={0x0, <r5=>0x0})
fcntl$lock(r0, 0x25, &(0x7f0000000340)={0x0, 0x1, 0x3, 0x7, r5})
r6 = openat(0xffffffffffffff9c, &(0x7f0000000580)='./file0\x00', 0x418742, 0x90)
fcntl$lock(r0, 0x6, &(0x7f0000000040)={0x1, 0x2, 0x3, 0x3010, r4})
open$dir(&(0x7f0000000480)='./file0\x00', 0x1, 0x12)
symlinkat(&(0x7f0000000380)='./file0/file0/../file0\x00', r6, &(0x7f0000000180)='./file1\x00')
symlinkat(&(0x7f0000000500)='./file0/file0\x00', r0, &(0x7f0000000540)='./file0\x00')
symlink(&(0x7f0000000400)='./file0/file0\x00', &(0x7f0000000440)='./file0\x00')
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000002c0)={0x0, <r7=>0x0})
fcntl$lock(r0, 0x6, &(0x7f0000000300)={0x0, 0x1, 0x4, 0x80000001, r7})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 server cover_cnt 8 output_pos_value 13061
time breakdown 2: 32, 201, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4120
remove dir: /root/cephfs-client/dfs-0-2467
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2468 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2468
receive_execute: 12, 41
receive_execute: 3, 41
receive_execute: 11, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9323, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9323, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 71
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9323, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 400, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 400, flag collect 0
----- executor 3 signal number : 105
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9323, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 9323, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 2
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 0, 10
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 53, 11, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4773, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 18408, flag collect 0
----- executor 2 signal number : 1085
----- executor 2 executes write_coverage_signal cov->size 711, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
receive_execute: 11, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 60, 4, 0
before receive testcase: 0 0
----- executor 2 signal number : 7085
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 14800, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 52, 14, 0
before receive testcase: 0 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
----- executor 2 signal number : 1426
executor 2 server cover_cnt 6 output_pos_value 10277
time breakdown 2: 44, 15, 0
before receive testcase: 0 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 56
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 6 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1085 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7085 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1426 signal and 0 cover from userspace component
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 20
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
setxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000140)=@random={'system.', 'trusted.overlay.upper\x00'}, &(0x7f0000000800)='\xfb\xb3BE\x93`\x99\x87f|\x00', 0xb, 0x0)
symlink(&(0x7f0000000240)='./file1\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_size(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=0xbc26, 0x8, 0x1)
mkdir(&(0x7f0000000440)='./file0\x00', 0x88)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000280), &(0x7f00000003c0)='./file0\x00', 0x8, 0x1)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000640)='./file0/file0\x00')
stat(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000200)='./file2\x00', 0xee00, r0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
lsetxattr$security_selinux(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000780), &(0x7f0000000600)='system_u:object_r:hald_sonypic_exec_t:s0\x00', 0xffcd, 0x2)
chmod(&(0x7f0000000180)='./file0\x00', 0x0)
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='./file1\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000001480)='./file1\x00', &(0x7f00000014c0), 0x0, 0x0, 0x0)
lsetxattr$security_ima(&(0x7f0000000040)='./file1\x00', &(0x7f00000007c0), 0x0, 0x0, 0x1)
lsetxattr$security_smack_transmute(&(0x7f0000000180)='./file1\x00', 0x0, &(0x7f0000000200), 0x4, 0x2)
stat(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f0000000680)='./file2\x00', r1, r0)
lchown(&(0x7f0000000240)='./file1\x00', 0xee00, 0x0)
truncate(&(0x7f0000000480)='./file0\x00', 0x80000001)
rename(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3784
remove dir: /root/cephfs-client/dfs-0-2468
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2469 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2469
receive_execute: 3, 30
receive_execute: 6, 30
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 30
receive_execute: 5, 30
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 343
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 235, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 636, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 636, flag collect 0
----- executor 3 signal number : 134
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 132
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 266, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 266, flag collect 0
----- executor 3 signal number : 56
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 199, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 199, flag collect 0
----- executor 3 signal number : 17
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 233, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 233, flag collect 0
----- executor 3 signal number : 7
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 238, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 238, flag collect 0
----- executor 3 signal number : 26
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 598, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 598, flag collect 0
----- executor 3 signal number : 82
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9327, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 22, 0
execute_one time: 1, 27
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 23347, flag collect 0
time breakdown 3: 38, 31, 0
before receive testcase: 0 1
----- executor 2 signal number : 1424
----- executor 2 executes write_coverage_signal cov->size 32139, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1093
----- executor 2 executes write_coverage_signal cov->size 1095, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 8023
----- executor 2 executes write_coverage_signal cov->size 24796, flag collect 0
time breakdown 1: 36, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 4814
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1417
executor 2 server cover_cnt 7 output_pos_value 16863
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 33, 36, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 67
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 343 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 7 replies
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1424 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1093 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 8023 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 4814 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1417 signal and 0 cover from userspace component
time breakdown 0: 35, 37, 0
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 6
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
truncate(&(0x7f0000000080)='./file1\x00', 0x80)
open$dir(&(0x7f0000000040)='./file1\x00', 0x400800, 0xf0)
r0 = open(&(0x7f0000000140)='./file1\x00', 0x20002, 0x0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x351980, 0x2)
write$binfmt_script(r0, &(0x7f00000000c0)=ANY=[@ANYBLOB="2321202e2f6642fdb1c80a"], 0xb)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 832
remove dir: /root/cephfs-client/dfs-0-2469
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2470 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2470
receive_execute: 8, 26
receive_execute: 7, 25
receive_execute: 2, 25
receive_execute: 4, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9331, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 9331, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 263
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9331, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 9331, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 97
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9331, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1395, pid 9331, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1395, flag collect 0
----- executor 3 signal number : 683
----- completed 6
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 0, 10
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13773, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 13, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 17520, flag collect 0
----- executor 2 signal number : 952
----- executor 2 executes write_coverage_signal cov->size 514, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 30088, flag collect 0
----- executor 2 signal number : 7594
----- executor 2 executes write_coverage_signal cov->size 13078, flag collect 0
----- executor 2 signal number : 605
----- executor 2 executes write_coverage_signal cov->size 14069, flag collect 0
----- executor 2 signal number : 3377
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 22473, flag collect 0
time breakdown 1: 32, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 1454
executor 2 server cover_cnt 8 output_pos_value 15475
time breakdown 3: 34, 11, 0
before receive testcase: 0 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 41
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 6 replies
2023/03/30 19:49:02 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 263 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 683 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 952 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7594 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 605 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3377 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 29, 16, 0
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1454 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 3761 stat stat
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 8
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='./file1\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0), &(0x7f0000000500), 0x2, 0x1)
lsetxattr$user(&(0x7f0000000080)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='y\x00', 0x2, 0x3)
setxattr$security_capability(&(0x7f0000000200)='./file1\x00', &(0x7f0000000240), &(0x7f0000000380)=@v2={0x2000000, [{0x8000, 0x3}, {0x1ff800, 0x1}]}, 0x14, 0x2)
setxattr$smack_xattr_label(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400)='security.SMACK64\x00', &(0x7f0000000440)=ANY=[@ANYBLOB='G'], 0x1, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000140), 0x2, 0x3)
llistxattr(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)=""/136, 0x88)
stat(&(0x7f0000000540)='./file1\x00', &(0x7f0000000580))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1960
remove dir: /root/cephfs-client/dfs-0-2470
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
receive_execute: 5, 9
receive_execute: 2, 9
receive_execute: 7, 7
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2471 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2471
receive_execute: 6, 10
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 139
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 82
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 90
----- completed 7
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 3796, pid 9334, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3796, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 27, 6, 0
execute_one time: 0, 33
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10513, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 17854, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 973
----- executor 2 executes write_coverage_signal cov->size 705, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7551
----- executor 2 executes write_coverage_signal cov->size 4109, flag collect 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 15120, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 37, 0
time breakdown 1: 14, 36, 0
before receive testcase: 0 0
----- executor 2 signal number : 3033
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19045, flag collect 0
----- executor 2 signal number : 1174
executor 2 server cover_cnt 8 output_pos_value 14575
time breakdown 3: 16, 34, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 48
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 8 replies
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 973 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 11, 38, 0
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7551 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3033 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1174 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 6
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
open$dir(&(0x7f00000002c0)='./file0\x00', 0x13b043, 0x10)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
r0 = open$dir(&(0x7f0000000200)='./file0\x00', 0x20401, 0x0)
r1 = fcntl$dupfd(r0, 0x0, r0)
setxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x3)
write$binfmt_misc(r1, 0x0, 0x1000000000000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 976
remove dir: /root/cephfs-client/dfs-0-2471
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-2472 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2472
receive_execute: 7, 19
receive_execute: 3, 20
receive_execute: 5, 20
receive_execute: 4, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 16
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 9337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 227
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 9337, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 94
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 715, pid 9337, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 715, flag collect 0
----- executor 3 signal number : 259
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 1, 11
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12301, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1396
----- executor 2 executes write_coverage_signal cov->size 19180, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 26, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 1002
----- executor 2 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28681, flag collect 0
time breakdown 0: 24, 13, 0
before receive testcase: 0 1
----- executor 2 signal number : 7556
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 11646, flag collect 0
----- executor 2 signal number : 2563
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25020, flag collect 0
----- executor 2 signal number : 2082
executor 2 server cover_cnt 8 output_pos_value 14701
time breakdown 2: 23, 17, 0
before receive testcase: 0 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 42
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 6 replies
2023/03/30 19:49:02 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 227 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 259 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1396 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1002 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7556 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2563 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2082 signal and 0 cover from userspace component
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 5
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x622c2, 0x0)
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x100000000)
fcntl$lock(r0, 0x3, &(0x7f0000000000)={0x2, 0x2, 0xfffffffffffffffb, 0x8000, 0xffffffffffffffff})
r1 = dup2(r0, r0)
close(r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 840
remove dir: /root/cephfs-client/dfs-0-2472
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 25, 14, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 10, 36
receive_execute: 12, 35
mkdir time 18
executor 3 create dir /root/cephfs-client/dfs-0-2473 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2473
receive_execute: 7, 36
receive_execute: 12, 35
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9340, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 776, pid 9340, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 776, flag collect 0
----- executor 3 signal number : 442
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9340, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9340, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 52, pid 9340, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 52, flag collect 0
----- executor 3 signal number : 23
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 3, 0
execute_one time: 1, 10
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 47, 11, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6519, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 7818, flag collect 0
----- executor 2 signal number : 921
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14582, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5488
----- executor 2 executes write_coverage_signal cov->size 1098, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 5797, flag collect 0
----- executor 2 signal number : 1569
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 14332, flag collect 0
----- executor 2 signal number : 1472
executor 2 server cover_cnt 8 output_pos_value 11228
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 43, 14, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 47, 12, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 60
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 5 replies
2023/03/30 19:49:02 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 442 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 921 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 5488 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1569 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1472 signal and 0 cover from userspace component
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 3
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000240)='./file0\x00', 0x242, 0x0)
fcntl$lock(r0, 0x25, &(0x7f0000000200))
open$dir(&(0x7f0000000000)='./file0\x00', 0x40000, 0x35)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 600
remove dir: /root/cephfs-client/dfs-0-2473
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 46, 25, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2474 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2474
receive_execute: 13, 30
receive_execute: 17, 29
receive_execute: 15, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 30
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 624, pid 9343, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9343, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9343, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 35
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9322, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1292
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 21834, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 32, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 6059
----- executor 2 executes write_coverage_signal cov->size 1328, flag collect 0
time breakdown 0: 45, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 284
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 554
executor 2 server cover_cnt 6 output_pos_value 8278
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 37
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 3 replies
2023/03/30 19:49:02 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 6 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1292 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 6059 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 43, 7, 0
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- mutateArg()
time breakdown 3: 46, 5, 0
before receive testcase: 0 0
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- splice()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 18
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file2\x00', 0x20001, 0x8)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
link(&(0x7f0000000140)='./file1\x00', &(0x7f00000000c0)='./file1\x00')
r1 = open$dir(&(0x7f0000000180)='./file1\x00', 0x383680, 0x1)
r2 = fcntl$dupfd(r1, 0x0, r1)
r3 = open$dir(&(0x7f0000000080)='./file1\x00', 0x4002, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000002c0)={0x0, 0x2, 0x2c, 0x7})
write$binfmt_misc(r3, 0x0, 0x0)
r4 = dup2(r2, r2)
write$binfmt_misc(r4, 0x0, 0x0)
r5 = open$dir(&(0x7f0000000440)='./file2\x00', 0x622c2, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
pwrite64(r5, &(0x7f0000000080)="05", 0x1, 0x1f5ffffff)
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
setxattr$security_capability(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440), 0x0, 0x0, 0x0)
mkdir(&(0x7f00000001c0)='./file0\x00', 0x1d9)
symlink(0x0, 0x0)
write$binfmt_misc(r5, &(0x7f0000000200)=ANY=[@ANYBLOB="73797a30a99d300f359503cdebb5b98932d303567fde80b31484690de4407001671a6a33c96026a3539fd2faf7878faaa2b39926631340f9a16a96d83f66a049cf4f0e7cb37247834ea11d4935f8d3f4a6edf0a63c69f7b867c257370d0f685ebc660e75d7828dd593c1886ba119f8add3c371cd02ab86a7783d0b38974200fa02e460eae437f9cc92681910599083823cbe83b382057bed9a7aa4babfbc2de20216a7a20e94d0facce00893bcafefcf9481237300137eb1421878853a316deb"], 0xc0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2856
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2474
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-2475 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2475
receive_execute: 4, 31
receive_execute: 2, 31
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 423, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
receive_execute: 4, 31
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 203
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 978, pid 9346, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 978, flag collect 0
----- executor 3 signal number : 443
----- completed 13
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 629, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 629, flag collect 0
----- executor 3 signal number : 31
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 83
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 27
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9346, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 838, pid 9346, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 838, flag collect 0
----- executor 3 signal number : 409
----- completed 18
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 2, 0
execute_one time: 1, 17
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10315, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 20940, flag collect 0
----- executor 2 signal number : 977
----- executor 2 executes write_coverage_signal cov->size 1018, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 35, 19, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 34, 20, 0
----- executor 2 signal number : 7655
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 254
----- executor 2 executes write_coverage_signal cov->size 343, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 11388, flag collect 0
----- executor 2 signal number : 2786
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 35, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 1991
executor 2 server cover_cnt 9 output_pos_value 15392
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 56
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 18 replies
2023/03/30 19:49:02 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 203 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 443 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 409 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 9 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 977 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7655 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 254 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2786 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1991 signal and 0 cover from userspace component
time breakdown 2: 33, 25, 0
before receive testcase: 0 1
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 231 fsetxattr fsetxattr
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 7
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000200)='./file1\x00')
lremovexattr(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000180)=@known='security.selinux\x00')
fsetxattr(0xffffffffffffffff, &(0x7f0000000480)=ANY=[@ANYBLOB="757a466a7a244a61977365722e747275737465642e6f7665726c61798b52bf6f788b"], &(0x7f0000000440)='y\x00', 0x2, 0x5b1f80abe3f3501d)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
llistxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000240)=""/191, 0xbf)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000300), 0x2, 0x1)
setxattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='trusted.overlay.nlink\x00', &(0x7f00000003c0)='trusted.overlay.opaque\x00', 0x17, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1448
remove dir: /root/cephfs-client/dfs-0-2475
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 61
-----finish removing dir
receive_execute: 3, 62
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
receive_execute: 8, 62
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2476 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2476
receive_execute: 9, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 9, 62
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 477, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 405, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 405, flag collect 0
----- executor 3 signal number : 133
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 608, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 608, flag collect 0
----- executor 3 signal number : 36
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 124, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 14
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 177, pid 9351, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 177, flag collect 0
----- executor 3 signal number : 3
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 4, 0
execute_one time: 0, 18
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17681, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1396
----- executor 2 executes write_coverage_signal cov->size 20800, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 962
----- executor 2 executes write_coverage_signal cov->size 954, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 71, 21, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 7760
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6205
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1453
executor 2 server cover_cnt 7 output_pos_value 17870
time breakdown 3: 72, 19, 0
before receive testcase: 0 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 65, 25, 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 87
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 7 replies
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 2 has 7 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1396 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 962 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7760 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 6205 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1453 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 259 getdents64 getdents64
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 14
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000240)='./file0\x00', 0x5a1c0, 0x0)
symlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
setxattr$incfs_size(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900), &(0x7f0000000940)=0x6, 0xfffffffffffffed2, 0x3)
mkdirat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0x40)
r0 = open(&(0x7f0000000080)='./file1\x00', 0x2400, 0x1)
write$binfmt_misc(r0, &(0x7f00000002c0)=ANY=[@ANYBLOB="73797a318d0ddbdf29f7ece9884fce18c511974c00"/32], 0x23)
getxattr(&(0x7f0000000100)='./file1\x00', &(0x7f00000007c0)=ANY=[@ANYBLOB='oc\r.\x00'], &(0x7f0000000800)=""/148, 0x94)
write$binfmt_elf32(r0, &(0x7f0000000980)=ANY=[@ANYBLOB="7f454c46041f010501000000000000000300060006000000540100003800000005010000fffffffffcff2000010040000100ff0300000000050000000900000074ffffff03000000010000000100010091030000090000000400000040000000ffffff7f03000000fdffffff3f000000010000000700000060e219e9b14db5ec12c547f03904ad35945fc738d5e20959162a1fa3ec33711594ddd18e14f3b4379ced4e9b9c5bd54de36794e20dbac79d66d4f2fd2886003df06c98e464bc73423bdbb568f5a3468148a7e0f6efdc9250522ceaef2e353a688f5e2db7d3954f301040762e8d098cbc22f0b3316dfd517b6339ee52197000e840e7c2250a6e4e0c7758b902fbbff719ad3a8a052d9edc06f25d7fd366ea1fdb891b3492318231af8bc6f1dfb6cb91139b2c7edccb98f6ad3dee19ab1ba862fbc3260ffdc6102bc1225e54408f9038129ebdec6d8b181931465c04bfdd80ca5ba4614c4864da903ada588ef2658c22d278d48eeacd3139d1d29b92c1b2466f6a48bd49ed0104b2c0199393ee7acb94d12afdc56f39b89e109018fd03fecde7d14965f570d5141a1db733a3e9ef14bf25b8b10e9a2757d5b527bb7573580098b15b970f769a58f32e9a5ba331f3643ca3ca95acd4080aa4b38887e74b228f6fdf4cfeec539bda46a9394"], 0x618)
r1 = open$dir(&(0x7f00000000c0)='./file2\x00', 0x721043, 0x34)
getdents64(r1, &(0x7f0000000300)=""/207, 0xcf)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file1\x00')
lgetxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)=@known='security.selinux\x00', &(0x7f0000000280)=""/25, 0x19)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'L-', 0x3f}, 0x16, 0x2)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000400)='./file2\x00', &(0x7f0000000440), &(0x7f0000000480)={'U-', 0x4}, 0x16, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4408
remove dir: /root/cephfs-client/dfs-0-2476
time breakdown 0: 70, 21, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 21
-----finish removing dir
receive_execute: 2, 23
receive_execute: 6, 23
receive_execute: 7, 22
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2477 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2477
receive_execute: 8, 22
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15656, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1315
----- executor 2 executes write_coverage_signal cov->size 510, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 7127
----- executor 2 executes write_coverage_signal cov->size 705, flag collect 0
----- executor 2 signal number : 281
----- executor 2 executes write_coverage_signal cov->size 13249, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 34, 0
----- executor 2 signal number : 578
executor 2 server cover_cnt 5 output_pos_value 9384
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 57
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 14 replies
2023/03/30 19:49:02 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 5 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1315 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 2: 25, 35, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7127 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 281 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 578 signal and 0 cover from userspace component
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2462 openat openat
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 10
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x0)
symlinkat(&(0x7f0000000180)='./file0\x00', r0, &(0x7f0000000200)='./file0\x00')
fcntl$lock(r1, 0x7, &(0x7f0000000400)={0x1, 0x0, 0x3f})
setxattr$trusted_overlay_opaque(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x1)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
fcntl$lock(r2, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x0, 0xffffffffffffffff})
fcntl$lock(r0, 0x6, &(0x7f00000000c0)={0x2, 0x0, 0x88, 0x5})
openat(r0, &(0x7f0000000300)='./file1\x00', 0x42200, 0x40)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 write_call_output, size 489, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 47
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 8
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 160
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 549, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 549, flag collect 0
----- executor 3 signal number : 95
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9355, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 1, 0
execute_one time: 2, 30
time breakdown 3: 30, 33, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2240
remove dir: /root/cephfs-client/dfs-0-2477
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 29, 35, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2478 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2478
receive_execute: 6, 15
receive_execute: 6, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 17
receive_execute: 8, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9358, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 9358, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 289
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9358, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 9358, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 95
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 9358, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9358, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9358, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 9358, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 3
----- completed 8
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 9358, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 11
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9358, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 0, 0
execute_one time: 0, 24
time breakdown 3: 25, 26, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13881, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 21, 29, 0
before receive testcase: 0 0
time breakdown 0: 24, 28, 0
before receive testcase: 0 0
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 20080, flag collect 0
----- executor 2 signal number : 1014
----- executor 2 executes write_coverage_signal cov->size 702, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7143
----- executor 2 executes write_coverage_signal cov->size 5541, flag collect 0
----- executor 2 signal number : 434
----- executor 2 executes write_coverage_signal cov->size 16739, flag collect 0
----- executor 2 signal number : 3625
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27917, flag collect 0
----- executor 2 signal number : 2134
executor 2 server cover_cnt 8 output_pos_value 15848
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 48
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 10 replies
2023/03/30 19:49:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 289 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1014 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7143 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 434 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3625 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2134 signal and 0 cover from userspace component
time breakdown 2: 20, 34, 0
before receive testcase: 0 1
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 20
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
close(0xffffffffffffffff)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
open(&(0x7f0000000240)='./file0\x00', 0x408001, 0x4)
r1 = open$dir(&(0x7f00000000c0)='./file0/file0\x00', 0x240801, 0xc)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r2, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40})
readlink(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=""/206, 0xce)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300))
r3 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x22)
fcntl$getownex(r1, 0x10, &(0x7f0000000200)={0x0, <r4=>0x0})
fcntl$lock(0xffffffffffffffff, 0x6, &(0x7f0000000180)={0x0, 0x1, 0x7fffffff, 0x2000ea, r4})
write(0xffffffffffffffff, &(0x7f0000000640)="6e71fec213775169063e68afa6ab1abc031ec2b930a67df500006a3e07a44a0b2c57dd79047c72d16dd132472d5df78d0b8744df0061813c9e9d280e2afd46a10283ea619a77e2c04aa420cf7e33bdce6869be466107000000000000004c2b06b9dee788e11a32542471c425d89cf51393dc65ddc75faf77a453dd88bad7b3195b611c7edd151076f744c9b2fb335fbcfa982b39487077ee193be57c8666adcb0e8de91333d933d9fc0cd11748c4a4f7dcec8a5ad45d6b4498f6bc3fdce5cffb84e5f0582291a75e7941161b1e6222cb96d01055fdb12d63c8e0a9a98f4f1c35eb29f4c056a3ef5c11786b3866d283d0ecd281ae0b7d5b4de04e382d298ab34aa9e6deb3541f706712142c744ec6ce", 0x10f)
fcntl$getownex(r2, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000040)={0x2, 0x4, 0x3f, 0x1, r5})
r6 = fcntl$getown(r0, 0x9)
open(&(0x7f0000000080)='./file0\x00', 0x41a1c0, 0x1a)
r7 = open$dir(&(0x7f0000000280)='./file0/file0\x00', 0x0, 0x0)
fcntl$lock(r7, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x3, r6})
lseek(r3, 0x5, 0x3)
open$dir(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3656
remove dir: /root/cephfs-client/dfs-0-2478
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 44
-----finish removing dir
receive_execute: 3, 45
receive_execute: 6, 45
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2479 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2479
receive_execute: 8, 45
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9363, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 7, 45
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 811, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 227
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 9363, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 7
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9363, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 53, 11, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 17811, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 52, 11, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 51, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 19332, flag collect 0
----- executor 2 signal number : 1000
----- executor 2 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7534
----- executor 2 executes write_coverage_signal cov->size 17952, flag collect 0
----- executor 2 signal number : 3569
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2181
executor 2 server cover_cnt 7 output_pos_value 15789
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 64
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 227 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 7 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1000 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7534 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3569 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2181 signal and 0 cover from userspace component
time breakdown 2: 48, 18, 0
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/30 19:49:02 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/30 19:49:02 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/30 19:49:02 ----- generateCall 196 fchown fchown
2023/03/30 19:49:02 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/30 19:49:02 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/30 19:49:02 ----- generateCall 2462 openat openat
2023/03/30 19:49:02 ----- generateCall 171 dup2 dup2
2023/03/30 19:49:02 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/30 19:49:02 ----- generateCall 194 fchmod fchmod
2023/03/30 19:49:02 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/30 19:49:02 ----- generateCall 198 fcntl$F_GET_FILE_RW_HINT fcntl$F_GET_FILE_RW_HINT
2023/03/30 19:49:02 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:49:02 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/30 19:49:02 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:49:02 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/30 19:49:02 map[./file0:true]
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 20
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000000)={0x0, <r0=>0x0})
fcntl$notify(0xffffffffffffffff, 0x402, 0x12)
r1 = open(&(0x7f0000000040)='./file0\x00', 0x608840, 0x12b)
write$binfmt_elf32(r1, &(0x7f0000000080)={{0x7f, 0x45, 0x4c, 0x46, 0x3, 0x3, 0x3f, 0x1f, 0x4, 0x2, 0x3, 0x5, 0x1af, 0x38, 0x204, 0x70000, 0x9fed, 0x20, 0x1, 0x29c, 0xfb90}, [{0x0, 0x4, 0x9, 0x0, 0xe8, 0xffffffff, 0x80000000, 0x9}, {0x6474e551, 0x5, 0xfffffffd, 0x2, 0x5, 0x5, 0x8, 0x22}], "8c4ad3839b93d6097d26fb003ec1a2133fdea8cb3e1af744f36f9e19d8fd9f2387be9104dea38665eded73f81b208e8ff004437007534dbc9d24861ef7fb1330ff0c7d1c39827c7ed989a5f849f22a800ce815065d4e14139c8f12a81f3fb22e164113e46a04e1bffb66333e21f8982622b42a133ed3d7cc57890749a204a489b1ea8be21ee97594ef2a3a3bd04c07e4f18578d0f35cac42ca1b10266fb72f15d98bec04a68d2b97e53d7de006a5655564eefcfacb975e633d6372651936961b54c502292ad97f2c43ddbe11d2a6d4debaa771b47608cf61", ['\x00', '\x00']}, 0x350)
fchown(r1, 0x0, 0xffffffffffffffff)
r2 = fcntl$getown(r1, 0x9)
fcntl$setown(0xffffffffffffffff, 0x8, r2)
r3 = openat(r1, &(0x7f0000000400)='./file0\x00', 0x0, 0x30)
r4 = dup2(r1, r1)
r5 = dup2(r3, r4)
fcntl$setownex(r3, 0xf, &(0x7f0000000440)={0x66d69108c9128709, 0xffffffffffffffff})
fchmod(0xffffffffffffffff, 0x45)
fcntl$setpipe(r3, 0x407, 0x1)
fcntl$F_GET_FILE_RW_HINT(r4, 0x40d, &(0x7f0000000480))
fcntl$lock(r5, 0x6, &(0x7f00000004c0)={0x0, 0x2, 0xffc0000000000000, 0xffffffff7fffffff, r0})
r6 = open$dir(&(0x7f0000000500)='./file0\x00', 0x41, 0xda)
write$binfmt_script(r6, &(0x7f0000000540)={'#! ', './file0', [], 0xa, "d32852c08f5fa3640c252437e01c69e6144dc09ed018539a88f4e1c115d1f88f89bf2ae42cceec6610bbc6ed23c68fea1a7f4601b8903614b98eacc73844ad847877be46ee455b4be0b21874fbe5777b53d911d0da2a3b8940b17f666876fa2979917ca50d2b6b7019d8825c05082e501c95abd398239016fcf555050554a1d6f69ebc2419f7e1df5c025cf19c6c2ea55ac1125d05589b90295b90e14b4bac2980278e49816397b0cb7d7635cb8bc4e395d9876bd6065075d60b52031f36c50f0de76e6afe4577e63ff6ea75e4c3bb4f61facd41a662fe055a847472ec98d091a138bc90d6081e563c2084b54a9f304bebeb05a8"}, 0xff)
r7 = open(&(0x7f0000000640)='./file0\x00', 0x240140, 0x21)
fcntl$lock(r7, 0x24, &(0x7f0000000680)={0x2, 0x3, 0x6, 0x1ff})
fcntl$setpipe(r4, 0x407, 0xb5a)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5680
remove dir: /root/cephfs-client/dfs-0-2479
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 23
-----finish removing dir
receive_execute: 3, 24
receive_execute: 8, 24
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2480 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2480
receive_execute: 10, 24
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
receive_execute: 10, 24
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 660, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 3 signal number : 472
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 418, pid 9367, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 3 signal number : 346
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9367, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 34, 6, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4252, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12007, flag collect 0
----- executor 2 signal number : 5011
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 544
executor 2 server cover_cnt 4 output_pos_value 6897
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 7, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 27, 8, 0
before receive testcase: 0 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 32
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 2 has 4 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 5011 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
time breakdown 1: 34, 8, 0
before receive testcase: 0 0
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 472 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 346 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 131 close close
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 3
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
close(0xffffffffffffffff)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x101741, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000040)={0x2, 0x0, 0x0, 0x0, 0xffffffffffffffff})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/cephfs-client/dfs-0-2480
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 8
executor 3 create dir /root/cephfs-client/dfs-0-2481 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2481
receive_execute: 11, 20
receive_execute: 8, 21
receive_execute: 9, 21
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 9370, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 9370, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 115
----- completed 3
execute_one loop: 0, 0, 0
receive_execute: 8, 21
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 31, 5, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6028, flag collect 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1282
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15262, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5643
----- executor 2 executes write_coverage_signal cov->size 2071, flag collect 0
----- executor 2 signal number : 314
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 6, 0
----- executor 2 signal number : 555
before receive testcase: 0 0
executor 2 server cover_cnt 6 output_pos_value 7883
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 28
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 3 replies
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
time breakdown 2: 29, 7, 0
2023/03/30 19:49:02 [SERVER] executor 2 has 6 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1282 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 5643 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 314 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 555 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 1: 29, 6, 0
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 20
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
close(0xffffffffffffffff)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
open(&(0x7f0000000380)='./file0\x00', 0x14000, 0x102)
open$dir(&(0x7f0000000580)='./file0\x00', 0xa40800, 0x10)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x8002, 0x0)
fcntl$lock(r1, 0x7, &(0x7f0000000140)={0x1, 0x2, 0x40, 0x3, 0xffffffffffffffff})
readlink(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=""/206, 0xce)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f00000005c0))
r2 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x22)
fcntl$getownex(r0, 0x10, &(0x7f0000000200)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x6, &(0x7f0000000240)={0x0, 0x1, 0x7fffffff, 0xea, r3})
write(r0, &(0x7f00000003c0), 0x0)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000003c0))
fcntl$lock(r2, 0x7, &(0x7f0000000400)={0x1, 0x2, 0x43, 0x5, r3})
fcntl$getown(r1, 0x9)
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x100)
r4 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r4, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x3, 0xffffffffffffffff})
fcntl$setownex(r1, 0xf, &(0x7f0000000080)={0x1})
open$dir(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3384
remove dir: /root/cephfs-client/dfs-0-2481
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-2482 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2482
receive_execute: 2, 13
receive_execute: 1, 13
receive_execute: 2, 13
receive_execute: 4, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 321, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 3 signal number : 124
----- completed 6
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 693, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 693, flag collect 0
----- executor 3 signal number : 129
----- completed 9
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 305, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 305, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9373, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9373, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 72, 9, 2
execute_one time: 1, 83
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14139, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 31408, flag collect 0
executor 0 server cover_cnt 1 output_pos_value 23
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 86, 0
before receive testcase: 0 1
----- executor 2 signal number : 1126
----- executor 2 executes write_coverage_signal cov->size 1061, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 86, 0
before receive testcase: 0 0
----- executor 2 signal number : 7755
----- executor 2 executes write_coverage_signal cov->size 4813, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 13845, flag collect 0
----- executor 2 signal number : 2806
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27710, flag collect 0
----- executor 2 signal number : 2085
executor 2 server cover_cnt 8 output_pos_value 15651
time breakdown 3: 16, 86, 0
before receive testcase: 0 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 102
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:02 [SERVER] executor 0 has 1 replies
2023/03/30 19:49:02 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
time breakdown 2: 14, 89, 0
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1126 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 124 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7755 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2806 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 2085 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 20
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
setxattr(&(0x7f0000000080)='./file2\x00', &(0x7f00000004c0)=ANY=[@ANYBLOB="e2747266732e000175737465642ecd9a5cc6b9e801cdfecd6f7665726c"], &(0x7f00000001c0)='\x00', 0x1, 0x0)
setxattr$security_evm(&(0x7f0000000740)='./file1\x00', &(0x7f0000000780), &(0x7f00000007c0)=@sha1={0x1, "128a494c7c551ad014d8a4146f2de11ab9b8f52e"}, 0x15, 0x0)
symlink(&(0x7f0000000240)='./file1\x00', &(0x7f0000000a00)='./file2\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file1\x00', &(0x7f0000000600), &(0x7f0000000640), 0x2, 0x3)
setxattr$incfs_size(&(0x7f0000000140)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=0x80, 0x8, 0x1)
mkdir(&(0x7f0000000440)='./file0\x00', 0x88)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000280), &(0x7f00000003c0)='./file0\x00', 0x8, 0x1)
open$dir(&(0x7f0000000700)='./file2\x00', 0x2441, 0x4)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
r0 = open$dir(&(0x7f0000000900)='./file0/file0\x00', 0x70143, 0x2)
renameat(0xffffffffffffffff, &(0x7f00000008c0)='./file0/file0\x00', r0, &(0x7f0000000940)='./file1\x00')
stat(&(0x7f0000000300)='./file1\x00', &(0x7f0000000a40)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000200)='./file2\x00', 0xee00, r1)
r2 = open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
linkat(r0, &(0x7f0000000480)='./file0\x00', r0, &(0x7f00000009c0)='./file2\x00', 0x400)
chmod(&(0x7f0000000180)='./file0\x00', 0x0)
linkat(r2, &(0x7f0000000680)='./file0\x00', r2, &(0x7f00000006c0)='./file2\x00', 0x400)
truncate(&(0x7f0000000980)='./file0/file0\x00', 0x80000001)
rename(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000400)='./file0\x00')
stat(&(0x7f0000000800)='./file0\x00', &(0x7f0000000840))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3872
remove dir: /root/cephfs-client/dfs-0-2482
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
receive_execute: 3, 12
receive_execute: 6, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 6, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2483 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2483
receive_execute: 6, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 46
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 734, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 734, flag collect 0
----- executor 3 signal number : 123
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 693, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 693, flag collect 0
----- executor 3 signal number : 41
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 147
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 403, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 403, flag collect 0
----- executor 3 signal number : 15
----- completed 16
execute_one loop: 0, 0, 39
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1170, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1170, flag collect 0
----- executor 3 signal number : 115
----- completed 18
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 9377, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 7
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 49, 1, 0
execute_one time: 1, 50
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 18, 53, 0
----- executor 2 executes write_coverage_signal cov->size 13317, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 30286, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 18, 54, 0
----- executor 2 signal number : 1066
----- executor 2 executes write_coverage_signal cov->size 1343, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 7110
----- executor 2 executes write_coverage_signal cov->size 350, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 17837, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 3246
----- executor 2 executes write_coverage_signal cov->size 4645, flag collect 0
----- executor 2 signal number : 954
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 918
executor 2 server cover_cnt 8 output_pos_value 15017
2023/03/30 19:49:02 for select break: 1
2023/03/30 19:49:02 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:02 wg wait finish
2023/03/30 19:49:02 ------ all executors finish execution
2023/03/30 19:49:02 exec time: 69
2023/03/30 19:49:02 ----- PS len: 4
2023/03/30 19:49:02 [CLIENT] executor 3 has 20 replies
2023/03/30 19:49:02 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:02 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:02 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 [SERVER] executor 2 has 8 replies
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 1066 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 123 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 7110 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/30 19:49:02 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:02 fuzzer receive 7 signal and 0 cover from executor 3
time breakdown 2: 15, 57, 0
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 3246 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 954 signal and 0 cover from userspace component
2023/03/30 19:49:02 ------- fuzzer executor 2 receive 918 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/30 19:49:02 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:02 ----- no new client coverage: false, true
2023/03/30 19:49:02 mutate testcase with failures
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 2782 readv readv
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- mutateArg()
2023/03/30 19:49:02 ----- insertCall()
2023/03/30 19:49:02 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/30 19:49:02 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:02 prog length: 9
2023/03/30 19:49:02 HasCrashFail:false HasNetFail:false
19:49:02 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
open$dir(&(0x7f0000000200)='./file0\x00', 0x1, 0x4)
fcntl$getown(0xffffffffffffffff, 0x9)
r0 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x0)
fcntl$lock(r0, 0x7, &(0x7f0000000400)={0x1, 0x0, 0x3f})
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r1, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x3, 0xffffffffffffffff})
readv(r0, &(0x7f0000000180)=[{&(0x7f00000000c0)=""/42, 0x2a}], 0x1)
open$dir(&(0x7f0000000080)='./file0\x00', 0x153901, 0x194)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1600
remove dir: /root/cephfs-client/dfs-0-2483
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 18, 54, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 86
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2484 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2484
receive_execute: 5, 87
receive_execute: 3, 87
receive_execute: 6, 87
receive_execute: 5, 87
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 9380, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
executor 2 before execute_one
----- completed 1
execute_one loop: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 9380, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9380, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 610, pid 9380, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 610, flag collect 0
----- executor 3 signal number : 161
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 9380, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 93
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9380, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 9380, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 331, pid 9380, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 331, flag collect 0
----- executor 3 signal number : 150
----- completed 8
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9380, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 22, 0, 0
execute_one time: 0, 23
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13881, flag collect 0
time breakdown 3: 92, 25, 0
before receive testcase: 0 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 15598, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 967
----- executor 2 executes write_coverage_signal cov->size 541, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 26728, flag collect 0
time breakdown 0: 93, 26, 0
before receive testcase: 0 1
----- executor 2 signal number : 6824
----- executor 2 executes write_coverage_signal cov->size 17117, flag collect 0
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 3620
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27677, flag collect 0
----- executor 2 signal number : 2113
executor 2 server cover_cnt 7 output_pos_value 15019
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 90, 29, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:49:03 wg wait finish
2023/03/30 19:49:03 ------ all executors finish execution
2023/03/30 19:49:03 exec time: 128
2023/03/30 19:49:03 ----- PS len: 4
2023/03/30 19:49:03 [CLIENT] executor 3 has 9 replies
2023/03/30 19:49:03 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 161 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:03 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:03 [SERVER] executor 2 has 7 replies
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 967 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 6824 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 3620 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 2113 signal and 0 cover from userspace component
time breakdown 1: 92, 41, 0
before receive testcase: 0 0
2023/03/30 19:49:03 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:03 ----- no new client coverage: false, true
2023/03/30 19:49:03 mutate testcase with failures
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/30 19:49:03 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:03 prog length: 9
2023/03/30 19:49:03 HasCrashFail:false HasNetFail:false
19:49:03 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
r1 = fcntl$dupfd(r0, 0x0, r0)
r2 = dup2(r0, r1)
r3 = dup2(r0, 0xffffffffffffffff)
fcntl$dupfd(r2, 0x406, r3)
r4 = open$dir(&(0x7f0000000080)='./file1\x00', 0x4002, 0x0)
write$binfmt_misc(r4, 0x0, 0x0)
r5 = dup2(r1, r1)
write$binfmt_misc(r5, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1144
remove dir: /root/cephfs-client/dfs-0-2484
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2485 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2485
receive_execute: 18, 24
receive_execute: 2, 24
receive_execute: 17, 24
receive_execute: 14, 24
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 624, pid 9383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 9383, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 35
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 9383, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 27
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9383, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 46, pid 9383, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 46, flag collect 0
----- executor 3 signal number : 12
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
time breakdown 3: 42, 11, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4197, flag collect 0
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 12010, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5002
----- executor 2 executes write_coverage_signal cov->size 698, flag collect 0
----- executor 2 signal number : 279
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 547
executor 2 server cover_cnt 5 output_pos_value 7175
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 12, 0
before receive testcase: 0 0
time breakdown 2: 38, 12, 0
before receive testcase: 0 1
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 41, 14, 0
before receive testcase: 0 0
2023/03/30 19:49:03 wg wait finish
2023/03/30 19:49:03 ------ all executors finish execution
2023/03/30 19:49:03 exec time: 38
2023/03/30 19:49:03 ----- PS len: 4
2023/03/30 19:49:03 [CLIENT] executor 3 has 9 replies
2023/03/30 19:49:03 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:03 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 [SERVER] executor 2 has 5 replies
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 5002 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 279 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 547 signal and 0 cover from userspace component
2023/03/30 19:49:03 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:03 ----- no new client coverage: false, true
2023/03/30 19:49:03 mutate testcase with failures
2023/03/30 19:49:03 ----- mutateArg()
2023/03/30 19:49:03 ----- mutateArg()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- generateCall 2724 preadv preadv
2023/03/30 19:49:03 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:03 prog length: 4
2023/03/30 19:49:03 HasCrashFail:false HasNetFail:false
19:49:03 ---executing program 0:
---
---
---
fcntl$F_SET_RW_HINT(0xffffffffffffffff, 0x40c, &(0x7f0000000000))
preadv(0xffffffffffffffff, &(0x7f0000000080), 0x0, 0x1058, 0x4)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x484c2, 0x0)
write$binfmt_aout(r0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 544
remove dir: /root/cephfs-client/dfs-0-2485
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 21
-----finish removing dir
receive_execute: 3, 23
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2486 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2486
receive_execute: 4, 23
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9386, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9386, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
----- executor 3 write_call_output, size 624, pid 9386, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 3
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 45, pid 9386, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 45, flag collect 0
----- executor 3 signal number : 26
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 0, 10
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4198, flag collect 0
time breakdown 3: 27, 12, 0
executor 1 write_server_output
----- executor 2 signal number : 1268
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12010, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
----- executor 2 signal number : 5008
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
receive_execute: 10, 14
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 543
executor 2 server cover_cnt 4 output_pos_value 6899
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 26, 13, 0
before receive testcase: 0 0
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:49:03 wg wait finish
2023/03/30 19:49:03 ------ all executors finish execution
2023/03/30 19:49:03 exec time: 37
2023/03/30 19:49:03 ----- PS len: 4
2023/03/30 19:49:03 [CLIENT] executor 3 has 4 replies
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/30 19:49:03 [SERVER] executor 0 has 0 replies
2023/03/30 19:49:03 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:03 [SERVER] executor 2 has 4 replies
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 1268 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 5008 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
time breakdown 2: 26, 14, 0
before receive testcase: 0 0
time breakdown 0: 28, 9, 0
before receive testcase: 0 0
2023/03/30 19:49:03 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:03 ----- no new client coverage: false, true
2023/03/30 19:49:03 mutate testcase with failures
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/30 19:49:03 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:03 prog length: 4
2023/03/30 19:49:03 HasCrashFail:false HasNetFail:false
19:49:03 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000240)='./file0\x00', 0x242, 0x0)
fcntl$lock(r0, 0x25, &(0x7f0000000200))
r1 = dup(r0)
fcntl$getown(r1, 0x9)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 632
remove dir: /root/cephfs-client/dfs-0-2486
receive_execute: 2, 13
receive_execute: 3, 13
receive_execute: 3, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9266, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 863
----- executor 2 signal number : 1298
----- executor 2 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 21870, flag collect 0
executor 0 server cover_cnt 1 output_pos_value 867
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 3, 0
before receive testcase: 0 0
----- executor 2 signal number : 6053
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 6286, flag collect 0
----- executor 2 signal number : 554
executor 2 server cover_cnt 5 output_pos_value 7989
time breakdown 0: 16, 5, 0
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 15, 5, 0
2023/03/30 19:49:03 for select break: 1
2023/03/30 19:49:03 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:49:03 wg wait finish
before receive testcase: 0 0
2023/03/30 19:49:03 ------ all executors finish execution
2023/03/30 19:49:03 exec time: 19
2023/03/30 19:49:03 ----- PS len: 4
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2487 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2487
receive_execute: 4, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 9389, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9389, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9389, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9389, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
time breakdown 3: 16, 3, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/30 19:49:03 [SERVER] executor 0 has 1 replies
2023/03/30 19:49:03 ------- fuzzer executor 0 receive 863 signal and 0 cover from userspace component
2023/03/30 19:49:03 [SERVER] executor 2 has 5 replies
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 1298 signal and 0 cover from userspace component
2023/03/30 19:49:03 [CLIENT] executor 3 has 4 replies
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/30 19:49:03 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 6053 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:49:03 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
2023/03/30 19:49:03 [SERVER] executor 1 has 0 replies
2023/03/30 19:49:03 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:49:03 ----- no new client coverage: false, true
2023/03/30 19:49:03 mutate testcase with failures
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- insertCall()
2023/03/30 19:49:03 ----- mutateArg()
2023/03/30 19:49:03 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:49:03 prog length: 20
2023/03/30 19:49:03 HasCrashFail:false HasNetFail:false
19:49:03 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x1ebec1, 0x0)
flock(r0, 0x1)
r1 = open$dir(&(0x7f00000001c0)='./file1\x00', 0x240000, 0x0)
r2 = dup2(r1, r1)
flock(r0, 0x6)
r3 = dup2(r0, r2)
close(r3)
getdents(r2, &(0x7f0000000280)=""/18, 0x12)
r4 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0x0, 0x0)
dup2(r3, r4)
flock(r1, 0x2)
flock(r2, 0x0)
r5 = openat(r3, &(0x7f0000000080)='./file1\x00', 0x600101, 0x128)
r6 = openat(r5, &(0x7f0000000140)='./file1\x00', 0x22000, 0x40)
fsetxattr$security_evm(r6, &(0x7f0000000180), &(0x7f0000000240)=@md5={0x1, "7bf66cd49c3d6f6476aa710b0099e186"}, 0x11, 0x2)
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000300)=ANY=[@ANYBLOB="7f454c46201f0100060000000000000003003e0000000000de020000000000004000000000000000a7000000000000003f00000009003800020007000000ff030700000008000000070000000000000003000000000000000000010000000000010000000000000002000000000000000010000000000000890b077e3eb1191aecb21d9f39dd83243b21d392fc541c5ad7d0e1feb39464cab391adebcdf234f61da1dae71c43a9df2d663717d5d1856ec325aa9cccc505ddbb8ddf0066147bba3c7c03cef97657e18d2ca3e67757761acbcd67bbe3859f464c226363407d8ae96157cae9aebb566521453bbe978a5787b3f0d17b28de8496270907724d746dbb2cb8c0e749548d909084cab363682ecefcbde22f043eadb734650dc4447db29cf450498b58ca1a9418779ee0b064f8fd53008b1218581cae4d0f3fcaef87fe51d17179dde10be2fd87eb9b9872eec4fa72dcb51cb9030430ef48b2eae6662932871135b8a391d5009ad333c756da144cb31290173586"], 0x176)
open(&(0x7f0000000040)='./file1\x00', 0x50202, 0x0)
symlinkat(&(0x7f00000000c0)='./file1\x00', r0, &(0x7f0000000100)='./file1\x00')
r7 = dup2(r1, r3)
dup2(r3, r7)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3128
remove dir: /root/cephfs-client/dfs-0-2487
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 6, 12
receive_execute: 4, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
receive_execute: 8, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2488 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2488
receive_execute: 9, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 9392, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 122
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 9392, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9392, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 216, pid 9392, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 3 signal number : 0
----- completed 20
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83335, 1, 0
execute_one time: 0, 83336
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13159, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1004
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 74
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1529
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 48
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 20, 83338, 0
before receive testcase: 0 0
----- executor 2 signal number : 671
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 21, 83336, 0
before receive testcase: 0 1
----- executor 2 signal number : 1243
----- executor 2 executes write_coverage_signal cov->size 25292, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1403
----- executor 0 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 0 signal number : 48
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 4360, flag collect 0
----- executor 0 signal number : 117
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 858
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 535
----- executor 0 executes write_coverage_signal cov->size 1577, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6668
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 275
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 748
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 0 signal number : 835
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1623
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 776
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2495
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 281
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 229
----- executor 2 executes write_coverage_signal cov->size 10907, flag collect 0
----- executor 2 signal number : 539
----- executor 2 executes write_coverage_signal cov->size 4768, flag collect 0
----- executor 2 signal number : 171
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1413
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 485
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2882
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3042
----- executor 2 executes write_coverage_signal cov->size 66, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 523
----- executor 0 executes write_coverage_signal cov->size 13159, flag collect 0
----- executor 0 signal number : 356
----- executor 0 executes write_coverage_signal cov->size 5185, flag collect 0
----- executor 0 signal number : 112
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2006
----- executor 2 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1180
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1017
executor 2 server cover_cnt 18 output_pos_value 22654
----- executor 0 signal number : 293
----- executor 0 executes write_coverage_signal cov->size 4529, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 112, flag collect 0
----- executor 0 signal number : 21
executor 0 server cover_cnt 22 output_pos_value 13655
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 83361
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 20 replies
2023/03/30 19:50:26 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 16, 83346, 0
before receive testcase: 0 1
2023/03/30 19:50:26 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 22 replies
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 1403 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 48 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 117 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 858 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 535 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 275 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 835 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 776 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 281 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 1413 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 2882 signal and 0 cover from userspace component
time breakdown 2: 18, 83347, 0
before receive testcase: 0 1
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 523 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 356 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 112 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 1180 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 293 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 21 signal and 0 cover from userspace component
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 18 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1529 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 48 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 671 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1243 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 6668 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 748 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1623 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 2495 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 229 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 539 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 171 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 485 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 3042 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 2006 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1017 signal and 0 cover from userspace component
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 20
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x0)
fcntl$getownex(r1, 0x10, &(0x7f0000000700))
symlinkat(&(0x7f0000000740)='./file0/file0\x00', r0, &(0x7f0000000200)='./file0\x00')
fcntl$lock(r1, 0x7, &(0x7f0000000400)={0x1, 0x0, 0x3f})
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
fcntl$lock(r2, 0x25, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x0, 0xffffffffffffffff})
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000280)={0x0, <r3=>0x0})
fcntl$lock(0xffffffffffffffff, 0x26, &(0x7f0000000180)={0x3, 0x0, 0x91, 0x6})
fcntl$lock(r0, 0x26, &(0x7f00000002c0)={0x0, 0x0, 0xfe3, 0x5, r3})
symlinkat(&(0x7f0000000680)='./file0/file0\x00', r1, &(0x7f00000006c0)='./file0/file0\x00')
setxattr$trusted_overlay_origin(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f0000000380), 0x2, 0x0)
symlink(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)='./file0/file0\x00')
chmod(&(0x7f0000000240)='./file0/file0\x00', 0xa)
fcntl$lock(r0, 0x6, &(0x7f00000000c0)={0x2, 0x0, 0x88, 0x5})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0))
r4 = dup2(r1, r2)
fcntl$getownex(r4, 0x10, &(0x7f0000000640))
getxattr(&(0x7f00000004c0)='./file0/file0\x00', &(0x7f0000000500)=@known='system.sockprotoname\x00', &(0x7f0000000540)=""/218, 0xda)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4032
remove dir: /root/cephfs-client/dfs-0-2488
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 91
-----finish removing dir
receive_execute: 4, 112
receive_execute: 13, 112
receive_execute: 4, 112
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 21
executor 3 create dir /root/cephfs-client/dfs-0-2489 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2489
receive_execute: 15, 112
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 289
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 9397, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 93
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 9397, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 11
----- completed 15
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 342, pid 9397, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 3 signal number : 22
----- completed 17
----- executor 3 write_call_output, size 316, pid 9397, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 1
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9397, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9397, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
executor 3, execute_one inner time: 69, 3, 1
execute_one time: 0, 73
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 14017, flag collect 0
time breakdown 3: 127, 73, 0
before receive testcase: 0 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 125, 75, 0
before receive testcase: 0 0
time breakdown 0: 116, 75, 0
before receive testcase: 0 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 189
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 20 replies
2023/03/30 19:50:26 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 289 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1061 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 7350 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 489 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 3655 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 2154 signal and 0 cover from userspace component
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 22078, flag collect 0
----- executor 2 signal number : 1061
----- executor 2 executes write_coverage_signal cov->size 769, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7350
----- executor 2 executes write_coverage_signal cov->size 6011, flag collect 0
----- executor 2 signal number : 489
----- executor 2 executes write_coverage_signal cov->size 16531, flag collect 0
----- executor 2 signal number : 3655
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27917, flag collect 0
----- executor 2 signal number : 2154
executor 2 server cover_cnt 8 output_pos_value 16206
time breakdown 2: 116, 77, 0
before receive testcase: 0 0
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- splice()
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 20
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000200)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000600)='./file1\x00', &(0x7f0000000640), &(0x7f0000000680)='system_u:object_r:dhcp_state_t:s0\x00', 0x22, 0x2)
unlink(&(0x7f0000000000)='./file1\x00')
lchown(&(0x7f0000000080)='./file1\x00', 0xee01, 0xee00)
lchown(&(0x7f0000000080)='./file1\x00', 0xee01, 0xee00)
fstat(0xffffffffffffffff, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000780)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f00000001c0)='./file1\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
r6 = open$dir(&(0x7f00000006c0)='./file0\x00', 0x109000, 0x64)
fsetxattr$security_smack_transmute(r6, &(0x7f0000000700), &(0x7f0000000740), 0x4, 0x0)
fstat(0xffffffffffffffff, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
stat(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, 0x0, <r8=>0x0})
setxattr$system_posix_acl(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='system.posix_acl_access\x00', &(0x7f0000000bc0)=ANY=[@ANYBLOB="02000000010005000000000002000200", @ANYRES32, @ANYBLOB="fdff0000", @ANYRES32=r1, @ANYBLOB="02000400", @ANYRES32=0xee00, @ANYBLOB="17000300", @ANYRES32=r2, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000600", @ANYRES32=r3, @ANYBLOB="02000010", @ANYRES32=r4, @ANYBLOB="02000500", @ANYRES32, @ANYBLOB="040004000000000008000500", @ANYRES32=0xee00, @ANYRESOCT, @ANYRES32=r5, @ANYBLOB="08000200", @ANYRES32=0x0, @ANYBLOB="08af18ee987b6d7cfdb28b920f35", @ANYRES32=0xee00, @ANYBLOB="7e8de6ac25922653b4bcf48a9deaa47ea851aea59466d19f11698483f293135dcfdb866740a6dceff312b80d3bb4f5b943c3b9c7788d1f4a7bf53651ce6506b58c883c4f4e99447940aefa46900ed4e1e95336b7a2d3ec719a2d0c53c1a533540b6c580aad1322c86ff56600252690bb800d15e2fcd70ff5e5994f30ed5c11cd127fe49f8f770eadf2c0c395ecae4527c1bf983c2b0db709c6d711fb8788e2230603e13913dcd1b1bc3d792eaabfc3e4f4cf3027ed2621ea1d158f01f16b3da516f728a4a035dc09bdc1f9e8ba0fcbdc59ca81ce29a9267c0c6f977119ba3d6ca1d5d77d7616d598dd682fccadce3fce8da8b2f0c1a78ea8b66373dc2f2172c5801201e9755ef7700032facbf09af5c1c05a5050a85623a61727a444d0455b7562309f086fae010b317c9385d104fba2285c4f4685c8a711631b3cb6e8f0624ca149707a24c637e2686379b97bccdcda2b54907367df52018800f1b95687f83d94032c39ab5e43dc0ee1f04ff2b32822c72aeade5af003eb57e6feae8852800a78baf9acdac320d293e24f56dffee0538d1961dadd7697846c7433a40cdb91cea48e9adfaf35e334a9baf5a46ff44d393c2303cd8ec68aa99bd324bd629484c0105da3ea0f9383c5e65f1233fe0e007651d022dbcd535385faaf2732e7d4bfc6f733c89d06f284f0", @ANYRES32, @ANYBLOB="00efd73dff00", @ANYRES32=r7, @ANYBLOB="08000500", @ANYRES32=r8, @ANYBLOB="10000400000000002000060000000000"], 0x9c, 0x2)
rename(&(0x7f0000000040)='./file1\x00', &(0x7f0000000100)='./file1\x00')
r9 = open(&(0x7f0000000040)='./file0\x00', 0x100, 0x140)
fcntl$lock(r9, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x3, 0xffffffffffffffff})
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5112
remove dir: /root/cephfs-client/dfs-0-2489
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2490 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2490
receive_execute: 10, 15
receive_execute: 8, 16
receive_execute: 8, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9400, write pid:-2127101003
receive_execute: 5, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 45
----- completed 3
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 100
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 25
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 9400, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 177, pid 9400, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 177, flag collect 0
----- executor 3 signal number : 102
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9400, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9400, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 9400, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 84
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 28, 9, 0
execute_one time: 1, 37
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 25, 39, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 21834, flag collect 0
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 29448, flag collect 0
time breakdown 0: 24, 40, 0
time breakdown 1: 24, 40, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1054
----- executor 2 executes write_coverage_signal cov->size 1252, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8141
----- executor 2 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 2 signal number : 392
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5895
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1398
executor 2 server cover_cnt 8 output_pos_value 18388
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 60
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 20 replies
2023/03/30 19:50:26 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1054 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
time breakdown 2: 21, 44, 0
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 8141 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 392 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 5895 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 11
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
chdir(0x0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x340, 0x0)
chown(&(0x7f00000002c0)='./file0\x00', 0xffffffffffffffff, 0xee01)
setxattr$incfs_metadata(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000000300)="85fd648539b4ec4f3f72de470ae01fdc8498022ef9065110fcda5a8daadaab803833c5239d75d0b680984448bf0f702452deb6437492277a8b22fb861d53b121475a48d22540db90f200fc4b07941406b81359b93a3d99f906a6b645f47c57412c77e6e6b2d1cd1230e3ee7865744285c786f2a3b1511e01ccf2df699f0cea3d473a4e61ce7b538608058b", 0x8b, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x8102, 0x0)
link(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000140), 0x0, 0x0, 0x0)
unlink(&(0x7f0000000100)='./file0\x00')
r1 = fcntl$dupfd(0xffffffffffffffff, 0x0, r0)
write$binfmt_script(r1, &(0x7f0000000900)=ANY=[@ANYBLOB="2321202e2f66696c653020747275737465642e6f7665726c61792e72656469726563740020282e2b2f5b5d26272a4020262d262523245c3a292f2c2f5d4e2124260b5c1a213a692d2e7d2d204abc9a9ed300f233f617f82f09c7786da90ae293bca01ece5b89c5c1b2b78fa886ee942657becaa849da37783d28efe342e9371ac6122f0d1b1f88fd4c89e883bedcf3418b69706904ea1c2553b8ec03c9d66750732eb0c98847d98247ef6a59ad6a1c6f7c2f89da98b86d8919d4fbe9dee4a830a41213e39fde6d51d40176d65561a21e84a9a35c6fa8194a331d610b05a5b58cd89c60490c98ef43862097e7897837f82dd16c8297fbac791338e7df85091d916d5ccb1cdf3257d411c045e9f2b8997287de4775fd6fce6db4c9381dce6dae6343d509953d9c0bec6710afbe49f2eea730a298c4c68531b709f7d2d8aa74dd09b8f6f85d86f2cc8d8d0e231ceecc4d67a7cb1e3bd33b2af8921319666e831c154c25d8fb214b4ca6ffa8eade45df393dd720757365722e696e6366732e6d657461646174610020747275737465642e6f7665726c61792e72656469726563740084348b66bb7099ff22de6611a63e066f61561ae5f5bd059e92db54bf69f9c1386cdd4d0ae7eca3cc605f3f5f2ccb2619eaaad7879e441ffd20e718bbb3a37cca5c5d670d5025021939305752ad338e81382d6f4c1ad2c345e4fbdcb374336fbe27ea1d75321596fccdd527d1fb13f8fe7d23a7071df4bfe63efb344c0babda5b3b1b3770689119f24278053a2b830fbc6f5c9805ffaa9967b7fed44f98accc4e8abe2ae912bb8e56fe27acaddce318825c6bc1121bed8b19fbfe43b646585e8c2425804d06e0c13e7865068aec77f6abbedebeec998a0578228d91064ea48961d38099e1edab3dca1d"], 0x1a0)
setxattr$incfs_size(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x8, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2552
remove dir: /root/cephfs-client/dfs-0-2490
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2491 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2491
receive_execute: 3, 17
receive_execute: 8, 17
receive_execute: 7, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 66
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 415, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 3 signal number : 122
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 201, pid 9403, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 201, flag collect 0
----- executor 3 signal number : 22
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 504, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 504, flag collect 0
----- executor 3 signal number : 42
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9403, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 7, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7046, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 16169, flag collect 0
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 541, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 5, 0
before receive testcase: 0 0
time breakdown 3: 25, 5, 0
before receive testcase: 0 1
----- executor 2 signal number : 7637
----- executor 2 executes write_coverage_signal cov->size 2429, flag collect 0
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 10067, flag collect 0
----- executor 2 signal number : 2513
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 30976, flag collect 0
----- executor 2 signal number : 1733
executor 2 server cover_cnt 8 output_pos_value 14693
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 20, 8, 0
2023/03/30 19:50:26 wg wait finish
before receive testcase: 0 0
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 25
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 11 replies
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 66 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 7637 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 2513 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1733 signal and 0 cover from userspace component
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 7
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x622c2, 0x0)
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x1f5ffffff)
r1 = fcntl$getown(r0, 0x9)
fcntl$lock(0xffffffffffffffff, 0x26, &(0x7f0000000000)={0x2, 0x2, 0x401, 0x0, r1})
r2 = dup(r0)
write$binfmt_elf64(r2, &(0x7f00000000c0)=ANY=[], 0xc7)
fdatasync(r2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/cephfs-client/dfs-0-2491
remove dir time 21
-----finish removing dir
receive_execute: 3, 23
receive_execute: 6, 23
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2492 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2492
receive_execute: 6, 24
receive_execute: 6, 23
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 9408, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 978, pid 9408, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 978, flag collect 0
----- executor 3 signal number : 449
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9408, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9408, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9408, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 836, pid 9408, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 836, flag collect 0
----- executor 3 signal number : 411
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 1146, pid 9408, write pid:-2126961383
----- executor 3 executes write_coverage_signal cov->size 1146, flag collect 0
----- executor 3 signal number : 160
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 0, 0
execute_one time: 0, 16
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 0 server cover_cnt 1 output_pos_value 23
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 18, 0
before receive testcase: 0 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 19, 0
time breakdown 3: 30, 17, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10315, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 9713, flag collect 0
----- executor 2 signal number : 890
----- executor 2 executes write_coverage_signal cov->size 254, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15606, flag collect 0
----- executor 2 signal number : 5471
----- executor 2 executes write_coverage_signal cov->size 1395, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 11450, flag collect 0
----- executor 2 signal number : 2921
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19897, flag collect 0
----- executor 2 signal number : 1757
executor 2 server cover_cnt 8 output_pos_value 12828
time breakdown 2: 26, 21, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 49
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 7 replies
2023/03/30 19:50:26 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 449 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 411 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 1 replies
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 890 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 5471 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 2921 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1757 signal and 0 cover from userspace component
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 3765 symlinkat symlinkat
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 516 getxattr getxattr
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 5
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000180)='./file2\x00', 0x3e7, 0x0)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file2\x00', 0x60101, 0x0)
symlinkat(&(0x7f0000000000)='./file2\x00', r0, &(0x7f00000000c0)='./file2\x00')
getxattr(&(0x7f0000000100)='./file2\x00', &(0x7f0000000140)=@known='user.syz\x00', &(0x7f00000001c0)=""/23, 0x17)
pwrite64(r1, &(0x7f0000000080)="a0", 0x1, 0x200000)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/cephfs-client/dfs-0-2492
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 6, 6
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2493 successfully
receive_execute: 8, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 3: /root/cephfs-client/dfs-0-2493
receive_execute: 9, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 624, pid 9411, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 191, pid 9411, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 3 signal number : 33
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9411, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 9411, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 63
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 594, pid 9411, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 594, flag collect 0
----- executor 3 signal number : 344
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 5, 0
execute_one time: 0, 10
executor 1 write_server_output
executor 0 write_server_output
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 13, 0
before receive testcase: 0 0
time breakdown 3: 16, 12, 0
before receive testcase: 0 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2951, flag collect 0
----- executor 2 signal number : 1164
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10514, flag collect 0
----- executor 2 signal number : 4741
----- executor 2 executes write_coverage_signal cov->size 1026, flag collect 0
----- executor 2 signal number : 288
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 545
executor 2 server cover_cnt 5 output_pos_value 6821
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 20
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 5 replies
2023/03/30 19:50:26 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 63 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 344 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1164 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
time breakdown 0: 14, 14, 0
time breakdown 2: 12, 14, 0
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 4741 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 288 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 220 flock flock
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 5
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x6b)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r1, r0)
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:syslog_conf_t:s0\x00', 0x23, 0x0)
flock(r1, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/cephfs-client/dfs-0-2493
remove dir time 22
-----finish removing dir
mkdir time 10
executor 3 create dir /root/cephfs-client/dfs-0-2494 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2494
receive_execute: 3, 33
receive_execute: 2, 32
receive_execute: 2, 32
receive_execute: 3, 32
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 9414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9414, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 4
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1955, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 4172, flag collect 0
----- executor 2 signal number : 2163
time breakdown 3: 36, 6, 0
before receive testcase: 0 0
executor 2 server cover_cnt 3 output_pos_value 3250
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 35, 8, 0
before receive testcase: 0 0
time breakdown 0: 34, 8, 0
before receive testcase: 0 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 41
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 5 replies
2023/03/30 19:50:26 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 3 replies
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 2163 signal and 0 cover from userspace component
time breakdown 2: 34, 9, 0
before receive testcase: 0 0
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2347 llistxattr llistxattr
2023/03/30 19:50:26 ----- mutateArg()
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2344 linkat linkat
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 6
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000280)='./file1\x00', 0x2)
lremovexattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=@known='system.posix_acl_default\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0)='security.SMACK64\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="73797374656d3e706f7369785f61636c5f64656661756c74a600"], 0x1a, 0x3)
r0 = open$dir(&(0x7f0000000300)='./file0\x00', 0x2, 0x52)
linkat(0xffffffffffffff9c, &(0x7f00000002c0)='./file1\x00', r0, &(0x7f0000000340)='./file1\x00', 0x0)
llistxattr(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)=""/202, 0xca)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1120
remove dir: /root/cephfs-client/dfs-0-2494
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2495 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2495
receive_execute: 1, 6
receive_execute: 2, 6
receive_execute: 2, 6
receive_execute: 3, 6
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 9418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 9418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 239, pid 9418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 239, flag collect 0
----- executor 3 signal number : 23
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 108
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 121, pid 9418, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 121, flag collect 0
----- executor 3 signal number : 11
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 12, 0
execute_one time: 1, 32
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 285, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 5911, flag collect 0
----- executor 0 signal number : 69
----- executor 0 executes write_coverage_signal cov->size 1327, flag collect 0
----- executor 0 signal number : 604
----- executor 0 executes write_coverage_signal cov->size 1477, flag collect 0
----- executor 0 signal number : 606
executor 0 server cover_cnt 3 output_pos_value 1289
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 15272, flag collect 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 35, 0
before receive testcase: 0 1
----- executor 2 signal number : 5202
----- executor 2 executes write_coverage_signal cov->size 365, flag collect 0
----- executor 2 signal number : 124
----- executor 2 executes write_coverage_signal cov->size 3035, flag collect 0
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 330
----- executor 2 executes write_coverage_signal cov->size 7117, flag collect 0
time breakdown 0: 8, 36, 0
before receive testcase: 0 0
----- executor 2 signal number : 537
executor 2 server cover_cnt 6 output_pos_value 7546
time breakdown 2: 7, 37, 0
before receive testcase: 0 1
2023/03/30 19:50:26 for select break: 1
2023/03/30 19:50:26 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:26 wg wait finish
2023/03/30 19:50:26 ------ all executors finish execution
2023/03/30 19:50:26 exec time: 43
2023/03/30 19:50:26 ----- PS len: 4
2023/03/30 19:50:26 [CLIENT] executor 3 has 6 replies
2023/03/30 19:50:26 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:26 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/30 19:50:26 [SERVER] executor 0 has 3 replies
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 604 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 0 receive 606 signal and 0 cover from userspace component
2023/03/30 19:50:26 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:26 [SERVER] executor 2 has 6 replies
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 5202 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 124 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 330 signal and 0 cover from userspace component
2023/03/30 19:50:26 ------- fuzzer executor 2 receive 537 signal and 0 cover from userspace component
time breakdown 3: 9, 34, 0
before receive testcase: 0 0
2023/03/30 19:50:26 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:26 ----- no new client coverage: false, true
2023/03/30 19:50:26 mutate testcase with failures
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2458 open open
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 3764 symlink symlink
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:26 ----- insertCall()
2023/03/30 19:50:26 ----- generateCall 2809 rename rename
2023/03/30 19:50:26 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:26 prog length: 17
2023/03/30 19:50:26 HasCrashFail:false HasNetFail:false
19:50:26 ---executing program 0:
---
---
---
open$dir(&(0x7f00000002c0)='./file1\x00', 0x13b043, 0x0)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open(&(0x7f0000000300)='./file0\x00', 0x228400, 0x124)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
r0 = open$dir(&(0x7f0000000440)='./file2\x00', 0x622c2, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000200)='./file2\x00', &(0x7f0000000240)='security.SMACK64\x00', &(0x7f0000000280)=ANY=[@ANYBLOB="730dcf59fbaaf8e80b72b000070000000000000000"], 0x15, 0x2)
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file2\x00')
unlink(&(0x7f0000000000)='./file0\x00')
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x1f5ffffff)
open$dir(&(0x7f00000003c0)='./file0\x00', 0x40, 0x1a0)
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x18000, 0x40)
fcntl$F_SET_RW_HINT(r1, 0x40c, &(0x7f0000000100)=0x7)
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
rename(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)='./file3\x00')
setxattr$security_capability(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440), 0x0, 0x0, 0x0)
mkdir(&(0x7f00000001c0)='./file0\x00', 0x0)
symlink(0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2584
remove dir: /root/cephfs-client/dfs-0-2495
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2496 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2496
receive_execute: 4, 15
receive_execute: 6, 14
receive_execute: 2, 15
receive_execute: 3, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 617, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 617, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 602, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 602, flag collect 0
----- executor 3 signal number : 101
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 538, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 538, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 17
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 3 signal number : 101
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 24
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 949, pid 9421, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 949, flag collect 0
----- executor 3 signal number : 393
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 584, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 584, flag collect 0
----- executor 3 signal number : 5
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 421, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 421, flag collect 0
----- executor 3 signal number : 118
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 561, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 3 signal number : 48
----- completed 13
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 1243, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1243, flag collect 0
----- executor 3 signal number : 23
----- completed 14
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 743, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 743, flag collect 0
----- executor 3 signal number : 63
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 805, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 805, flag collect 0
----- executor 3 signal number : 27
----- completed 16
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9421, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 50, 3, 0
execute_one time: 0, 54
time breakdown 3: 20, 54, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 30392, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 19, 55, 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 2 signal number : 1074
----- executor 2 executes write_coverage_signal cov->size 2146, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 8493
----- executor 2 executes write_coverage_signal cov->size 281, flag collect 0
----- executor 2 signal number : 120
----- executor 2 executes write_coverage_signal cov->size 4598, flag collect 0
----- executor 2 signal number : 407
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6506
----- executor 2 executes write_coverage_signal cov->size 3012, flag collect 0
----- executor 2 signal number : 652
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1482
executor 2 server cover_cnt 9 output_pos_value 20237
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 73
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 17 replies
2023/03/30 19:50:27 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 393 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 118 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
time breakdown 2: 17, 58, 0
2023/03/30 19:50:27 [SERVER] executor 2 has 9 replies
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/30 19:50:27 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 63 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1074 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 8493 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 120 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 407 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6506 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 652 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1482 signal and 0 cover from userspace component
time breakdown 0: 18, 57, 0
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 ----- enqueue testcases with server coveraged
2023/03/30 19:50:27 prog length: 17
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
open$dir(&(0x7f00000002c0)='./file1\x00', 0x13b043, 0x0)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open(&(0x7f0000000300)='./file0\x00', 0x228400, 0x124)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
r0 = open$dir(&(0x7f0000000440)='./file2\x00', 0x622c2, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000200)='./file2\x00', &(0x7f0000000240)='security.SMACK64\x00', &(0x7f0000000280)=ANY=[@ANYBLOB="730dcf59fbaaf8e80b72b000070000000000000000"], 0x15, 0x2)
symlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)='./file2\x00')
unlink(&(0x7f0000000000)='./file0\x00')
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x1f5ffffff)
open$dir(&(0x7f00000003c0)='./file0\x00', 0x40, 0x1a0)
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x18000, 0x40)
fcntl$F_SET_RW_HINT(r1, 0x40c, &(0x7f0000000100)=0x7)
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
rename(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)='./file3\x00')
setxattr$security_capability(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440), 0x0, 0x0, 0x0)
mkdir(&(0x7f00000001c0)='./file0\x00', 0x0)
symlink(0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2584
remove dir: /root/cephfs-client/dfs-0-2496
remove dir time 38
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-2497 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2497
receive_execute: 5, 38
receive_execute: 8, 38
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 1
----- executor 3 cover number : 472, signal number : 499
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 606, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 606, flag collect 1
----- executor 3 cover number : 363, signal number : 101
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 1
----- executor 3 cover number : 56, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 542, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 542, flag collect 1
----- executor 3 cover number : 340, signal number : 17
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 1
----- executor 3 cover number : 442, signal number : 17
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 1
----- executor 3 cover number : 158, signal number : 101
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 1
----- executor 3 cover number : 56, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 1
----- executor 3 cover number : 331, signal number : 24
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 949, pid 9424, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 949, flag collect 1
----- executor 3 cover number : 466, signal number : 393
----- completed 9
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 688, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 688, flag collect 1
----- executor 3 cover number : 500, signal number : 83
----- completed 10
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 441, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 441, flag collect 1
----- executor 3 cover number : 347, signal number : 71
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9424, write pid:-2127102047
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 1
----- executor 3 cover number : 69, signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1243, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1243, flag collect 1
----- executor 3 cover number : 471, signal number : 22
----- completed 14
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 442, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 1
----- executor 3 cover number : 355, signal number : 51
----- completed 15
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 805, pid 9424, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 805, flag collect 1
----- executor 3 cover number : 440, signal number : 27
----- completed 16
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9424, write pid:-2127163242
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 69, 0
execute_one time: 0, 69
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 31539, flag collect 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 46, 91, 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 54, 81, 1
before receive testcase: 0 0
time breakdown 3: 68, 70, 0
before receive testcase: 0 0
----- executor 2 cover number : 1164, signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1111, signal number : 1070
----- executor 2 executes write_coverage_signal cov->size 1667, flag collect 1
----- executor 2 cover number : 64, signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 5878, signal number : 8336
----- executor 2 executes write_coverage_signal cov->size 280, flag collect 1
----- executor 2 cover number : 119, signal number : 89
----- executor 2 executes write_coverage_signal cov->size 11270, flag collect 1
----- executor 2 cover number : 284, signal number : 576
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 5452, signal number : 6274
----- executor 2 executes write_coverage_signal cov->size 6359, flag collect 1
----- executor 2 cover number : 1902, signal number : 868
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1482, signal number : 1543
executor 2 server cover_cnt 9 output_pos_value 37719
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 156
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 17 replies
2023/03/30 19:50:27 fuzzer receive 499 signal and 472 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 101 signal and 363 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 56 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 17 signal and 340 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 17 signal and 442 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 9 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1410 signal and 1164 cover from userspace component
time breakdown 2: 43, 118, 0
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1070 signal and 1111 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 64 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 8336 signal and 5878 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 89 signal and 119 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 576 signal and 284 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6274 signal and 5452 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 868 signal and 1902 cover from userspace component
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1543 signal and 1482 cover from userspace component
2023/03/30 19:50:27 fuzzer receive 101 signal and 158 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 56 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 24 signal and 331 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 393 signal and 466 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 83 signal and 500 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 71 signal and 347 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 69 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 22 signal and 471 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 51 signal and 355 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 27 signal and 440 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- triage return due to empty signal extra
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2377 mkdirat$cgroup_root mkdirat$cgroup_root
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 194 fchmod fchmod
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 6
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f00000001c0)='./cgroup.net/syz1\x00', 0x1ff)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000040)='.\x00', &(0x7f0000000080), &(0x7f00000000c0)={'U+', 0x6}, 0x16, 0x2)
write(r1, &(0x7f0000000100)="768b530a3a549831f51ab66fad93f3f69861c9e02b97bc3cf7c9a67feb603074f53491a7ad826885a666d94f9eb0c3980fe7621f5976bdc0c2f9a66a00243b348e72c1531d66c38fac6f0cafdee1085a34b2b8ecc9081669352fd9aee57203fa60b9dad057e4123fc62f0e74aa97d48a313f77ca", 0x74)
fchmod(r0, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1120
remove dir: /root/cephfs-client/dfs-0-2497
remove dir time 24
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2498 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2498
receive_execute: 4, 25
receive_execute: 31, 25
receive_execute: 31, 25
receive_execute: 30, 25
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9426, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9426, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 445
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9426, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 9426, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 177
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9426, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9426, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 70
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9271, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1320
----- executor 2 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 2 signal number : 65
time breakdown 3: 56, 6, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 19176, flag collect 0
----- executor 2 signal number : 5801
----- executor 2 executes write_coverage_signal cov->size 8081, flag collect 0
----- executor 2 signal number : 587
executor 2 server cover_cnt 4 output_pos_value 7786
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 56, 7, 0
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 29, 7, 0
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 36
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 6 replies
2023/03/30 19:50:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 445 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 70 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 4 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1320 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 5801 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 587 signal and 0 cover from userspace component
time breakdown 0: 55, 10, 0
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 3
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x340, 0x0)
flock(r0, 0x6)
setxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0)=@md5={0x1, "bd1f877352bb2714a562986383a4f0c9"}, 0x11, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/cephfs-client/dfs-0-2498
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2499 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2499
receive_execute: 17, 12
receive_execute: 15, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 13, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 16, 12
----- executor 3 write_call_output, size 620, pid 9429, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 312, pid 9429, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 112
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 9429, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 3 signal number : 130
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 1, 1
execute_one time: 0, 8
time breakdown 3: 29, 9, 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2748, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 1374
----- executor 2 executes write_coverage_signal cov->size 10458, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 18992, flag collect 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 1: 28, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 899, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7399
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 450
----- executor 2 executes write_coverage_signal cov->size 3055, flag collect 0
----- executor 2 signal number : 349
----- executor 2 executes write_coverage_signal cov->size 12284, flag collect 0
----- executor 2 signal number : 2936
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 26501, flag collect 0
----- executor 2 signal number : 2157
executor 2 server cover_cnt 10 output_pos_value 16381
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 25
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 3 replies
2023/03/30 19:50:27 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 10 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1374 signal and 0 cover from userspace component
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 7399 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 450 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 349 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 2936 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 2157 signal and 0 cover from userspace component
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2458 open open
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2343 link link
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 6
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
open(&(0x7f0000000540)='./file2\x00', 0x0, 0x98)
open$dir(&(0x7f0000000000)='./file2\x00', 0x0, 0x0)
r0 = open(&(0x7f0000000340)='./file2\x00', 0x1, 0x0)
open(&(0x7f00000000c0)='./file2\x00', 0x460101, 0x18)
fstat(r0, &(0x7f0000000040))
link(&(0x7f0000000100)='./file2\x00', &(0x7f0000000140)='./file2\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 28, 12, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/cephfs-client/dfs-0-2499
remove dir time 22
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-2500 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2500
receive_execute: 7, 23
receive_execute: 4, 22
receive_execute: 7, 22
receive_execute: 5, 22
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 9432, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9432, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9432, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9432, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9432, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9432, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 0, 2
cover_reset in execute_call
executor 1 write_server_output
time breakdown 3: 30, 3, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4170, flag collect 0
----- executor 2 signal number : 2161
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 2355, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 423
executor 2 server cover_cnt 5 output_pos_value 3687
time breakdown 1: 27, 4, 0
before receive testcase: 0 1
time breakdown 2: 26, 5, 0
before receive testcase: 0 1
time breakdown 0: 29, 5, 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 29
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 6 replies
2023/03/30 19:50:27 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 423 signal and 0 cover from userspace component
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 121 chmod chmod
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2350 lseek lseek
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 222 fremovexattr fremovexattr
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 15
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
lseek(r0, 0x9, 0x4)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fremovexattr(r0, &(0x7f0000000280)=@random={'btrfs.', '\x87\x1b[}\x00'})
fcntl$lock(0xffffffffffffffff, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x3, 0xffffffffffffffff})
r3 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x20000, 0x30)
r4 = dup2(r2, r3)
lsetxattr$security_evm(&(0x7f0000000080)='./file0\x00', &(0x7f0000000180), &(0x7f0000000200)=@md5={0x1, "009abce88352e6dbf10c8b6e9c3d481b"}, 0x11, 0x3)
r5 = dup2(r1, r3)
chmod(&(0x7f00000000c0)='./file0\x00', 0x180)
fcntl$lock(r4, 0x6, &(0x7f0000000240)={0x0, 0x1, 0x80000005, 0xea})
fcntl$lock(r1, 0x6, &(0x7f0000000300)={0x0, 0x1, 0x4, 0x80000001})
fcntl$dupfd(r2, 0x0, r5)
fcntl$lock(r5, 0x7, &(0x7f0000000040)={0x2, 0x0, 0x7, 0x8})
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2880
remove dir: /root/cephfs-client/dfs-0-2500
remove dir time 2
-----finish removing dir
receive_execute: 4, 3
receive_execute: 5, 3
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2501 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2501
receive_execute: 5, 3
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 624, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 478
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 9435, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 3 signal number : 101
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9435, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 80
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 9435, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 103
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 9435, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9435, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 320, pid 9435, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 320, flag collect 0
----- executor 3 signal number : 7
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 4, 3
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 11, 0
execute_one time: 0, 14
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 8, 14, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12618, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 8, 15, 0
before receive testcase: 0 1
----- executor 2 signal number : 1300
----- executor 2 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 28109, flag collect 0
----- executor 2 signal number : 6307
----- executor 2 executes write_coverage_signal cov->size 1959, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6138, flag collect 0
----- executor 2 signal number : 535
executor 2 server cover_cnt 6 output_pos_value 8526
time breakdown 2: 7, 16, 0
before receive testcase: 0 1
time breakdown 0: 7, 15, 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 23
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 15 replies
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 6 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1300 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6307 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 535 signal and 0 cover from userspace component
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2373 mkdir mkdir
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 3
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00', 0x0)
mkdir(&(0x7f0000000000)='./file0\x00', 0x0)
lchown(&(0x7f00000001c0)='./file0\x00', 0xffffffffffffffff, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 392
remove dir: /root/cephfs-client/dfs-0-2501
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2502 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2502
receive_execute: 6, 17
receive_execute: 7, 17
receive_execute: 7, 17
receive_execute: 9, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 511, pid 9439, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9439, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 9439, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 88
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
executor 1 write_server_output
time breakdown 3: 25, 3, 0
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 24, 4, 0
time breakdown 1: 24, 4, 0
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 4165, flag collect 0
----- executor 2 signal number : 1263
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11392, flag collect 0
----- executor 2 signal number : 4700
----- executor 2 executes write_coverage_signal cov->size 330, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 7114, flag collect 0
----- executor 2 signal number : 524
executor 2 server cover_cnt 5 output_pos_value 6808
time breakdown 2: 23, 4, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 22
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 3 replies
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1263 signal and 0 cover from userspace component
2023/03/30 19:50:27 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 4700 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 524 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 10
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
stat(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='system.posix_acl_default\x00', &(0x7f0000000440)={{}, {0x1, 0x2}, [{0x2, 0x1, 0xee00}, {0x2, 0x0, 0xee00}, {0x2, 0x5, r0}], {0x4, 0x4}, [{}, {0x8, 0x0, r1}, {0x8, 0x2, 0xffffffffffffffff}], {0x10, 0x1}}, 0x54, 0x2)
r2 = open$dir(&(0x7f0000000140)='./file0\x00', 0x5a1c0, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
r3 = open$dir(&(0x7f0000000000)='./file0\x00', 0xa000, 0xc)
r4 = dup2(r3, r2)
setxattr$trusted_overlay_nlink(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={'L+', 0x1}, 0x16, 0x3)
flock(r4, 0xc)
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3056
remove dir: /root/cephfs-client/dfs-0-2502
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2503 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2503
receive_execute: 5, 24
receive_execute: 3, 24
receive_execute: 3, 24
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 23
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 85, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 471
----- completed 4
execute_one loop: 0, 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 108
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 96
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 9441, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13688, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1302
----- executor 2 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 31640, flag collect 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 27, 11, 0
before receive testcase: 0 1
time breakdown 3: 29, 9, 0
before receive testcase: 0 0
time breakdown 0: 27, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 6682
----- executor 2 executes write_coverage_signal cov->size 1703, flag collect 0
----- executor 2 signal number : 291
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
----- executor 2 signal number : 536
executor 2 server cover_cnt 5 output_pos_value 8894
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 39
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 10 replies
2023/03/30 19:50:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 96 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1302 signal and 0 cover from userspace component
time breakdown 2: 27, 15, 0
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6682 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 291 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2341 lchown lchown
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3761 stat stat
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 13
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file1\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
removexattr(&(0x7f0000000140)='./file1\x00', &(0x7f0000000380)=@known='user.incfs.id\x00')
listxattr(&(0x7f0000000080)='./file1\x00', 0x0, 0x0)
fstat(r0, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lchown(&(0x7f0000000480)='./file1\x00', r3, 0xee01)
setxattr$system_posix_acl(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)='system.posix_acl_access\x00', &(0x7f0000000540)=ANY=[@ANYBLOB="0200000001000200f1c3c5fbd6df3451b377ae002b6bd40b87436c4fee1b4bc940bbacfe13eec5e7daf9c7d9600d47ebabaabca051a14091b063e55fa45399092f8896db51ca1355f4a72cbc2529c6dc0499203cee10d950d96b97e678d6087d813406239d4c2e876a41829e15e64ec009ef48f8626666b6eed4e7fa63804f4a6f6e840d006f1690ff9777c215cb4fe9e4c116a225e1a1d183cdd4f00beedc", @ANYRES32=r1, @ANYBLOB="02000300", @ANYRES32=0xee00, @ANYBLOB="02000000", @ANYRES32=0xee00, @ANYBLOB="02090100", @ANYRES32=0xee00, @ANYBLOB="02000200", @ANYRES32=r2, @ANYBLOB="040004000000000008000400", @ANYRES32=0xee01, @ANYBLOB="08000200", @ANYRES32, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32, @ANYBLOB="10000100000000002000010000000000"], 0x6c, 0x0)
lsetxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000640)=@sha1={0x1, "db6677d12a67b64c2b420e8d2b23f66959a60548"}, 0x15, 0x0)
lchown(&(0x7f0000000240)='./file1\x00', 0xee00, 0x0)
setxattr$security_selinux(&(0x7f00000003c0)='./file1\x00', &(0x7f0000000400), &(0x7f0000000440)='system_u:object_r:lost_found_t:s0\x00', 0x22, 0x2)
stat(&(0x7f0000000680)='./file1\x00', &(0x7f00000006c0))
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3304
remove dir: /root/cephfs-client/dfs-0-2503
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2504 successfully
receive_execute: 1, 20
receive_execute: 7, 20
current dir: executor 3: /root/cephfs-client/dfs-0-2504
receive_execute: 8, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 6, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 401, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 401, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 802, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 802, flag collect 0
----- executor 3 signal number : 79
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 62
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 473, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 473, flag collect 0
----- executor 3 signal number : 78
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 12
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 810, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 810, flag collect 0
----- executor 3 signal number : 16
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 443, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 448, pid 9445, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 448, flag collect 0
----- executor 3 signal number : 20
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 23
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 21, 27, 0
execute_one time: 0, 48
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18844, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1078
----- executor 2 executes write_coverage_signal cov->size 2101, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 49, 0
time breakdown 1: 26, 50, 0
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 3: 28, 49, 0
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 75
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 13 replies
2023/03/30 19:50:27 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 78 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
----- executor 2 signal number : 8044
----- executor 2 executes write_coverage_signal cov->size 6622, flag collect 0
----- executor 2 signal number : 487
----- executor 2 executes write_coverage_signal cov->size 25967, flag collect 0
----- executor 2 signal number : 3993
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1372
executor 2 server cover_cnt 8 output_pos_value 16479
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1078 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 8044 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 487 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3993 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 22, 54, 0
before receive testcase: 0 0
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1372 signal and 0 cover from userspace component
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 194 fchmod fchmod
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 14
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000002c0)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000300)='./file2\x00')
open$dir(&(0x7f0000000040)='./file0\x00', 0x40, 0x0)
r0 = open$dir(&(0x7f0000000180)='./file1\x00', 0x412900, 0x40)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f00000001c0), &(0x7f0000000200)='./file0\x00', 0x8, 0x0)
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='./file0\x00', 0x8, 0x2)
setxattr$trusted_overlay_origin(&(0x7f00000004c0)='./file0/file1\x00', &(0x7f0000000540), &(0x7f0000000580), 0x2, 0x1)
mkdirat(r0, &(0x7f0000000240)='./file2\x00', 0x108)
lsetxattr$security_smack_transmute(&(0x7f0000000340)='./file0/file0\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x4, 0x0)
r1 = open(&(0x7f00000005c0)='./file0\x00', 0x5c0, 0x60)
fchmod(r1, 0xa0)
open$dir(&(0x7f0000000400)='./file1\x00', 0x20000, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000440)='./file0/file0\x00', &(0x7f0000000480), &(0x7f0000000500)=ANY=[@ANYBLOB="001e260208f686fe4c40aac00d3233bf832442379464de1eadf9c5adf47722e54aeb5b0ce4c55d0de8432dc1f1d76a2aaf14c4856029"], 0x26, 0x1)
lsetxattr$trusted_overlay_upper(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), 0x0, 0x0, 0x0)
chown(&(0x7f0000000280)='./file2\x00', 0x0, 0xee01)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2840
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2504
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2505 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2505
receive_execute: 9, 23
receive_execute: 4, 23
receive_execute: 8, 23
receive_execute: 9, 23
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 133
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 89
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 212, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 212, flag collect 0
----- executor 3 signal number : 35
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9449, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6236, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1278
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15809, flag collect 0
----- executor 2 signal number : 5500
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
time breakdown 0: 31, 8, 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
----- executor 2 signal number : 533
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 7391
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 32, 8, 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 32
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 14 replies
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 4 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1278 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 5500 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
time breakdown 2: 27, 8, 0
before receive testcase: 0 0
time breakdown 3: 32, 7, 0
before receive testcase: 0 1
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3967 truncate truncate
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 258 getdents getdents
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2458 open open
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 16
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f00000002c0)='./file1\x00', 0x13b043, 0x0)
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open(&(0x7f0000000600)='./file0\x00', 0x200000, 0x4)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
r1 = open$dir(&(0x7f0000000280)='./file2/file0\x00', 0x10000, 0x4)
getdents(r1, &(0x7f0000000500)=""/252, 0xfc)
r2 = open$dir(&(0x7f0000000440)='./file2\x00', 0x622c2, 0x0)
unlink(&(0x7f0000000680)='./file0\x00')
stat(&(0x7f0000000100)='./file0\x00', 0x0)
truncate(&(0x7f00000003c0)='./file2\x00', 0xfffffffffffffffc)
pwrite64(r2, &(0x7f0000000080)="05", 0x1, 0x1f5ffffff)
mkdir(&(0x7f00000001c0)='./file0\x00', 0x0)
open$dir(&(0x7f00000000c0)='./file1\x00', 0xcde51dc04a8c8404, 0x100)
stat(&(0x7f0000000300)='\x00', &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000340), &(0x7f0000000400)='./file0\x00', 0x8, 0x1)
lsetxattr$security_capability(&(0x7f0000000200)='./file3\x00', &(0x7f0000000240), &(0x7f0000000380)=@v3={0x3000000, [{0xfbfc, 0x5}, {0x101, 0xc9}], r3}, 0x18, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2648
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2505
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
receive_execute: 2, 15
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2506 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2506
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 25
receive_execute: 3, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 606, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 606, flag collect 0
----- executor 3 signal number : 101
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 542, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 542, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 637, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 637, flag collect 0
----- executor 3 signal number : 23
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 24
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 978, pid 9452, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 978, flag collect 0
----- executor 3 signal number : 436
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 142
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 518, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 518, flag collect 0
----- executor 3 signal number : 12
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 401, pid 9452, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 401, flag collect 0
----- executor 3 signal number : 22
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 35, 1, 0
execute_one time: 1, 36
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 22798, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 32275, flag collect 0
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 1349, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 17, 50, 0
before receive testcase: 0 1
----- executor 2 signal number : 8342
----- executor 2 executes write_coverage_signal cov->size 280, flag collect 0
----- executor 2 signal number : 89
2023/03/30 19:50:27 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 6179
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1532
time breakdown 3: 29, 38, 0
before receive testcase: 0 1
executor 2 server cover_cnt 9 output_pos_value 18765
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 28, 40, 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 68
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 16 replies
2023/03/30 19:50:27 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 436 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 142 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 9 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 8342 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 89 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6179 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1532 signal and 0 cover from userspace component
time breakdown 2: 17, 53, 0
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 4
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000080)=ANY=[@ANYBLOB='seCurity.($)\x00'])
open$dir(&(0x7f0000000040)='./file0\x00', 0x109440, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='security.SMACK64MMAP\x00', 0x0, 0x0, 0x0)
truncate(&(0x7f0000000200)='./file0\x00', 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 664
remove dir: /root/cephfs-client/dfs-0-2506
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2507 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2507
receive_execute: 7, 14
receive_execute: 5, 13
receive_execute: 3, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 657, pid 9455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 470
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 270, pid 9455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 3 signal number : 137
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 255, pid 9455, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 255, flag collect 0
----- executor 3 signal number : 79
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/30 19:50:27 for select break: 1
time breakdown 3: 21, 3, 0
executor 1 write_server_output
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11628, flag collect 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 5, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 4894
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 6772
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 18
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 4 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 4 replies
2023/03/30 19:50:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/30 19:50:27 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 4894 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
time breakdown 2: 16, 5, 0
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3761 stat stat
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 5
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
stat(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140))
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000200)='./file1\x00')
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open$dir(&(0x7f0000000080)='./file1\x00', 0x40041, 0x0)
stat(&(0x7f0000000240)='./file0\x00', &(0x7f0000000400))
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 672
remove dir: /root/cephfs-client/dfs-0-2507
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 20
-----finish removing dir
receive_execute: 2, 27
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-2508 successfully
receive_execute: 2, 27
receive_execute: 2, 28
current dir: executor 3: /root/cephfs-client/dfs-0-2508
receive_execute: 4, 26
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9458, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 9458, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 343
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 612, pid 9458, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 612, flag collect 0
----- executor 3 signal number : 88
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 604, pid 9458, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 604, flag collect 0
----- executor 3 signal number : 133
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 246, pid 9458, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 246, flag collect 0
----- executor 3 signal number : 33
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 1, 0
execute_one time: 1, 19
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16143, flag collect 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 16383, flag collect 0
time breakdown 1: 29, 23, 0
before receive testcase: 0 0
----- executor 2 signal number : 929
----- executor 2 executes write_coverage_signal cov->size 673, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7762
----- executor 2 executes write_coverage_signal cov->size 2195, flag collect 0
----- executor 2 signal number : 335
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 30, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 6809
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1451
executor 2 server cover_cnt 8 output_pos_value 18777
time breakdown 0: 30, 23, 0
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 54
2023/03/30 19:50:27 ----- PS len: 4
time breakdown 2: 29, 27, 0
2023/03/30 19:50:27 [CLIENT] executor 3 has 5 replies
2023/03/30 19:50:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 343 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 929 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 7762 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 335 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6809 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1451 signal and 0 cover from userspace component
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3761 stat stat
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2458 open open
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3662 setxattr setxattr
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 12
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
symlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000200)='./file1\x00')
stat(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$security_capability(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440), &(0x7f0000000540)=@v3={0x3000000, [{0xffffffff, 0xec5f}, {0x0, 0x6}], r0}, 0x18, 0x1)
lremovexattr(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000180)=@known='security.selinux\x00')
rename(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
stat(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680))
llistxattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000240)=""/191, 0xbf)
open(&(0x7f0000000700)='./file1\x00', 0x400, 0x10)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000300), 0x2, 0x1)
setxattr(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=@known='trusted.overlay.nlink\x00', &(0x7f00000003c0)='trusted.overlay.opaque\x00', 0x17, 0x1)
lsetxattr$security_selinux(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)='system_u:object_r:ptmx_t:s0\x00', 0x1c, 0x0)
setxattr(&(0x7f0000000740)='./file2\x00', &(0x7f0000000780)=ANY=[@ANYBLOB='user.t>\x00ver\x00'/21], &(0x7f00000007c0)='trusted.overlay.nlink\x00', 0x16, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2688
remove dir: /root/cephfs-client/dfs-0-2508
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2509 successfully
receive_execute: 6, 18
current dir: executor 3: /root/cephfs-client/dfs-0-2509
receive_execute: 11, 18
receive_execute: 10, 19
receive_execute: 9, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 108
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 608, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 608, flag collect 0
----- executor 3 signal number : 35
----- completed 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 41
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 3
----- completed 9
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9461, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 30
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 22
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 28, 78, 0
execute_one time: 1, 106
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
executor 1 write_server_output
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 28, 109, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 22583, flag collect 0
----- executor 2 signal number : 1416
----- executor 2 executes write_coverage_signal cov->size 28415, flag collect 0
time breakdown 1: 29, 109, 0
before receive testcase: 0 1
----- executor 2 signal number : 1056
----- executor 2 executes write_coverage_signal cov->size 1353, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7573
----- executor 2 executes write_coverage_signal cov->size 2534, flag collect 0
----- executor 2 signal number : 343
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6164
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1480
executor 2 server cover_cnt 8 output_pos_value 18127
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 133
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 12 replies
time breakdown 3: 29, 108, 0
before receive testcase: 0 1
2023/03/30 19:50:27 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1416 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1056 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 7573 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 343 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6164 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1480 signal and 0 cover from userspace component
time breakdown 2: 25, 114, 0
before receive testcase: 0 1
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- mutateArg()
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 3765 symlinkat symlinkat
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 7
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000240)='./file0\x00', 0x5a1c0, 0x0)
symlinkat(&(0x7f0000000040)='./file0\x00', r0, &(0x7f0000000300)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000080)='./file0\x00', &(0x7f0000000180)='security.SMACK64IPIN\x00', &(0x7f0000000100)={'*&'}, 0x3, 0x1)
setxattr$smack_xattr_label(&(0x7f00000000c0)='./file0\x00', &(0x7f00000001c0)='security.SMACK64MMAP\x00', &(0x7f0000000200)={'[-.{}|'}, 0x7, 0x0)
llistxattr(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
truncate(&(0x7f0000000140)='./file0\x00', 0x1)
linkat(r0, &(0x7f0000000280)='./file0\x00', 0xffffffffffffffff, &(0x7f00000002c0)='./file0\x00', 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1480
remove dir: /root/cephfs-client/dfs-0-2509
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2510 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2510
receive_execute: 10, 16
receive_execute: 4, 16
receive_execute: 9, 16
receive_execute: 8, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 420, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 3 signal number : 133
----- completed 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 116
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1093, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1093, flag collect 0
----- executor 3 signal number : 89
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9464, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 16, 0
execute_one time: 1, 40
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 9604, flag collect 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1075
----- executor 2 executes write_coverage_signal cov->size 1124, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
executor 0 server cover_cnt 1 output_pos_value 23
time breakdown 0: 25, 44, 0
before receive testcase: 0 0
time breakdown 3: 26, 42, 0
before receive testcase: 0 1
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6917
----- executor 2 executes write_coverage_signal cov->size 714, flag collect 0
----- executor 2 signal number : 282
----- executor 2 executes write_coverage_signal cov->size 19939, flag collect 0
----- executor 2 signal number : 3471
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 864
executor 2 server cover_cnt 8 output_pos_value 14092
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 62
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 7 replies
2023/03/30 19:50:27 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 116 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 [SERVER] executor 0 has 1 replies
2023/03/30 19:50:27 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1075 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6917 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 282 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3471 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 864 signal and 0 cover from userspace component
time breakdown 2: 20, 46, 0
before receive testcase: 0 0
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 16
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
setxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000140)=@known='security.selinux\x00', &(0x7f00000001c0)='\x00', 0x1, 0x0)
linkat(0xffffffffffffffff, &(0x7f0000000400)='./file0/file1\x00', 0xffffffffffffffff, &(0x7f0000000480)='./file1/file0\x00', 0x1000)
symlink(&(0x7f0000000240)='./file1\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$incfs_size(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=0xbc26, 0x8, 0x2)
mkdir(&(0x7f0000000440)='./file0\x00', 0x88)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000280), &(0x7f00000003c0)='./file0\x00', 0x8, 0x1)
sync()
rename(&(0x7f0000000000)='./file2\x00', &(0x7f0000000040)='./file0\x00')
stat(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
r1 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r1, &(0x7f0000000600), &(0x7f0000000640)='./file0/file0\x00', 0xe, 0x3)
open$dir(&(0x7f00000002c0)='./file0/file1\x00', 0x10001, 0x100)
lchown(&(0x7f0000000200)='./file2\x00', 0xee00, r0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
open$dir(&(0x7f00000005c0)='./file0\x00', 0x0, 0x41)
open(&(0x7f0000000180)='./file2\x00', 0x202080, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2768
remove dir: /root/cephfs-client/dfs-0-2510
time breakdown 1: 24, 45, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 48
-----finish removing dir
receive_execute: 2, 50
receive_execute: 4, 50
receive_execute: 3, 50
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2511 successfully
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 3: /root/cephfs-client/dfs-0-2511
receive_execute: 7, 50
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 343
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1160, pid 9468, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 1160, flag collect 0
----- executor 3 signal number : 361
----- completed 7
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 207, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 207, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 207, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 207, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 628, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 628, flag collect 0
----- executor 3 signal number : 129
----- completed 14
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 302, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 302, flag collect 0
----- executor 3 signal number : 3
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9468, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 48
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 49, 0
execute_one time: 0, 75
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19896, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 0 signal number : 68
----- executor 0 executes write_coverage_signal cov->size 597, flag collect 0
----- executor 0 signal number : 306
executor 0 server cover_cnt 2 output_pos_value 381
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 25135, flag collect 0
----- executor 2 signal number : 1062
----- executor 2 executes write_coverage_signal cov->size 629, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 54, 78, 0
time breakdown 3: 57, 76, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 78, 0
before receive testcase: 0 0
----- executor 2 signal number : 6644
----- executor 2 executes write_coverage_signal cov->size 1790, flag collect 0
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 20934, flag collect 0
----- executor 2 signal number : 3502
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 890
executor 2 server cover_cnt 8 output_pos_value 13905
2023/03/30 19:50:27 for select break: 1
2023/03/30 19:50:27 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:27 wg wait finish
2023/03/30 19:50:27 ------ all executors finish execution
2023/03/30 19:50:27 exec time: 131
2023/03/30 19:50:27 ----- PS len: 4
2023/03/30 19:50:27 [CLIENT] executor 3 has 16 replies
2023/03/30 19:50:27 [SERVER] executor 0 has 2 replies
2023/03/30 19:50:27 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:27 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/30 19:50:27 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 1062 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 343 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 361 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:50:27 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 52, 81, 0
before receive testcase: 0 0
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 6644 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3502 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:27 ------- fuzzer executor 2 receive 890 signal and 0 cover from userspace component
2023/03/30 19:50:27 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:27 ----- no new client coverage: false, true
2023/03/30 19:50:27 mutate testcase with failures
2023/03/30 19:50:27 ----- insertCall()
2023/03/30 19:50:27 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:27 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:27 prog length: 12
2023/03/30 19:50:27 HasCrashFail:false HasNetFail:false
19:50:27 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000240)='./file0\x00', 0x5a1c0, 0x0)
symlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
setxattr$incfs_size(&(0x7f00000008c0)='./file0\x00', &(0x7f0000000900), &(0x7f0000000940)=0x6, 0x8, 0x3)
mkdirat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0x40)
r0 = open(&(0x7f0000000080)='./file1\x00', 0x2400, 0x1)
write$binfmt_misc(r0, &(0x7f00000000c0)={'syz1', "5a0cfba77fc59095d18a7f078d0ddbdf29f7ece9884fce"}, 0x1b)
getxattr(&(0x7f0000000100)='./file1\x00', &(0x7f00000007c0)=ANY=[@ANYBLOB='oc\r.\x00'], &(0x7f0000000800)=""/148, 0x94)
write$binfmt_elf32(r0, &(0x7f00000010c0)=ANY=[@ANYBLOB="7f454c46041f010501000000000000000300060006000000540100003800000005010000fffffffffcff2000010040000100ff0300000000050000000900000074ffffff03000000010000000100010091030000090000000400000040000000ffffff7f03000000fdffffff3f000000010000000700000060e219e9b14db5ec12c547f03904ad35945fc738d5e20959162a1fa3ec33711594ddd18e14f3b4379ced4e9b9c5bd54de36794e20dbac79d66d4f2fd2886003df06c98e464bc73423bdbb568f5a3468148a7e0f6efdc9250522ceaef2e353a688f5e2db7d3954f301040762e8d098cbc22f0b3316dfd517b6339ee52197000e840e7c2250a6e4e0c7758b902fbbff719ad3a8a052d9edc06f25d7fd366ea1fdb891b3492318231af8bc6f1dfb6cb91139b2c7edccb98f6ad3dee19ab1ba862fbc3260ffdc6102bc1225e54408f9038129ebdec6d8b181931465c04bfdd80ca5ba4614c4864da903ada588ef2658c22d278d48eeacd3139d1d29b92c1b2466f6a48bd49ed0104b2c0199393ee7acb94d12afdc56f39b89e109018fd03fecde7d14965f570d5141a1db733a3e9ef14bf25b8b10e9a2757d5b527bb7573580098b15b970f769a58f32e9a5ba331f3643ca3ca95acd4080aa4b38887e74b228f6fdf4cfeec539bda46a939467bc9ed426e6829b24ea96c77144d70a9fae7360ab224b8fd4779a3300197e5fc3460959598231457a3a57c111328afa6f5c70759832b1c77dd73b5d5ea8c3752c1fa33191000000"], 0x618)
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file1\x00')
lgetxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)=@known='security.selinux\x00', &(0x7f0000000280)=""/25, 0x19)
open$dir(&(0x7f00000002c0)='./file1\x00', 0x400, 0x18c)
setxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'L-', 0x3f}, 0x16, 0x2)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 4064
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2511
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 7
-----finish removing dir
receive_execute: 6, 10
receive_execute: 7, 9
receive_execute: 3, 10
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2512 successfully
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 3: /root/cephfs-client/dfs-0-2512
receive_execute: 8, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 621, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 839, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 839, flag collect 0
----- executor 3 signal number : 196
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 46
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 3
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 1
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 472, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 472, flag collect 0
----- executor 3 signal number : 53
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 549, pid 9471, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 549, flag collect 0
----- executor 3 signal number : 16
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16998, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1358
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 16, 9, 0
time breakdown 1: 16, 9, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 7239
----- executor 2 executes write_coverage_signal cov->size 3635, flag collect 0
----- executor 2 signal number : 337
----- executor 2 executes write_coverage_signal cov->size 13249, flag collect 0
----- executor 2 signal number : 579
executor 2 server cover_cnt 5 output_pos_value 9596
time breakdown 3: 17, 8, 0
before receive testcase: 0 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 21
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 12 replies
2023/03/30 19:50:28 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1358 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 7239 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 337 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 579 signal and 0 cover from userspace component
2023/03/30 19:50:28 fuzzer receive 196 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2462 openat openat
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 5
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x13b042, 0x5b3f646ff0a8a829)
open$dir(&(0x7f0000000180)='./file1\x00', 0x0, 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x22040, 0x4)
setxattr$system_posix_acl(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f00000003c0), 0x24, 0x0)
lchown(&(0x7f0000000480)='./file1\x00', 0xffffffffffffffff, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1336
remove dir: /root/cephfs-client/dfs-0-2512
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 13, 11, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 41
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2513 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2513
receive_execute: 5, 43
receive_execute: 2, 42
receive_execute: 4, 42
receive_execute: 4, 42
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 9474, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 9474, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9474, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 784, pid 9474, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 784, flag collect 0
----- executor 3 signal number : 136
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 912, pid 9474, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 912, flag collect 0
----- executor 3 signal number : 73
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 13, 3, 0
execute_one time: 0, 16
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 48, 26, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 16926, flag collect 0
executor 1 write_server_output
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 46, 28, 0
time breakdown 1: 46, 28, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 1308
----- executor 2 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6999
----- executor 2 executes write_coverage_signal cov->size 1394, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 686
executor 2 server cover_cnt 5 output_pos_value 9374
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 73
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 5 replies
2023/03/30 19:50:28 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1308 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 6999 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
time breakdown 2: 44, 31, 0
before receive testcase: 0 0
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 686 signal and 0 cover from userspace component
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 171 dup2 dup2
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2724 preadv preadv
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 12
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000140)='./file1\x00', 0x0, 0x0)
r1 = dup(r0)
r2 = dup(r1)
r3 = fcntl$dupfd(r0, 0x0, r2)
mkdirat(r3, &(0x7f0000000000)='./file1\x00', 0x0)
preadv(r3, &(0x7f0000000180)=[{&(0x7f0000000280)=""/224, 0xe0}], 0x1, 0x5, 0x2)
r4 = open(&(0x7f00000001c0)='./file1\x00', 0x0, 0x0)
renameat(r4, &(0x7f0000000200)='./file1\x00', r3, &(0x7f0000000240)='./file0\x00')
dup2(r3, r4)
symlinkat(&(0x7f0000000480)='./file1\x00', r2, &(0x7f0000000d00)='./file1\x00')
getdents64(r3, &(0x7f0000000040)=""/194, 0xc2)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 3: prog_data_offset 1336, prog_size 1776
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2513
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2514 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2514
receive_execute: 6, 24
receive_execute: 6, 24
receive_execute: 6, 24
receive_execute: 3, 24
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 9477, write pid:-2127091528
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 50
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 9477, write pid:-2127004809
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 20
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 9477, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 26
----- completed 11
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 9477, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 168
----- completed 12
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 25, 1, 0
execute_one time: 1, 26
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15494, flag collect 0
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 19139, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 30, 28, 0
before receive testcase: 0 0
----- executor 2 signal number : 931
----- executor 2 executes write_coverage_signal cov->size 612, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 30, 28, 0
before receive testcase: 0 0
----- executor 2 signal number : 6834
----- executor 2 executes write_coverage_signal cov->size 30593, flag collect 0
time breakdown 3: 30, 28, 0
before receive testcase: 0 1
----- executor 2 signal number : 5262
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1893
executor 2 server cover_cnt 7 output_pos_value 16413
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 57
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 12 replies
2023/03/30 19:50:28 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 50 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 7 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 931 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 6834 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 5262 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1893 signal and 0 cover from userspace component
time breakdown 2: 27, 32, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 20
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
close(0xffffffffffffffff)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
open(&(0x7f0000000380)='./file0\x00', 0x14000, 0x2)
open$dir(&(0x7f0000000580)='./file0\x00', 0xa40800, 0x10)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x8002, 0x0)
fcntl$lock(r1, 0x25, &(0x7f0000000040)={0x0, 0x0, 0x40, 0x3})
readlink(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)=""/206, 0xce)
stat(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300))
r2 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x22)
fcntl$getownex(r0, 0x10, &(0x7f0000000200)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x6, &(0x7f0000000240)={0x0, 0x1, 0x7fffffff, 0xea, r3})
write(r0, &(0x7f00000003c0), 0x0)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000003c0))
fcntl$lock(r2, 0x7, &(0x7f0000000400)={0x1, 0x2, 0x43, 0x5, r3})
fcntl$getown(r1, 0x9)
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r4 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r4, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x2, 0xffffffffffffffff})
fcntl$setownex(r1, 0xf, &(0x7f0000000080)={0x1})
open$dir(&(0x7f00000001c0)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3384
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2514
remove dir time 24
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2515 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2515
receive_execute: 7, 27
receive_execute: 7, 27
receive_execute: 3, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 7, 27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9480, write pid:-2127004809
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 610, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 610, flag collect 0
----- executor 3 signal number : 129
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 12
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9480, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 9480, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 27, 1, 1
execute_one time: 1, 29
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13906, flag collect 0
time breakdown 3: 34, 32, 0
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 31828, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 131, flag collect 0
----- executor 0 signal number : 72
----- executor 0 executes write_coverage_signal cov->size 1216, flag collect 0
----- executor 0 signal number : 630
----- executor 0 executes write_coverage_signal cov->size 19193, flag collect 0
----- executor 2 signal number : 1062
----- executor 2 executes write_coverage_signal cov->size 1155, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 34, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
----- executor 0 signal number : 2689
executor 0 server cover_cnt 3 output_pos_value 3401
time breakdown 0: 34, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 7153
----- executor 2 executes write_coverage_signal cov->size 4509, flag collect 0
----- executor 2 signal number : 381
----- executor 2 executes write_coverage_signal cov->size 16646, flag collect 0
----- executor 2 signal number : 3623
----- executor 2 executes write_coverage_signal cov->size 18, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27683, flag collect 0
----- executor 2 signal number : 2114
executor 2 server cover_cnt 8 output_pos_value 15830
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 65
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 20 replies
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 3 replies
2023/03/30 19:50:28 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 0 receive 630 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 0 receive 2689 signal and 0 cover from userspace component
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1062 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 7153 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 381 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3623 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 2114 signal and 0 cover from userspace component
time breakdown 2: 30, 37, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 3
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x14b2c2, 0x0)
pwrite64(r0, &(0x7f0000000080)="05", 0x1, 0x100000000)
read(r0, &(0x7f00000000c0)=""/72, 0x48)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2515
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
receive_execute: 7, 17
receive_execute: 7, 17
receive_execute: 3, 17
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2516 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2516
receive_execute: 9, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 624, pid 9484, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1480, pid 9484, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1480, flag collect 0
----- executor 3 signal number : 953
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 1643, pid 9484, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 1643, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 0, 0
execute_one time: 0, 14
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14132, flag collect 0
----- executor 2 signal number : 1394
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 15, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 9979, flag collect 0
----- executor 2 signal number : 890
----- executor 2 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17352, flag collect 0
----- executor 2 signal number : 5715
----- executor 2 executes write_coverage_signal cov->size 1402, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 12769, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 2989
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 27805, flag collect 0
time breakdown 3: 26, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 2045
executor 2 server cover_cnt 8 output_pos_value 13432
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 36
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 3 replies
2023/03/30 19:50:28 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 fuzzer receive 953 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/30 19:50:28 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 890 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 5715 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 2989 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 2045 signal and 0 cover from userspace component
time breakdown 2: 20, 19, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 10
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x2, 0x3)
open(&(0x7f0000000000)='./file0\x00', 0x509481, 0x0)
r0 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x28e02, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x400, 0x40)
fcntl$getownex(r1, 0x10, &(0x7f0000000080))
open$dir(&(0x7f0000000240)='./file0\x00', 0x10b000, 0xa9)
fcntl$lock(r0, 0x7, &(0x7f0000000400)={0x1, 0x0, 0x3f})
setxattr$trusted_overlay_origin(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180), &(0x7f0000000200), 0x2, 0x2)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x103002, 0x0)
fcntl$lock(r2, 0x6, &(0x7f0000000140)={0x0, 0x0, 0x40, 0x3, 0xffffffffffffffff})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2008
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2516
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 4, 8
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2517 successfully
receive_execute: 2, 8
current dir: executor 3: /root/cephfs-client/dfs-0-2517
receive_execute: 6, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9487, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 13, 1
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 13, 14, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1026, flag collect 0
----- executor 2 signal number : 287
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 1 output_pos_value 291
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 15, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 10, 16, 0
before receive testcase: 0 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 24
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 10 replies
2023/03/30 19:50:28 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 1 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
time breakdown 1: 12, 16, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 5
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0/file1\x00', 0x48903, 0x0)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x1)
mkdir(&(0x7f0000000440)='./file0\x00', 0x0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
rename(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000580)='./file0/file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 856
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2517
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-2518 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2518
receive_execute: 3, 7
receive_execute: 2, 7
receive_execute: 1, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9490, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9490, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 523, pid 9490, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 523, flag collect 0
----- executor 3 signal number : 382
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 602, pid 9490, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 602, flag collect 0
----- executor 3 signal number : 119
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 727, pid 9490, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 727, flag collect 0
----- executor 3 signal number : 97
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 40
executor 3, execute_one inner time: 6, 40, 0
execute_one time: 5, 46
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 92, flag collect 0
----- executor 0 signal number : 64
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 287
executor 0 server cover_cnt 2 output_pos_value 358
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1409
----- executor 2 executes write_coverage_signal cov->size 29994, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 9, 54, 0
time breakdown 3: 11, 52, 0
before receive testcase: 0 0
----- executor 2 signal number : 1033
----- executor 2 executes write_coverage_signal cov->size 826, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 55, 0
before receive testcase: 0 0
----- executor 2 signal number : 7501
----- executor 2 executes write_coverage_signal cov->size 30185, flag collect 0
----- executor 2 signal number : 1659
----- executor 2 executes write_coverage_signal cov->size 2520, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6240
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1482
executor 2 server cover_cnt 9 output_pos_value 19784
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 65
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 5 replies
2023/03/30 19:50:28 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 2 replies
2023/03/30 19:50:28 ------- fuzzer executor 0 receive 64 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
time breakdown 2: 8, 58, 0
before receive testcase: 0 0
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 9 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1409 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1033 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 7501 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1659 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 6240 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1482 signal and 0 cover from userspace component
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2809 rename rename
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 6
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r0 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000080), &(0x7f0000000180)={'U+', 0x2}, 0x16, 0x2)
open$dir(&(0x7f0000000200)='./file0\x00', 0x48000, 0x41)
write(r0, &(0x7f0000000100)="768b530a3a549831f51ab66fad93f3f69861c9e02b97bc3cf7c9a67feb603074f53491a7ad826885a666d94f9eb0c3980fe7621f5976bdc0c2f9a66a00243b348e72c1531d66c38fac6f0cafdee1085a34b2b8ecc9081669352fd9aee57203fa60b9dad057e4123fc62f0e74aa97d48a313f77ca", 0x74)
rename(&(0x7f0000000040)='./file0\x00', &(0x7f00000001c0)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1160
remove dir: /root/cephfs-client/dfs-0-2518
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 47
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2519 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2519
receive_execute: 9, 49
receive_execute: 4, 48
receive_execute: 6, 48
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 48
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9494, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9494, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 9494, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9494, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9494, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9494, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 2, 4
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 252, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 11630, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 4904
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
time breakdown 0: 54, 15, 0
----- executor 2 signal number : 257
----- executor 2 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 2 signal number : 241
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
----- executor 2 signal number : 533
executor 2 server cover_cnt 6 output_pos_value 7288
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 65
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 6 replies
2023/03/30 19:50:28 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 6 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
time breakdown 2: 52, 16, 0
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 4904 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 241 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 3: 58, 13, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 55, 14, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2341 lchown lchown
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 222 fremovexattr fremovexattr
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 9
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000300)='./file1\x00', 0x0, 0x0)
lseek(r0, 0x4, 0x1)
r1 = fcntl$dupfd(r0, 0x406, r0)
fremovexattr(r1, &(0x7f0000000000)=@known='trusted.overlay.impure\x00')
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140))
fstat(r0, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lchown(&(0x7f0000000240)='./file1\x00', r3, r2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1240
remove dir: /root/cephfs-client/dfs-0-2519
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 13
executor 3 create dir /root/cephfs-client/dfs-0-2520 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2520
receive_execute: 18, 28
receive_execute: 20, 28
receive_execute: 19, 28
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 22, 28
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 9497, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9497, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12, pid 9497, write pid:-2127077826
----- executor 3 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 3 signal number : 12
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9497, write pid:-2127077826
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 173, pid 9497, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 173, flag collect 0
----- executor 3 signal number : 102
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9497, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9497, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 42, pid 9497, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 3 signal number : 23
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 186, pid 9497, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 186, flag collect 0
----- executor 3 signal number : 78
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 1, 0
execute_one time: 1, 17
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4170, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 11348, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4694
executor 2 server cover_cnt 3 output_pos_value 6030
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 54, 17, 0
before receive testcase: 0 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 49
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 9 replies
2023/03/30 19:50:28 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 78 signal and 0 cover from executor 3
time breakdown 2: 48, 21, 0
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 3 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 4694 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 47, 21, 0
time breakdown 3: 46, 20, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2810 renameat renameat
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 259 getdents64 getdents64
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 7
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x10181, 0x1)
r2 = fcntl$dupfd(r0, 0x0, r0)
renameat(r2, &(0x7f0000000080)='./file0\x00', r1, &(0x7f00000000c0)='./file0\x00')
fcntl$lock(r0, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x3, 0xffffffffffffffff})
getdents64(r2, &(0x7f0000000180)=""/223, 0xdf)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-2520
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2521 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2521
receive_execute: 3, 22
receive_execute: 1, 21
receive_execute: 2, 21
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 9500, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9500, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9500, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9500, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9500, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9500, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9500, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 0, 6
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7193, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1327
----- executor 2 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 2 signal number : 67
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 18189, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 23, 8, 0
before receive testcase: 0 1
----- executor 2 signal number : 5815
----- executor 2 executes write_coverage_signal cov->size 1364, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
----- executor 2 signal number : 542
executor 2 server cover_cnt 6 output_pos_value 8068
time breakdown 0: 22, 9, 0
before receive testcase: 0 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
time breakdown 2: 23, 10, 0
before receive testcase: 0 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 31
time breakdown 3: 25, 7, 0
before receive testcase: 0 1
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 7 replies
2023/03/30 19:50:28 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 6 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1327 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 5815 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 542 signal and 0 cover from userspace component
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2462 openat openat
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 3
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file2\x00', 0x40401, 0xa4)
open(&(0x7f0000000180)='./file2\x00', 0x3e7, 0x0)
lsetxattr$security_capability(&(0x7f0000000000)='.\x00', &(0x7f0000000040), 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 544
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2521
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 18
-----finish removing dir
receive_execute: 2, 19
receive_execute: 3, 19
receive_execute: 4, 19
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2522 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2522
receive_execute: 4, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 9504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 9504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 229
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 377, pid 9504, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 377, flag collect 0
----- executor 3 signal number : 90
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10152, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1288
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 26335, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 8, 0
before receive testcase: 0 0
2023/03/30 19:50:28 for select break: 1
----- executor 2 signal number : 6545
----- executor 2 executes write_coverage_signal cov->size 2397, flag collect 0
time breakdown 1: 23, 9, 0
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 16475, flag collect 0
----- executor 2 signal number : 642
executor 2 server cover_cnt 5 output_pos_value 8877
time breakdown 3: 24, 7, 0
before receive testcase: 0 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 29
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 3 replies
2023/03/30 19:50:28 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 5 replies
time breakdown 2: 21, 10, 0
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1288 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 6545 signal and 0 cover from userspace component
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 642 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2458 open open
2023/03/30 19:50:28 ----- splice()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 20
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
stat(&(0x7f0000000840)='./file0/file1\x00', &(0x7f0000000a40)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000900)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000180)='./file0/file0\x00', &(0x7f0000000800)='system.posix_acl_access\x00', &(0x7f0000000980)={{}, {}, [{0x2, 0x4}, {0x2, 0x1, r0}], {0x4, 0xb86b3ad32afede48}, [{0x8, 0x0, r1}], {}, {0x20, 0x1}}, 0x3c, 0x1)
setxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000140)=@known='security.selinux\x00', &(0x7f00000001c0)='\x00', 0x1, 0x0)
linkat(0xffffffffffffffff, &(0x7f0000000400)='./file0/file1\x00', 0xffffffffffffffff, &(0x7f0000000480)='./file1/file0\x00', 0x1000)
symlink(&(0x7f0000000500)='./file1\x00', &(0x7f0000000240)='./file2\x00')
setxattr$incfs_size(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380), 0x8, 0x3)
mkdir(&(0x7f0000000440)='./file0\x00', 0x88)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000280), &(0x7f00000003c0)='./file0\x00', 0x8, 0x1)
sync()
open(&(0x7f00000009c0)='./file1/file0/file0\x00', 0x2140, 0xb6)
rename(&(0x7f0000000000)='./file2\x00', &(0x7f0000000740)='./file0/file1\x00')
stat(&(0x7f0000000540)='./file0\x00', &(0x7f0000000880)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
open$dir(&(0x7f00000002c0)='./file0/file1\x00', 0x10001, 0x100)
lchown(&(0x7f0000000200)='./file2\x00', 0xee00, r2)
open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
rename(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000580)='./file0/file1\x00')
stat(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0))
open$dir(&(0x7f00000005c0)='./file0\x00', 0x0, 0x59)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000780)='security.SMACK64IPOUT\x00', &(0x7f00000007c0)={'user.incfs.size\x00'}, 0x11, 0x3)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 3: prog_data_offset 1336, prog_size 4440
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-2522
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2523 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2523
receive_execute: 5, 24
receive_execute: 4, 24
receive_execute: 2, 24
receive_execute: 3, 24
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 85, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 343
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 49
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 552, pid 9507, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 3 signal number : 311
----- completed 10
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 701, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 701, flag collect 0
----- executor 3 signal number : 83
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 23
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3842, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3842, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 632, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 632, flag collect 0
----- executor 3 signal number : 108
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 800, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 800, flag collect 0
----- executor 3 signal number : 18
----- completed 17
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 10
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 265, pid 9507, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 265, flag collect 0
----- executor 3 signal number : 99
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 23
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 28, 25, 0
execute_one time: 0, 53
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 29, 54, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28911, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 55, 0
before receive testcase: 0 0
----- executor 2 signal number : 1014
----- executor 2 executes write_coverage_signal cov->size 1400, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7374
----- executor 2 executes write_coverage_signal cov->size 6629, flag collect 0
----- executor 2 signal number : 447
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5484
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1981
executor 2 server cover_cnt 8 output_pos_value 17801
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 28, 55, 0
before receive testcase: 0 0
time breakdown 2: 26, 72, 0
before receive testcase: 0 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 99
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 20 replies
2023/03/30 19:50:28 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 343 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 311 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1014 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 7374 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 447 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 5484 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1981 signal and 0 cover from userspace component
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2809 rename rename
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 8
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
mkdir(&(0x7f00000004c0)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000140)='./file1\x00', 0x0, 0x0)
rename(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)='./file1\x00')
r1 = dup(r0)
r2 = fcntl$dupfd(r1, 0x0, r0)
mkdirat(r2, &(0x7f0000000000)='./file1\x00', 0x0)
getdents64(r2, &(0x7f0000000040)=""/194, 0xc2)
fsync(r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 976
remove dir: /root/cephfs-client/dfs-0-2523
remove dir time 18
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-2524 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2524
receive_execute: 23, 22
receive_execute: 22, 23
receive_execute: 5, 22
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 9513, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 9513, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9513, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9513, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9513, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 20, 23
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 511, pid 9513, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 9513, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 13, pid 9513, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 3 signal number : 13
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 1, 0
execute_one time: 0, 17
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 45, 19, 0
before receive testcase: 0 0
time breakdown 0: 47, 14, 1
before receive testcase: 0 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 43
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 8 replies
2023/03/30 19:50:28 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 7 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 900 signal and 0 cover from userspace component
2023/03/30 19:50:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 6624 signal and 0 cover from userspace component
time breakdown 3: 45, 18, 0
before receive testcase: 0 0
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3719 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1070 signal and 0 cover from userspace component
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10723, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 12242, flag collect 0
----- executor 2 signal number : 900
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 27759, flag collect 0
----- executor 2 signal number : 6624
----- executor 2 executes write_coverage_signal cov->size 18737, flag collect 0
----- executor 2 signal number : 3719
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19284, flag collect 0
----- executor 2 signal number : 1070
executor 2 server cover_cnt 7 output_pos_value 13795
time breakdown 2: 27, 21, 0
before receive testcase: 0 0
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 13
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000080)='./file0\x00', 0x340, 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x400000, 0x1)
setxattr$security_ima(&(0x7f0000000500)='./file2\x00', &(0x7f0000000540), &(0x7f0000000580)=@sha1={0x1, "2a61da7a28f3aa4f06872ad85dfcd7c00c73481a"}, 0x15, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
link(&(0x7f0000000100)='./file0\x00', &(0x7f0000000180)='./file1\x00')
stat(&(0x7f0000000200)='./file1\x00', &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
chown(&(0x7f00000001c0)='./file2\x00', r1, 0xee01)
rename(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440)='./file2\x00')
lsetxattr$security_evm(&(0x7f00000005c0)='./file2\x00', &(0x7f0000000600), &(0x7f0000000680)=ANY=[@ANYBLOB="04000016d48536cbe558482a5e02200000f1f3dd38922fc5e438c4fa279cab74f42067d87cb0a141ad9832d3"], 0x9, 0x3)
lsetxattr$user(&(0x7f00000002c0)='./file2\x00', &(0x7f0000000300), &(0x7f0000000340)='\x00', 0x1, 0x3)
symlink(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)='./file2\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000480)='./file2\x00', &(0x7f00000004c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2392
remove dir: /root/cephfs-client/dfs-0-2524
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 4, 13
receive_execute: 4, 13
receive_execute: 3, 13
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2525 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2525
receive_execute: 5, 13
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 80
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 626, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 626, flag collect 0
----- executor 3 signal number : 29
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 559, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 559, flag collect 0
----- executor 3 signal number : 169
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 554, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 554, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 466, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 466, flag collect 0
----- executor 3 signal number : 21
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 9516, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 1, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 17, 14, 0
execute_one time: 0, 31
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 20994, flag collect 0
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1123
----- executor 2 executes write_coverage_signal cov->size 1282, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7311
----- executor 2 executes write_coverage_signal cov->size 9494, flag collect 0
time breakdown 3: 18, 37, 0
before receive testcase: 0 1
----- executor 2 signal number : 519
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5866
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 17, 38, 0
before receive testcase: 0 1
----- executor 2 signal number : 911
executor 2 server cover_cnt 8 output_pos_value 17219
time breakdown 0: 17, 38, 0
before receive testcase: 0 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 54
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 13 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
time breakdown 2: 16, 41, 0
2023/03/30 19:50:28 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/30 19:50:28 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1123 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 7311 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 519 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 5866 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 911 signal and 0 cover from userspace component
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2374 mkdirat mkdirat
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 6
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000240)='./file0\x00', 0x242, 0x0)
lseek(r0, 0x0, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x2)
r1 = open$dir(&(0x7f0000000180)='./file0/file0\x00', 0x200000, 0x84)
mkdirat(r1, &(0x7f00000001c0)='./file0\x00', 0x8)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100), &(0x7f0000000140)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1144
remove dir: /root/cephfs-client/dfs-0-2525
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 55
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2526 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2526
receive_execute: 8, 59
receive_execute: 7, 59
receive_execute: 4, 59
receive_execute: 7, 59
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 9520, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4, pid 9520, write pid:-2127041725
----- executor 3 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 3 signal number : 4
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 9520, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9520, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9520, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9520, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
time breakdown 3: 67, 4, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4246, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11993, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 66, 4, 0
before receive testcase: 0 0
----- executor 2 signal number : 5004
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 543
executor 2 server cover_cnt 4 output_pos_value 6889
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 64
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 6 replies
2023/03/30 19:50:28 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 4 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 5004 signal and 0 cover from userspace component
time breakdown 2: 63, 6, 0
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 66, 4, 0
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2809 rename rename
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 20
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80c0, 0x0)
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
fcntl$lock(r1, 0x6, &(0x7f0000000140)={0x0, 0x2, 0x40, 0x3, 0xffffffffffffffff})
r2 = open$dir(&(0x7f00000001c0)='./file0\x00', 0x20000, 0x30)
fcntl$getownex(r0, 0x10, &(0x7f0000000200)={0x0, <r3=>0x0})
fcntl$lock(r2, 0x6, &(0x7f0000000240)={0x0, 0x1, 0x7fffffff, 0xea, r3})
open$dir(&(0x7f00000000c0)='./file0/file0\x00', 0x10280, 0x8)
chmod(&(0x7f00000003c0)='./file0\x00', 0x20)
fcntl$getown(r1, 0x9)
fcntl$lock(r0, 0x24, &(0x7f0000000280)={0x0, 0x3, 0x4, 0x2e, r3})
fcntl$getownex(r1, 0x10, &(0x7f00000004c0)={0x0, <r4=>0x0})
fcntl$lock(r0, 0x25, &(0x7f0000000340)={0x0, 0x1, 0x3, 0x7, r4})
rename(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)='./file0/file0\x00')
r5 = openat(0xffffffffffffff9c, &(0x7f0000000580)='./file0\x00', 0x418742, 0x90)
open$dir(&(0x7f0000000480)='./file0\x00', 0x1, 0x12)
symlinkat(&(0x7f0000000380)='./file0/file0/../file0\x00', r5, &(0x7f0000000180)='./file1\x00')
symlinkat(&(0x7f0000000500)='./file0/file0\x00', r0, &(0x7f0000000540)='./file0\x00')
symlink(&(0x7f0000000400)='./file0/file0\x00', &(0x7f0000000440)='./file0\x00')
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000002c0)={0x0, <r6=>0x0})
fcntl$lock(r0, 0x6, &(0x7f0000000300)={0x0, 0x1, 0x4, 0x80000001, r6})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3936
remove dir: /root/cephfs-client/dfs-0-2526
remove dir time 14
-----finish removing dir
receive_execute: 3, 15
receive_execute: 3, 15
receive_execute: 1, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-2527 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2527
receive_execute: 4, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9523, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 114
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9523, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 71
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 9523, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 144, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 144, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 400, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 400, flag collect 0
----- executor 3 signal number : 105
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9523, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 9523, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 2
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 18, 9, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19, flag collect 0
----- executor 0 signal number : 19
----- executor 2 executes write_coverage_signal cov->size 10308, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 1 output_pos_value 23
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 9, 0
before receive testcase: 0 0
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 20904, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7169
----- executor 2 executes write_coverage_signal cov->size 3407, flag collect 0
----- executor 2 signal number : 337
----- executor 2 executes write_coverage_signal cov->size 11943, flag collect 0
----- executor 2 signal number : 2693
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 21409, flag collect 0
time breakdown 0: 18, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 1815
executor 2 server cover_cnt 8 output_pos_value 14513
time breakdown 2: 16, 13, 0
before receive testcase: 0 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 41
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [SERVER] executor 0 has 1 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 8 replies
2023/03/30 19:50:28 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 7169 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 337 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 2693 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1815 signal and 0 cover from userspace component
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [CLIENT] executor 3 has 20 replies
2023/03/30 19:50:28 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 5
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file1\x00', 0x48880, 0x5b3f646ff0a8a829)
open$dir(&(0x7f0000000180)='./file1\x00', 0x0, 0x0)
setxattr$system_posix_acl(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)='system.posix_acl_access\x00', &(0x7f00000003c0), 0x24, 0x0)
lchown(&(0x7f0000000480)='./file1\x00', 0xffffffffffffffff, 0x0)
open$dir(&(0x7f0000000040)='./file1\x00', 0x240000, 0x34)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1312
remove dir: /root/cephfs-client/dfs-0-2527
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
receive_execute: 20, 11
receive_execute: 15, 12
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2528 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2528
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 20, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 9527, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9527, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9527, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9527, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9527, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3, 0
execute_one time: 1, 3
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 32, 5, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 1957, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 4177, flag collect 0
receive_execute: 19, 12
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 5, 0
before receive testcase: 0 0
time breakdown 1: 31, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 2164
----- executor 2 executes write_coverage_signal cov->size 655, flag collect 0
----- executor 2 signal number : 242
----- executor 2 executes write_coverage_signal cov->size 1183, flag collect 0
----- executor 2 signal number : 308
executor 2 server cover_cnt 5 output_pos_value 3810
2023/03/30 19:50:28 for select break: 1
2023/03/30 19:50:28 --------- executor 2 receive reply, reply.done 1
2023/03/30 19:50:28 wg wait finish
2023/03/30 19:50:28 ------ all executors finish execution
2023/03/30 19:50:28 exec time: 19
2023/03/30 19:50:28 ----- PS len: 4
2023/03/30 19:50:28 [CLIENT] executor 3 has 5 replies
2023/03/30 19:50:28 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/30 19:50:28 [SERVER] executor 0 has 0 replies
time breakdown 2: 27, 7, 0
2023/03/30 19:50:28 [SERVER] executor 1 has 0 replies
2023/03/30 19:50:28 [SERVER] executor 2 has 5 replies
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 242 signal and 0 cover from userspace component
2023/03/30 19:50:28 ------- fuzzer executor 2 receive 308 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/30 19:50:28 fsMds: [map[] map[] map[] map[]]
2023/03/30 19:50:28 ----- no new client coverage: false, true
2023/03/30 19:50:28 mutate testcase with failures
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 3761 stat stat
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2459 open$dir open$dir
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- insertCall()
2023/03/30 19:50:28 ----- mutateArg()
2023/03/30 19:50:28 HasCrashFail: false, .HasNetFail: false
2023/03/30 19:50:28 prog length: 20
2023/03/30 19:50:28 HasCrashFail:false HasNetFail:false
19:50:28 ---executing program 0:
---
---
---
setxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000140)=@known='security.selinux\x00', &(0x7f00000001c0)='\x00', 0x1, 0x0)
linkat(0xffffffffffffffff, &(0x7f0000000400)='./file1\x00', 0xffffffffffffffff, &(0x7f0000000480)='./file1/file0\x00', 0x1000)
symlink(&(0x7f0000000240)='./file1\x00', &(0x7f0000000500)='./file0/file0\x00')
setxattr$incfs_size(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=0xbc26, 0x8, 0x2)
mkdir(&(0x7f0000000440)='./file0\x00', 0x88)
open$dir(&(0x7f0000000740)='./file0\x00', 0x400000, 0x142)
lsetxattr$trusted_overlay_redirect(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000280), &(0x7f00000003c0)='./file0\x00', 0x8, 0x1)
sync()
rename(&(0x7f0000000000)='./file2\x00', &(0x7f0000000040)='./file0\x00')
stat(&(0x7f0000000540)='./file0/file0\x00', &(0x7f0000000600)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$incfs_id(&(0x7f0000000200)='./file1\x00', &(0x7f0000000880), &(0x7f00000008c0)={'0000000000000000000000000000000', 0x31}, 0x20, 0x0)
lsetxattr$security_selinux(&(0x7f0000000780)='./file1\x00', &(0x7f00000007c0), &(0x7f0000000800)='system_u:object_r:hald_exec_t:s0\x00', 0x21, 0x0)
open$dir(&(0x7f0000000900)='./file2\x00', 0x20080, 0x125)
open$dir(&(0x7f00000004c0)='./file0/file0\x00', 0x481, 0x20)
open$dir(&(0x7f00000002c0)='./file0/file1\x00', 0x10001, 0x100)
lchown(&(0x7f0000000840)='./file0/file1\x00', 0xee00, r0)
open$dir(&(0x7f0000000100)='./file1\x00', 0x60140, 0x0)
open$dir(&(0x7f00000005c0)='./file1\x00', 0x0, 0xb1)
stat(&(0x7f0000000580)='./file0/file0\x00', &(0x7f0000000680))
open(&(0x7f0000000180)='./file2\x00', 0x202080, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3584
remove dir: /root/cephfs-client/dfs-0-2528
remove dir time 1
-----finish removing dir
receive_execute: 2, 2
receive_execute: 3, 2
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-2529 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2529
receive_execute: 4, 2
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 523, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 523, flag collect 0
----- executor 3 signal number : 356
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 3, 2
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 1192, pid 9530, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 1192, flag collect 0
----- executor 3 signal number : 342
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 482, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 482, flag collect 0
----- executor 3 signal number : 54
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 628, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 628, flag collect 0
----- executor 3 signal number : 90
----- completed 17
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 9530, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
[ 3206.795185] ==================================================================
[ 3206.795948] BUG: KASAN: use-after-free in encode_cap_msg+0xded/0x19d0
[ 3206.796498] Write of size 4 at addr ff11000104cfecc0 by task syz-executor/9531
[ 3206.797073] 
[ 3206.797185] CPU: 1 PID: 9531 Comm: syz-executor Tainted: G        W         5.15.0+ #9
[ 3206.797754] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[ 3206.798391] Call Trace:
[ 3206.798566]  dump_stack_lvl+0x34/0x44
[ 3206.798825]  print_address_description.constprop.0+0x21/0x140
[ 3206.799224]  ? encode_cap_msg+0xded/0x19d0
[ 3206.799510]  ? encode_cap_msg+0xded/0x19d0
[ 3206.799800]  kasan_report.cold+0x7f/0x11b
[ 3206.800080]  ? encode_cap_msg+0xded/0x19d0
[ 3206.800374]  kasan_check_range+0x17c/0x1e0
[ 3206.800661]  encode_cap_msg+0xded/0x19d0
[ 3206.800936]  __send_cap+0x45/0x390
[ 3206.801175]  ceph_check_caps+0x84c/0x13f0
[ 3206.802367]  ? __ceph_should_report_size+0x170/0x170
[ 3206.802715]  ? check_preempt_curr+0x4f/0x70
[ 3206.803010]  ? __sanitizer_cov_trace_pc+0x1a/0x50
[ 3206.803337]  ? __ceph_lookup_mds_session+0x1f2/0x2b0
[ 3206.803733]  flush_dirty_session_caps+0xfe/0x1b0
[ 3206.804114]  ceph_mdsc_iterate_sessions+0x106/0x190
[ 3206.804527]  ? __ceph_put_cap_refs+0x940/0x940
[ 3206.804879]  ? __ia32_sys_fdatasync+0x20/0x20
[ 3206.805227]  ceph_mdsc_sync+0x165/0xbb0
[ 3206.805533]  ? wait_for_completion_io+0x2e/0xe0
[ 3206.806154]  ? ceph_mdsc_pre_umount+0x450/0x450
[ 3206.806792]  ? blkdev_issue_flush+0x58/0x80
[ 3206.807349]  ? __cond_resched+0x10/0x20
[ 3206.807735]  ? mutex_lock+0x9/0x30
[ 3206.807979]  ? __sanitizer_cov_trace_pc+0x1a/0x50
[ 3206.808316]  ? ceph_osdc_sync+0x176/0x300
[ 3206.808611]  ? __ia32_sys_fdatasync+0x20/0x20
[ 3206.808928]  ceph_sync_fs+0x9a/0x100
[ 3206.809311]  iterate_supers+0x84/0xd0
[ 3206.809595]  ksys_sync+0x5b/0xb0
[ 3206.809832]  __do_sys_sync+0x5/0x10
[ 3206.810114]  do_syscall_64+0x38/0x90
[ 3206.810565]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[ 3206.811208] RIP: 0033:0x7ffff7389aad
[ 3206.811662] Code: 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b8 ff ff ff f7 d8 64 89 01 48
[ 3206.814010] RSP: 002b:00007ffff40be7b8 EFLAGS: 00000212 ORIG_RAX: 00000000000000a2
[ 3206.814967] RAX: ffffffffffffffda RBX: 00007ffff73f67a9 RCX: 00007ffff7389aad
[ 3206.815888] RDX: 0000000000000000 RSI: 0000000000000000 RDI: 0000000000000000
[ 3206.816801] RBP: 00007ffff40be810 R08: 0000000000000000 R09: 0000000000000000
[ 3206.817708] R10: 0000000000000000 R11: 0000000000000212 R12: 00007fffffffe0ce
[ 3206.818619] R13: 00007fffffffe0cf R14: 00007fffffffe170 R15: 00007ffff40bed80
[ 3206.819543] 
[ 3206.819754] Allocated by task 9533:
[ 3206.820253] 
[ 3206.820392] Freed by task 7884:
[ 3206.820704] 
[ 3206.820839] The buggy address belongs to the object at ff11000104cfecc0
[ 3206.820839]  which belongs to the cache kmalloc-32 of size 32
[ 3206.822137] The buggy address is located 0 bytes inside of
[ 3206.822137]  32-byte region [ff11000104cfecc0, ff11000104cfece0)
[ 3206.823666] The buggy address belongs to the page:
[ 3206.824330] 
[ 3206.824546] Memory state around the buggy address:
[ 3206.825199]  ff11000104cfeb80: fa fb fb fb fc fc fc fc fa fb fb fb fc fc fc fc
[ 3206.826180]  ff11000104cfec00: fa fb fb fb fc fc fc fc fa fb fb fb fc fc fc fc
[ 3206.827157] >ff11000104cfec80: 00 00 00 00 fc fc fc fc fa fb fb fb fc fc fc fc
[ 3206.828132]                                            ^
[ 3206.828856]  ff11000104cfed00: fa fb fb fb fc fc fc fc fa fb fb fb fc fc fc fc
[ 3206.829828]  ff11000104cfed80: fa fb fb fb fc fc fc fc fa fb fb fb fc fc fc fc
[ 3206.830776] ==================================================================
execute_one loop: 0, 0, 37
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
[ 3206.832257] general protection fault, probably for non-canonical address 0xe980008100001ecc: 0000 [#1] SMP KASAN NOPTI
[ 3206.833515] KASAN: maybe wild-memory-access in range [0x4c0024080000f660-0x4c0024080000f667]
[ 3206.834073] CPU: 1 PID: 7884 Comm: kworker/1:1 Tainted: G    B   W         5.15.0+ #9
[ 3206.834604] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[ 3206.835224] Workqueue: ceph-msgr ceph_con_workfn
[ 3206.835540] RIP: 0010:__crc32c_le_base+0x2b/0x100
[ 3206.835858] Code: f8 40 f6 c6 03 0f 85 bd 00 00 00 49 89 d1 55 4c 8d 46 fc 41 83 e1 07 48 c1 ea 03 53 74 7d 48 c1 e2 03 4c 89 c1 48 8d 74 16 fc <33> 41 04 8b 59 08 48 83 c1 08 0f b6 f8 41 89 c2 0f b6 ec c1 e8 10
[ 3206.837149] RSP: 0018:ff1100010ced7aa0 EFLAGS: 00010206
[ 3206.837543] RAX: 0000000000000000 RBX: ff1100010ced7ac8 RCX: e980008100001ec8
[ 3206.838057] RDX: 0000000000000078 RSI: e980008100001f40 RDI: 0000000000000000
[ 3206.838495] RBP: ff1100011243a180 R08: e980008100001ec8 R09: 0000000000000002
[ 3206.838916] R10: 00000000000000ec R11: ffe21c0022487492 R12: ff11000104cfecc0
[ 3206.839358] R13: dffffc0000000000 R14: ff1100011243a048 R15: 00000000108dca2c
[ 3206.839801] FS:  0000000000000000(0000) GS:ff11000265700000(0000) knlGS:0000000000000000
[ 3206.840307] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 3206.840662] CR2: 00007ffff75d7000 CR3: 00000001149ca003 CR4: 0000000000771ee0
[ 3206.841104] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 3206.841543] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 3206.841982] PKRU: 55555554
[ 3206.842156] Call Trace:
[ 3206.842314]  chksum_update+0xe/0x20
[ 3206.842537]  crc32c+0x31/0x70
[ 3206.842726]  ? release_sock+0x3b/0x90
[ 3206.842959]  ? tcp_recvmsg+0xab/0x1a0
[ 3206.843192]  ? inet_recvmsg+0x56/0x110
[ 3206.843429]  ? sock_recvmsg+0x18/0x70
[ 3206.843661]  ? __sanitizer_cov_trace_pc+0x1a/0x50
[ 3206.843955]  ? ceph_tcp_recvmsg+0x104/0x160
[ 3206.844223]  ? ceph_strings_empty+0x20/0x20
[ 3206.844485]  ? __sanitizer_cov_trace_pc+0x1a/0x50
[ 3206.844795]  ? __sanitizer_cov_trace_pc+0x1a/0x50
[ 3206.845090]  ceph_con_v1_try_write+0x135e/0x2250
[ 3206.845381]  ? ceph_con_v1_try_read+0x3f50/0x3f50
[ 3206.845678]  ? __accumulate_pelt_segments+0x24/0x40
[ 3206.845987]  ? ceph_tcp_sendpage+0x280/0x280
[ 3206.846255]  ? update_load_avg+0x5f/0x590
[ 3206.846510]  ? update_load_avg+0x5f/0x590
[ 3206.846763]  ? raw_spin_rq_lock_nested+0x5/0x10
[ 3206.847050]  ceph_con_workfn+0x502/0x12f0
[ 3206.847303]  process_one_work+0x1d3/0x380
[ 3206.847558]  worker_thread+0x45/0x3b0
[ 3206.847790]  ? process_one_work+0x380/0x380
[ 3206.848054]  kthread+0x11f/0x140
[ 3206.848266]  ? set_kthread_struct+0x40/0x40
[ 3206.848530]  ret_from_fork+0x1f/0x30
[ 3206.848769] Modules linked in:
[ 3206.849008] ---[ end trace 0f001dc4eb564ba5 ]---
[ 3206.849321] RIP: 0010:__crc32c_le_base+0x2b/0x100
[ 3206.849634] Code: f8 40 f6 c6 03 0f 85 bd 00 00 00 49 89 d1 55 4c 8d 46 fc 41 83 e1 07 48 c1 ea 03 53 74 7d 48 c1 e2 03 4c 89 c1 48 8d 74 16 fc <33> 41 04 8b 59 08 48 83 c1 08 0f b6 f8 41 89 c2 0f b6 ec c1 e8 10
[ 3206.850851] RSP: 0018:ff1100010ced7aa0 EFLAGS: 00010206
[ 3206.851199] RAX: 0000000000000000 RBX: ff1100010ced7ac8 RCX: e980008100001ec8
[ 3206.851672] RDX: 0000000000000078 RSI: e980008100001f40 RDI: 0000000000000000
[ 3206.852144] RBP: ff1100011243a180 R08: e980008100001ec8 R09: 0000000000000002
execute_one loop: 0, 0, 21
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 60, 0
execute_one time: 0, 71
[ 3206.852642] R10: 00000000000000ec R11: ffe21c0022487492 R12: ff11000104cfecc0
[ 3206.853379] R13: dffffc0000000000 R14: ff1100011243a048 R15: 00000000108dca2c
[ 3206.853831] FS:  0000000000000000(0000) GS:ff11000265700000(0000) knlGS:0000000000000000
[ 3206.854329] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 3206.854686] CR2: 00007ffff75d7000 CR3: 00000001149ca003 CR4: 0000000000771ee0
[ 3206.855141] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 3206.855558] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 3206.855979] PKRU: 55555554

VM DIAGNOSIS:
19:50:28  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=0000000000000001 RCX=0000000000000000 RDX=0000000000000001
RSI=00000000000000fb RDI=0000000000000001 RBP=ff11000102a87d90 RSP=ff11000102a87d00
R8 =0000000000000001 R9 =0000000000000000 R10=0000000000000040 R11=0000000000000001
R12=ffffffff8220c1b0 R13=0000000000000001 R14=0000000000019580 R15=00000000000000fb
RIP=ffffffff8105a54f RFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0000 0000000000000000 ffffffff 00c00000
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=000000010f2ec003 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000009e10000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000001 RBX=ffffffff82757320 RCX=ff1100026571f870 RDX=0000000000000001
RSI=0000000000000001 RDI=ffffffff82757320 RBP=ffffffff82757320 RSP=ff110001002b7e38
R8 =0000000000000000 R9 =0000000000000002 R10=000000000002d9c0 R11=0000000000000001
R12=0000000000000296 R13=ff1100010028da00 R14=0000000000000000 R15=ff1100010028da00
RIP=ffffffff810c0a5f RFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265700000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fffee440000 CR3=000000010df62005 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=000000000000ff000000000000000000 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffff0000000000000000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
