r_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32737, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 0, 14
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 86, 15, 0
before receive testcase: 0 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 80, 24, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 77, 29, 0
before receive testcase: 0 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:32 wg wait finish
2023/03/09 08:25:32 ------ all executors finish execution
2023/03/09 08:25:32 exec time: 115
2023/03/09 08:25:32 ----- PS len: 4
2023/03/09 08:25:32 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:32 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:32 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:32 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:32 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:32 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:32 ----- no new client coverage: false, true
2023/03/09 08:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:32 prog length: 2
2023/03/09 08:25:32 HasCrashFail:false HasNetFail:false
08:25:32 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8380
time breakdown 1: 77, 38, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 173
-----finish removing dir
mkdir time 9
executor 3 create dir /root/lustre-client/dfs-0-8381 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8381
receive_execute: 3, 183
receive_execute: 14, 181
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 185
receive_execute: 16, 182
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 5337, pid 32741, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 30
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7841, pid 32741, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 129, 0, 0
execute_one time: 0, 129
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 208, 130, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 195, 134, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:32 wg wait finish
2023/03/09 08:25:32 ------ all executors finish execution
2023/03/09 08:25:32 exec time: 322
2023/03/09 08:25:32 ----- PS len: 4
2023/03/09 08:25:32 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:32 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:32 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:32 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:32 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:32 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:32 ----- no new client coverage: false, true
2023/03/09 08:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:32 prog length: 2
2023/03/09 08:25:32 HasCrashFail:false HasNetFail:false
08:25:32 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8381
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 198, 140, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 186, 139, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 111
-----finish removing dir
mkdir time 49
executor 3 create dir /root/lustre-client/dfs-0-8382 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8382
receive_execute: 7, 161
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 162
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 163
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32745, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
receive_execute: 1, 161
----- executor 3 write_call_output, size 7841, pid 32745, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 3
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 8, 0
execute_one time: 0, 20
time breakdown 3: 172, 21, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:32 for select break: 1
time breakdown 0: 176, 12, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:32 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 163, 32, 0
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:32 wg wait finish
2023/03/09 08:25:32 ------ all executors finish execution
2023/03/09 08:25:32 exec time: 204
2023/03/09 08:25:32 ----- PS len: 4
2023/03/09 08:25:32 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:32 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:32 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:32 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:32 [SERVER] executor 2 has 0 replies
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:32 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:32 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 168, 43, 0
2023/03/09 08:25:32 ----- no new client coverage: false, true
2023/03/09 08:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:32 prog length: 2
2023/03/09 08:25:32 HasCrashFail:false HasNetFail:false
08:25:32 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8382
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 156
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8383 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8383
receive_execute: 0, 174
receive_execute: 21, 171
receive_execute: 19, 183
receive_execute: 17, 183
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 5334, pid 32749, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
execute_one time: 12, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32749, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 1, 11
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 192, 16, 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 201, 15, 0
before receive testcase: 0 1
before receive testcase: 0 1
time breakdown 3: 202, 13, 0
before receive testcase: 0 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:32 for select break: 1
2023/03/09 08:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:32 wg wait finish
2023/03/09 08:25:32 ------ all executors finish execution
2023/03/09 08:25:32 exec time: 204
2023/03/09 08:25:32 ----- PS len: 4
2023/03/09 08:25:32 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:32 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:32 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:32 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:32 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:32 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:32 ----- no new client coverage: false, true
2023/03/09 08:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:32 prog length: 2
2023/03/09 08:25:32 HasCrashFail:false HasNetFail:false
08:25:32 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8383
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 174, 29, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 103
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8384 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8384
receive_execute: 5, 105
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 7, 103
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 106
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 126
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32753, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7841, pid 32753, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 1, 11
time breakdown 3: 134, 14, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 110, 35, 0
time breakdown 1: 110, 34, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
time breakdown 2: 106, 36, 0
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:33 wg wait finish
2023/03/09 08:25:33 ------ all executors finish execution
2023/03/09 08:25:33 exec time: 144
2023/03/09 08:25:33 ----- PS len: 4
2023/03/09 08:25:33 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:33 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:33 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:33 [SERVER] executor 0 has 0 replies
before receive testcase: 0 1
2023/03/09 08:25:33 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:33 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:33 ----- no new client coverage: false, true
2023/03/09 08:25:33 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:33 prog length: 2
2023/03/09 08:25:33 HasCrashFail:false HasNetFail:false
08:25:33 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8384
remove dir time 305
-----finish removing dir
mkdir time 27
executor 3 create dir /root/lustre-client/dfs-0-8385 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8385
receive_execute: 3, 334
receive_execute: 6, 334
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 336
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 1, 334
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32757, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32757, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
time breakdown 3: 342, 6, 0
before receive testcase: 0 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 337, 18, 0
before receive testcase: 0 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 335, 19, 0
before receive testcase: 0 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:33 wg wait finish
2023/03/09 08:25:33 ------ all executors finish execution
2023/03/09 08:25:33 exec time: 366
2023/03/09 08:25:33 ----- PS len: 4
2023/03/09 08:25:33 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:33 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:33 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:33 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:33 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:33 ----- no new client coverage: false, true
2023/03/09 08:25:33 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:33 prog length: 2
2023/03/09 08:25:33 HasCrashFail:false HasNetFail:false
08:25:33 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 340, 32, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8385
remove dir time 33
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8386 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8386
receive_execute: 13, 50
receive_execute: 0, 49
receive_execute: 16, 45
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 38, 38
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32761, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7838, pid 32761, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 76, 15, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:33 for select break: 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:33 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 49, 24, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:33 wg wait finish
2023/03/09 08:25:33 ------ all executors finish execution
2023/03/09 08:25:33 exec time: 83
2023/03/09 08:25:33 ----- PS len: 4
2023/03/09 08:25:33 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:33 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:33 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:33 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:33 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 63, 33, 0
2023/03/09 08:25:33 ----- no new client coverage: false, true
2023/03/09 08:25:33 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:33 prog length: 2
2023/03/09 08:25:33 HasCrashFail:false HasNetFail:false
08:25:33 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8386
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 61, 19, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 196
-----finish removing dir
receive_execute: 10, 245
receive_execute: 0, 245
mkdir time 49
executor 3 create dir /root/lustre-client/dfs-0-8387 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8387
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 9, 259
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 17, 297
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32765, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 52
----- executor 3 write_call_output, size 7841, pid 32765, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 84, 0, 0
execute_one time: 0, 84
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 314, 85, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 256, 146, 0
before receive testcase: 0 0
time breakdown 2: 249, 147, 0
before receive testcase: 0 1
2023/03/09 08:25:33 for select break: 1
2023/03/09 08:25:33 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:33 wg wait finish
2023/03/09 08:25:33 ------ all executors finish execution
2023/03/09 08:25:33 exec time: 400
2023/03/09 08:25:33 ----- PS len: 4
2023/03/09 08:25:33 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:33 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:33 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:33 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:33 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:33 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:33 ----- no new client coverage: false, true
2023/03/09 08:25:33 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:33 prog length: 2
2023/03/09 08:25:33 HasCrashFail:false HasNetFail:false
08:25:33 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
time breakdown 1: 269, 133, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8387
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 84
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8388 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8388
receive_execute: 8, 92
receive_execute: 9, 91
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 92
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 18, 119
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32769, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7951, pid 32769, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7951, flag collect 0
----- executor 3 signal number : 1181
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 101, 0, 0
execute_one time: 2, 101
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 137, 107, 0
before receive testcase: 0 0
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 100, 135, 0
before receive testcase: 0 0
time breakdown 1: 102, 136, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:34 wg wait finish
2023/03/09 08:25:34 ------ all executors finish execution
2023/03/09 08:25:34 exec time: 283
2023/03/09 08:25:34 ----- PS len: 4
2023/03/09 08:25:34 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:34 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:34 fuzzer receive 1181 signal and 0 cover from executor 3
2023/03/09 08:25:34 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:34 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:34 ----- no new client coverage: false, true
2023/03/09 08:25:34 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:34 prog length: 2
2023/03/09 08:25:34 HasCrashFail:false HasNetFail:false
08:25:34 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 111, 173, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8388
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 49
-----finish removing dir
mkdir time 10
executor 3 create dir /root/lustre-client/dfs-0-8389 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8389
receive_execute: 54, 63
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
receive_execute: 4, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
receive_execute: 58, 72
receive_execute: 59, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32773, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7841, pid 32773, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 117, 25, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 130, 10, 0
before receive testcase: 0 1
time breakdown 2: 75, 25, 0
before receive testcase: 0 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 130, 16, 0
before receive testcase: 0 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:34 wg wait finish
2023/03/09 08:25:34 ------ all executors finish execution
2023/03/09 08:25:34 exec time: 116
2023/03/09 08:25:34 ----- PS len: 4
2023/03/09 08:25:34 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:34 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:34 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:34 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:34 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:34 ----- no new client coverage: false, true
2023/03/09 08:25:34 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:34 prog length: 2
2023/03/09 08:25:34 HasCrashFail:false HasNetFail:false
08:25:34 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8389
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 40
-----finish removing dir
receive_execute: 23, 60
mkdir time 11
executor 3 create dir /root/lustre-client/dfs-0-8390 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8390
receive_execute: 28, 59
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 34, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 20, 63
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5337, pid 32777, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 7841, pid 32777, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 28, 1, 0
execute_one time: 0, 29
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 83, 35, 0
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:34 wg wait finish
2023/03/09 08:25:34 ------ all executors finish execution
2023/03/09 08:25:34 exec time: 98
2023/03/09 08:25:34 ----- PS len: 4
2023/03/09 08:25:34 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:34 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:34 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:34 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:34 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:34 ----- no new client coverage: false, true
2023/03/09 08:25:34 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:34 prog length: 2
2023/03/09 08:25:34 HasCrashFail:false HasNetFail:false
08:25:34 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
time breakdown 3: 97, 30, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8390
time breakdown 0: 88, 38, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 83, 33, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 149
-----finish removing dir
receive_execute: 1, 233
mkdir time 84
executor 3 create dir /root/lustre-client/dfs-0-8391 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8391
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 0, 212
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 233
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 299
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32781, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 46
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7841, pid 32781, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 127, 0, 0
execute_one time: 1, 127
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 244, 186, 0
before receive testcase: 0 1
time breakdown 3: 305, 129, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:34 wg wait finish
2023/03/09 08:25:34 ------ all executors finish execution
2023/03/09 08:25:34 exec time: 436
2023/03/09 08:25:34 ----- PS len: 4
2023/03/09 08:25:34 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:34 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:34 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:34 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:34 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:34 ----- no new client coverage: false, true
2023/03/09 08:25:34 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:34 prog length: 2
2023/03/09 08:25:34 HasCrashFail:false HasNetFail:false
08:25:34 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
time breakdown 1: 212, 194, 0
before receive testcase: 0 1
time breakdown 2: 234, 200, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8391
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 36
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8392 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8392
receive_execute: 3, 47
receive_execute: 7, 44
receive_execute: 11, 42
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
receive_execute: 16, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32785, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7846, pid 32785, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7846, flag collect 0
----- executor 3 signal number : 1184
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 40, 3, 0
execute_one time: 0, 43
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 57, 44, 0
before receive testcase: 0 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 51, 49, 0
before receive testcase: 0 1
time breakdown 2: 51, 51, 0
before receive testcase: 0 1
time breakdown 0: 53, 47, 0
before receive testcase: 0 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:34 for select break: 1
2023/03/09 08:25:34 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:34 wg wait finish
2023/03/09 08:25:34 ------ all executors finish execution
2023/03/09 08:25:34 exec time: 111
2023/03/09 08:25:34 ----- PS len: 4
2023/03/09 08:25:34 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:34 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:34 fuzzer receive 1184 signal and 0 cover from executor 3
2023/03/09 08:25:34 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:34 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:34 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:34 ----- no new client coverage: false, true
2023/03/09 08:25:34 NetFailure, Node crash: false false
2023/03/09 08:25:34 mutate testcase with failures
2023/03/09 08:25:34 ----- mutateArg()
2023/03/09 08:25:34 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:34 prog length: 2
2023/03/09 08:25:34 HasCrashFail:false HasNetFail:false
08:25:34 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x18)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8392
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 204
-----finish removing dir
mkdir time 38
executor 3 create dir /root/lustre-client/dfs-0-8393 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8393
receive_execute: 26, 242
executor 0 before execute_one
receive_execute: 20, 255
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 21, 246
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 27, 267
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32789, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32789, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 267, 28, 0
before receive testcase: 0 0
time breakdown 1: 275, 24, 0
before receive testcase: 0 1
time breakdown 3: 294, 7, 0
before receive testcase: 0 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 268, 38, 0
before receive testcase: 0 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:35 wg wait finish
2023/03/09 08:25:35 ------ all executors finish execution
2023/03/09 08:25:35 exec time: 301
2023/03/09 08:25:35 ----- PS len: 4
2023/03/09 08:25:35 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:35 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:35 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:35 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:35 ----- no new client coverage: false, true
2023/03/09 08:25:35 NetFailure, Node crash: false false
2023/03/09 08:25:35 mutate testcase with failures
2023/03/09 08:25:35 ----- mutateArg()
2023/03/09 08:25:35 ----- insertCall()
2023/03/09 08:25:35 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/09 08:25:35 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:35 prog length: 3
2023/03/09 08:25:35 HasCrashFail:false HasNetFail:false
08:25:35 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$incfs_metadata(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000180)="f214e9cfb602f39350a3aa780cbd7bdcaf6b06875603aec83295fdff2f5404c447582954f60af5af94f99143d73099003c95d362da71b6f5fbb77c5a3d1fd26702011016ec965263e57fbbc934bc6a11055289728f28f339ccb03770d89d825c203fce338ad0f4d23e088c2e653082192b220de0606442e67cf2c7548a320d5e653b953d0b1d851a558b7bf7adf4df25731f8256c15cb4c6f27043745ec7a17edb3e570bb0202f38c6c052bd7e2174e9e73a256a97e0029438648a1106a1e4deecd25719515973f964c33af70cd31ce70b75cfc642d74849f1d5b3f0be5ab91804", 0xe1, 0x40132aadb3608903)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000140)=@known='trusted.overlay.metacopy\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 840
remove dir: /root/lustre-client/dfs-0-8393
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 185
-----finish removing dir
mkdir time 21
executor 3 create dir /root/lustre-client/dfs-0-8394 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8394
receive_execute: 16, 204
receive_execute: 30, 196
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 18, 215
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 19, 237
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32793, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5012, pid 32793, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5012, flag collect 0
----- executor 3 signal number : 935
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 2855, pid 32793, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2855, flag collect 0
----- executor 3 signal number : 181
----- completed 3
execute_one loop: 0, 0, 25
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 41, 15, 0
execute_one time: 0, 56
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 226, 88, 0
before receive testcase: 0 0
time breakdown 3: 256, 57, 0
before receive testcase: 0 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 220, 88, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:35 wg wait finish
2023/03/09 08:25:35 ------ all executors finish execution
2023/03/09 08:25:35 exec time: 309
2023/03/09 08:25:35 ----- PS len: 4
2023/03/09 08:25:35 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:35 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 935 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 181 signal and 0 cover from executor 3
2023/03/09 08:25:35 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:35 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 233, 93, 0
2023/03/09 08:25:35 ----- no new client coverage: false, true
2023/03/09 08:25:35 NetFailure, Node crash: false false
2023/03/09 08:25:35 mutate testcase with failures
2023/03/09 08:25:35 ----- mutateArg()
2023/03/09 08:25:35 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:35 prog length: 2
2023/03/09 08:25:35 HasCrashFail:false HasNetFail:false
08:25:35 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='secur8My./@$}\x00'])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/lustre-client/dfs-0-8394
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8395 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8395
receive_execute: 3, 42
receive_execute: 19, 52
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 26, 50
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 14, 58
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32798, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 5044, pid 32798, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5044, flag collect 0
----- executor 3 signal number : 935
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 34, 1, 0
execute_one time: 1, 35
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 45, 62, 0
time breakdown 0: 71, 50, 0
before receive testcase: 0 1
time breakdown 3: 79, 37, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
time breakdown 2: 72, 54, 0
before receive testcase: 0 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:35 wg wait finish
2023/03/09 08:25:35 ------ all executors finish execution
2023/03/09 08:25:35 exec time: 117
2023/03/09 08:25:35 ----- PS len: 4
2023/03/09 08:25:35 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:35 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:35 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 935 signal and 0 cover from executor 3
2023/03/09 08:25:35 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:35 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:35 ----- no new client coverage: false, true
2023/03/09 08:25:35 NetFailure, Node crash: false false
2023/03/09 08:25:35 mutate testcase with failures
2023/03/09 08:25:35 ----- mutateArg()
2023/03/09 08:25:35 ----- insertCall()
2023/03/09 08:25:35 ----- generateCall 120 chdir chdir
2023/03/09 08:25:35 ----- insertCall()
2023/03/09 08:25:35 ----- generateCall 122 chown chown
2023/03/09 08:25:35 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:35 prog length: 5
2023/03/09 08:25:35 HasCrashFail:false HasNetFail:false
08:25:35 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
chdir(&(0x7f00000000c0)='./file0/../file0\x00')
fstat(0xffffffffffffffff, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
chown(&(0x7f0000000100)='./file0/../file0\x00', r0, 0xffffffffffffffff)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000040)=@known='security.apparmor\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 712
remove dir: /root/lustre-client/dfs-0-8395
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 68
-----finish removing dir
receive_execute: 14, 72
mkdir time 8
executor 3 create dir /root/lustre-client/dfs-0-8396 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8396
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 11, 1
receive_execute: 14, 81
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 18, 1
receive_execute: 10, 108
receive_execute: 16, 113
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32802, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5131, pid 32802, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5131, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32802, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4060, pid 32802, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4060, flag collect 0
----- executor 3 signal number : 216
----- completed 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 4060, pid 32802, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4060, flag collect 0
----- executor 3 signal number : 55
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 40
executor 3, execute_one inner time: 20, 44, 0
execute_one time: 0, 64
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 95, 93, 0
before receive testcase: 0 0
time breakdown 3: 129, 65, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 118, 74, 0
before receive testcase: 0 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:35 for select break: 1
2023/03/09 08:25:35 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:35 wg wait finish
2023/03/09 08:25:35 ------ all executors finish execution
2023/03/09 08:25:35 exec time: 199
2023/03/09 08:25:35 ----- PS len: 4
2023/03/09 08:25:35 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:35 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 216 signal and 0 cover from executor 3
2023/03/09 08:25:35 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/09 08:25:35 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:35 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:35 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:35 ----- no new client coverage: false, true
2023/03/09 08:25:35 NetFailure, Node crash: false false
2023/03/09 08:25:35 mutate testcase with failures
2023/03/09 08:25:35 ----- insertCall()
2023/03/09 08:25:35 ----- generateCall 2459 open$dir open$dir
2023/03/09 08:25:35 ----- insertCall()
2023/03/09 08:25:35 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/09 08:25:35 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:35 prog length: 4
2023/03/09 08:25:35 HasCrashFail:false HasNetFail:false
08:25:35 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
open$dir(&(0x7f0000000040)='./file0/../file0\x00', 0x42, 0x3)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
lsetxattr$trusted_overlay_upper(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180)={0x0, 0xfb, 0xa6, 0x1, 0x6, "acdb01c923cb1a93fa5a77f3a9b8fd5a", "3f08c866022454478884b05c4d205c8eb494f8de37a066f5f1fc78d9b0e8b90187c185a0c16583a2680feeb780776a45a23af4aa12cce4df5756f21f40ed980b3f0f0ebf134833ed7839829ebe7e137e745746b052767ce0f9179d8c4f96dd2021e97fa7106ac8298109d117e185530f39fae370252d032c675fbd1b258dd60b57717f22970b89a8fadc370d9a739865fd"}, 0xa6, 0x1)
---

end of program
----- executor 2 receive testcase
time breakdown 0: 87, 108, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/lustre-client/dfs-0-8396
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 98
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8397 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8397
receive_execute: 20, 127
receive_execute: 13, 127
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 35, 118
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32810, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5101, pid 32810, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5101, flag collect 0
----- executor 3 signal number : 949
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 32810, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 228
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4147, pid 32810, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4147, flag collect 0
----- executor 3 signal number : 234
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
receive_execute: 15, 132
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 17, 0
execute_one time: 1, 29
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 153, 32, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 147, 32, 0
before receive testcase: 0 0
time breakdown 2: 140, 39, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:36 wg wait finish
2023/03/09 08:25:36 ------ all executors finish execution
2023/03/09 08:25:36 exec time: 177
2023/03/09 08:25:36 ----- PS len: 4
2023/03/09 08:25:36 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:36 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 949 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 228 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 234 signal and 0 cover from executor 3
2023/03/09 08:25:36 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:36 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:36 ----- no new client coverage: false, true
2023/03/09 08:25:36 NetFailure, Node crash: false false
2023/03/09 08:25:36 mutate testcase with failures
2023/03/09 08:25:36 ----- insertCall()
2023/03/09 08:25:36 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
time breakdown 1: 147, 50, 0
before receive testcase: 0 0
2023/03/09 08:25:36 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:36 prog length: 3
2023/03/09 08:25:36 HasCrashFail:false HasNetFail:false
08:25:36 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
lsetxattr$trusted_overlay_upper(&(0x7f0000000040)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000280)=ANY=[@ANYBLOB="00fbdd003f153900a5618d9e952c41a7fb74663e7ff22799525e9c46eeb6c5edeadbd810c9df7d4e52fcbfee0514616e49d3ae2f95fab99f96f522c84504b2de21909f993a61addd94323b4ff26299f90ca66c45a053651ad0902ed9ce1a6ef255360e9a45e7386a2755579f7046aeb005db4a7ec9b54949a5b97f638ba1cdeab46938f89922231d85c3719c99bfab53b672d2d19f242c2bf706ed38b6576126698ad3949a41cc71ad6e83b5449f23d9d49ff96b053a8f77ea9c624fd8fa4115884e64954746498f4607808cb9f146194c1461f77905e40e143e52d2f65c9ff5983e5b37e33113d0d4fd11dc44292ffb0d0525f737710eef48a24411d4a436ea64e2027c776218f0ad4940a73fd84898a4c3c0dbcbb352ee22a966235e9511b2ad0934a6ef9301fffb21413186533328fac8b0c70502"], 0xdd, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/lustre-client/dfs-0-8397
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 29
executor 3 create dir /root/lustre-client/dfs-0-8398 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8398
receive_execute: 1, 71
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 15, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 14, 85
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32815, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 16, 72
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7841, pid 32815, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 4151, pid 32815, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4151, flag collect 0
----- executor 3 signal number : 234
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 0, 12
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 99, 13, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 88, 25, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:36 wg wait finish
2023/03/09 08:25:36 ------ all executors finish execution
2023/03/09 08:25:36 exec time: 106
2023/03/09 08:25:36 ----- PS len: 4
2023/03/09 08:25:36 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:36 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 234 signal and 0 cover from executor 3
2023/03/09 08:25:36 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:36 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:36 ----- no new client coverage: false, true
2023/03/09 08:25:36 NetFailure, Node crash: false false
2023/03/09 08:25:36 mutate testcase with failures
2023/03/09 08:25:36 ----- insertCall()
2023/03/09 08:25:36 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/09 08:25:36 ----- mutateArg()
2023/03/09 08:25:36 ----- insertCall()
2023/03/09 08:25:36 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/09 08:25:36 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:36 prog length: 4
2023/03/09 08:25:36 HasCrashFail:false HasNetFail:false
08:25:36 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr(&(0x7f0000000100)='./file0\x00', &(0x7f00000001c0)=@random={'btrfs.', 'security.capability\x00'}, &(0x7f0000000200)='security.capability\x00', 0x14, 0x0)
removexattr(&(0x7f0000000180)='./file0\x00', &(0x7f0000000080)=ANY=[@ANYRESHEX=0x0])
setxattr$security_capability(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=@v1={0x1000000, [{0x9, 0x8}]}, 0xc, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/lustre-client/dfs-0-8398
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 86, 32, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 80, 24, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 138
-----finish removing dir
receive_execute: 7, 171
mkdir time 34
executor 3 create dir /root/lustre-client/dfs-0-8399 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8399
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 0, 181
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 2, 180
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 206
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32820, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5054, pid 32820, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5054, flag collect 0
----- executor 3 signal number : 938
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 32820, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 22
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 106, pid 32820, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 0, 7
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 178, 46, 0
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
time breakdown 3: 214, 8, 0
before receive testcase: 0 1
time breakdown 2: 181, 41, 0
before receive testcase: 0 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 183, 65, 0
before receive testcase: 0 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:36 wg wait finish
2023/03/09 08:25:36 ------ all executors finish execution
2023/03/09 08:25:36 exec time: 250
2023/03/09 08:25:36 ----- PS len: 4
2023/03/09 08:25:36 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:36 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 938 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:36 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:36 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:36 ----- no new client coverage: false, true
2023/03/09 08:25:36 NetFailure, Node crash: false false
2023/03/09 08:25:36 mutate testcase with failures
2023/03/09 08:25:36 ----- mutateArg()
2023/03/09 08:25:36 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:36 prog length: 2
2023/03/09 08:25:36 HasCrashFail:false HasNetFail:false
08:25:36 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0/file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000180)=ANY=[@ANYBLOB="736763757269ed20b87bdf062a2897200e9f1a5b8974792e2f40247d006cdb98db2989e2fa16100fe93508accc32ae166f443a69b15fee4e55a18bd2c8ee6c9445f1378ab6c5054aa4288b693b636f9482b2ec0f94114bb4e6a5eab5d817dd48b05d2394effd6512"])
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8399
remove dir time 165
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8400 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8400
receive_execute: 31, 177
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 29, 182
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 199
receive_execute: 46, 192
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 32825, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 32825, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
time breakdown 3: 238, 9, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 208, 35, 0
before receive testcase: 0 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 204, 17, 0
before receive testcase: 0 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 212, 34, 0
before receive testcase: 0 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:36 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:36 wg wait finish
2023/03/09 08:25:36 ------ all executors finish execution
2023/03/09 08:25:36 exec time: 247
2023/03/09 08:25:36 ----- PS len: 4
2023/03/09 08:25:36 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:36 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:36 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:36 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:36 ----- no new client coverage: false, true
2023/03/09 08:25:36 NetFailure, Node crash: false false
2023/03/09 08:25:36 mutate testcase with failures
2023/03/09 08:25:36 ----- mutateArg()
2023/03/09 08:25:36 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:36 prog length: 2
2023/03/09 08:25:36 HasCrashFail:false HasNetFail:false
08:25:36 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000040)=ANY=[@ANYBLOB="747275737465642e747201807465642e6f7665726c61792e6f726967696e00"])
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/lustre-client/dfs-0-8400
remove dir time 31
-----finish removing dir
receive_execute: 35, 37
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8401 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8401
receive_execute: 31, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 34, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 43, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 5334, pid 32827, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
----- executor 3 write_call_output, size 7741, pid 32827, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7741, flag collect 0
----- executor 3 signal number : 1095
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 83, 10, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:36 for select break: 1
2023/03/09 08:25:36 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:36 wg wait finish
2023/03/09 08:25:36 ------ all executors finish execution
2023/03/09 08:25:36 exec time: 68
2023/03/09 08:25:36 ----- PS len: 4
2023/03/09 08:25:36 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:36 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:36 fuzzer receive 1095 signal and 0 cover from executor 3
2023/03/09 08:25:36 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:36 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:36 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:36 ----- no new client coverage: false, true
2023/03/09 08:25:36 NetFailure, Node crash: false false
2023/03/09 08:25:36 mutate testcase with failures
2023/03/09 08:25:36 ----- insertCall()
2023/03/09 08:25:36 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/09 08:25:36 ----- insertCall()
2023/03/09 08:25:36 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/09 08:25:36 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:36 prog length: 4
2023/03/09 08:25:36 HasCrashFail:false HasNetFail:false
08:25:36 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000040)=ANY=[@ANYBLOB="736563757269747d2e8ab163ecf983762c31c888afed861a80b2592be7afa7"])
lsetxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file0/../file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x1)
setxattr$smack_xattr_label(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)='security.SMACK64IPIN\x00', &(0x7f0000000200), 0x1, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 912
remove dir: /root/lustre-client/dfs-0-8401
time breakdown 1: 73, 22, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 72, 16, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 81, 19, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 91
-----finish removing dir
receive_execute: 1, 106
mkdir time 15
executor 3 create dir /root/lustre-client/dfs-0-8402 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8402
receive_execute: 3, 106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 8, 106
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0, execute_one inner time: 1, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 9, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 11, 141
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32831, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 5127, pid 32831, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5127, flag collect 0
----- executor 3 signal number : 941
----- completed 2
----- executor 3 write_call_output, size 2926, pid 32831, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2926, flag collect 0
----- executor 3 signal number : 147
----- completed 3
execute_one loop: 0, 0, 53
----- executor 3 write_call_output, size 2793, pid 32831, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2793, flag collect 0
----- executor 3 signal number : 42
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 164, 7, 0
execute_one time: 1, 171
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 107, 211, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 152, 174, 0
before receive testcase: 0 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 123, 209, 0
before receive testcase: 0 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:37 wg wait finish
2023/03/09 08:25:37 ------ all executors finish execution
2023/03/09 08:25:37 exec time: 352
2023/03/09 08:25:37 ----- PS len: 4
2023/03/09 08:25:37 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:37 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 941 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/09 08:25:37 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:37 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:37 ----- no new client coverage: false, true
2023/03/09 08:25:37 NetFailure, Node crash: false false
2023/03/09 08:25:37 mutate testcase with failures
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 3967 truncate truncate
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 2810 renameat renameat
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 2347 llistxattr llistxattr
2023/03/09 08:25:37 ----- splice()
2023/03/09 08:25:37 ----- mutateArg()
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 3765 symlinkat symlinkat
2023/03/09 08:25:37 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:37 prog length: 9
2023/03/09 08:25:37 HasCrashFail:false HasNetFail:false
08:25:37 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
llistxattr(&(0x7f0000000040)='.\x00', &(0x7f0000000080)=""/82, 0x52)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x1, 0x10e)
renameat(0xffffffffffffff9c, &(0x7f00000000c0)='.\x00', r0, &(0x7f0000000180)='./file0/../file0\x00')
truncate(&(0x7f0000000040)='./file0/../file0\x00', 0x9)
llistxattr(&(0x7f00000001c0)='./file0/../file0\x00', &(0x7f0000000200)=""/4096, 0x1000)
removexattr(&(0x7f0000001200)='./file0/../file0\x00', &(0x7f0000001240)=ANY=[@ANYRES16=r0])
r1 = dup2(r0, r0)
symlinkat(&(0x7f0000000100)='./file0\x00', r1, &(0x7f0000001280)='./file0/../file0\x00')
---

end of program
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 109, 245, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
remove dir: /root/lustre-client/dfs-0-8402
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 131
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8403 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8403
receive_execute: 1, 142
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 36, 142
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 40, 145
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 30, 140
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5337, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 9575, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 9575, flag collect 0
----- executor 3 signal number : 969
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4714, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4714, flag collect 0
----- executor 3 signal number : 393
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 40, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 40, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4989, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4989, flag collect 0
----- executor 3 signal number : 337
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9683, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 9683, flag collect 0
----- executor 3 signal number : 119
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 241, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 241, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32837, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 2, 0
execute_one time: 1, 16
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 185, 20, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 178, 26, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:37 wg wait finish
2023/03/09 08:25:37 ------ all executors finish execution
2023/03/09 08:25:37 exec time: 174
2023/03/09 08:25:37 ----- PS len: 4
2023/03/09 08:25:37 [CLIENT] executor 3 has 9 replies
2023/03/09 08:25:37 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 969 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 393 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 337 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:37 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:37 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:37 ----- no new client coverage: false, true
2023/03/09 08:25:37 NetFailure, Node crash: false false
2023/03/09 08:25:37 mutate testcase with failures
2023/03/09 08:25:37 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:37 prog length: 2
2023/03/09 08:25:37 HasCrashFail:false HasNetFail:false
08:25:37 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="73656375726974792e2f40247d00254ca269ad271db9ca681fd1892fce54a7f1ea6a16b148bafa63f548eea43d05e3a191dc1d095beffb4540bdfb61b1b61f889d02f325951e3cba94b58436acd89c544cd280c220c0bcb066ed0937ee8b7866587b3b486037c28a0c158e8b0cab10fc71788d7fd5265874d2acaf79ac9f8dc36df4fc27d4cb8a67714808c5f9516846505a70b8bf3ab6"])
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/lustre-client/dfs-0-8403
executor 1 server cover_cnt 0 output_pos_value 1
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 178, 22, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 143, 31, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 28
-----finish removing dir
receive_execute: 5, 32
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8404 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8404
receive_execute: 0, 31
receive_execute: 2, 31
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32844, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32844, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 60, 1, 0
execute_one time: 0, 61
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:37 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:37 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 47, 62, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 2: 33, 74, 0
before receive testcase: 0 1
time breakdown 0: 37, 78, 0
before receive testcase: 0 1
time breakdown 1: 31, 76, 0
before receive testcase: 0 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:37 wg wait finish
2023/03/09 08:25:37 ------ all executors finish execution
2023/03/09 08:25:37 exec time: 131
2023/03/09 08:25:37 ----- PS len: 4
2023/03/09 08:25:37 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:37 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:37 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:37 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:37 ----- no new client coverage: false, true
2023/03/09 08:25:37 NetFailure, Node crash: false false
2023/03/09 08:25:37 mutate testcase with failures
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/09 08:25:37 ----- mutateArg()
2023/03/09 08:25:37 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:37 prog length: 3
2023/03/09 08:25:37 HasCrashFail:false HasNetFail:false
08:25:37 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr(&(0x7f0000000140)='./file0/../file0\x00', &(0x7f00000000c0)=@random={'system.', '#]-\x00'}, &(0x7f0000000100)='$\\\x00', 0x3, 0x1)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000180)=ANY=[@ANYBLOB="73656375726974792e2f40247d0046be182bcd883df9eb8185c28100976370aa4759d43d72607cbcacf3819322f4a6554bdce3acb7c78ad78bc8230096f7aca8b0e17363a3937c7bd9bbb9314079fc5a23d724e8"])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 712
remove dir: /root/lustre-client/dfs-0-8404
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 96
-----finish removing dir
receive_execute: 32, 100
mkdir time 6
executor 3 create dir /root/lustre-client/dfs-0-8405 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8405
receive_execute: 32, 104
receive_execute: 31, 100
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 121
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 17, 0
----- executor 3 write_call_output, size 5334, pid 32848, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 5102, pid 32848, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5102, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 32848, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 228
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 31
executor 3, execute_one inner time: 21, 32, 0
execute_one time: 1, 53
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 149, 56, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 2: 136, 76, 0
before receive testcase: 0 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:37 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:37 wg wait finish
2023/03/09 08:25:37 ------ all executors finish execution
2023/03/09 08:25:37 exec time: 194
2023/03/09 08:25:37 ----- PS len: 4
2023/03/09 08:25:37 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:37 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 228 signal and 0 cover from executor 3
2023/03/09 08:25:37 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:37 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:37 ----- no new client coverage: false, true
2023/03/09 08:25:37 NetFailure, Node crash: false false
2023/03/09 08:25:37 mutate testcase with failures
2023/03/09 08:25:37 ----- mutateArg()
2023/03/09 08:25:37 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:37 prog length: 2
2023/03/09 08:25:37 HasCrashFail:false HasNetFail:false
08:25:37 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000000c0)=ANY=[@ANYBLOB="3e9d2448d75e72da3c5564a30599879dbf500a1206c072e10d41168e7636f8bfcb82", @ANYBLOB="a4d4998ef3becad945b08a28b3687eee0f0b8b3ca72f9244d8ee72510b5c473b4c6bd31af31ce02064e433097b2008b7890f1662bcc8c0efe7beded38239226e6d4c88169ecb760d0f3966d848f9b3487422071bc242f50fb095a2c2fc775d331130a97a061d1609a89948fdb2f01851b9284e036e", @ANYBLOB="", @ANYRES64, @ANYRES32])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4704
remove dir: /root/lustre-client/dfs-0-8405
time breakdown 0: 131, 82, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 132, 81, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 116
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8406 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8406
receive_execute: 9, 119
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 117
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 18, 123
receive_execute: 3, 123
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32853, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5142, pid 32853, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 1, 0
execute_one time: 0, 18
time breakdown 3: 141, 19, 0
before receive testcase: 0 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 126, 33, 0
before receive testcase: 0 0
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:37 wg wait finish
2023/03/09 08:25:37 ------ all executors finish execution
2023/03/09 08:25:37 exec time: 164
2023/03/09 08:25:37 ----- PS len: 4
2023/03/09 08:25:37 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:37 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:37 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:37 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:37 ----- no new client coverage: false, true
2023/03/09 08:25:37 NetFailure, Node crash: false false
2023/03/09 08:25:37 mutate testcase with failures
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/09 08:25:37 ----- insertCall()
2023/03/09 08:25:37 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/09 08:25:37 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:37 prog length: 4
2023/03/09 08:25:37 HasCrashFail:false HasNetFail:false
08:25:37 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x1)
setxattr$security_evm(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=@v2={0x3, 0x3, 0x9, 0x1, 0xb8, "22a9151afebab440a212484bb1a1ae699953d60dae9d11f55b89a955ff25466c4bd27670e608d1d63e32992c002f9bc4ff1901437a4d84b2886bbaa984f305744fffaa480fb847d00357968c3fdb5f3e14d24081377ce67dc7015c6c81dc71f23fa7b402bd28ef8cb3ac63f7b4f87f8ebe9fbffdd433b26f91b7cb415e35efff2fbd1306fe3db3bace44d72eb0c90c051cb01e7241c40d4100ad62e1e83854be33649aec84bb4fd4fc0ae1d58328791c6291f1adb91d164b"}, 0xc1, 0x1)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 129, 37, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 125, 35, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1304
remove dir: /root/lustre-client/dfs-0-8406
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 85
-----finish removing dir
receive_execute: 9, 92
receive_execute: 7, 93
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8407 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8407
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 95
receive_execute: 25, 92
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32857, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
----- executor 3 write_call_output, size 7718, pid 32857, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7718, flag collect 0
----- executor 3 signal number : 1076
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 5108, pid 32857, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5108, flag collect 0
----- executor 3 signal number : 112
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 0 write_server_output
----- executor 3 write_call_output, size 2940, pid 32857, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 160
----- completed 4
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 43, 1, 0
execute_one time: 2, 44
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 101, 53, 0
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 100, 49, 0
before receive testcase: 0 1
before receive testcase: 0 1
time breakdown 3: 117, 47, 0
before receive testcase: 0 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:37 for select break: 1
2023/03/09 08:25:37 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:37 wg wait finish
time breakdown 0: 103, 48, 0
before receive testcase: 0 1
2023/03/09 08:25:37 ------ all executors finish execution
2023/03/09 08:25:37 exec time: 167
2023/03/09 08:25:37 ----- PS len: 4
2023/03/09 08:25:37 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:37 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 1076 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 112 signal and 0 cover from executor 3
2023/03/09 08:25:37 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/09 08:25:37 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:37 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:37 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:37 ----- no new client coverage: false, true
2023/03/09 08:25:37 NetFailure, Node crash: false false
2023/03/09 08:25:37 mutate testcase with failures
2023/03/09 08:25:37 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:37 prog length: 2
2023/03/09 08:25:37 HasCrashFail:false HasNetFail:false
08:25:37 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='se\b\x00\x00\x00\x00\x00\x00\x00H$}\x00'])
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8407
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 167
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8408 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8408
receive_execute: 18, 172
receive_execute: 32, 163
receive_execute: 25, 172
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 25, 173
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32862, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5143, pid 32862, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5143, flag collect 0
----- executor 3 signal number : 950
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 0, 7
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 write_server_output
time breakdown 3: 198, 12, 0
before receive testcase: 0 0
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 209, 3, 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 190, 18, 0
before receive testcase: 0 0
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:38 wg wait finish
2023/03/09 08:25:38 ------ all executors finish execution
2023/03/09 08:25:38 exec time: 197
2023/03/09 08:25:38 ----- PS len: 4
2023/03/09 08:25:38 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:38 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:38 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:38 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:38 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:38 fuzzer receive 950 signal and 0 cover from executor 3
2023/03/09 08:25:38 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:38 ----- no new client coverage: false, true
2023/03/09 08:25:38 NetFailure, Node crash: false false
2023/03/09 08:25:38 mutate testcase with failures
2023/03/09 08:25:38 ----- mutateArg()
2023/03/09 08:25:38 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:38 prog length: 2
2023/03/09 08:25:38 HasCrashFail:false HasNetFail:false
08:25:38 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xe8)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
time breakdown 2: 197, 25, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8408
remove dir time 122
-----finish removing dir
receive_execute: 3, 137
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8409 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8409
receive_execute: 5, 139
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 146
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 16, 144
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
----- executor 3 write_call_output, size 5337, pid 32866, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 40
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7841, pid 32866, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 126, 0, 0
execute_one time: 0, 126
2023/03/09 08:25:38 for select break: 1
executor 2 write_server_output
2023/03/09 08:25:38 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 160, 127, 0
before receive testcase: 0 1
time breakdown 2: 141, 136, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 144, 138, 0
before receive testcase: 0 0
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:38 wg wait finish
2023/03/09 08:25:38 ------ all executors finish execution
2023/03/09 08:25:38 exec time: 287
2023/03/09 08:25:38 ----- PS len: 4
2023/03/09 08:25:38 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:38 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:38 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:38 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:38 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:38 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:38 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:38 ----- no new client coverage: false, true
2023/03/09 08:25:38 NetFailure, Node crash: false false
2023/03/09 08:25:38 mutate testcase with failures
2023/03/09 08:25:38 ----- insertCall()
2023/03/09 08:25:38 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/09 08:25:38 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:38 prog length: 3
2023/03/09 08:25:38 HasCrashFail:false HasNetFail:false
08:25:38 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
lsetxattr$trusted_overlay_nlink(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140)={'L-', 0x200}, 0x16, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
remove dir: /root/lustre-client/dfs-0-8409
executor 2: prog_data_offset 1328, prog_size 8
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 156, 141, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 229
-----finish removing dir
receive_execute: 11, 231
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8410 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8410
receive_execute: 0, 231
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 238
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 12, 245
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32870, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 2844, pid 32870, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2844, flag collect 0
----- executor 3 signal number : 157
----- completed 2
----- executor 3 write_call_output, size 7822, pid 32870, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7822, flag collect 0
----- executor 3 signal number : 1076
----- completed 3
execute_one loop: 0, 0, 47
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 50
executor 3, execute_one inner time: 112, 51, 0
execute_one time: 0, 163
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 257, 164, 0
before receive testcase: 0 1
time breakdown 0: 232, 180, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 249, 181, 0
before receive testcase: 0 1
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:38 for select break: 1
2023/03/09 08:25:38 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:38 wg wait finish
2023/03/09 08:25:38 ------ all executors finish execution
2023/03/09 08:25:38 exec time: 424
2023/03/09 08:25:38 ----- PS len: 4
2023/03/09 08:25:38 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:38 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:38 fuzzer receive 157 signal and 0 cover from executor 3
2023/03/09 08:25:38 fuzzer receive 1076 signal and 0 cover from executor 3
2023/03/09 08:25:38 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:38 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:38 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:38 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:38 ----- no new client coverage: false, true
2023/03/09 08:25:38 NetFailure, Node crash: false false
2023/03/09 08:25:38 mutate testcase with failures
2023/03/09 08:25:38 ----- mutateArg()
2023/03/09 08:25:38 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:38 prog length: 2
2023/03/09 08:25:38 HasCrashFail:false HasNetFail:false
08:25:38 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8410
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 248, 181, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 145
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8411 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8411
receive_execute: 5, 149
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 149
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 151
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 15, 152
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5334, pid 32875, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32875, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
executor 0 write_server_output
executor 2 write_server_output
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 167, 11, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 162, 25, 0
before receive testcase: 0 0
time breakdown 2: 154, 22, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 185
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:39 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:39 ----- no new client coverage: false, true
2023/03/09 08:25:39 NetFailure, Node crash: false false
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- mutateArg()
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 3
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='.\x00', 0x40000, 0x28)
mkdirat(r0, &(0x7f0000000040)='./file0/../file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/lustre-client/dfs-0-8411
time breakdown 1: 154, 35, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 95
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8412 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8412
receive_execute: 6, 106
receive_execute: 1, 106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 25, 109
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32879, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32879, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
receive_execute: 11, 105
executor 2 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 4299, pid 32879, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 134, 6, 0
before receive testcase: 0 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 112, 13, 0
before receive testcase: 0 1
time breakdown 2: 125, 5, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 136
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 2536 signal and 0 cover from executor 3
time breakdown 1: 107, 29, 0
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:39 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/09 08:25:39 NetFailure, Node crash: false false
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- mutateArg()
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 3
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x8)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000000)=ANY=[@ANYBLOB="736563757069747910c76e756f212e2f40247d00"])
fsetxattr$trusted_overlay_upper(0xffffffffffffffff, &(0x7f00000000c0), &(0x7f0000000100)={0x0, 0xfb, 0xc6, 0x6, 0x6, "3a7b30124f03cf9b81515ab0bbb3d2be", "4639726f9e9b26f1365bc8fb46efba80e22b7e2be0bde9681d566bfd1adaa3d50a3267be9d830f7eabf635cae585c008c48c96ff982863d484fd9f8c82e2889be4615c5ae8bc23e8ce2f9194e566c7781a5c83a609f0f70fdf394fc5bd4a07347b72dd930a09b38f0ff6dd29b9ce6d2b4eecba863c1ef08a1303b8b8e47ebf185885727abaa1bc233319d68c214af6c90eef9b71ac54d1778884165e1cb645d298b25fa5aabccc0c48d678d9d902498dd1"}, 0xc6, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/lustre-client/dfs-0-8412
remove dir time 22
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8413 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8413
receive_execute: 24, 28
receive_execute: 22, 28
receive_execute: 0, 38
receive_execute: 25, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
----- executor 3 write_call_output, size 5337, pid 32882, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5143, pid 32882, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5143, flag collect 0
----- executor 3 signal number : 950
----- completed 2
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32882, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 27, 1, 0
execute_one time: 0, 28
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 58, 29, 0
before receive testcase: 0 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 38, 32, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 75
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:39 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 950 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
time breakdown 2: 52, 37, 0
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:39 ----- no new client coverage: false, true
2023/03/09 08:25:39 NetFailure, Node crash: false false
before receive testcase: 0 0
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 4
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000040), &(0x7f00000000c0)={'U+', 0x52bb}, 0x16, 0x2)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
write$binfmt_misc(0xffffffffffffffff, &(0x7f0000000140)={'syz1', "694521681fe62c44e0a4"}, 0xe)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 50, 32, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 824
remove dir: /root/lustre-client/dfs-0-8413
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 157
-----finish removing dir
receive_execute: 6, 179
mkdir time 20
executor 3 create dir /root/lustre-client/dfs-0-8414 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8414
receive_execute: 1, 178
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 6, 178
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 7, 229
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32887, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32887, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7847, pid 32887, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7847, flag collect 0
----- executor 3 signal number : 1179
----- completed 3
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32887, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 51, 2, 0
execute_one time: 1, 53
time breakdown 3: 236, 55, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 199, 98, 0
before receive testcase: 0 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 299
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:39 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 1179 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 187, 100, 0
before receive testcase: 0 1
2023/03/09 08:25:39 ----- no new client coverage: false, true
2023/03/09 08:25:39 NetFailure, Node crash: false false
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 2462 openat openat
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 4
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
openat(r0, &(0x7f0000000040)='./file0\x00', 0x220080, 0x4)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000180)=ANY=[@ANYBLOB="88e5aabba6c70afa55b2b4306c558b2e74846a00000080000000005f32b4d36f7fe50369ccb9600000000000000000a13a8c4c1c56be056b10f9da15d1919d000000bfd7054e34a2735e01cb519be657"])
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 185, 108, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 640
remove dir: /root/lustre-client/dfs-0-8414
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 183
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8415 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8415
receive_execute: 8, 195
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 15, 202
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
receive_execute: 15, 192
output_pos: 1, output_pos_value 1
executor 0 before execute_one
cover_reset in execute_call
receive_execute: 23, 183
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 32892, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32892, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32892, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5138, pid 32892, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5138, flag collect 0
----- executor 3 signal number : 949
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 0, 6
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 215, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 215, 11, 0
time breakdown 3: 217, 7, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 229
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:39 fuzzer receive 2505 signal and 0 cover from executor 3
time breakdown 1: 203, 34, 0
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 949 signal and 0 cover from executor 3
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/09 08:25:39 ----- no new client coverage: false, true
2023/03/09 08:25:39 NetFailure, Node crash: false false
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- removeCall()
2023/03/09 08:25:39 ----- mutateArg()
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 234 fsetxattr$security_ima fsetxattr$security_ima
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 3
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000040), &(0x7f0000000080)=ANY=[@ANYBLOB="96102d36"], 0x4, 0x0)
mkdirat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x0)
fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 472
remove dir: /root/lustre-client/dfs-0-8415
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 36
-----finish removing dir
receive_execute: 13, 48
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8416 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8416
receive_execute: 0, 50
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 26, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32897, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32897, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32897, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 77, 4, 0
before receive testcase: 0 1
receive_execute: 19, 51
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 62, 12, 0
before receive testcase: 0 0
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 73
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:39 ----- no new client coverage: false, true
2023/03/09 08:25:39 NetFailure, Node crash: false false
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 3
time breakdown 0: 70, 22, 0
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
lsetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)=@known='security.selinux\x00', &(0x7f0000000140)='security.', 0x9, 0x3)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 50, 23, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 648
remove dir: /root/lustre-client/dfs-0-8416
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8417 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8417
receive_execute: 0, 17
receive_execute: 20, 11
receive_execute: 0, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 20, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32900, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 7841, pid 32900, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 32900, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 0
----- executor 3 signal number : 50
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 1, 10
executor 3, execute_one inner time: 45, 11, 0
execute_one time: 5, 56
time breakdown 3: 45, 63, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:39 for select break: 1
2023/03/09 08:25:39 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 79, 0
before receive testcase: 0 1
2023/03/09 08:25:39 wg wait finish
2023/03/09 08:25:39 ------ all executors finish execution
2023/03/09 08:25:39 exec time: 106
2023/03/09 08:25:39 ----- PS len: 4
2023/03/09 08:25:39 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:39 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:39 fuzzer receive 50 signal and 0 cover from executor 3
2023/03/09 08:25:39 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:39 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:39 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:39 ----- no new client coverage: false, true
2023/03/09 08:25:39 NetFailure, Node crash: false false
2023/03/09 08:25:39 mutate testcase with failures
2023/03/09 08:25:39 ----- mutateArg()
2023/03/09 08:25:39 ----- insertCall()
2023/03/09 08:25:39 ----- generateCall 171 dup2 dup2
2023/03/09 08:25:39 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:39 prog length: 5
2023/03/09 08:25:39 HasCrashFail:false HasNetFail:false
08:25:39 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
r1 = open$dir(&(0x7f0000000000)='./file0/../file0\x00', 0x40, 0x0)
dup2(r0, r1)
mkdirat(r0, &(0x7f0000000040)='./file0/../file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="736519cc736974792e2f42247d00"])
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 33, 79, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 704
remove dir: /root/lustre-client/dfs-0-8417
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 17, 83, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 67
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8418 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8418
receive_execute: 6, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 72
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 74
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32905, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
receive_execute: 0, 72
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 4299, pid 32905, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32905, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32905, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 32905, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 1, 11
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 74, 16, 0
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 84, 13, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 72, 28, 0
before receive testcase: 0 1
time breakdown 2: 77, 25, 0
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:40 wg wait finish
2023/03/09 08:25:40 ------ all executors finish execution
2023/03/09 08:25:40 exec time: 102
2023/03/09 08:25:40 ----- PS len: 4
2023/03/09 08:25:40 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:40 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:40 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:40 ----- no new client coverage: false, true
2023/03/09 08:25:40 NetFailure, Node crash: false false
2023/03/09 08:25:40 mutate testcase with failures
2023/03/09 08:25:40 ----- mutateArg()
2023/03/09 08:25:40 ----- insertCall()
2023/03/09 08:25:40 ----- generateCall 2723 pread64 pread64
2023/03/09 08:25:40 ----- insertCall()
2023/03/09 08:25:40 ----- generateCall 2780 readlink readlink
2023/03/09 08:25:40 ----- insertCall()
2023/03/09 08:25:40 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/09 08:25:40 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:40 prog length: 5
2023/03/09 08:25:40 HasCrashFail:false HasNetFail:false
08:25:40 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x0)
pread64(0xffffffffffffffff, &(0x7f0000000000)=""/24, 0x18, 0x61d8)
readlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000140)=""/202, 0xca)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="7769fc0ab69b74686e2f40247d00"])
setxattr$security_capability(&(0x7f0000000240)='./file0/../file0/file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v2={0x2000000, [{0x8, 0xffff}, {0xae2, 0x1}]}, 0x14, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1032
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/lustre-client/dfs-0-8418
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 76
-----finish removing dir
mkdir time 18
executor 3 create dir /root/lustre-client/dfs-0-8419 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8419
receive_execute: 15, 96
receive_execute: 10, 94
receive_execute: 16, 99
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 4, 95
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5334, pid 32908, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32908, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5008, pid 32908, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5008, flag collect 0
----- executor 3 signal number : 936
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 241, pid 32908, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 241, flag collect 0
----- executor 3 signal number : 26
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4460, pid 32908, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4460, flag collect 0
----- executor 3 signal number : 261
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 0, 14
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 115, 15, 0
before receive testcase: 0 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 105, 17, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 33, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:40 for select break: 1
time breakdown 0: 99, 34, 0
before receive testcase: 0 1
time breakdown 1: 111, 33, 0
before receive testcase: 0 0
2023/03/09 08:25:40 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:40 wg wait finish
2023/03/09 08:25:40 ------ all executors finish execution
2023/03/09 08:25:40 exec time: 145
2023/03/09 08:25:40 ----- PS len: 4
2023/03/09 08:25:40 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:40 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 936 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 261 signal and 0 cover from executor 3
2023/03/09 08:25:40 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:40 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:40 ----- no new client coverage: false, true
2023/03/09 08:25:40 NetFailure, Node crash: false false
2023/03/09 08:25:40 mutate testcase with failures
2023/03/09 08:25:40 ----- insertCall()
2023/03/09 08:25:40 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/09 08:25:40 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:40 prog length: 3
2023/03/09 08:25:40 HasCrashFail:false HasNetFail:false
08:25:40 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$security_ima(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=@v1={0x2, "d4e2f95ebd0e891d"}, 0x9, 0x3)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/lustre-client/dfs-0-8419
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 26
-----finish removing dir
receive_execute: 25, 38
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8420 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8420
receive_execute: 23, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 27, 35
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 41, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32913, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5108, pid 32913, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5108, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 32913, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 224
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 18, 1, 0
execute_one time: 1, 19
time breakdown 3: 87, 21, 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
time breakdown 1: 62, 32, 0
time breakdown 0: 54, 41, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 66, 54, 0
before receive testcase: 0 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:40 wg wait finish
2023/03/09 08:25:40 ------ all executors finish execution
2023/03/09 08:25:40 exec time: 113
2023/03/09 08:25:40 ----- PS len: 4
2023/03/09 08:25:40 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:40 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 224 signal and 0 cover from executor 3
2023/03/09 08:25:40 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:40 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:40 ----- no new client coverage: false, true
2023/03/09 08:25:40 NetFailure, Node crash: false false
2023/03/09 08:25:40 mutate testcase with failures
2023/03/09 08:25:40 ----- mutateArg()
2023/03/09 08:25:40 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:40 prog length: 2
2023/03/09 08:25:40 HasCrashFail:false HasNetFail:false
08:25:40 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8420
remove dir time 217
-----finish removing dir
mkdir time 31
executor 3 create dir /root/lustre-client/dfs-0-8421 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8421
receive_execute: 37, 254
receive_execute: 20, 256
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 37, 265
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 46, 296
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32918, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7838, pid 32918, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83, 0, 0
execute_one time: 1, 83
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 342, 85, 0
before receive testcase: 0 1
time breakdown 0: 291, 134, 0
before receive testcase: 0 0
2023/03/09 08:25:40 for select break: 1
2023/03/09 08:25:40 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:40 for select break: 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:40 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:40 wg wait finish
2023/03/09 08:25:40 ------ all executors finish execution
2023/03/09 08:25:40 exec time: 399
2023/03/09 08:25:40 ----- PS len: 4
2023/03/09 08:25:40 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:40 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:40 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:40 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:40 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:40 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:40 ----- no new client coverage: false, true
2023/03/09 08:25:40 NetFailure, Node crash: false false
2023/03/09 08:25:40 mutate testcase with failures
2023/03/09 08:25:40 ----- insertCall()
2023/03/09 08:25:40 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/09 08:25:40 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:40 prog length: 3
2023/03/09 08:25:40 HasCrashFail:false HasNetFail:false
08:25:40 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140)='./file0\x00', 0x8, 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 302, 133, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 648
remove dir: /root/lustre-client/dfs-0-8421
time breakdown 2: 276, 142, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 238
-----finish removing dir
receive_execute: 10, 250
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8422 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8422
receive_execute: 1, 252
receive_execute: 19, 244
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32922, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
receive_execute: 1, 250
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7718, pid 32922, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7718, flag collect 0
----- executor 3 signal number : 1076
----- completed 2
execute_one loop: 0, 0, 26
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 7837, pid 32922, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 268
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 47
executor 3, execute_one inner time: 91, 47, 0
execute_one time: 1, 138
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 263, 140, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 260, 153, 0
before receive testcase: 0 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:41 wg wait finish
2023/03/09 08:25:41 ------ all executors finish execution
2023/03/09 08:25:41 exec time: 409
2023/03/09 08:25:41 ----- PS len: 4
2023/03/09 08:25:41 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:41 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 1076 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 268 signal and 0 cover from executor 3
2023/03/09 08:25:41 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:41 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:41 ----- no new client coverage: false, true
2023/03/09 08:25:41 NetFailure, Node crash: false false
2023/03/09 08:25:41 mutate testcase with failures
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/09 08:25:41 ----- mutateArg()
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/09 08:25:41 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:41 prog length: 6
2023/03/09 08:25:41 HasCrashFail:false HasNetFail:false
08:25:41 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0/../file0\x00', &(0x7f0000000240), &(0x7f0000000280)='./file1\x00', 0x8, 0x3)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000100), &(0x7f00000001c0)='./file0/../file0\x00', 0x11, 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000180)=@known='system.advise\x00')
setxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x2, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1288
remove dir: /root/lustre-client/dfs-0-8422
time breakdown 1: 253, 151, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 263, 141, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 113
-----finish removing dir
receive_execute: 6, 122
receive_execute: 7, 121
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8423 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8423
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 120
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
receive_execute: 22, 121
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5334, pid 32927, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7776, pid 32927, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7776, flag collect 0
----- executor 3 signal number : 1095
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32927, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32927, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 32927, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 3
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2780, pid 32927, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2780, flag collect 0
----- executor 3 signal number : 32
----- completed 6
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 22
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 41, 23, 0
execute_one time: 0, 64
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:41 for select break: 1
time breakdown 3: 143, 65, 0
before receive testcase: 0 0
2023/03/09 08:25:41 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:41 for select break: 1
time breakdown 1: 129, 76, 0
2023/03/09 08:25:41 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:41 wg wait finish
2023/03/09 08:25:41 ------ all executors finish execution
2023/03/09 08:25:41 exec time: 202
2023/03/09 08:25:41 ----- PS len: 4
2023/03/09 08:25:41 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:41 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 1095 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/09 08:25:41 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:41 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:41 ----- no new client coverage: false, true
2023/03/09 08:25:41 NetFailure, Node crash: false false
2023/03/09 08:25:41 mutate testcase with failures
2023/03/09 08:25:41 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:41 prog length: 2
2023/03/09 08:25:41 HasCrashFail:false HasNetFail:false
08:25:41 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB])
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 272
remove dir: /root/lustre-client/dfs-0-8423
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 133, 70, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 128, 80, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 116
-----finish removing dir
receive_execute: 5, 185
mkdir time 68
executor 3 create dir /root/lustre-client/dfs-0-8424 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8424
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 184
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 191
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 196
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32933, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5102, pid 32933, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5102, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 208, 6, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 186, 20, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 194, 21, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 190, 36, 0
before receive testcase: 0 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:41 wg wait finish
2023/03/09 08:25:41 ------ all executors finish execution
2023/03/09 08:25:41 exec time: 230
2023/03/09 08:25:41 ----- PS len: 4
2023/03/09 08:25:41 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:41 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:41 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:41 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:41 ----- no new client coverage: false, true
2023/03/09 08:25:41 NetFailure, Node crash: false false
2023/03/09 08:25:41 mutate testcase with failures
2023/03/09 08:25:41 ----- splice()
2023/03/09 08:25:41 ----- mutateArg()
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 2808 removexattr removexattr
2023/03/09 08:25:41 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:41 prog length: 4
2023/03/09 08:25:41 HasCrashFail:false HasNetFail:false
08:25:41 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0/../file0\x00', 0x800, 0xb)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
removexattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f0000000140)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 752
remove dir: /root/lustre-client/dfs-0-8424
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 101
-----finish removing dir
receive_execute: 31, 96
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8425 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8425
receive_execute: 19, 103
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 110
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 10, 104
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 4299, pid 32937, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 5295, pid 32937, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5295, flag collect 0
----- executor 3 signal number : 779
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32937, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 621
----- completed 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 32937, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 46
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 44, 12, 3
execute_one time: 1, 59
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 138, 62, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 127, 70, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 125, 68, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:41 wg wait finish
2023/03/09 08:25:41 ------ all executors finish execution
2023/03/09 08:25:41 exec time: 184
2023/03/09 08:25:41 ----- PS len: 4
2023/03/09 08:25:41 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:41 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 779 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 621 signal and 0 cover from executor 3
2023/03/09 08:25:41 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/09 08:25:41 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:41 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:41 ----- no new client coverage: false, true
2023/03/09 08:25:41 NetFailure, Node crash: false false
2023/03/09 08:25:41 mutate testcase with failures
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/09 08:25:41 ----- mutateArg()
2023/03/09 08:25:41 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:41 prog length: 3
2023/03/09 08:25:41 HasCrashFail:false HasNetFail:false
08:25:41 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x10)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="736863ba000000792e2f40247d00"])
lsetxattr$security_evm(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=@md5={0x1, "5b5b57a0d80e4dece9256f069f011fd7"}, 0x11, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 656
remove dir: /root/lustre-client/dfs-0-8425
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 114, 76, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 102
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8426 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8426
receive_execute: 6, 106
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 113
receive_execute: 13, 117
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 11, 116
----- executor 3 write_call_output, size 5337, pid 32942, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 2
----- executor 3 write_call_output, size 5142, pid 32942, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 32942, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 0, 8
executor 1 write_server_output
time breakdown 3: 130, 9, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:41 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 120, 12, 0
time breakdown 1: 127, 11, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 113, 40, 0
2023/03/09 08:25:41 for select break: 1
2023/03/09 08:25:41 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:41 wg wait finish
2023/03/09 08:25:41 ------ all executors finish execution
2023/03/09 08:25:41 exec time: 149
2023/03/09 08:25:41 ----- PS len: 4
2023/03/09 08:25:41 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:41 fuzzer receive 2508 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/09 08:25:41 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:41 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:41 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:41 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/09 08:25:41 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:41 ----- no new client coverage: false, true
2023/03/09 08:25:41 NetFailure, Node crash: false false
2023/03/09 08:25:41 mutate testcase with failures
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/09 08:25:41 ----- insertCall()
2023/03/09 08:25:41 ----- generateCall 2346 listxattr listxattr
2023/03/09 08:25:41 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:41 prog length: 4
2023/03/09 08:25:41 HasCrashFail:false HasNetFail:false
08:25:41 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x4, 0x3)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000340)=ANY=[@ANYBLOB="73656375726974792e2f40247d00dbf9987f4a270284213452be1cd251d3b8d7e7b6a67b92cde9108b5a7432d64c754e23b5de9f68808b76b7ba9bf44ca67d309df6c1d63ea2281e4442d33fb5ea466612379c940477ab2aa2ef542eb0cee4853d01f4b66c0821d77691decadc3d82f02e49388b978e1e364ef977d41f80eb4024031211afd03bdeddcb0a50b86c0b7364cadc4c70bbc1a314bfd59d577dca59074c69450d0cb8b6493522291d2c9e53bc1541157b6be3ecf68e1b8432b4996c061d2d5c4f2aa5ca538c00d660e3fd79674f0aa331efd1fd19e847ce47b9e62c0277"])
listxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=""/96, 0x60)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 976
remove dir: /root/lustre-client/dfs-0-8426
remove dir time 211
-----finish removing dir
mkdir time 13
executor 3 create dir /root/lustre-client/dfs-0-8427 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8427
receive_execute: 30, 227
receive_execute: 24, 235
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 1, 241
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
receive_execute: 36, 262
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32947, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7773, pid 32947, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7773, flag collect 0
----- executor 3 signal number : 1090
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 2948, pid 32947, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2948, flag collect 0
----- executor 3 signal number : 140
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9585, pid 32947, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 9585, flag collect 0
----- executor 3 signal number : 436
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 0, 12
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 298, 15, 0
before receive testcase: 0 0
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 257, 59, 0
before receive testcase: 0 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:42 wg wait finish
2023/03/09 08:25:42 ------ all executors finish execution
2023/03/09 08:25:42 exec time: 308
2023/03/09 08:25:42 ----- PS len: 4
2023/03/09 08:25:42 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:42 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 1090 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 436 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:42 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:42 ----- no new client coverage: false, true
2023/03/09 08:25:42 NetFailure, Node crash: false false
2023/03/09 08:25:42 mutate testcase with failures
2023/03/09 08:25:42 ----- insertCall()
time breakdown 0: 242, 52, 0
before receive testcase: 0 1
2023/03/09 08:25:42 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/09 08:25:42 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:42 prog length: 3
2023/03/09 08:25:42 HasCrashFail:false HasNetFail:false
08:25:42 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB])
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), 0xffffffffffffffff, 0x0, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 259, 70, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
remove dir: /root/lustre-client/dfs-0-8427
remove dir time 42
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8428 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8428
receive_execute: 5, 80
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 25, 83
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 56, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 14, 85
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5337, pid 32952, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5105, pid 32952, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5105, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 2763, pid 32952, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2763, flag collect 0
----- executor 3 signal number : 136
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 17, 3, 0
execute_one time: 1, 20
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 120, 22, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 116, 27, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:42 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:42 wg wait finish
2023/03/09 08:25:42 ------ all executors finish execution
2023/03/09 08:25:42 exec time: 138
2023/03/09 08:25:42 ----- PS len: 4
2023/03/09 08:25:42 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:42 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:42 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:42 ----- no new client coverage: false, true
2023/03/09 08:25:42 NetFailure, Node crash: false false
2023/03/09 08:25:42 mutate testcase with failures
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/09 08:25:42 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:42 prog length: 4
2023/03/09 08:25:42 HasCrashFail:false HasNetFail:false
08:25:42 ---executing program 0:
---
---
---
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000180), &(0x7f00000001c0), 0x4, 0x1)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr$security_smack_transmute(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x4, 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 85, 55, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 108, 39, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/lustre-client/dfs-0-8428
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 70
-----finish removing dir
receive_execute: 9, 97
mkdir time 13
executor 3 create dir /root/lustre-client/dfs-0-8429 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8429
receive_execute: 0, 97
receive_execute: 5, 99
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 2
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 26, 96
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32957, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 32957, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7717, pid 32957, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7717, flag collect 0
----- executor 3 signal number : 1071
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7842, pid 32957, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7842, flag collect 0
----- executor 3 signal number : 257
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 2, 0
execute_one time: 0, 14
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 122, 15, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 108, 25, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:42 wg wait finish
2023/03/09 08:25:42 ------ all executors finish execution
2023/03/09 08:25:42 exec time: 146
2023/03/09 08:25:42 ----- PS len: 4
2023/03/09 08:25:42 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:42 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 1071 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 257 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:42 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:42 ----- no new client coverage: false, true
2023/03/09 08:25:42 NetFailure, Node crash: false false
2023/03/09 08:25:42 mutate testcase with failures
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 231 fsetxattr fsetxattr
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 2459 open$dir open$dir
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 516 getxattr getxattr
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 248 fstat fstat
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/09 08:25:42 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:42 prog length: 9
2023/03/09 08:25:42 HasCrashFail:false HasNetFail:false
08:25:42 ---executing program 0:
---
---
---
fstat(0xffffffffffffffff, &(0x7f0000000380))
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000280)={'#! ', './file0', [{0x20, '/{)]%*-,'}, {0x20, 'security.'}, {0x20, '!$'}, {0x20, 'security.'}, {0x20, 'security.'}, {}, {0x20, 'user.incfs.size\x00'}, {}, {0x20, 'security.'}], 0xa, "2f717b88f2cfea9068303a614af788b3b2f06598809495a196b0b85fb09d7ef27a8cbbe28ca7f154992061abef64aaf6704ea37c35d695c653552b60f492fdd3740404daa341f8cd35375466250530067b30341bf51b569168023f5fd0bef9ca5162c227c43bc4f0c975911435d439ccd05ed770cade81cbee57ccbf8a7f0534bd0d40327fad448aef3c4ddec5ae74249b0c1c8f889aa4dd3c47"}, 0xec)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
open$dir(&(0x7f0000000140)='./file0\x00', 0x602, 0x49)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000400), &(0x7f0000000440)='./file0/../file0\x00', 0x11, 0x0)
getxattr(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)=@random={'security.', '}({\x00'}, &(0x7f0000000200)=""/89, 0x59)
fsetxattr(0xffffffffffffffff, &(0x7f0000000040)=@known='user.incfs.size\x00', &(0x7f00000000c0)='[\x00', 0x2, 0x3)
---

end of program
time breakdown 0: 104, 48, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 98, 47, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2472
remove dir: /root/lustre-client/dfs-0-8429
remove dir time 34
-----finish removing dir
receive_execute: 26, 41
receive_execute: 0, 47
mkdir time 6
executor 3 create dir /root/lustre-client/dfs-0-8430 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8430
receive_execute: 2, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 33, 43
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4794, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4794, flag collect 0
----- executor 3 signal number : 749
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7844, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7844, flag collect 0
----- executor 3 signal number : 802
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4418, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4418, flag collect 0
----- executor 3 signal number : 286
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32962, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 76, 34, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 68, 37, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 49, 40, 0
before receive testcase: 0 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 47, 42, 0
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:42 wg wait finish
2023/03/09 08:25:42 ------ all executors finish execution
2023/03/09 08:25:42 exec time: 91
2023/03/09 08:25:42 ----- PS len: 4
2023/03/09 08:25:42 [CLIENT] executor 3 has 9 replies
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 749 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:42 fuzzer receive 802 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 286 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:42 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:42 ----- no new client coverage: false, true
2023/03/09 08:25:42 NetFailure, Node crash: false false
2023/03/09 08:25:42 mutate testcase with failures
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 171 dup2 dup2
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 2459 open$dir open$dir
2023/03/09 08:25:42 ----- mutateArg()
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 170 dup dup
2023/03/09 08:25:42 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:42 prog length: 6
2023/03/09 08:25:42 HasCrashFail:false HasNetFail:false
08:25:42 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0/../file0\x00', 0x42180, 0x44)
dup(r0)
open$dir(&(0x7f00000000c0)='./file0/../file0\x00', 0x8000, 0x28)
dup2(0xffffffffffffffff, r0)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x90)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="7318928a586974792e2f40247d00"])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 792
remove dir: /root/lustre-client/dfs-0-8430
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 28
-----finish removing dir
receive_execute: 6, 38
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8431 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8431
receive_execute: 0, 38
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 7, 49
receive_execute: 4, 48
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 32968, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32968, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 32968, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32968, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5295, pid 32968, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5295, flag collect 0
----- executor 3 signal number : 764
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5139, pid 32968, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5139, flag collect 0
----- executor 3 signal number : 391
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 2, 1
execute_one time: 2, 14
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 38, 31, 0
before receive testcase: 0 0
time breakdown 3: 56, 18, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 44, 43, 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:42 wg wait finish
2023/03/09 08:25:42 ------ all executors finish execution
2023/03/09 08:25:42 exec time: 82
2023/03/09 08:25:42 ----- PS len: 4
2023/03/09 08:25:42 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:42 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 764 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 391 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:42 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:42 ----- no new client coverage: false, true
2023/03/09 08:25:42 NetFailure, Node crash: false false
2023/03/09 08:25:42 mutate testcase with failures
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 170 dup dup
time breakdown 1: 52, 33, 0
before receive testcase: 0 0
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/09 08:25:42 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:42 prog length: 4
2023/03/09 08:25:42 HasCrashFail:false HasNetFail:false
08:25:42 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
dup(0xffffffffffffffff)
lsetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)=@random={'security.', '&+{]&\x00'}, &(0x7f0000000140)='security.', 0x9, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 728
remove dir: /root/lustre-client/dfs-0-8431
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 58
-----finish removing dir
receive_execute: 21, 58
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8432 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8432
receive_execute: 11, 67
receive_execute: 23, 69
executor 1 before execute_one
receive_execute: 32, 64
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 1, 0
execute_one time: 2, 3
----- executor 3 write_call_output, size 5334, pid 32973, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 32973, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32973, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 2774, pid 32973, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2774, flag collect 0
----- executor 3 signal number : 43
----- completed 4
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 38, 1, 0
execute_one time: 0, 39
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 96, 43, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:42 for select break: 1
2023/03/09 08:25:42 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:42 wg wait finish
2023/03/09 08:25:42 ------ all executors finish execution
2023/03/09 08:25:42 exec time: 118
2023/03/09 08:25:42 ----- PS len: 4
2023/03/09 08:25:42 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:42 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:42 fuzzer receive 43 signal and 0 cover from executor 3
2023/03/09 08:25:42 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:42 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:42 fsMds: [map[] map[] map[] map[]]
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 78, 50, 0
2023/03/09 08:25:42 ----- no new client coverage: false, true
2023/03/09 08:25:42 NetFailure, Node crash: false false
2023/03/09 08:25:42 mutate testcase with failures
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 2810 renameat renameat
before receive testcase: 0 0
2023/03/09 08:25:42 ----- mutateArg()
2023/03/09 08:25:42 ----- insertCall()
2023/03/09 08:25:42 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/09 08:25:42 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:42 prog length: 8
2023/03/09 08:25:42 HasCrashFail:false HasNetFail:false
08:25:42 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r2 = open(&(0x7f0000000140)='./file0\x00', 0x400600, 0x8)
r3 = fcntl$dupfd(r0, 0x406, r1)
fcntl$setownex(r3, 0xf, &(0x7f0000000040)={0x0, 0xffffffffffffffff})
renameat(r2, &(0x7f0000000180)='./file0\x00', r1, &(0x7f00000000c0)='./file0/../file0\x00')
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/lustre-client/dfs-0-8432
time breakdown 0: 92, 48, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 95, 33, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 144
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8433 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8433
receive_execute: 2, 146
receive_execute: 2, 147
receive_execute: 0, 147
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 5, 185
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7838, pid 32978, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 76, 1, 0
execute_one time: 0, 77
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 149, 118, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 190, 78, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 147, 120, 0
before receive testcase: 0 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 282
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 8 replies
2023/03/09 08:25:43 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 9
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
fstat(0xffffffffffffffff, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$trusted_overlay_redirect(&(0x7f00000005c0)='./file0/../file0\x00', &(0x7f0000000600), &(0x7f0000000640)='./file0/../file0\x00', 0x11, 0x4)
setxattr$incfs_metadata(&(0x7f0000000440)='./file0/../file0\x00', &(0x7f0000000480), &(0x7f00000004c0)="f5e97e7ed855a2eb5ca0413d8bc38f87f0a93270c6bc5ec5c62d4c9ed201f2cc4629b97c1bd355d3411288ad32252d53a1a47531ddfc5bac14bf885ae7a0106595ac45063f62ebc1fb3d9f011bf12256a84e14b0ac9dbe558e76db1d1789ee1c50e83037cd03ea181667f2110124f1def16882dbbde34db14efaa64a27422c2ef22b29c11ee2f939bcf166c1bfb3c7a6e37282135e6b7d3be482b3d516a4f8aaa92a22500b8e016b5f192ad0cf884b9fef9c10bd8675bfb95b43de5470bcad3af40c3371366361faa5399b718f2e1ee5c198d56b907e5fee727f9111157ca7", 0xdf, 0x2)
lsetxattr$system_posix_acl(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)='system.posix_acl_access\x00', &(0x7f0000000380)={{}, {0x1, 0x4}, [{}, {0x2, 0x4, r0}, {0x2, 0x1, 0xee01}, {0x2, 0x2, r1}, {0x2, 0x1, 0xee00}, {0x2, 0x4, r2}, {0x2, 0x4, 0xee01}, {0x2, 0x4, 0xee00}, {0x2, 0x6}], {}, [{}, {0x8, 0x0, r3}, {0x8, 0x2}, {0x8, 0x0, 0xee00}, {0x8, 0x1, 0xffffffffffffffff}, {0x8, 0x2, 0xffffffffffffffff}, {0x8, 0x2, 0xee01}, {}], {0x10, 0x1}}, 0xac, 0x2)
---

end of program
time breakdown 0: 148, 136, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4544
remove dir: /root/lustre-client/dfs-0-8433
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 45
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8434 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8434
receive_execute: 26, 40
receive_execute: 1, 49
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 23, 50
receive_execute: 20, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 7838, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4782, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4782, flag collect 0
----- executor 3 signal number : 232
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 4
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 252, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 252, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2792, pid 32983, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2792, flag collect 0
----- executor 3 signal number : 67
----- completed 9
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 33
executor 3, execute_one inner time: 38, 48, 0
execute_one time: 1, 86
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 71, 96, 0
before receive testcase: 0 1
time breakdown 3: 73, 95, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 66, 105, 0
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 157
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 9 replies
2023/03/09 08:25:43 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 67 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- mutateArg()
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 2
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=@known='trusted.overlay.redirect\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/lustre-client/dfs-0-8434
time breakdown 0: 50, 107, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 47
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8435 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8435
receive_execute: 8, 48
receive_execute: 11, 53
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 55
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 123
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 32990, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7741, pid 32990, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7741, flag collect 0
----- executor 3 signal number : 1095
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 0, 7
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 135, 8, 0
before receive testcase: 0 1
time breakdown 1: 56, 79, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 56, 83, 0
before receive testcase: 0 1
time breakdown 2: 64, 79, 0
before receive testcase: 0 0
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 167
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:43 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 1095 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- mutateArg()
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 2
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8435
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 32, 28
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8436 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8436
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 31, 29
receive_execute: 37, 28
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 33, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5337, pid 32994, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 44
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 7841, pid 32994, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 99, 0, 0
execute_one time: 1, 99
2023/03/09 08:25:43 for select break: 1
executor 2 write_server_output
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 60, 106, 0
before receive testcase: 0 0
time breakdown 3: 65, 102, 0
before receive testcase: 0 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 149
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:43 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- mutateArg()
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 2
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='.\x00', 0x40)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8436
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 61, 110, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 60, 119, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 80
-----finish removing dir
receive_execute: 8, 83
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8437 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8437
receive_execute: 15, 84
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 84
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 17, 92
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 40, pid 32998, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 40, flag collect 0
----- executor 3 signal number : 39
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 32998, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2497
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 93, 11, 0
before receive testcase: 0 0
time breakdown 3: 109, 6, 0
before receive testcase: 0 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 104, 3, 0
before receive testcase: 0 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 117
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:43 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 2497 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 99, 33, 0
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 3761 stat stat
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 3
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140))
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 472
remove dir: /root/lustre-client/dfs-0-8437
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 70
-----finish removing dir
receive_execute: 18, 119
mkdir time 46
executor 3 create dir /root/lustre-client/dfs-0-8438 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8438
receive_execute: 0, 117
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 19, 128
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33000, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
receive_execute: 16, 128
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 33000, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4782, pid 33000, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4782, flag collect 0
----- executor 3 signal number : 234
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 147, 9, 0
before receive testcase: 0 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 144, 9, 0
before receive testcase: 0 1
time breakdown 0: 140, 19, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 160
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:43 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 234 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 6
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
stat(&(0x7f0000000140)='./file0/../file0\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
stat(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f00000002c0)='./file0/../file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
setxattr$system_posix_acl(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0)='system.posix_acl_default\x00', &(0x7f0000000380)={{}, {0x1, 0x2}, [{0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x5, 0xffffffffffffffff}, {0x2, 0x2, 0xffffffffffffffff}], {0x4, 0x1}, [{0x8, 0x1, r0}, {0x8, 0x4, 0xffffffffffffffff}, {0x8, 0x0, r1}, {0x8, 0x6, 0xffffffffffffffff}, {0x8, 0x1}, {0x8, 0x2, 0xee01}, {0x8, 0x3, r2}], {0x10, 0x3}, {0x20, 0x4}}, 0x74, 0x3)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
time breakdown 1: 117, 40, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2880
remove dir: /root/lustre-client/dfs-0-8438
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8439 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8439
receive_execute: 1, 36
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 36, 28
receive_execute: 30, 26
receive_execute: 30, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33005, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 9778, pid 33005, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 9778, flag collect 0
----- executor 3 signal number : 1185
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 797, pid 33005, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 3 signal number : 54
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 895, pid 33005, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 895, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 2878, pid 33005, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2878, flag collect 0
----- executor 3 signal number : 141
----- completed 5
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 33005, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 142
----- completed 6
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 43, 20, 0
execute_one time: 1, 63
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 62, 66, 0
before receive testcase: 0 1
2023/03/09 08:25:43 for select break: 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 66, 65, 0
before receive testcase: 0 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 64, 72, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:43 for select break: 1
2023/03/09 08:25:43 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:43 wg wait finish
2023/03/09 08:25:43 ------ all executors finish execution
2023/03/09 08:25:43 exec time: 139
2023/03/09 08:25:43 ----- PS len: 4
2023/03/09 08:25:43 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:43 fuzzer receive 2505 signal and 0 cover from executor 3
time breakdown 1: 39, 100, 0
before receive testcase: 0 0
2023/03/09 08:25:43 fuzzer receive 1185 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 141 signal and 0 cover from executor 3
2023/03/09 08:25:43 fuzzer receive 142 signal and 0 cover from executor 3
2023/03/09 08:25:43 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:43 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:43 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:43 ----- no new client coverage: false, true
2023/03/09 08:25:43 NetFailure, Node crash: false false
2023/03/09 08:25:43 mutate testcase with failures
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/09 08:25:43 ----- mutateArg()
2023/03/09 08:25:43 ----- insertCall()
2023/03/09 08:25:43 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/09 08:25:43 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:43 prog length: 9
2023/03/09 08:25:43 HasCrashFail:false HasNetFail:false
08:25:43 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000240)='./file0/../file0\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000040)='system.posix_acl_access\x00', &(0x7f0000000300)={{}, {0x1, 0x5}, [{}, {0x2, 0x2, r1}, {0x2, 0x3}, {0x2, 0x2, r2}, {0x2, 0x1, r3}], {0x4, 0xb}, [{0x8, 0x4, 0xee00}], {0x10, 0x5}, {0x20, 0x4}}, 0x54, 0x1)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
r4 = openat(0xffffffffffffffff, &(0x7f0000000380)='./file0\x00', 0x200100, 0x0)
fcntl$setown(r4, 0x8, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2632
remove dir: /root/lustre-client/dfs-0-8439
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 75
-----finish removing dir
mkdir time 19
executor 3 create dir /root/lustre-client/dfs-0-8440 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8440
receive_execute: 30, 99
receive_execute: 36, 95
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 1, 138
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 36, 141
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 33, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4422, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4422, flag collect 0
----- executor 3 signal number : 2546
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5618, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5618, flag collect 0
----- executor 3 signal number : 817
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 636
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33010, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 4, 0
execute_one time: 2, 21
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 177, 25, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 139, 36, 0
before receive testcase: 0 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:44 wg wait finish
2023/03/09 08:25:44 ------ all executors finish execution
2023/03/09 08:25:44 exec time: 182
2023/03/09 08:25:44 ----- PS len: 4
2023/03/09 08:25:44 [CLIENT] executor 3 has 9 replies
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 2546 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:44 fuzzer receive 817 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 636 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 131, 68, 0
before receive testcase: 0 1
2023/03/09 08:25:44 ----- no new client coverage: true, true
2023/03/09 08:25:44 NetFailure, Node crash: false false
2023/03/09 08:25:44 mutate testcase with failures
2023/03/09 08:25:44 ----- mutateArg()
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 2781 readlinkat readlinkat
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/09 08:25:44 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:44 prog length: 5
2023/03/09 08:25:44 HasCrashFail:false HasNetFail:false
08:25:44 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000140)=@random={'security.', '/@$}\x00!\xdf\xb1\xa6\xe1\x11\xd4\xaav_?\x1cU4\xbd\xc7\xdb6\b\xac\x9f8r\x88nU\x02\xc8\xe0\x1a\xc5\xe4Q)A\r\x8b\x04W\xe0Q\x17p\xdcL\xcb\v\x95N\'\xc2\x15\x9d8\xe5&\xf3\x84\xd6m\xb2T\xab\xc2\xb4\xdf(\xa7\xec\x9eFS\xe4Q\x0e\x1dr\x9c\xb3\xd2o\x80\xde\x8f[\xdf\xa2\xd6{X\xf3ie\x82#j\x8a'})
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x501801, 0x108)
readlinkat(r0, &(0x7f00000000c0)='./file0\x00', &(0x7f00000001c0)=""/4096, 0x1000)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000100)='./file0\x00', &(0x7f00000011c0), &(0x7f0000001200)='./file0\x00', 0x8, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/lustre-client/dfs-0-8440
time breakdown 0: 130, 78, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 167
-----finish removing dir
receive_execute: 6, 169
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8441 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8441
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 169
receive_execute: 13, 174
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 12, 172
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5334, pid 33016, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 3 write_call_output, size 7743, pid 33016, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7743, flag collect 0
----- executor 3 signal number : 1159
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33016, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33016, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2817, pid 33016, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2817, flag collect 0
----- executor 3 signal number : 93
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
executor 3, execute_one inner time: 44, 17, 0
execute_one time: 1, 61
time breakdown 3: 187, 64, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 175, 70, 0
before receive testcase: 0 1
time breakdown 2: 184, 71, 0
before receive testcase: 0 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 179, 90, 0
before receive testcase: 0 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:44 wg wait finish
2023/03/09 08:25:44 ------ all executors finish execution
2023/03/09 08:25:44 exec time: 264
2023/03/09 08:25:44 ----- PS len: 4
2023/03/09 08:25:44 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:44 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 1159 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:44 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:44 ----- no new client coverage: false, true
2023/03/09 08:25:44 NetFailure, Node crash: false false
2023/03/09 08:25:44 mutate testcase with failures
2023/03/09 08:25:44 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:44 prog length: 2
2023/03/09 08:25:44 HasCrashFail:false HasNetFail:false
08:25:44 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="20da2dc9532d400000003172e1ff051873a3c86103499c2c439648695b57fdb38aa3dd5b9955779e5566dbdfbe62ae647f29af6596e716ecf137b273d6ca8c93fdf86c821d4bfd4b341650892cfcce2014d9d60e1e50e4b0a360251633a921dab6df1c2b726a689a65a0b030937abdf3d7856aad4f970b68a289a4bd5c1cd18b6e6e0bb40970c0dbab5f00ec0b4108a6d1ed23ed356bd01b1d7f21733981066224887fb835ef36fb9e0581097e0c5eb23d762cbcb82b90ace8a3"])
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/lustre-client/dfs-0-8441
remove dir time 81
-----finish removing dir
receive_execute: 23, 94
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8442 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8442
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 93
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 19, 111
receive_execute: 35, 106
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 5334, pid 33022, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5138, pid 33022, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5138, flag collect 0
----- executor 3 signal number : 949
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 5, 9
time breakdown 3: 141, 15, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 117, 37, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 130, 25, 0
before receive testcase: 0 1
time breakdown 1: 98, 48, 0
before receive testcase: 0 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:44 wg wait finish
2023/03/09 08:25:44 ------ all executors finish execution
2023/03/09 08:25:44 exec time: 153
2023/03/09 08:25:44 ----- PS len: 4
2023/03/09 08:25:44 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:44 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 949 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:44 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:44 ----- no new client coverage: false, true
2023/03/09 08:25:44 NetFailure, Node crash: false false
2023/03/09 08:25:44 mutate testcase with failures
2023/03/09 08:25:44 ----- mutateArg()
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/09 08:25:44 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:44 prog length: 3
2023/03/09 08:25:44 HasCrashFail:false HasNetFail:false
08:25:44 ---executing program 0:
---
---
---
setxattr$user(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=')#\x00', 0x3, 0x0)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 648
remove dir: /root/lustre-client/dfs-0-8442
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 41
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8443 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8443
receive_execute: 11, 56
receive_execute: 22, 54
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 29, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 27, 58
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33026, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5298, pid 33026, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5298, flag collect 0
----- executor 3 signal number : 782
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7842, pid 33026, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7842, flag collect 0
----- executor 3 signal number : 622
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 76, 24, 0
before receive testcase: 0 0
time breakdown 2: 76, 12, 0
before receive testcase: 0 1
time breakdown 3: 85, 11, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 67, 39, 0
before receive testcase: 0 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:44 wg wait finish
2023/03/09 08:25:44 ------ all executors finish execution
2023/03/09 08:25:44 exec time: 106
2023/03/09 08:25:44 ----- PS len: 4
2023/03/09 08:25:44 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:44 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 782 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 622 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:44 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:44 ----- no new client coverage: false, true
2023/03/09 08:25:44 NetFailure, Node crash: false false
2023/03/09 08:25:44 mutate testcase with failures
2023/03/09 08:25:44 ----- mutateArg()
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 2341 lchown lchown
2023/03/09 08:25:44 ----- mutateArg()
2023/03/09 08:25:44 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:44 prog length: 4
2023/03/09 08:25:44 HasCrashFail:false HasNetFail:false
08:25:44 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x100)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
fstat(0xffffffffffffffff, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000040)='./file0\x00', 0xffffffffffffffff, r0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/lustre-client/dfs-0-8443
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 82
-----finish removing dir
mkdir time 6
executor 3 create dir /root/lustre-client/dfs-0-8444 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8444
receive_execute: 9, 93
receive_execute: 38, 91
receive_execute: 29, 90
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 1
----- executor 3 write_call_output, size 5334, pid 33031, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 36, 90
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 7837, pid 33031, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 47
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33031, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4221, pid 33031, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4221, flag collect 0
----- executor 3 signal number : 179
----- completed 4
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 23
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 69, 23, 0
execute_one time: 1, 92
time breakdown 3: 129, 95, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 126, 98, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:44 wg wait finish
2023/03/09 08:25:44 ------ all executors finish execution
2023/03/09 08:25:44 exec time: 196
2023/03/09 08:25:44 ----- PS len: 4
2023/03/09 08:25:44 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:44 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 179 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:44 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:44 ----- no new client coverage: false, true
2023/03/09 08:25:44 NetFailure, Node crash: false false
2023/03/09 08:25:44 mutate testcase with failures
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/09 08:25:44 ----- mutateArg()
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 2780 readlink readlink
2023/03/09 08:25:44 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:44 prog length: 4
2023/03/09 08:25:44 HasCrashFail:false HasNetFail:false
08:25:44 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
readlink(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=""/244, 0xf4)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
setxattr$incfs_id(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000180)={'0000000000000000000000000000000', 0x33}, 0x20, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 119, 100, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 102, 103, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 832
remove dir: /root/lustre-client/dfs-0-8444
remove dir time 53
-----finish removing dir
receive_execute: 4, 58
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8445 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8445
receive_execute: 0, 58
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 59
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 8, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33036, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5008, pid 33036, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5008, flag collect 0
----- executor 3 signal number : 936
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 33036, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 254
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 33036, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 7
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 3, 0
execute_one time: 1, 15
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 18, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 59, 24, 0
before receive testcase: 0 0
time breakdown 0: 64, 23, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:44 for select break: 1
2023/03/09 08:25:44 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:44 wg wait finish
2023/03/09 08:25:44 ------ all executors finish execution
2023/03/09 08:25:44 exec time: 89
2023/03/09 08:25:44 ----- PS len: 4
2023/03/09 08:25:44 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:44 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:44 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:44 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:44 fuzzer receive 936 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 254 signal and 0 cover from executor 3
2023/03/09 08:25:44 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/09 08:25:44 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:44 ----- no new client coverage: false, true
2023/03/09 08:25:44 NetFailure, Node crash: false false
2023/03/09 08:25:44 mutate testcase with failures
2023/03/09 08:25:44 ----- insertCall()
2023/03/09 08:25:44 ----- generateCall 2346 listxattr listxattr
2023/03/09 08:25:44 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:44 prog length: 3
2023/03/09 08:25:44 HasCrashFail:false HasNetFail:false
08:25:44 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000240)=ANY=[@ANYBLOB="73656375726974792e2f40247d009562ad1c6f82408b648981494b9f6d2a920a7b10a8c3a3c97be4a6c8874a98727579960a6eb208e8d287951228a88479538a98773f8d4a7d792a55c14b3c3d672f7191341fefcbd87e6d0ab854d542a37a242f434427ce9b0b68b509a6ee0062231be51f7c829cdbbd608b78f0928c0f85436a951ce9aa52ac9fd684b5"])
listxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140)=""/199, 0xc7)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 584
remove dir: /root/lustre-client/dfs-0-8445
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 64, 29, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 2, 74
receive_execute: 8, 74
receive_execute: 6, 75
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
remove dir time 72
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8446 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8446
receive_execute: 10, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33041, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 33041, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 9585, pid 33041, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 9585, flag collect 0
----- executor 3 signal number : 435
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 8, 3, 0
execute_one time: 1, 11
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 93, 14, 0
before receive testcase: 0 0
2023/03/09 08:25:45 for select break: 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 82, 31, 0
before receive testcase: 0 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
time breakdown 2: 76, 40, 0
before receive testcase: 0 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 115
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:45 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 435 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- mutateArg()
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 81, 38, 0
before receive testcase: 0 1
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 2
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x3)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8446
remove dir time 25
-----finish removing dir
receive_execute: 12, 40
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8447 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8447
receive_execute: 4, 40
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 42
executor 0 before execute_one
receive_execute: 24, 40
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33046, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 33046, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 0, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 65, 10, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 57, 12, 0
before receive testcase: 0 1
time breakdown 1: 47, 21, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 44, 53, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 104
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:45 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/09 08:25:45 ----- mutateArg()
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/09 08:25:45 ----- mutateArg()
2023/03/09 08:25:45 ----- mutateArg()
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 4
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x2, 0x2)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000180)=ANY=[])
fcntl$notify(0xffffffffffffffff, 0x402, 0x32)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 632
remove dir: /root/lustre-client/dfs-0-8447
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8448 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8448
receive_execute: 50, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 54, 52
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 66
receive_execute: 50, 68
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4309, pid 33050, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4309, flag collect 0
----- executor 3 signal number : 2541
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5295, pid 33050, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5295, flag collect 0
----- executor 3 signal number : 780
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5008, pid 33050, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5008, flag collect 0
----- executor 3 signal number : 387
----- completed 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33050, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 8, 0
execute_one time: 0, 20
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 106, 33, 0
before receive testcase: 0 0
time breakdown 3: 118, 21, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 91, 52, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 107
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:45 fuzzer receive 2541 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 780 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 387 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- mutateArg()
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 2
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8448
time breakdown 2: 78, 40, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8449 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8449
receive_execute: 10, 30
receive_execute: 18, 35
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 21, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33055, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 33055, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 0, 7
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
receive_execute: 0, 31
executor 0 write_server_output
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 54, 15, 0
time breakdown 2: 47, 2, 0
before receive testcase: 0 1
before receive testcase: 0 0
time breakdown 3: 61, 8, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 40, 33, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 74
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 3
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="73656375726974792e2f40247d00d510386b54d11d8a1e2efefdb3cbac56d7dd17ba7ace72c50bf4317ee9ce775a7d36c2bdb19273fba565843dfc267226cebfe09383aa4918c6c870ab346c52dc808e9093ecd14bc1c4435fbdfc415e6782d496d83b5c5861551858bdb195cbab001951863a36716a16874159dca1a4517c8b59512902e5385d0c46b0d66d20b2c69e1206c323571561d863ecf5dbf4762a65122034fc931cea037559786c5a679a5e0a11cfc1940869b0b03cb5"])
lremovexattr(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)=@known='trusted.overlay.origin\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 664
remove dir: /root/lustre-client/dfs-0-8449
remove dir time 48
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8450 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8450
receive_execute: 7, 52
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 25, 55
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 23, 58
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 18, 53
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5334, pid 33059, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7845, pid 33059, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7845, flag collect 0
----- executor 3 signal number : 1182
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 2746, pid 33059, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2746, flag collect 0
----- executor 3 signal number : 58
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 15, 1, 0
execute_one time: 0, 16
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 81, 18, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 80, 20, 0
before receive testcase: 0 0
time breakdown 0: 71, 27, 0
before receive testcase: 0 1
time breakdown 1: 59, 33, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 92
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:45 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 1182 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- mutateArg()
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 2
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0/../file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/lustre-client/dfs-0-8450
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8451 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8451
receive_execute: 14, 41
receive_execute: 14, 35
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
receive_execute: 22, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 16, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33064, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33064, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 5, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 55, 21, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 49, 25, 0
before receive testcase: 0 0
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 70
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:45 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 4
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
lsetxattr$security_evm(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=@md5={0x1, "ee8085f1ae2c79a728e13e120c65c0d4"}, 0x11, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f0000000180)='./file0/../file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={'L+', 0x6}, 0x16, 0x3)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 53, 17, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1032
remove dir: /root/lustre-client/dfs-0-8451
remove dir time 10
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8452 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8452
receive_execute: 13, 23
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 25
receive_execute: 8, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 21, 22
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33066, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 7838, pid 33066, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 211, pid 33066, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 211, flag collect 0
----- executor 3 signal number : 5
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2878, pid 33066, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2878, flag collect 0
----- executor 3 signal number : 62
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 1, 11
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 33, 20, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 36, 24, 0
time breakdown 3: 43, 13, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 60
2023/03/09 08:25:45 ----- PS len: 4
time breakdown 1: 27, 35, 0
2023/03/09 08:25:45 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:45 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 2374 mkdirat mkdirat
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 4
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000000c0)=ANY=[@ANYBLOB="73656775726974641677d59f7a75568337f41dc28b536a"])
r0 = dup(0xffffffffffffffff)
mkdirat(r0, &(0x7f0000000040)='./file0/../file0\x00', 0x40)
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 552
remove dir: /root/lustre-client/dfs-0-8452
remove dir time 81
-----finish removing dir
receive_execute: 0, 105
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8453 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8453
receive_execute: 17, 105
receive_execute: 12, 105
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 40, 85
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33071, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5142, pid 33071, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33071, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33071, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 1, 0
execute_one time: 0, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 105, 21, 0
time breakdown 3: 125, 18, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 122, 21, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 117, 34, 0
before receive testcase: 0 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 147
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:45 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:45 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 2458 open open
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 170 dup dup
2023/03/09 08:25:45 ----- mutateArg()
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 5
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000040)='./file0/../file0\x00', 0x2, 0x80)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000000c0)=@known='trusted.overlay.upper\x00')
setxattr$incfs_size(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180)=0x7f, 0x8, 0x4)
dup(r0)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 824
remove dir: /root/lustre-client/dfs-0-8453
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 69
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8454 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8454
receive_execute: 19, 71
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 21, 72
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 6, 83
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 22, 98
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33076, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 5101, pid 33076, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5101, flag collect 0
----- executor 3 signal number : 949
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 2844, pid 33076, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2844, flag collect 0
----- executor 3 signal number : 149
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4147, pid 33076, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4147, flag collect 0
----- executor 3 signal number : 229
----- completed 4
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33076, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 69, 3, 0
execute_one time: 0, 72
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 121, 73, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:45 for select break: 1
2023/03/09 08:25:45 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:45 wg wait finish
2023/03/09 08:25:45 ------ all executors finish execution
2023/03/09 08:25:45 exec time: 176
2023/03/09 08:25:45 ----- PS len: 4
2023/03/09 08:25:45 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:45 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 949 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 149 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/09 08:25:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:45 [SERVER] executor 0 has 0 replies
time breakdown 2: 93, 102, 0
before receive testcase: 0 0
2023/03/09 08:25:45 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:45 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:45 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:45 ----- no new client coverage: false, true
2023/03/09 08:25:45 NetFailure, Node crash: false false
2023/03/09 08:25:45 mutate testcase with failures
2023/03/09 08:25:45 ----- insertCall()
2023/03/09 08:25:45 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/09 08:25:45 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:45 prog length: 3
2023/03/09 08:25:45 HasCrashFail:false HasNetFail:false
08:25:45 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
lsetxattr$user(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='\'\x8e/)\x00', 0x5, 0x1)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000180)=ANY=[@ANYBLOB="73656375726974792e2f40247d008aa4d059ef73c6a6482a52aa3f7692beff963f54c3ffb86a3c0886867652324adb0595860c0f9978afb636fb6f40364205b2589eee24ccde3943753d8bca992dc36b5170534fac5d2574736dd661ba283405fb5180c0d76884d61a942d3d"])
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/lustre-client/dfs-0-8454
time breakdown 0: 89, 90, 0
before receive testcase: 0 1
time breakdown 1: 90, 104, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 158
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8455 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8455
receive_execute: 1, 161
receive_execute: 4, 158
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 167
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 186
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5340, pid 33081, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5340, flag collect 0
----- executor 3 signal number : 2511
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5060, pid 33081, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5060, flag collect 0
----- executor 3 signal number : 947
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 33081, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 250
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 0, 8
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 173, 26, 0
time breakdown 2: 162, 35, 0
before receive testcase: 0 1
time breakdown 3: 190, 9, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 211
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:46 fuzzer receive 2511 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 947 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 250 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 5
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
dup(0xffffffffffffffff)
r0 = openat(0xffffffffffffffff, &(0x7f0000000100)='./file0\x00', 0x400, 0x1)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000040), &(0x7f00000000c0)='./file0\x00', 0x8, 0x5)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000140)=ANY=[@ANYBLOB="480b00000000c804ed9490865e7b33417d0000000000000000"])
---

end of program
----- executor 2 receive testcase
time breakdown 1: 162, 50, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/lustre-client/dfs-0-8455
remove dir time 27
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8456 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8456
receive_execute: 2, 47
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 15, 53
receive_execute: 35, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33086, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33086, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
receive_execute: 24, 38
cover_reset in execute_call
executor 0 before execute_one
----- executor 3 write_call_output, size 0, pid 33086, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 33086, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5044, pid 33086, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5044, flag collect 0
----- executor 3 signal number : 935
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 71, 8, 0
before receive testcase: 0 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 68, 10, 0
before receive testcase: 0 1
time breakdown 0: 72, 6, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 49, 31, 0
before receive testcase: 0 0
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 89
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:46 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 935 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 2
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='se#urity./@$}\x00'])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8456
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8457 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8457
receive_execute: 26, 36
executor 0 before execute_one
receive_execute: 26, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 10, 35
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 28, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33092, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5139, pid 33092, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5139, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 68, 8, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 61, 17, 0
before receive testcase: 0 0
time breakdown 1: 45, 20, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 66
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:46 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 3
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000140)={'#! ', './file0', [{0x20, '/@$}\x00'}, {0x20, '^,%\x00'}, {0x20, '^)/^(\x15'}], 0xa, "d6511c8b6d7b276f91ac5117245b6b83aa9a8c924648dda06842db29da0e7522ecef05e18baf7fb5e92c6180037babe59331a40ee32bd0d8e70c04be86c862964c5f8f123f5521a3f7a8bdea3f57a379e82710417310fedebe1e92994c8497d36234ea626f21b3322fa1fd7717987ed48960f4f6b827e088ce580cdbc13ceb5d5baf1b8718c8774b84bb64d0dc1b93b87e1d9582099832d3dcf50d5ddbef82d893b17f318c6ba6cf5be55a8b0fab45a3492362a25b677eb431b4457c0daa125c78471db496a6922164089d7279c1262f08d7c5d61b5a3f795e9a820fd27901db9cb82dd68be6c346154fb601"}, 0x109)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYRES32])
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1040
remove dir: /root/lustre-client/dfs-0-8457
time breakdown 0: 62, 30, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 72
-----finish removing dir
mkdir time 14
executor 3 create dir /root/lustre-client/dfs-0-8458 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8458
receive_execute: 15, 89
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 0, 85
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 13, 104
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 18, 120
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33096, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33096, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5143, pid 33096, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5143, flag collect 0
----- executor 3 signal number : 950
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 1, 9
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 138, 12, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 140
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 950 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 2
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
time breakdown 1: 124, 26, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 100, 32, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8458
time breakdown 2: 104, 46, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 47
-----finish removing dir
mkdir time 15
executor 3 create dir /root/lustre-client/dfs-0-8459 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8459
receive_execute: 10, 72
receive_execute: 6, 73
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 0, 81
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 20, 79
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33101, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7838, pid 33101, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
execute_one loop: 0, 0, 26
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 31, 0, 0
execute_one time: 1, 31
2023/03/09 08:25:46 for select break: 1
executor 2 write_server_output
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 82, 52, 0
before receive testcase: 0 1
time breakdown 3: 99, 34, 0
before receive testcase: 0 1
time breakdown 2: 79, 52, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 147
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:46 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 81, 63, 0
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 2810 renameat renameat
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 6
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000200)='./file0/../file0\x00', &(0x7f0000000240)=@random={'security.', 'security.'})
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x40, 0x100)
renameat(r0, &(0x7f00000002c0)='./file0/../file0\x00', 0xffffffffffffffff, &(0x7f0000000300)='./file0\x00')
lgetxattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f0000000280)=@random={'btrfs.', 'security.'}, &(0x7f0000000140)=""/138, 0x8a)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="73656375726974792e2f40247d04"])
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1200
remove dir: /root/lustre-client/dfs-0-8459
remove dir time 30
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8460 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8460
receive_execute: 0, 47
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 36, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33105, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5298, pid 33105, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5298, flag collect 0
----- executor 3 signal number : 782
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5105, pid 33105, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5105, flag collect 0
----- executor 3 signal number : 392
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
receive_execute: 22, 49
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 0, pid 33105, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 241, pid 33105, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 241, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 33105, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 232
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 2, 0
execute_one time: 0, 11
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
receive_execute: 22, 46
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 76, 12, 0
before receive testcase: 0 0
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 78
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:46 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 782 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 392 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 3764 symlink symlink
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 122 chown chown
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 ----- mutateArg()
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/09 08:25:46 ----- insertCall()
2023/03/09 08:25:46 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 8
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000240)=@random={'user.', '\x89\xe4\xedY.\x14\x1b\xc6=\x99t\x9b\xe2>\x97\x96\x01z\xdcR\xa3\tty\x03\x01O\x02\x9c\x970=Yu\xa0v\xc0Q\xe1\xd2g\xc4\xddC\x1b\x02\x12\x83\xccC\x13\x1d(\xe2\xcf\xe1\x86\xa8\xe1\xb9\x1d-\xc9'})
setxattr$incfs_size(&(0x7f0000000100)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)=0x1, 0x8, 0x3)
chown(&(0x7f0000000140)='\x00', 0xee00, 0xee00)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000340)='./file0/../file0\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x2, 0x2)
setxattr$incfs_size(&(0x7f0000000400)='./file0/../file0\x00', &(0x7f0000000440), &(0x7f0000000480)=0x3, 0x8, 0xe9e741752b334103)
setxattr$smack_xattr_label(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)='security.SMACK64MMAP\x00', &(0x7f0000000200)={'security.'}, 0xa, 0x1)
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)='./file0/../file0\x00')
---

end of program
time breakdown 1: 47, 31, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 81, 9, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1896
remove dir: /root/lustre-client/dfs-0-8460
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 71, 24, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 89
-----finish removing dir
receive_execute: 6, 107
mkdir time 6
executor 3 create dir /root/lustre-client/dfs-0-8461 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8461
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 110
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 21, 148
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5150, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5150, flag collect 0
----- executor 3 signal number : 962
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2878, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2878, flag collect 0
----- executor 3 signal number : 140
----- completed 5
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2799, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2799, flag collect 0
----- executor 3 signal number : 49
----- completed 7
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 33110, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 97, 13, 0
execute_one time: 0, 110
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:46 for select break: 1
2023/03/09 08:25:46 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:46 wg wait finish
2023/03/09 08:25:46 ------ all executors finish execution
2023/03/09 08:25:46 exec time: 269
2023/03/09 08:25:46 ----- PS len: 4
2023/03/09 08:25:46 [CLIENT] executor 3 has 8 replies
2023/03/09 08:25:46 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 962 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/09 08:25:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:46 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:46 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:46 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:46 ----- no new client coverage: false, true
2023/03/09 08:25:46 NetFailure, Node crash: false false
2023/03/09 08:25:46 mutate testcase with failures
2023/03/09 08:25:46 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:46 prog length: 2
2023/03/09 08:25:46 HasCrashFail:false HasNetFail:false
08:25:46 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="73650700000000ed000040247d00"])
---

end of program
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 107, 160, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 169, 111, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8461
time breakdown 2: 113, 162, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 121, 157, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 52
-----finish removing dir
receive_execute: 2, 55
receive_execute: 2, 54
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8462 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8462
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 72
receive_execute: 1, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33116, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 5139, pid 33116, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5139, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 52, 1, 0
execute_one time: 1, 53
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 73, 56, 0
before receive testcase: 0 0
time breakdown 3: 76, 54, 0
before receive testcase: 0 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 56, 77, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:47 wg wait finish
2023/03/09 08:25:47 ------ all executors finish execution
2023/03/09 08:25:47 exec time: 141
2023/03/09 08:25:47 ----- PS len: 4
2023/03/09 08:25:47 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:47 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:47 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:47 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:47 ----- no new client coverage: false, true
2023/03/09 08:25:47 NetFailure, Node crash: false false
2023/03/09 08:25:47 mutate testcase with failures
2023/03/09 08:25:47 ----- insertCall()
2023/03/09 08:25:47 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/09 08:25:47 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:47 prog length: 3
2023/03/09 08:25:47 HasCrashFail:false HasNetFail:false
08:25:47 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='securitu./@$}\x00'])
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=0x6, 0x8, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 592
remove dir: /root/lustre-client/dfs-0-8462
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 57, 86, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 105
-----finish removing dir
mkdir time 7
executor 3 create dir /root/lustre-client/dfs-0-8463 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8463
receive_execute: 19, 114
receive_execute: 13, 123
receive_execute: 1, 127
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
receive_execute: 22, 177
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33120, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 5142, pid 33120, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 33120, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 12
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 31, 0, 0
execute_one time: 1, 31
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 199, 33, 0
before receive testcase: 0 0
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:47 for select break: 1
time breakdown 2: 136, 99, 0
before receive testcase: 0 1
2023/03/09 08:25:47 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 128, 94, 0
before receive testcase: 0 1
time breakdown 0: 133, 111, 0
before receive testcase: 0 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:47 wg wait finish
2023/03/09 08:25:47 ------ all executors finish execution
2023/03/09 08:25:47 exec time: 244
2023/03/09 08:25:47 ----- PS len: 4
2023/03/09 08:25:47 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:47 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/09 08:25:47 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:47 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:47 ----- no new client coverage: false, true
2023/03/09 08:25:47 NetFailure, Node crash: false false
2023/03/09 08:25:47 mutate testcase with failures
2023/03/09 08:25:47 ----- mutateArg()
2023/03/09 08:25:47 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:47 prog length: 2
2023/03/09 08:25:47 HasCrashFail:false HasNetFail:false
08:25:47 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000180)=ANY=[@ANYBLOB="7365632e4640247d000000000000047839839b50e958877f6ca7cfd59bcdf57c771025344a0a4f5c772010cff8182bf87e15f18ead925c083601050376b52a699d86b2ac6b2a6d35455c04000000b072343c961c71de6f5a5959"])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/lustre-client/dfs-0-8463
remove dir time 151
-----finish removing dir
receive_execute: 21, 200
mkdir time 28
executor 3 create dir /root/lustre-client/dfs-0-8464 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8464
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 13, 201
receive_execute: 26, 201
receive_execute: 48, 185
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33125, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33125, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 2
execute_one loop: 0, 1, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 221, 12, 0
before receive testcase: 0 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 233, 5, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 214, 21, 0
before receive testcase: 0 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 24, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:47 wg wait finish
2023/03/09 08:25:47 ------ all executors finish execution
2023/03/09 08:25:47 exec time: 237
2023/03/09 08:25:47 ----- PS len: 4
2023/03/09 08:25:47 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:47 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:47 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:47 ----- no new client coverage: false, true
2023/03/09 08:25:47 NetFailure, Node crash: false false
2023/03/09 08:25:47 mutate testcase with failures
2023/03/09 08:25:47 ----- insertCall()
2023/03/09 08:25:47 ----- generateCall 2344 linkat linkat
2023/03/09 08:25:47 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:47 prog length: 4
2023/03/09 08:25:47 HasCrashFail:false HasNetFail:false
08:25:47 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
r0 = open$dir(&(0x7f00000000c0)='./file0/../file0\x00', 0x20242, 0x14)
linkat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', r0, &(0x7f0000000140)='./file0/../file0\x00', 0x1400)
---

end of program
----- executor 2 receive testcase
time breakdown 1: 227, 32, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 776
remove dir: /root/lustre-client/dfs-0-8464
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8465 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8465
receive_execute: 24, 30
receive_execute: 1, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 21, 32
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 38, 37
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33127, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7838, pid 33127, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 33127, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 106, pid 33127, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 79, 14, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:47 wg wait finish
2023/03/09 08:25:47 ------ all executors finish execution
2023/03/09 08:25:47 exec time: 84
2023/03/09 08:25:47 ----- PS len: 4
2023/03/09 08:25:47 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:47 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:47 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:47 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:47 ----- no new client coverage: false, true
2023/03/09 08:25:47 NetFailure, Node crash: false false
2023/03/09 08:25:47 mutate testcase with failures
2023/03/09 08:25:47 ----- mutateArg()
2023/03/09 08:25:47 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:47 prog length: 2
2023/03/09 08:25:47 HasCrashFail:false HasNetFail:false
08:25:47 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='secur?\x00\x00\x00\x00\x00\x00\x00\x00'])
---

end of program
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 53, 32, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 39, 37, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8465
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 61, 46, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 40
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8466 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8466
receive_execute: 14, 39
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 45
receive_execute: 0, 41
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
receive_execute: 17, 103
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 58
cover_reset in execute_call
----- executor 3 write_call_output, size 5142, pid 33132, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
----- executor 3 signal number : 2780
----- completed 1
----- executor 3 write_call_output, size 5337, pid 33132, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 687
----- completed 2
execute_one loop: 0, 0, 44
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 103, 0, 0
execute_one time: 1, 103
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 120, 106, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 41, 174, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:47 for select break: 1
2023/03/09 08:25:47 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:47 wg wait finish
2023/03/09 08:25:47 ------ all executors finish execution
2023/03/09 08:25:47 exec time: 229
2023/03/09 08:25:47 ----- PS len: 4
2023/03/09 08:25:47 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:47 fuzzer receive 2780 signal and 0 cover from executor 3
2023/03/09 08:25:47 fuzzer receive 687 signal and 0 cover from executor 3
2023/03/09 08:25:47 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:47 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:47 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:47 ----- no new client coverage: false, true
2023/03/09 08:25:47 NetFailure, Node crash: false false
2023/03/09 08:25:47 mutate testcase with failures
2023/03/09 08:25:47 ----- insertCall()
2023/03/09 08:25:47 ----- generateCall 3662 setxattr setxattr
2023/03/09 08:25:47 ----- mutateArg()
2023/03/09 08:25:47 ----- insertCall()
2023/03/09 08:25:47 ----- generateCall 2341 lchown lchown
2023/03/09 08:25:47 ----- mutateArg()
2023/03/09 08:25:47 ----- insertCall()
2023/03/09 08:25:47 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/09 08:25:47 ----- mutateArg()
2023/03/09 08:25:47 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:47 prog length: 6
2023/03/09 08:25:47 HasCrashFail:false HasNetFail:false
08:25:47 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000200)=ANY=[@ANYBLOB="73247d0000000000000000000000f04da713d388337b7a81622e3456585dd6534e7445e5e7ec35561009b1141e692526e400cc9c328f16d7c77b2f9d342326161ebe434946917fb40000e799d80ea330cf6ff42b40e3649ca79e729a294d3922cc6a7ab6ff27ebd03669f4842f54b8ab7f482314041b73a5b646ea025875b6d5b628a9d418b016f13d9a9564a002a2f9f2ef2646b78f6e842e7580b3e6fdeacdd866e5f963f9ef633f76498198894c548ff4168526d80daf25c9d20e8649b5f3a94e454dcbbc6caf17a0478a4e48b3a65938d00831db092ba32856c52eefa2adbdb6662e212bbf0515a37c"])
setxattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0)=@random={'trusted.', ':[*[+@B!%-)!#\'\x00'}, &(0x7f0000000100)='%+)/,*\x00', 0x7, 0x3)
stat(&(0x7f0000000180)='./file0\x00', &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f00000001c0)='./file0/../file0\x00', 0xee00, r0)
setxattr$user(&(0x7f0000000140)='./file0/../file0\x00', &(0x7f0000000380), &(0x7f00000003c0)=')\x00', 0x2, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 53, 185, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 55, 181, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1480
remove dir: /root/lustre-client/dfs-0-8466
remove dir time 88
-----finish removing dir
receive_execute: 1, 107
executor 1 before execute_one
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8467 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8467
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 13, 108
receive_execute: 3, 121
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 11, 9
receive_execute: 37, 127
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33137, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5138, pid 33137, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5138, flag collect 0
----- executor 3 signal number : 949
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 2878, pid 33137, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2878, flag collect 0
----- executor 3 signal number : 146
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4782, pid 33137, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4782, flag collect 0
----- executor 3 signal number : 228
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8725, pid 33137, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 8725, flag collect 0
----- executor 3 signal number : 244
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5139, pid 33137, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5139, flag collect 0
----- executor 3 signal number : 83
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 5, 0
execute_one time: 0, 19
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 130, 47, 0
before receive testcase: 0 1
time breakdown 3: 164, 20, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 181
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:48 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 949 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 146 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 228 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 244 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 2350 lseek lseek
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 3765 symlinkat symlinkat
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 5
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
lseek(0xffffffffffffffff, 0xe9c, 0x1)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f00000000c0)='security.SMACK64IPOUT\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="beaf1038cc164cd89e6bf0c2eabf28492e00"], 0x4, 0x1)
symlinkat(&(0x7f0000000140)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000180)='./file0/../file0\x00')
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000040)=ANY=[@ANYRES32])
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 108, 72, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 856
remove dir: /root/lustre-client/dfs-0-8467
time breakdown 0: 124, 60, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8468 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8468
receive_execute: 18, 34
receive_execute: 2, 35
executor 1 before execute_one
receive_execute: 20, 35
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33143, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
receive_execute: 1, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
----- executor 3 write_call_output, size 5337, pid 33143, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33143, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33143, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5142, pid 33143, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
----- executor 3 signal number : 951
----- completed 5
execute_one loop: 0, 0, 22
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 34, 1, 0
execute_one time: 0, 35
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 37, 40, 0
before receive testcase: 0 1
time breakdown 2: 52, 41, 0
before receive testcase: 0 1
time breakdown 0: 34, 54, 0
before receive testcase: 0 1
time breakdown 3: 55, 36, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 90
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 2780 readlink readlink
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 3
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
readlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140)=""/14, 0xfffffffffffffd84)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="8965637572796672317640a75247"])
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/lustre-client/dfs-0-8468
remove dir time 72
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8469 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8469
receive_execute: 14, 92
receive_execute: 14, 92
receive_execute: 3, 91
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 35, 107
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33149, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33149, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5148, pid 33149, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5148, flag collect 0
----- executor 3 signal number : 952
----- completed 3
execute_one loop: 0, 0, 30
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 43, 0, 0
execute_one time: 0, 43
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 142, 44, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 94, 80, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 106, 84, 0
before receive testcase: 0 1
time breakdown 1: 106, 83, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 189
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:48 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 952 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 4
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$smack_xattr_label(&(0x7f00000000c0)='./file0/../file0\x00', &(0x7f0000000100)='security.SMACK64IPIN\x00', &(0x7f0000000140)={'security.'}, 0xa, 0x2)
lsetxattr$security_ima(&(0x7f0000000180)='./file0/../file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@sha1={0x1, "5018a2384f09f51b86ab97f4b7c09ae122120298"}, 0x15, 0x2)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000040)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/lustre-client/dfs-0-8469
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 50
-----finish removing dir
receive_execute: 21, 57
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8470 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8470
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 31, 52
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 18, 61
execute_one time: 1, 1
receive_execute: 32, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33154, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 7773, pid 33154, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7773, flag collect 0
----- executor 3 signal number : 1090
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 210, pid 33154, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1, execute_one inner time: 1, 0, 0
----- executor 3 write_call_output, size 2940, pid 33154, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 130
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 1, 10
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 88, 11, 0
before receive testcase: 0 1
time breakdown 2: 78, 17, 0
before receive testcase: 0 1
execute_one time: 7, 14
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 88
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:48 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 1090 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 3
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x4, 0x0)
---

end of program
time breakdown 1: 79, 22, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 84, 13, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 664
remove dir: /root/lustre-client/dfs-0-8470
remove dir time 24
-----finish removing dir
receive_execute: 8, 33
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8471 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8471
receive_execute: 8, 34
receive_execute: 1, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 17, 30
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 3, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5334, pid 33159, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7837, pid 33159, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7837, flag collect 0
----- executor 3 signal number : 1174
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 2897, pid 33159, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2897, flag collect 0
----- executor 3 signal number : 50
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 10, 1
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 7, 5, 0
execute_one time: 0, 12
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 47, 14, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
time breakdown 0: 42, 21, 0
before receive testcase: 0 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 41, 24, 0
before receive testcase: 0 0
time breakdown 1: 36, 23, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 65
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:48 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 1174 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 50 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 2781 readlinkat readlinkat
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 4
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
write$binfmt_elf32(0xffffffffffffffff, &(0x7f0000000140)={{0x7f, 0x45, 0x4c, 0x46, 0x9, 0x0, 0x4, 0x7, 0x9, 0x2, 0x6, 0xfffffff7, 0x248, 0x38, 0x3a1, 0x4, 0x9, 0x20, 0x2, 0x1, 0x8, 0x2db}, [{0x70000000, 0x1, 0x1f, 0x1, 0x0, 0xff, 0x1, 0x9}], "0fbd6835621b4da75558dee6b338c0a0838595746769c9bc63776526", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0xa74)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
readlinkat(0xffffffffffffffff, &(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4776
remove dir: /root/lustre-client/dfs-0-8471
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 85
-----finish removing dir
mkdir time 10
executor 3 create dir /root/lustre-client/dfs-0-8472 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8472
receive_execute: 21, 89
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 101
receive_execute: 13, 96
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 19, 106
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33164, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33164, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7841, pid 33164, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 3
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33164, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 45, 2, 0
execute_one time: 0, 47
executor 0 write_server_output
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 110, 60, 0
before receive testcase: 0 0
time breakdown 3: 125, 48, 0
before receive testcase: 0 1
executor 2 write_server_output
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 110, 66, 0
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 181
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 4
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
stat(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000140)=@v3={0x3000000, [{0xfffffff9, 0x7af5}, {0x200, 0x200}], r0}, 0x18, 0x1)
---

end of program
time breakdown 1: 109, 78, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/lustre-client/dfs-0-8472
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 46
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8473 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8473
receive_execute: 2, 57
receive_execute: 22, 57
receive_execute: 17, 60
receive_execute: 30, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33169, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 20, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7842, pid 33169, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7842, flag collect 0
----- executor 3 signal number : 1177
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4786, pid 33169, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4786, flag collect 0
----- executor 3 signal number : 232
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2807, pid 33169, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2807, flag collect 0
----- executor 3 signal number : 64
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 10, 0
execute_one time: 1, 22
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 77, 31, 0
before receive testcase: 0 0
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 94, 24, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
time breakdown 1: 59, 48, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 90, 37, 0
before receive testcase: 0 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 124
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:48 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 1177 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 2
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f00000000c0)='./file0/../file0\x00', &(0x7f0000000080)=@random={'btrfs.', 'trusted.overlay.redirect\x00\x88\xedr\xe1|\xfa\xca\xe5\x98\xf0+\x15K\x98,B\nZ0\xfd'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 392
remove dir: /root/lustre-client/dfs-0-8473
remove dir time 32
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8474 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8474
receive_execute: 28, 33
receive_execute: 19, 36
receive_execute: 20, 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 28, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33174, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5139, pid 33174, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5139, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 69, 10, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 58, 18, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 55, 31, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 70
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:48 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 ----- mutateArg()
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 2
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000040)=@random={'security.', '@{!\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 61, 22, 0
before receive testcase: 0 1
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 344
remove dir: /root/lustre-client/dfs-0-8474
remove dir time 30
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8475 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8475
receive_execute: 15, 42
receive_execute: 2, 44
receive_execute: 17, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33178, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7654, pid 33178, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7654, flag collect 0
----- executor 3 signal number : 1076
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 3, 0
execute_one time: 0, 12
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 57, 29, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 77, 13, 0
before receive testcase: 0 1
time breakdown 1: 46, 29, 0
before receive testcase: 0 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:48 for select break: 1
2023/03/09 08:25:48 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:48 wg wait finish
2023/03/09 08:25:48 ------ all executors finish execution
2023/03/09 08:25:48 exec time: 90
2023/03/09 08:25:48 ----- PS len: 4
2023/03/09 08:25:48 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:48 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:48 fuzzer receive 1076 signal and 0 cover from executor 3
2023/03/09 08:25:48 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:48 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:48 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:48 ----- no new client coverage: false, true
2023/03/09 08:25:48 NetFailure, Node crash: false false
2023/03/09 08:25:48 mutate testcase with failures
2023/03/09 08:25:48 ----- insertCall()
2023/03/09 08:25:48 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/09 08:25:48 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:48 prog length: 3
2023/03/09 08:25:48 HasCrashFail:false HasNetFail:false
08:25:48 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140), 0x4, 0x1)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
time breakdown 2: 64, 35, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 664
remove dir: /root/lustre-client/dfs-0-8475
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 205
-----finish removing dir
receive_execute: 23, 256
mkdir time 55
executor 3 create dir /root/lustre-client/dfs-0-8476 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8476
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 9, 1
receive_execute: 17, 271
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 20, 275
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33182, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 7794, pid 33182, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7794, flag collect 0
----- executor 3 signal number : 1083
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 2934, pid 33182, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2934, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 11, 2, 0
execute_one time: 0, 13
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 295, 15, 0
before receive testcase: 0 0
time breakdown 0: 280, 34, 0
before receive testcase: 0 1
receive_execute: 8, 257
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 302, 2, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 288, 37, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:49 wg wait finish
2023/03/09 08:25:49 ------ all executors finish execution
2023/03/09 08:25:49 exec time: 327
2023/03/09 08:25:49 ----- PS len: 4
2023/03/09 08:25:49 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:49 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 1083 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/09 08:25:49 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:49 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:49 ----- no new client coverage: false, true
2023/03/09 08:25:49 NetFailure, Node crash: false false
2023/03/09 08:25:49 mutate testcase with failures
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 3764 symlink symlink
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 2462 openat openat
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/09 08:25:49 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:49 prog length: 9
2023/03/09 08:25:49 HasCrashFail:false HasNetFail:false
08:25:49 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="7365637582690079b675a2b47d00"])
fcntl$getown(0xffffffffffffffff, 0x9)
openat(0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00', 0x200, 0x14)
fcntl$addseals(0xffffffffffffffff, 0x409, 0x4)
symlink(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0)='./file0\x00')
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
lremovexattr(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="733e75cce1ab656375726974792e1c"])
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1168
remove dir: /root/lustre-client/dfs-0-8476
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 62
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8477 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8477
receive_execute: 32, 73
receive_execute: 40, 66
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 before execute_one
receive_execute: 20, 87
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 37, 96
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 5143, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5143, flag collect 0
----- executor 3 signal number : 950
----- completed 2
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 106, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 106, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 33187, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 55, 15, 0
execute_one time: 1, 70
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 105, 101, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 138, 72, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 107, 92, 0
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 106, 108, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:49 wg wait finish
2023/03/09 08:25:49 ------ all executors finish execution
2023/03/09 08:25:49 exec time: 200
2023/03/09 08:25:49 ----- PS len: 4
2023/03/09 08:25:49 [CLIENT] executor 3 has 9 replies
2023/03/09 08:25:49 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 950 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:49 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:49 ----- no new client coverage: false, true
2023/03/09 08:25:49 NetFailure, Node crash: false false
2023/03/09 08:25:49 mutate testcase with failures
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 2347 llistxattr llistxattr
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 2341 lchown lchown
2023/03/09 08:25:49 ----- mutateArg()
2023/03/09 08:25:49 ----- mutateArg()
2023/03/09 08:25:49 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:49 prog length: 5
2023/03/09 08:25:49 HasCrashFail:false HasNetFail:false
08:25:49 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
llistxattr(&(0x7f0000000200)='./file0/../file0/../file0\x00', &(0x7f0000000240), 0x0)
removexattr(&(0x7f0000000280)='./file0/../file0/../file0/file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
setxattr$incfs_metadata(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140)="88f9b79552721a374a3dda4462bc381227a6699791f230ad6cd64bb249a239df6bae64b635a662c25ce98be8a7e91199acc0dae4cb517c97dadc5311f3c9753d9956eac248e247ddfff16e213ba51a922285c34ecef85804d809075704adfadb01e48ff7542a4a8d694cd3c2840bba9740302082dbf4cdba9876afac6ed9c84d40c196f5f40db1d4040ad1018ae030cb20b982582744b83b", 0x98, 0x0)
lchown(&(0x7f0000000240)='./file0\x00', 0x0, 0xee01)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1088
remove dir: /root/lustre-client/dfs-0-8477
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 181
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8478 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8478
receive_execute: 48, 166
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 188
receive_execute: 30, 188
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
----- executor 3 write_call_output, size 5334, pid 33192, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
receive_execute: 13, 187
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 9496, pid 33192, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 9496, flag collect 0
----- executor 3 signal number : 1224
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4331, pid 33192, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4331, flag collect 0
----- executor 3 signal number : 228
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 154, pid 33192, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 154, flag collect 0
----- executor 3 signal number : 13
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11914, pid 33192, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 11914, flag collect 0
----- executor 3 signal number : 221
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 15, 4, 0
execute_one time: 0, 19
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 211, 13, 0
before receive testcase: 0 0
time breakdown 3: 218, 20, 0
before receive testcase: 0 1
time breakdown 0: 214, 24, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 209, 44, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:49 wg wait finish
2023/03/09 08:25:49 ------ all executors finish execution
2023/03/09 08:25:49 exec time: 233
2023/03/09 08:25:49 ----- PS len: 4
2023/03/09 08:25:49 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:49 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:49 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:49 fuzzer receive 1224 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 228 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 221 signal and 0 cover from executor 3
2023/03/09 08:25:49 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:49 ----- no new client coverage: false, true
2023/03/09 08:25:49 NetFailure, Node crash: false false
2023/03/09 08:25:49 mutate testcase with failures
2023/03/09 08:25:49 ----- mutateArg()
2023/03/09 08:25:49 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:49 prog length: 2
2023/03/09 08:25:49 HasCrashFail:false HasNetFail:false
08:25:49 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/lustre-client/dfs-0-8478
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8479 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8479
receive_execute: 27, 37
receive_execute: 34, 30
receive_execute: 1, 43
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 27, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33197, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
2023/03/09 08:25:49 for select break: 1
executor 1 write_server_output
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7841, pid 33197, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 3 signal number : 1178
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 1, 5
time breakdown 3: 69, 7, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 44, 21, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:49 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:49 wg wait finish
2023/03/09 08:25:49 ------ all executors finish execution
2023/03/09 08:25:49 exec time: 65
2023/03/09 08:25:49 ----- PS len: 4
2023/03/09 08:25:49 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:49 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 1178 signal and 0 cover from executor 3
2023/03/09 08:25:49 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:49 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:49 ----- no new client coverage: false, true
2023/03/09 08:25:49 NetFailure, Node crash: false false
2023/03/09 08:25:49 mutate testcase with failures
2023/03/09 08:25:49 ----- mutateArg()
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 2459 open$dir open$dir
2023/03/09 08:25:49 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:49 prog length: 7
2023/03/09 08:25:49 HasCrashFail:false HasNetFail:false
08:25:49 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
mkdirat(r0, &(0x7f0000000040)='./file0/../file0\x00', 0x0)
fcntl$setown(r0, 0x8, 0x0)
open$dir(&(0x7f0000000200)='./file0/../file0/file0\x00', 0x420000, 0x28)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)="73ff99a61364093cfba6a1f3515e26fe0d2882a3378bdb3f8809bbb095d622f8e2ada338fad3465b5a07df12482df893a8850299df9e662ffe9d8dfe029557fb2cc1614941d4aa2d67d842dc070a6bbbbfc1f4880e80036f1cc2976f3c2195f2312b9107f3abcfc88f95e84c83f99043ee242a53aceddbc7b7b51165032aadef44de856b0a2317d7844f8f1f4f14e5", 0x8f, 0x6)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
fcntl$addseals(r0, 0x409, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1272
remove dir: /root/lustre-client/dfs-0-8479
time breakdown 0: 64, 21, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 64, 19, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 98
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8480 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8480
receive_execute: 1, 102
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 2, 112
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 107
receive_execute: 12, 116
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33201, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 1, 14
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
time breakdown 2: 103, 36, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 133, 16, 0
before receive testcase: 0 1
2023/03/09 08:25:49 for select break: 1
2023/03/09 08:25:49 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:49 wg wait finish
2023/03/09 08:25:49 ------ all executors finish execution
2023/03/09 08:25:49 exec time: 145
2023/03/09 08:25:49 ----- PS len: 4
2023/03/09 08:25:49 [CLIENT] executor 3 has 7 replies
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:49 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:49 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:49 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:49 ----- no new client coverage: false, true
2023/03/09 08:25:49 NetFailure, Node crash: false false
2023/03/09 08:25:49 mutate testcase with failures
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/09 08:25:49 ----- insertCall()
2023/03/09 08:25:49 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/09 08:25:49 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:49 prog length: 7
2023/03/09 08:25:49 HasCrashFail:false HasNetFail:false
08:25:49 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000003c0)='./file0/../file0\x00', 0x220600, 0x8)
fcntl$lock(r0, 0x26, &(0x7f0000000400)={0x0, 0x2, 0x9, 0x0, 0xffffffffffffffff})
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
setxattr$security_selinux(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)='system_u:object_r:crond_exec_t:s0\x00', 0x22, 0x1)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
setxattr$trusted_overlay_upper(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)={0x0, 0xfb, 0xc6, 0x1, 0x7f, "7623fec7d6f8483d66bd827106228be3", "5e4a819b7c9756108c4c3dc0fe54bca8ed860168bb66b2da7a79a516f775c66eb21a6d259813b4851d809ef6389fe5ba594ecac9b7bc504af74bfa7ea076f6e76df816298a60e1c0ebce4a1ee5fb22edbc7954ec35d2ec7dece609036ed2a997e41d30ae056904fc3657d51c3bf32833e14e2ff2217342b5b840178fd0c4198a354a2d21db4b43bd65a9c1df70bb473b073616d2d93aec2b4047ee65e6279804ab9c758586e12d74360f55add9e87b65ae"}, 0xc6, 0x2)
lsetxattr$security_smack_transmute(&(0x7f0000000180)='./file0/../file1\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x4, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2192
remove dir: /root/lustre-client/dfs-0-8480
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 110, 37, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 114, 30, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 68
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8481 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8481
receive_execute: 8, 71
executor 2 before execute_one
receive_execute: 1, 71
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 77
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 87
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 4299, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5298, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5298, flag collect 0
----- executor 3 signal number : 782
----- completed 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 7776, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7776, flag collect 0
----- executor 3 signal number : 534
----- completed 4
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 2940, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2940, flag collect 0
----- executor 3 signal number : 133
----- completed 5
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 2780, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2780, flag collect 0
----- executor 3 signal number : 58
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4249, pid 33205, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4249, flag collect 0
----- executor 3 signal number : 77
----- completed 7
execute_one loop: 0, 0, 26
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 24
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 123, 34, 0
execute_one time: 1, 157
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 96, 159, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 260
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 7 replies
2023/03/09 08:25:50 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 782 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 534 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 58 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 77 signal and 0 cover from executor 3
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 3
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
setxattr$incfs_id(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)={'0000000000000000000000000000000', 0x31}, 0x20, 0x1)
---

end of program
time breakdown 1: 80, 183, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 90, 176, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 712
remove dir: /root/lustre-client/dfs-0-8481
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 83, 176, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8482 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8482
receive_execute: 3, 50
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 53
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 25, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33210, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7838, pid 33210, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7838, flag collect 0
----- executor 3 signal number : 1176
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 252, pid 33210, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 252, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 0, 0
execute_one time: 9, 16
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
time breakdown 3: 80, 26, 0
before receive testcase: 0 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 56, 48, 0
time breakdown 0: 55, 49, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 104
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:50 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 1176 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 2
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000200)=ANY=[@ANYBLOB="7de56375857c76792e2f40247d008e9d81e09acd1212ce6a0aa48919d533ed2ffba366bb702e93aa03742c7c3d18f2671882fd4cb1e8e2b6ed52e3db0d3d7a2055fb7876ceeba641e041d7554b64d164daa937f38a598d9b3dcf7a9c7a15cb2e14c972c4244356bde510ab4f0598afd44503f6044803cd07e10ea805775d6843b5c3a298b545f8e283b05c8fd9b5d6a079ded6ede2f44dd7264d702b699c06bba12e63f644cb24312943331596b1ae2d405126dcb76cb8e66ac1586e0a6dfd59d36dea6b07e2b33108c928d8b652fa24a14ee42f6374bdb432d7cd62c4c79501dc49a7fd8550f96a120b6e0e8f18f249371313e233e6db"])
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 53, 53, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 552
remove dir: /root/lustre-client/dfs-0-8482
remove dir time 16
-----finish removing dir
receive_execute: 3, 29
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8483 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8483
receive_execute: 1, 34
receive_execute: 1, 40
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 24, 35
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33215, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 5142, pid 33215, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5142, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 26
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 48, 0, 0
execute_one time: 0, 48
executor 1 write_server_output
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 59, 49, 0
before receive testcase: 0 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 32, 66, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 102
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:50 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
time breakdown 2: 35, 68, 0
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 3764 symlink symlink
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 3
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="00000000000000022e0000000000"])
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)='./file0/../file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 488
remove dir: /root/lustre-client/dfs-0-8483
time breakdown 1: 41, 55, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 8, 59
receive_execute: 0, 59
remove dir time 52
-----finish removing dir
mkdir time 1
executor 3 create dir /root/lustre-client/dfs-0-8484 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8484
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
receive_execute: 7, 77
receive_execute: 14, 74
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33219, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5102, pid 33219, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5102, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 204, pid 33219, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 204, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 10, 12
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 59, 49, 0
before receive testcase: 0 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 89, 23, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 86, 36, 0
before receive testcase: 0 1
time breakdown 0: 77, 37, 0
before receive testcase: 0 0
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 130
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:50 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 194 fchmod fchmod
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 5
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
fchmod(0xffffffffffffffff, 0x0)
open$dir(&(0x7f0000000000)='./file0/../file0\x00', 0x10000, 0x20)
r0 = openat(0xffffffffffffffff, &(0x7f00000000c0)='./file0\x00', 0x0, 0x40)
mkdirat(r0, &(0x7f0000000040)='./file0\x00', 0x120)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 768
remove dir: /root/lustre-client/dfs-0-8484
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 36
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8485 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8485
receive_execute: 24, 52
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 15, 53
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 39, 43
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33224, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33224, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33224, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33224, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33224, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 76, 11, 0
before receive testcase: 0 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 82, 6, 0
before receive testcase: 0 1
receive_execute: 23, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 90, 2, 0
before receive testcase: 0 0
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 86
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 2
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0\x00', &(0x7f0000000040)=ANY=[@ANYBLOB="3106474e45d307b278d42cefa4bf"])
---

end of program
time breakdown 1: 68, 32, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/lustre-client/dfs-0-8485
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8486 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8486
receive_execute: 19, 29
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 42, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33227, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 5044, pid 33227, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5044, flag collect 0
----- executor 3 signal number : 935
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 1, 0
execute_one time: 1, 16
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 78, 19, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 83
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:50 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 935 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
time breakdown 2: 49, 40, 0
before receive testcase: 0 1
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 56, 45, 0
before receive testcase: 0 1
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 217 fgetxattr fgetxattr
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 4
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fgetxattr(r0, &(0x7f0000000040)=@known='trusted.overlay.impure\x00', &(0x7f00000000c0)=""/57, 0x39)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 43, 42, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
remove dir: /root/lustre-client/dfs-0-8486
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 27
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8487 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8487
receive_execute: 14, 29
receive_execute: 1, 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 16, 36
receive_execute: 7, 38
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 0, pid 33231, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33231, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33231, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
----- executor 3 write_call_output, size 4299, pid 33231, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 0, 5
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 52, 7, 0
before receive testcase: 0 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 58
time breakdown 1: 37, 22, 0
before receive testcase: 0 0
time breakdown 2: 43, 15, 0
before receive testcase: 0 1
time breakdown 0: 45, 10, 0
before receive testcase: 0 1
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 2346 listxattr listxattr
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 4
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
listxattr(&(0x7f0000000000)='./file0/../file0\x00', &(0x7f0000000100)=""/4096, 0x1000)
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0/../file0\x00', 0xc)
removexattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f0000000080)=ANY=[])
lsetxattr$security_capability(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000001100), &(0x7f0000001140)=@v2={0x2000000, [{0x9, 0x6}, {0x4, 0xffffffff}]}, 0x14, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/lustre-client/dfs-0-8487
remove dir time 15
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8488 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8488
receive_execute: 16, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 33, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 24, 23
receive_execute: 26, 26
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 4299, pid 33234, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33234, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 17
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33234, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33234, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 0, 10
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 47, 17, 0
time breakdown 0: 41, 24, 0
executor 1 write_server_output
before receive testcase: 0 1
time breakdown 3: 52, 11, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 52
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:50 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/09 08:25:50 ----- insertCall()
2023/03/09 08:25:50 ----- generateCall 3764 symlink symlink
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 4
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB='\x00'/14])
setxattr$trusted_overlay_upper(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0), &(0x7f0000000140)={0x0, 0xfb, 0x53, 0x3, 0x3, "d27b2f7a1857aad15d5447e4039ca2e0", "65769e2b0e7f1b87a15cd15736b453ec281a0aa874ecb9d294ed19ba93400cf3d974e64bfaac4d58c67054c95d122cec958fcdd8e0f4b979ca34436c76ac"}, 0x53, 0x0)
symlink(&(0x7f00000001c0)='./file0/../file0\x00', &(0x7f0000000200)='./file0\x00')
---

end of program
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 35, 32, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1088
remove dir: /root/lustre-client/dfs-0-8488
remove dir time 17
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8489 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8489
receive_execute: 8, 33
receive_execute: 10, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 1, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 29, 43
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33237, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5105, pid 33237, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5105, flag collect 0
----- executor 3 signal number : 951
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 2903, pid 33237, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 2903, flag collect 0
----- executor 3 signal number : 145
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 106, pid 33237, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 106, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 4, 11
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 30
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 41, 30, 0
execute_one time: 4, 71
executor 2 write_server_output
time breakdown 3: 72, 76, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 41, 102, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:50 for select break: 1
2023/03/09 08:25:50 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:50 wg wait finish
2023/03/09 08:25:50 ------ all executors finish execution
2023/03/09 08:25:50 exec time: 141
2023/03/09 08:25:50 ----- PS len: 4
2023/03/09 08:25:50 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:50 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 951 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 145 signal and 0 cover from executor 3
2023/03/09 08:25:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:50 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:50 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:50 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:50 ----- no new client coverage: false, true
2023/03/09 08:25:50 NetFailure, Node crash: false false
2023/03/09 08:25:50 mutate testcase with failures
2023/03/09 08:25:50 ----- mutateArg()
2023/03/09 08:25:50 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:50 prog length: 3
2023/03/09 08:25:50 HasCrashFail:false HasNetFail:false
08:25:50 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 480
remove dir: /root/lustre-client/dfs-0-8489
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 44, 91, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 45, 105, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 132
-----finish removing dir
receive_execute: 8, 144
mkdir time 12
executor 3 create dir /root/lustre-client/dfs-0-8490 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8490
receive_execute: 1, 145
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 144
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 154
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33242, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33242, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4412, pid 33242, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4412, flag collect 0
----- executor 3 signal number : 2541
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 3, 13
executor 1 write_server_output
time breakdown 3: 163, 17, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 152, 28, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 146, 29, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:51 wg wait finish
2023/03/09 08:25:51 ------ all executors finish execution
2023/03/09 08:25:51 exec time: 190
2023/03/09 08:25:51 ----- PS len: 4
2023/03/09 08:25:51 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 2541 signal and 0 cover from executor 3
2023/03/09 08:25:51 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:51 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:51 ----- no new client coverage: false, true
2023/03/09 08:25:51 NetFailure, Node crash: false false
2023/03/09 08:25:51 mutate testcase with failures
2023/03/09 08:25:51 ----- insertCall()
2023/03/09 08:25:51 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/09 08:25:51 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:51 prog length: 3
2023/03/09 08:25:51 HasCrashFail:false HasNetFail:false
08:25:51 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000040)='./file0/../file0\x00', &(0x7f00000000c0)=@random={'system.', '\x00'})
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB])
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 153, 45, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 480
remove dir: /root/lustre-client/dfs-0-8490
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8491 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8491
receive_execute: 16, 44
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 51
executor 3 before execute_one
receive_execute: 0, 52
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 18, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 4299, pid 33245, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 5295, pid 33245, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5295, flag collect 0
----- executor 3 signal number : 779
----- completed 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 5101, pid 33245, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5101, flag collect 0
----- executor 3 signal number : 390
----- completed 3
execute_one loop: 0, 0, 26
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 66, 1, 0
execute_one time: 1, 67
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 72, 70, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 52, 73, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 60, 82, 0
before receive testcase: 0 0
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:51 wg wait finish
2023/03/09 08:25:51 ------ all executors finish execution
2023/03/09 08:25:51 exec time: 134
2023/03/09 08:25:51 ----- PS len: 4
2023/03/09 08:25:51 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:51 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 779 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 390 signal and 0 cover from executor 3
2023/03/09 08:25:51 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:51 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:51 ----- no new client coverage: false, true
2023/03/09 08:25:51 NetFailure, Node crash: false false
2023/03/09 08:25:51 mutate testcase with failures
2023/03/09 08:25:51 ----- insertCall()
2023/03/09 08:25:51 ----- generateCall 171 dup2 dup2
2023/03/09 08:25:51 ----- insertCall()
2023/03/09 08:25:51 ----- generateCall 231 fsetxattr fsetxattr
2023/03/09 08:25:51 ----- insertCall()
2023/03/09 08:25:51 ----- generateCall 541 ioctl ioctl
2023/03/09 08:25:51 ----- mutateArg()
2023/03/09 08:25:51 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:51 prog length: 6
2023/03/09 08:25:51 HasCrashFail:false HasNetFail:false
08:25:51 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
dup2(r0, 0xffffffffffffffff)
fsetxattr(r0, &(0x7f0000000100)=ANY=[@ANYBLOB="74727573745e5a877900000000"], &(0x7f0000000140)='}+\x00', 0x3, 0x2)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="0740249070015bc3f08f699e21bdf049bc4b4d99104f034bde7efac31900000000f8ff"])
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/lustre-client/dfs-0-8491
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 71, 80, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 147
-----finish removing dir
mkdir time 31
executor 3 create dir /root/lustre-client/dfs-0-8492 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8492
receive_execute: 8, 180
receive_execute: 8, 186
receive_execute: 1, 182
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 13, 193
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33250, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10193, pid 33250, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1460
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33250, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33250, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 37, pid 33250, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 225, pid 33250, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 225, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 36, 1, 0
execute_one time: 1, 37
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 196, 68, 0
before receive testcase: 0 0
time breakdown 3: 206, 60, 0
before receive testcase: 0 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 183, 73, 0
before receive testcase: 0 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 wg wait finish
2023/03/09 08:25:51 ------ all executors finish execution
2023/03/09 08:25:51 exec time: 260
2023/03/09 08:25:51 ----- PS len: 4
2023/03/09 08:25:51 [CLIENT] executor 3 has 6 replies
time breakdown 2: 188, 79, 0
2023/03/09 08:25:51 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 1460 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:51 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:51 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:51 ----- no new client coverage: true, true
2023/03/09 08:25:51 prog length: 6
2023/03/09 08:25:51 HasCrashFail:false HasNetFail:false
08:25:51 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
dup2(r0, 0xffffffffffffffff)
fsetxattr(r0, &(0x7f0000000100)=ANY=[@ANYBLOB="74727573745e5a877900000000"], &(0x7f0000000140)='}+\x00', 0x3, 0x2)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="0740249070015bc3f08f699e21bdf049bc4b4d99104f034bde7efac31900000000f8ff"])
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/lustre-client/dfs-0-8492
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 149
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8493 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8493
receive_execute: 1, 154
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 5, 159
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 168
receive_execute: 5, 168
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33256, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 1
----- executor 3 cover number : 2321, signal number : 2505
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 10186, pid 33256, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10186, flag collect 1
----- executor 3 cover number : 3037, signal number : 1459
----- completed 2
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33256, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 1
----- executor 3 cover number : 117, signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33256, write pid:-1767046428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 37, pid 33256, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 3 cover number : 37, signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 225, pid 33256, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 225, flag collect 1
----- executor 3 cover number : 58, signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 174, 60, 0
before receive testcase: 0 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 155, 76, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 3, execute_one inner time: 0, 46, 3
execute_one time: 9, 49
time breakdown 3: 175, 59, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:51 for select break: 1
2023/03/09 08:25:51 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:51 wg wait finish
2023/03/09 08:25:51 ------ all executors finish execution
2023/03/09 08:25:51 exec time: 245
2023/03/09 08:25:51 ----- PS len: 4
2023/03/09 08:25:51 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:51 fuzzer receive 2505 signal and 2321 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 1459 signal and 3037 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 99 signal and 117 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 1 signal and 37 cover from executor 3
2023/03/09 08:25:51 fuzzer receive 1 signal and 58 cover from executor 3
2023/03/09 08:25:51 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:51 [SERVER] executor 2 has 0 replies
time breakdown 1: 164, 86, 0
2023/03/09 08:25:51 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:51 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:51 prog length: 6
2023/03/09 08:25:51 HasCrashFail:false HasNetFail:false
08:25:51 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
dup2(r0, 0xffffffffffffffff)
fsetxattr(r0, &(0x7f0000000100)=ANY=[@ANYBLOB="74727573745e5a877900000000"], &(0x7f0000000140)='}+\x00', 0x3, 0x2)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="0740249070015bc3f08f699e21bdf049bc4b4d99104f034bde7efac31900000000f8ff"])
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/lustre-client/dfs-0-8493
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 171
-----finish removing dir
mkdir time 36
executor 3 create dir /root/lustre-client/dfs-0-8494 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8494
receive_execute: 25, 197
receive_execute: 26, 204
receive_execute: 0, 217
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 18, 220
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5337, pid 33260, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 1
----- executor 3 cover number : 2324, signal number : 2508
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 10194, pid 33260, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10194, flag collect 1
----- executor 3 cover number : 3040, signal number : 1459
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33260, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 1
----- executor 3 cover number : 117, signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33260, write pid:-1767046428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 37, pid 33260, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 3 cover number : 37, signal number : 1
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 225, pid 33260, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 225, flag collect 1
----- executor 3 cover number : 58, signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 3 receive reply, reply.done 1
executor 3, execute_one inner time: 0, 40, 1
execute_one time: 1, 41
time breakdown 3: 238, 43, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 222, 73, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 231, 64, 0
before receive testcase: 0 0
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:52 wg wait finish
2023/03/09 08:25:52 ------ all executors finish execution
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 exec time: 288
2023/03/09 08:25:52 ----- PS len: 4
2023/03/09 08:25:52 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:52 fuzzer receive 2508 signal and 2324 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1459 signal and 3040 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 99 signal and 117 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1 signal and 37 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1 signal and 58 cover from executor 3
2023/03/09 08:25:52 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:52 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:52 prog length: 6
2023/03/09 08:25:52 HasCrashFail:false HasNetFail:false
08:25:52 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
dup2(r0, 0xffffffffffffffff)
fsetxattr(r0, &(0x7f0000000100)=ANY=[@ANYBLOB="74727573745e5a877900000000"], &(0x7f0000000140)='}+\x00', 0x3, 0x2)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="0740249070015bc3f08f699e21bdf049bc4b4d99104f034bde7efac31900000000f8ff"])
---

end of program
time breakdown 1: 217, 71, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/lustre-client/dfs-0-8494
remove dir time 62
-----finish removing dir
receive_execute: 14, 71
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8495 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8495
receive_execute: 1, 75
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 32, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33264, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 1
----- executor 3 cover number : 2321, signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
----- executor 3 write_call_output, size 10185, pid 33264, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 1
----- executor 3 cover number : 3036, signal number : 1457
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33264, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 1
----- executor 3 cover number : 117, signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33264, write pid:-1767046428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 37, pid 33264, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 37, flag collect 1
----- executor 3 cover number : 37, signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 225, pid 33264, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 225, flag collect 1
receive_execute: 9, 74
----- executor 3 cover number : 58, signal number : 1
----- completed 6
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 12, 1
execute_one time: 0, 13
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 104, 15, 0
before receive testcase: 0 1
time breakdown 0: 85, 20, 0
before receive testcase: 0 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 94, 13, 0
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 76, 34, 0
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:52 wg wait finish
2023/03/09 08:25:52 ------ all executors finish execution
2023/03/09 08:25:52 exec time: 110
2023/03/09 08:25:52 ----- PS len: 4
2023/03/09 08:25:52 [CLIENT] executor 3 has 6 replies
2023/03/09 08:25:52 fuzzer receive 2505 signal and 2321 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1457 signal and 3036 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 99 signal and 117 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1 signal and 37 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1 signal and 58 cover from executor 3
2023/03/09 08:25:52 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:52 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:52 -----2 triaging input for call #2 ioctl (new signal=17)
2023/03/09 08:25:52 minimize prog 3
2023/03/09 08:25:52 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:52 prog length: 5
2023/03/09 08:25:52 HasCrashFail:false HasNetFail:false
08:25:52 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
dup2(r0, 0xffffffffffffffff)
fsetxattr(r0, &(0x7f0000000100)=ANY=[@ANYBLOB="74727573745e5a877900000000"], &(0x7f0000000140)='}+\x00', 0x3, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 808
remove dir: /root/lustre-client/dfs-0-8495
remove dir time 54
-----finish removing dir
receive_execute: 0, 68
mkdir time 12
executor 3 create dir /root/lustre-client/dfs-0-8496 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8496
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 68
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 15, 68
----- executor 3 write_call_output, size 5334, pid 33268, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10186, pid 33268, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10186, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 130, pid 33268, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 3 signal number : 107
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33268, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 37, pid 33268, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
receive_execute: 7, 68
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 12, 1
executor 3, execute_one inner time: 0, 7, 6
execute_one time: 1, 13
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 68, 18, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 87, 15, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:52 wg wait finish
2023/03/09 08:25:52 ------ all executors finish execution
2023/03/09 08:25:52 exec time: 90
2023/03/09 08:25:52 ----- PS len: 4
2023/03/09 08:25:52 [CLIENT] executor 3 has 5 replies
2023/03/09 08:25:52 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 107 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/09 08:25:52 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:52 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:52 ----- no new client coverage: false, true
time breakdown 2: 84, 13, 0
before receive testcase: 0 1
2023/03/09 08:25:52 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:52 prog length: 4
2023/03/09 08:25:52 HasCrashFail:false HasNetFail:false
08:25:52 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
dup2(r0, 0xffffffffffffffff)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 552
remove dir: /root/lustre-client/dfs-0-8496
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 83, 22, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 57
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8497 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8497
receive_execute: 2, 59
receive_execute: 5, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 60
receive_execute: 6, 62
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 5337, pid 33272, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10193, pid 33272, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1460
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33272, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33272, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 9, 1
execute_one time: 1, 10
executor 2 write_server_output
time breakdown 3: 68, 12, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 61, 17, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 65, 25, 0
before receive testcase: 0 0
time breakdown 0: 61, 28, 0
before receive testcase: 0 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:52 wg wait finish
2023/03/09 08:25:52 ------ all executors finish execution
2023/03/09 08:25:52 exec time: 92
2023/03/09 08:25:52 ----- PS len: 4
2023/03/09 08:25:52 [CLIENT] executor 3 has 4 replies
2023/03/09 08:25:52 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1460 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:52 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:52 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:52 ----- no new client coverage: false, true
2023/03/09 08:25:52 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:52 prog length: 3
2023/03/09 08:25:52 HasCrashFail:false HasNetFail:false
08:25:52 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/lustre-client/dfs-0-8497
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 68
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8498 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8498
receive_execute: 8, 71
receive_execute: 3, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 76
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33276, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 18, 68
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 10185, pid 33276, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1457
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33276, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 74, 66, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 1 receive reply, reply.done 1
executor 3, execute_one inner time: 0, 22, 29
execute_one time: 1, 51
time breakdown 3: 95, 60, 0
before receive testcase: 0 0
time breakdown 1: 79, 68, 0
before receive testcase: 0 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:52 wg wait finish
2023/03/09 08:25:52 ------ all executors finish execution
2023/03/09 08:25:52 exec time: 142
2023/03/09 08:25:52 ----- PS len: 4
2023/03/09 08:25:52 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:52 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 1457 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:52 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:52 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:52 ----- no new client coverage: false, true
2023/03/09 08:25:52 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:52 prog length: 2
2023/03/09 08:25:52 HasCrashFail:false HasNetFail:false
08:25:52 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 280
remove dir: /root/lustre-client/dfs-0-8498
executor 1: prog_data_offset 1320, prog_size 8
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 97, 59, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 228
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8499 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8499
receive_execute: 2, 233
receive_execute: 1, 232
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 245
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 262
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
2023/03/09 08:25:52 for select break: 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 250, 60, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 5337, pid 33280, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 40
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33280, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 41, 0
execute_one time: 0, 41
time breakdown 3: 268, 42, 0
before receive testcase: 0 1
2023/03/09 08:25:52 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:52 for select break: 1
2023/03/09 08:25:52 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:52 wg wait finish
2023/03/09 08:25:52 ------ all executors finish execution
2023/03/09 08:25:52 exec time: 313
2023/03/09 08:25:52 ----- PS len: 4
2023/03/09 08:25:52 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:52 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:52 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:52 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:52 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:52 ----- no new client coverage: false, true
2023/03/09 08:25:52 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:52 prog length: 2
2023/03/09 08:25:52 HasCrashFail:false HasNetFail:false
08:25:52 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 280
remove dir: /root/lustre-client/dfs-0-8499
time breakdown 1: 235, 80, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 245, 67, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 145
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8500 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8500
receive_execute: 5, 150
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 151
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 0, 162
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 176
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33284, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 1, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33284, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 9, 10
executor 2 write_server_output
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 185, 20, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 161, 40, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 162, 47, 0
before receive testcase: 0 1
time breakdown 1: 162, 46, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 225
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:53 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 2
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 280
remove dir: /root/lustre-client/dfs-0-8500
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8501 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8501
receive_execute: 26, 23
receive_execute: 18, 23
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 29, 23
receive_execute: 29, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33288, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33288, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 21, 0
execute_one time: 0, 21
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 41, 34, 0
before receive testcase: 0 0
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 60, 22, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 63
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:53 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 2
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 52, 24, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8501
time breakdown 2: 49, 40, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 80
-----finish removing dir
receive_execute: 9, 91
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8502 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8502
receive_execute: 0, 90
receive_execute: 7, 90
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 11, 93
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33292, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33292, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2, 0
execute_one time: 1, 2
time breakdown 3: 104, 6, 0
before receive testcase: 0 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 100, 9, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
time breakdown 1: 97, 13, 0
before receive testcase: 0 1
time breakdown 2: 91, 9, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 114
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:53 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 2
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8502
remove dir time 55
-----finish removing dir
mkdir time 17
executor 3 create dir /root/lustre-client/dfs-0-8503 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8503
receive_execute: 11, 80
receive_execute: 11, 80
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 17, 93
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 20, 105
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33294, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33294, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 32, 0
execute_one time: 0, 33
executor 2 write_server_output
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 91, 65, 0
time breakdown 3: 125, 34, 0
before receive testcase: 0 1
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 111, 51, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 167
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:53 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 2
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 320
remove dir: /root/lustre-client/dfs-0-8503
time breakdown 1: 91, 86, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 53
-----finish removing dir
mkdir time 12
executor 3 create dir /root/lustre-client/dfs-0-8504 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8504
receive_execute: 33, 58
receive_execute: 22, 72
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
receive_execute: 0, 73
receive_execute: 29, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33296, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33296, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3, 0
execute_one time: 4, 4
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 101, 10, 0
before receive testcase: 0 1
time breakdown 1: 77, 13, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 94, 19, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 95
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 2 replies
2023/03/09 08:25:53 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 3
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, 0x0, 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8504
time breakdown 2: 91, 19, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 48
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8505 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8505
receive_execute: 4, 53
receive_execute: 5, 52
receive_execute: 4, 52
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33298, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4299, pid 33298, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 2
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33298, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 21, 0
execute_one time: 1, 21
executor 2 write_server_output
executor 1 write_server_output
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 91, 35, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 137
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 3
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, 0x0, 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 67, 65, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8505
time breakdown 2: 66, 69, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 57, 83, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 57
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8506 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8506
receive_execute: 1, 63
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 5, 69
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 9, 74
receive_execute: 20, 74
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33300, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
----- executor 3 write_call_output, size 4299, pid 33300, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33300, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3, 0
execute_one time: 1, 3
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 64, 19, 0
before receive testcase: 0 1
time breakdown 2: 74, 14, 0
before receive testcase: 0 0
time breakdown 3: 94, 5, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 115
time breakdown 1: 83, 34, 0
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 3
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, 0x0, 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8506
remove dir time 16
-----finish removing dir
receive_execute: 40, 19
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8507 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8507
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 33, 28
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 10, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 41, 37
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33302, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
----- executor 3 write_call_output, size 4299, pid 33302, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4299, flag collect 0
----- executor 3 signal number : 2536
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33302, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 11, 0
execute_one time: 0, 11
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 59, 31, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 78, 12, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 1: 43, 30, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
time breakdown 2: 61, 37, 0
before receive testcase: 0 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 86
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 2536 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 3
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(0x0, 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/lustre-client/dfs-0-8507
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8508 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8508
receive_execute: 23, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 34, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
receive_execute: 59, 0
receive_execute: 30, 41
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33304, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33304, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33304, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 22, 0
execute_one time: 1, 23
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 59, 26, 0
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 43, 53, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 71, 25, 0
before receive testcase: 0 1
time breakdown 1: 32, 60, 0
before receive testcase: 0 1
2023/03/09 08:25:53 for select break: 1
2023/03/09 08:25:53 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:53 wg wait finish
2023/03/09 08:25:53 ------ all executors finish execution
2023/03/09 08:25:53 exec time: 77
2023/03/09 08:25:53 ----- PS len: 4
2023/03/09 08:25:53 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:53 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:53 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:53 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:53 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:53 ----- no new client coverage: false, true
2023/03/09 08:25:53 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:53 prog length: 3
2023/03/09 08:25:53 HasCrashFail:false HasNetFail:false
08:25:53 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(0x0, 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/lustre-client/dfs-0-8508
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 95
-----finish removing dir
receive_execute: 3, 101
receive_execute: 12, 99
receive_execute: 22, 89
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8509 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8509
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 12, 104
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 14, 1
----- executor 3 write_call_output, size 5337, pid 33308, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33308, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33308, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 12, 0
execute_one time: 1, 12
executor 0 write_server_output
time breakdown 3: 116, 14, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:54 wg wait finish
2023/03/09 08:25:54 ------ all executors finish execution
2023/03/09 08:25:54 exec time: 135
2023/03/09 08:25:54 ----- PS len: 4
2023/03/09 08:25:54 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:54 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:54 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:54 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:54 ----- no new client coverage: false, true
2023/03/09 08:25:54 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:54 prog length: 3
2023/03/09 08:25:54 HasCrashFail:false HasNetFail:false
08:25:54 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(0x0, 0x101080, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
time breakdown 2: 111, 29, 0
before receive testcase: 0 0
time breakdown 1: 104, 23, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 111, 19, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/lustre-client/dfs-0-8509
remove dir time 66
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8510 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8510
receive_execute: 1, 86
receive_execute: 19, 76
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
receive_execute: 25, 87
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 9
receive_execute: 15, 96
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33312, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33312, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33312, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 19, 0
execute_one time: 1, 19
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 111, 20, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 112, 20, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 95, 46, 0
before receive testcase: 0 0
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:54 wg wait finish
2023/03/09 08:25:54 ------ all executors finish execution
2023/03/09 08:25:54 exec time: 137
2023/03/09 08:25:54 ----- PS len: 4
2023/03/09 08:25:54 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:54 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:54 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:54 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:54 ----- no new client coverage: false, true
time breakdown 2: 87, 35, 0
before receive testcase: 0 1
2023/03/09 08:25:54 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:54 prog length: 3
2023/03/09 08:25:54 HasCrashFail:false HasNetFail:false
08:25:54 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x102)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/lustre-client/dfs-0-8510
remove dir time 21
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8511 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8511
receive_execute: 3, 37
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 37
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 14, 41
executor 2 before execute_one
receive_execute: 26, 37
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33316, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33316, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33316, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 40, 1
execute_one time: 1, 41
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 58, 48, 0
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 63, 43, 0
before receive testcase: 0 1
before receive testcase: 0 0
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:54 wg wait finish
2023/03/09 08:25:54 ------ all executors finish execution
2023/03/09 08:25:54 exec time: 92
2023/03/09 08:25:54 ----- PS len: 4
2023/03/09 08:25:54 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:54 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:54 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:54 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:54 ----- no new client coverage: false, true
2023/03/09 08:25:54 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:54 prog length: 3
2023/03/09 08:25:54 HasCrashFail:false HasNetFail:false
08:25:54 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/lustre-client/dfs-0-8511
executor 0: prog_data_offset 1312, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 40, 54, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 55, 48, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 50
-----finish removing dir
receive_execute: 2, 54
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8512 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8512
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 0, 53
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 53
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 7, 81
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33320, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33320, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33320, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 76, 27
execute_one time: 1, 103
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 88, 105, 0
before receive testcase: 0 0
time breakdown 2: 56, 133, 0
before receive testcase: 0 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:54 wg wait finish
2023/03/09 08:25:54 ------ all executors finish execution
2023/03/09 08:25:54 exec time: 197
2023/03/09 08:25:54 ----- PS len: 4
2023/03/09 08:25:54 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:54 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:54 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:54 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:54 ----- no new client coverage: false, true
2023/03/09 08:25:54 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:54 prog length: 3
2023/03/09 08:25:54 HasCrashFail:false HasNetFail:false
08:25:54 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 2 receive testcase
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 71, 120, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/lustre-client/dfs-0-8512
time breakdown 1: 54, 143, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 107
-----finish removing dir
receive_execute: 10, 120
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8513 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8513
receive_execute: 0, 120
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 122
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 113
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 5337, pid 33324, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33324, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 40
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33324, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 50, 1
execute_one time: 0, 51
executor 2 write_server_output
executor 0 write_server_output
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 134, 52, 0
before receive testcase: 0 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 130, 60, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 130, 63, 0
before receive testcase: 0 0
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:54 wg wait finish
2023/03/09 08:25:54 ------ all executors finish execution
2023/03/09 08:25:54 exec time: 195
2023/03/09 08:25:54 ----- PS len: 4
2023/03/09 08:25:54 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:54 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:54 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:54 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:54 ----- no new client coverage: false, true
2023/03/09 08:25:54 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:54 prog length: 3
2023/03/09 08:25:54 HasCrashFail:false HasNetFail:false
08:25:54 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 120, 71, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/lustre-client/dfs-0-8513
remove dir time 187
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8514 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8514
receive_execute: 13, 218
receive_execute: 4, 218
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
receive_execute: 13, 226
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 3, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 48, 209
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33328, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33328, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33328, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 6, 11
execute_one time: 4, 17
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
time breakdown 2: 240, 32, 0
2023/03/09 08:25:54 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 231, 42, 0
before receive testcase: 0 0
time breakdown 3: 257, 22, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:54 for select break: 1
2023/03/09 08:25:54 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:54 wg wait finish
2023/03/09 08:25:54 ------ all executors finish execution
2023/03/09 08:25:54 exec time: 268
2023/03/09 08:25:54 ----- PS len: 4
2023/03/09 08:25:54 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:54 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:54 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:54 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:54 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:54 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:54 ----- no new client coverage: false, true
2023/03/09 08:25:54 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:54 prog length: 3
2023/03/09 08:25:54 HasCrashFail:false HasNetFail:false
08:25:54 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(0xffffffffffffffff, 0x1, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 222, 50, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/lustre-client/dfs-0-8514
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 134
-----finish removing dir
mkdir time 13
executor 3 create dir /root/lustre-client/dfs-0-8515 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8515
receive_execute: 0, 151
receive_execute: 9, 150
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 151
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 10, 171
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33332, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33332, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33332, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 6, 12
execute_one time: 5, 20
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 181, 26, 0
before receive testcase: 0 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 159, 53, 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 157, 55, 0
before receive testcase: 0 1
time breakdown 1: 151, 58, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:55 wg wait finish
2023/03/09 08:25:55 ------ all executors finish execution
2023/03/09 08:25:55 exec time: 236
2023/03/09 08:25:55 ----- PS len: 4
2023/03/09 08:25:55 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:55 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:55 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:25:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:55 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:55 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:55 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:55 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:55 ----- no new client coverage: false, true
2023/03/09 08:25:55 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:55 prog length: 3
2023/03/09 08:25:55 HasCrashFail:false HasNetFail:false
08:25:55 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, &(0x7f0000000180)="99")
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/lustre-client/dfs-0-8515
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 205
-----finish removing dir
mkdir time 51
executor 3 create dir /root/lustre-client/dfs-0-8516 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8516
receive_execute: 33, 256
executor 2 before execute_one
receive_execute: 28, 261
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
receive_execute: 30, 268
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 39, 292
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33336, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 36
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33336, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33336, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 66, 1
execute_one time: 0, 67
executor 0 write_server_output
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 306, 95, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 331, 69, 0
before receive testcase: 0 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:55 wg wait finish
2023/03/09 08:25:55 ------ all executors finish execution
2023/03/09 08:25:55 exec time: 377
2023/03/09 08:25:55 ----- PS len: 4
2023/03/09 08:25:55 [CLIENT] executor 3 has 3 replies
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:55 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:55 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:55 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:55 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:55 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:55 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:55 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:55 ----- no new client coverage: false, true
2023/03/09 08:25:55 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:55 prog length: 3
2023/03/09 08:25:55 HasCrashFail:false HasNetFail:false
08:25:55 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8516
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 289, 114, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 299, 110, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 82
-----finish removing dir
mkdir time 34
executor 3 create dir /root/lustre-client/dfs-0-8517 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8517
receive_execute: 6, 118
executor 0 before execute_one
receive_execute: 0, 119
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 126
receive_execute: 15, 137
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33340, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33340, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33340, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 83, 1
execute_one time: 2, 84
time breakdown 3: 152, 88, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:55 for select break: 1
2023/03/09 08:25:55 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:55 wg wait finish
2023/03/09 08:25:55 ------ all executors finish execution
2023/03/09 08:25:55 exec time: 239
2023/03/09 08:25:55 ----- PS len: 4
2023/03/09 08:25:55 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:55 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:55 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:25:55 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:55 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:55 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:55 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:55 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:55 ----- no new client coverage: false, true
2023/03/09 08:25:55 prog length: 3
2023/03/09 08:25:55 HasCrashFail:false HasNetFail:false
08:25:55 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8517
time breakdown 1: 129, 104, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 124, 117, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 119, 120, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 303
-----finish removing dir
mkdir time 30
executor 3 create dir /root/lustre-client/dfs-0-8518 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8518
receive_execute: 2, 334
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
receive_execute: 5, 347
receive_execute: 6, 333
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 15, 346
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33344, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
----- executor 3 cover number : 2321, signal number : 2505
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 10298, pid 33344, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10298, flag collect 1
----- executor 3 cover number : 3039, signal number : 1463
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33344, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 1
----- executor 3 cover number : 117, signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 25, 0
execute_one time: 1, 25
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 362, 27, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:56 wg wait finish
2023/03/09 08:25:56 ------ all executors finish execution
2023/03/09 08:25:56 exec time: 379
2023/03/09 08:25:56 ----- PS len: 4
2023/03/09 08:25:56 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:56 fuzzer receive 2505 signal and 2321 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 1463 signal and 3039 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 99 signal and 117 cover from executor 3
2023/03/09 08:25:56 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:56 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 336, 44, 0
2023/03/09 08:25:56 prog length: 3
2023/03/09 08:25:56 HasCrashFail:false HasNetFail:false
08:25:56 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8518
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 352, 28, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 352, 28, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8519 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8519
receive_execute: 5, 46
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 2, 48
receive_execute: 1, 49
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 4, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33348, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 1
----- executor 3 cover number : 2324, signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10192, pid 33348, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 1
----- executor 3 cover number : 3039, signal number : 1459
----- completed 2
execute_one loop: 0, 0, 41
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33348, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 1
----- executor 3 cover number : 117, signal number : 99
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 46, 19
execute_one time: 1, 66
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 58, 68, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 50, 80, 0
before receive testcase: 0 0
time breakdown 0: 51, 84, 0
before receive testcase: 0 0
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:56 wg wait finish
2023/03/09 08:25:56 ------ all executors finish execution
2023/03/09 08:25:56 exec time: 144
2023/03/09 08:25:56 ----- PS len: 4
2023/03/09 08:25:56 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:56 fuzzer receive 2508 signal and 2324 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 1459 signal and 3039 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 99 signal and 117 cover from executor 3
2023/03/09 08:25:56 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:56 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:56 prog length: 3
2023/03/09 08:25:56 HasCrashFail:false HasNetFail:false
08:25:56 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8519
time breakdown 1: 50, 92, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 63
-----finish removing dir
mkdir time 17
executor 3 create dir /root/lustre-client/dfs-0-8520 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8520
receive_execute: 28, 69
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 75
receive_execute: 26, 98
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 92
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33352, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 1
----- executor 3 cover number : 2321, signal number : 2505
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33352, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 1
----- executor 3 cover number : 3036, signal number : 1458
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33352, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 1
----- executor 3 cover number : 117, signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 112, 24, 0
executor 3, execute_one inner time: 0, 15, 1
execute_one time: 2, 16
time breakdown 3: 125, 19, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 97, 40, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:56 wg wait finish
2023/03/09 08:25:56 ------ all executors finish execution
2023/03/09 08:25:56 exec time: 136
2023/03/09 08:25:56 ----- PS len: 4
2023/03/09 08:25:56 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:56 fuzzer receive 2505 signal and 2321 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 1458 signal and 3036 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 99 signal and 117 cover from executor 3
2023/03/09 08:25:56 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:56 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:56 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/03/09 08:25:56 prog length: 9
2023/03/09 08:25:56 HasCrashFail:false HasNetFail:false
08:25:56 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000240)='./file0/../file0\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000040)='system.posix_acl_access\x00', &(0x7f0000000300)={{}, {0x1, 0x5}, [{}, {0x2, 0x2, r1}, {0x2, 0x3}, {0x2, 0x2, r2}, {0x2, 0x1, r3}], {0x4, 0xb}, [{0x8, 0x4, 0xee00}], {0x10, 0x5}, {0x20, 0x4}}, 0x54, 0x1)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
removexattr(&(0x7f0000000080)='./file0/../file0\x00', &(0x7f0000000100)=@random={'security.', '/@$}\x00'})
r4 = openat(0xffffffffffffffff, &(0x7f0000000380)='./file0\x00', 0x200100, 0x0)
fcntl$setown(r4, 0x8, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 104, 45, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2632
remove dir: /root/lustre-client/dfs-0-8520
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 289
-----finish removing dir
mkdir time 52
executor 3 create dir /root/lustre-client/dfs-0-8521 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8521
receive_execute: 12, 353
executor 2 before execute_one
receive_execute: 0, 351
receive_execute: 6, 360
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 21, 364
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33356, write pid:-1767046428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4309, pid 33356, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 4309, flag collect 1
----- executor 3 cover number : 2323, signal number : 2541
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33356, write pid:-1767004583
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 33356, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 1
----- executor 3 cover number : 61, signal number : 17
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33356, write pid:-1764140980
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5298, pid 33356, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5298, flag collect 1
----- executor 3 cover number : 2345, signal number : 768
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 7841, pid 33356, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 7841, flag collect 1
----- executor 3 cover number : 2786, signal number : 635
----- completed 7
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33356, write pid:-1767046428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33356, write pid:-1767046428
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 27, 0
execute_one time: 0, 27
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 361, 38, 0
before receive testcase: 0 1
time breakdown 3: 385, 29, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:56 for select break: 1
time breakdown 1: 366, 46, 0
before receive testcase: 0 0
time breakdown 2: 365, 56, 0
2023/03/09 08:25:56 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/09 08:25:56 for select break: 1
2023/03/09 08:25:56 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:56 wg wait finish
2023/03/09 08:25:56 ------ all executors finish execution
2023/03/09 08:25:56 exec time: 410
2023/03/09 08:25:56 ----- PS len: 4
2023/03/09 08:25:56 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:56 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:56 [CLIENT] executor 3 has 9 replies
2023/03/09 08:25:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 2541 signal and 2323 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 17 signal and 61 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 768 signal and 2345 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 635 signal and 2786 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:56 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:56 ----- triage return due to empty signal call #5 mkdirat
2023/03/09 08:25:56 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:56 prog length: 3
2023/03/09 08:25:56 HasCrashFail:false HasNetFail:false
08:25:56 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8521
remove dir time 191
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8522 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8522
receive_execute: 1, 208
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 211
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 213
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 14, 214
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2956, pid 33360, write pid:0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5709, pid 33360, write pid:0
----- completed 2
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 117, pid 33360, write pid:0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 36, 2
execute_one time: 1, 38
time breakdown 3: 231, 40, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 223, 47, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:57 wg wait finish
2023/03/09 08:25:57 ------ all executors finish execution
2023/03/09 08:25:57 exec time: 270
2023/03/09 08:25:57 ----- PS len: 4
2023/03/09 08:25:57 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:57 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:57 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:57 ----- no new client coverage: false, true
2023/03/09 08:25:57 ------ executing comparison hint: 10
2023/03/09 08:25:57 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:57 prog length: 3
2023/03/09 08:25:57 HasCrashFail:false HasNetFail:false
08:25:57 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x0, 0x0)
---

end of program
time breakdown 1: 219, 56, 0
time breakdown 2: 210, 56, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8522
remove dir time 113
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8523 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8523
receive_execute: 0, 127
receive_execute: 17, 146
receive_execute: 6, 138
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 153
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 25, 0
----- executor 3 write_call_output, size 5337, pid 33364, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33364, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 47
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33364, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 116, 0, 0
execute_one time: 1, 116
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 144, 169, 0
time breakdown 3: 181, 138, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 127, 185, 0
before receive testcase: 0 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:57 wg wait finish
2023/03/09 08:25:57 ------ all executors finish execution
2023/03/09 08:25:57 exec time: 324
2023/03/09 08:25:57 ----- PS len: 4
2023/03/09 08:25:57 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:57 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:57 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:57 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:57 ----- no new client coverage: false, true
2023/03/09 08:25:57 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:57 prog length: 3
2023/03/09 08:25:57 HasCrashFail:false HasNetFail:false
08:25:57 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x2, 0x0)
---

end of program
----- executor 1 receive testcase
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 163, 163, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8523
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 179
-----finish removing dir
mkdir time 20
executor 3 create dir /root/lustre-client/dfs-0-8524 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8524
receive_execute: 10, 213
receive_execute: 20, 211
executor 2 before execute_one
receive_execute: 12, 214
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 24, 211
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33369, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33369, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33369, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 232, 10, 0
before receive testcase: 0 0
time breakdown 3: 235, 8, 0
before receive testcase: 0 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 write_server_output
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 227, 17, 0
before receive testcase: 0 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:57 wg wait finish
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:57 ------ all executors finish execution
2023/03/09 08:25:57 exec time: 246
2023/03/09 08:25:57 ----- PS len: 4
2023/03/09 08:25:57 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:57 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:25:57 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:57 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:57 ----- no new client coverage: false, true
2023/03/09 08:25:57 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:57 prog length: 3
2023/03/09 08:25:57 HasCrashFail:false HasNetFail:false
08:25:57 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x54, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 223, 33, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8524
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 122
-----finish removing dir
mkdir time 15
executor 3 create dir /root/lustre-client/dfs-0-8525 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8525
receive_execute: 19, 142
receive_execute: 20, 149
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 160
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 35, 154
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33374, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33374, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33374, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 161, 28, 0
before receive testcase: 0 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 189, 10, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 174, 31, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 160, 40, 0
before receive testcase: 0 1
2023/03/09 08:25:57 for select break: 1
2023/03/09 08:25:57 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:57 wg wait finish
2023/03/09 08:25:57 ------ all executors finish execution
2023/03/09 08:25:57 exec time: 201
2023/03/09 08:25:57 ----- PS len: 4
2023/03/09 08:25:57 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:57 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:25:57 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:57 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:57 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:57 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:57 ----- no new client coverage: false, true
2023/03/09 08:25:57 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:57 prog length: 3
2023/03/09 08:25:57 HasCrashFail:false HasNetFail:false
08:25:57 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x5400, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8525
remove dir time 102
-----finish removing dir
receive_execute: 28, 154
mkdir time 49
executor 3 create dir /root/lustre-client/dfs-0-8526 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8526
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 1, 171
receive_execute: 16, 161
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 35, 204
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5340, pid 33379, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5340, flag collect 0
----- executor 3 signal number : 2511
----- completed 1
execute_one loop: 0, 0, 38
cover_reset in execute_call
----- executor 3 write_call_output, size 10306, pid 33379, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10306, flag collect 0
----- executor 3 signal number : 1463
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5, pid 33379, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 3 signal number : 5
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 68, 0, 0
execute_one time: 1, 68
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 182, 145, 0
before receive testcase: 0 1
time breakdown 3: 239, 91, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 186, 146, 0
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 1: 172, 144, 0
before receive testcase: 0 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:58 wg wait finish
2023/03/09 08:25:58 ------ all executors finish execution
2023/03/09 08:25:58 exec time: 320
2023/03/09 08:25:58 ----- PS len: 4
2023/03/09 08:25:58 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:58 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:58 fuzzer receive 2511 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 1463 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/09 08:25:58 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:58 ----- no new client coverage: true, true
2023/03/09 08:25:58 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:58 prog length: 3
2023/03/09 08:25:58 HasCrashFail:false HasNetFail:false
08:25:58 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x66f2, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8526
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 234
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8527 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8527
receive_execute: 9, 232
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 238
receive_execute: 26, 231
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 14, 246
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33384, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33384, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 39, pid 33384, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 39, flag collect 0
----- executor 3 signal number : 20
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 0, 0
execute_one time: 1, 13
time breakdown 3: 260, 15, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 257, 22, 0
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 241, 38, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 245, 42, 0
before receive testcase: 0 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:58 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:58 wg wait finish
2023/03/09 08:25:58 ------ all executors finish execution
2023/03/09 08:25:58 exec time: 283
2023/03/09 08:25:58 ----- PS len: 4
2023/03/09 08:25:58 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:58 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/09 08:25:58 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:58 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:58 ----- no new client coverage: true, true
2023/03/09 08:25:58 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:58 prog length: 3
2023/03/09 08:25:58 HasCrashFail:false HasNetFail:false
08:25:58 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xf266, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8527
remove dir time 32
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8528 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8528
receive_execute: 1, 48
receive_execute: 15, 47
receive_execute: 5, 49
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 29, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33389, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33389, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33389, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 1, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 62, 21, 0
before receive testcase: 0 1
time breakdown 3: 75, 13, 0
before receive testcase: 0 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:58 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 66, 10, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:58 wg wait finish
2023/03/09 08:25:58 ------ all executors finish execution
2023/03/09 08:25:58 exec time: 83
2023/03/09 08:25:58 ----- PS len: 4
2023/03/09 08:25:58 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:58 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:58 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:58 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:58 ----- no new client coverage: false, true
2023/03/09 08:25:58 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:58 prog length: 3
2023/03/09 08:25:58 HasCrashFail:false HasNetFail:false
08:25:58 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x1000000, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 49, 35, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8528
remove dir time 24
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8529 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8529
receive_execute: 15, 39
receive_execute: 1, 39
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 13, 45
receive_execute: 25, 38
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33394, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33394, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33394, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 63, 12, 0
before receive testcase: 0 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 54, 21, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 58, 20, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:58 wg wait finish
2023/03/09 08:25:58 ------ all executors finish execution
2023/03/09 08:25:58 exec time: 70
2023/03/09 08:25:58 ----- PS len: 4
2023/03/09 08:25:58 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:58 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:58 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:58 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:58 ----- no new client coverage: false, true
2023/03/09 08:25:58 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:58 prog length: 3
2023/03/09 08:25:58 HasCrashFail:false HasNetFail:false
08:25:58 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x1660880, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 40, 28, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8529
remove dir time 137
-----finish removing dir
mkdir time 12
executor 3 create dir /root/lustre-client/dfs-0-8530 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8530
receive_execute: 2, 156
receive_execute: 20, 151
receive_execute: 10, 159
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 2, 159
executor 1 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 5334, pid 33399, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33399, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33399, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 161, 11, 0
time breakdown 3: 171, 10, 0
before receive testcase: 0 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:58 for select break: 1
2023/03/09 08:25:58 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:58 wg wait finish
2023/03/09 08:25:58 ------ all executors finish execution
2023/03/09 08:25:58 exec time: 177
2023/03/09 08:25:58 ----- PS len: 4
2023/03/09 08:25:58 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:58 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:25:58 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:58 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:58 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:58 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:58 ----- no new client coverage: false, true
2023/03/09 08:25:58 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:58 prog length: 3
2023/03/09 08:25:58 HasCrashFail:false HasNetFail:false
08:25:58 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x1760880, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8530
time breakdown 2: 173, 2, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 169, 13, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 114
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8531 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8531
receive_execute: 3, 120
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 119
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 143
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 154
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33404, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33404, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33404, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 1, 0
execute_one time: 8, 18
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 123, 68, 0
before receive testcase: 0 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 124, 67, 0
before receive testcase: 0 0
time breakdown 3: 163, 32, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 196
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x2000000, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 147, 53, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8531
remove dir time 25
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8532 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8532
receive_execute: 9, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 40
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 0, 51
receive_execute: 19, 48
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33409, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33409, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33409, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 16
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 68, 18, 0
before receive testcase: 0 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 58, 20, 0
before receive testcase: 0 0
time breakdown 2: 49, 37, 0
before receive testcase: 0 1
time breakdown 0: 56, 29, 0
before receive testcase: 0 0
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 96
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x2660840, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8532
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 145
-----finish removing dir
receive_execute: 18, 148
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8533 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8533
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 151
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 18, 174
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 20, 178
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33414, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33414, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33414, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 1, 0
execute_one time: 10, 16
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 174, 57, 0
before receive testcase: 0 1
time breakdown 3: 204, 27, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 192, 50, 0
before receive testcase: 0 0
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 226
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x2760840, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 166, 70, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8533
remove dir time 27
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8534 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8534
receive_execute: 14, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
receive_execute: 8, 39
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
receive_execute: 2, 48
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 23, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33419, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33419, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33419, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 0, 0
execute_one time: 1, 17
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 75, 19, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 47, 42, 0
before receive testcase: 0 1
2023/03/09 08:25:59 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 50, 41, 0
before receive testcase: 0 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 92
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x3660880, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 52, 45, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8534
remove dir time 21
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8535 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8535
receive_execute: 4, 35
executor 1 before execute_one
receive_execute: 22, 29
receive_execute: 12, 37
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 9, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 3
----- executor 3 write_call_output, size 5334, pid 33424, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33424, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33424, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 51, 11, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 49, 12, 0
before receive testcase: 0 0
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 39, 22, 0
before receive testcase: 0 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 71
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x13660c80, 0x0)
---

end of program
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 44, 21, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8535
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 52
-----finish removing dir
mkdir time 22
executor 3 create dir /root/lustre-client/dfs-0-8536 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8536
receive_execute: 18, 78
receive_execute: 27, 75
receive_execute: 21, 75
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 2, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 90
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33429, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33429, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33429, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 1, 0
execute_one time: 1, 24
executor 0 write_server_output
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 102, 45, 0
before receive testcase: 0 0
time breakdown 3: 118, 28, 0
before receive testcase: 0 1
2023/03/09 08:25:59 for select break: 1
executor 1 write_server_output
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 142
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x146908c0, 0x0)
---

end of program
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 96, 60, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 96, 60, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8536
remove dir time 44
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8537 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8537
receive_execute: 0, 63
receive_execute: 2, 62
receive_execute: 16, 62
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 32, 57
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33434, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33434, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33434, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 0, 10
2023/03/09 08:25:59 for select break: 1
time breakdown 3: 89, 60, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 80, 67, 0
before receive testcase: 0 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:25:59 for select break: 1
2023/03/09 08:25:59 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:25:59 wg wait finish
2023/03/09 08:25:59 ------ all executors finish execution
2023/03/09 08:25:59 exec time: 142
2023/03/09 08:25:59 ----- PS len: 4
2023/03/09 08:25:59 [CLIENT] executor 3 has 3 replies
2023/03/09 08:25:59 fuzzer receive 2505 signal and 0 cover from executor 3
time breakdown 1: 64, 78, 0
2023/03/09 08:25:59 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:25:59 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:25:59 [SERVER] executor 1 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 0 has 0 replies
2023/03/09 08:25:59 [SERVER] executor 2 has 0 replies
2023/03/09 08:25:59 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:25:59 ----- no new client coverage: false, true
2023/03/09 08:25:59 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:25:59 prog length: 3
time breakdown 2: 65, 74, 0
before receive testcase: 0 0
2023/03/09 08:25:59 HasCrashFail:false HasNetFail:false
08:25:59 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x156808c0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8537
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 194
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8538 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8538
receive_execute: 13, 193
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 203
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 1, 219
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 223
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33439, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 10193, pid 33439, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33439, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 0 receive reply, reply.done 1
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 0, 0
execute_one time: 8, 17
time breakdown 3: 240, 26, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 214, 53, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:00 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:00 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:00 wg wait finish
2023/03/09 08:26:00 ------ all executors finish execution
2023/03/09 08:26:00 exec time: 269
2023/03/09 08:26:00 ----- PS len: 4
2023/03/09 08:26:00 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:00 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:00 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:00 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:00 ----- no new client coverage: false, true
2023/03/09 08:26:00 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:00 prog length: 3
2023/03/09 08:26:00 HasCrashFail:false HasNetFail:false
08:26:00 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x156908c0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 220, 50, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 206, 62, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8538
remove dir time 27
-----finish removing dir
receive_execute: 7, 65
receive_execute: 13, 66
mkdir time 9
executor 3 create dir /root/lustre-client/dfs-0-8539 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8539
receive_execute: 1, 65
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 36, 47
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33444, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33444, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33444, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 2, 8
executor 0 write_server_output
time breakdown 3: 83, 12, 0
before receive testcase: 0 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 67, 14, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 72, 22, 0
before receive testcase: 0 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:00 wg wait finish
2023/03/09 08:26:00 ------ all executors finish execution
2023/03/09 08:26:00 exec time: 94
2023/03/09 08:26:00 ----- PS len: 4
2023/03/09 08:26:00 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:00 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:00 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:00 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:00 ----- no new client coverage: false, true
2023/03/09 08:26:00 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:00 prog length: 3
2023/03/09 08:26:00 HasCrashFail:false HasNetFail:false
08:26:00 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x166609c0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 79, 18, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8539
remove dir time 123
-----finish removing dir
receive_execute: 15, 146
mkdir time 9
executor 3 create dir /root/lustre-client/dfs-0-8540 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8540
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 147
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 146
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 2, 1
receive_execute: 16, 171
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33449, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33449, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33449, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 75, 0, 0
execute_one time: 1, 75
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 187, 77, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:00 wg wait finish
2023/03/09 08:26:00 ------ all executors finish execution
2023/03/09 08:26:00 exec time: 259
2023/03/09 08:26:00 ----- PS len: 4
2023/03/09 08:26:00 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:00 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:00 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:00 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:00 ----- no new client coverage: false, true
2023/03/09 08:26:00 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:00 prog length: 3
2023/03/09 08:26:00 HasCrashFail:false HasNetFail:false
08:26:00 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x166940c1, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8540
time breakdown 0: 173, 97, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 170, 96, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 161, 112, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 270
-----finish removing dir
mkdir time 7
executor 3 create dir /root/lustre-client/dfs-0-8541 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8541
receive_execute: 0, 279
executor 0 before execute_one
receive_execute: 1, 277
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 299
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 11, 313
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33454, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33454, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33454, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 20, 1, 0
execute_one time: 1, 21
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 326, 28, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 304, 43, 0
before receive testcase: 0 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 278, 70, 0
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:00 wg wait finish
2023/03/09 08:26:00 ------ all executors finish execution
2023/03/09 08:26:00 exec time: 355
2023/03/09 08:26:00 ----- PS len: 4
2023/03/09 08:26:00 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:00 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:00 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:00 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:00 ----- no new client coverage: false, true
2023/03/09 08:26:00 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:00 prog length: 3
2023/03/09 08:26:00 HasCrashFail:false HasNetFail:false
08:26:00 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x176650c0, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8541
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 279, 76, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 40
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8542 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8542
receive_execute: 7, 48
receive_execute: 9, 50
receive_execute: 1, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 13, 51
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33459, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 7, 1
----- executor 3 write_call_output, size 10184, pid 33459, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33459, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 12, 8, 0
execute_one time: 1, 20
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 55, 57, 0
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 64, 52, 0
before receive testcase: 0 1
time breakdown 0: 52, 54, 0
before receive testcase: 0 1
before receive testcase: 0 0
time breakdown 1: 59, 57, 0
before receive testcase: 0 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:00 for select break: 1
2023/03/09 08:26:00 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:00 wg wait finish
2023/03/09 08:26:00 ------ all executors finish execution
2023/03/09 08:26:00 exec time: 148
2023/03/09 08:26:00 ----- PS len: 4
2023/03/09 08:26:00 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:00 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:00 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:00 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:00 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:00 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:00 ----- no new client coverage: false, true
2023/03/09 08:26:00 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:00 prog length: 3
2023/03/09 08:26:00 HasCrashFail:false HasNetFail:false
08:26:00 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x176908c0, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8542
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 93
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8543 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8543
receive_execute: 40, 103
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 47, 94
receive_execute: 44, 102
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 51, 122
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33464, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33464, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33464, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 67, 0, 0
execute_one time: 3, 67
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 173, 72, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:01 wg wait finish
2023/03/09 08:26:01 ------ all executors finish execution
2023/03/09 08:26:01 exec time: 204
2023/03/09 08:26:01 ----- PS len: 4
2023/03/09 08:26:01 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:01 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:01 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:01 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:01 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:01 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:01 ----- no new client coverage: false, true
2023/03/09 08:26:01 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:01 prog length: 3
2023/03/09 08:26:01 HasCrashFail:false HasNetFail:false
08:26:01 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x176940c1, 0x0)
---

end of program
time breakdown 0: 150, 94, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 143, 99, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8543
time breakdown 2: 141, 99, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 96
-----finish removing dir
mkdir time 19
executor 3 create dir /root/lustre-client/dfs-0-8544 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8544
receive_execute: 3, 119
receive_execute: 0, 114
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
receive_execute: 3, 126
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
execute_one time: 6, 0
receive_execute: 5, 134
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33469, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33469, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33469, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 1, 10
executor 0 write_server_output
time breakdown 3: 139, 13, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 114, 32, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:01 wg wait finish
2023/03/09 08:26:01 ------ all executors finish execution
2023/03/09 08:26:01 exec time: 177
2023/03/09 08:26:01 ----- PS len: 4
2023/03/09 08:26:01 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:01 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:01 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:01 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:01 ----- no new client coverage: false, true
2023/03/09 08:26:01 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:01 prog length: 3
2023/03/09 08:26:01 HasCrashFail:false HasNetFail:false
08:26:01 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x186640c0, 0x0)
---

end of program
time breakdown 1: 129, 51, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8544
time breakdown 0: 122, 49, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 253
-----finish removing dir
mkdir time 34
executor 3 create dir /root/lustre-client/dfs-0-8545 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8545
receive_execute: 37, 299
receive_execute: 26, 290
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 315
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 49, 302
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33474, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10193, pid 33474, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33474, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 1, 5
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 337, 23, 0
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 316, 15, 0
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 3: 351, 8, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 317, 29, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:01 wg wait finish
2023/03/09 08:26:01 ------ all executors finish execution
2023/03/09 08:26:01 exec time: 353
2023/03/09 08:26:01 ----- PS len: 4
2023/03/09 08:26:01 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:01 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:01 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:01 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:01 ----- no new client coverage: false, true
2023/03/09 08:26:01 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:01 prog length: 3
2023/03/09 08:26:01 HasCrashFail:false HasNetFail:false
08:26:01 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x196640c0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8545
remove dir time 59
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8546 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8546
receive_execute: 19, 89
receive_execute: 26, 88
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 92
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33479, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33479, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 2
executor 0 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- executor 3 write_call_output, size 122, pid 33479, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 1
receive_execute: 21, 90
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 114, 15, 0
before receive testcase: 0 1
time breakdown 3: 117, 12, 0
before receive testcase: 0 1
time breakdown 0: 108, 15, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 111, 21, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:01 wg wait finish
2023/03/09 08:26:01 ------ all executors finish execution
2023/03/09 08:26:01 exec time: 123
2023/03/09 08:26:01 ----- PS len: 4
2023/03/09 08:26:01 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:01 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:01 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:01 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:01 ----- no new client coverage: false, true
2023/03/09 08:26:01 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:01 prog length: 3
2023/03/09 08:26:01 HasCrashFail:false HasNetFail:false
08:26:01 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x1a6680c0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8546
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 43
-----finish removing dir
receive_execute: 13, 49
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8547 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8547
receive_execute: 18, 49
receive_execute: 24, 44
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 21, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33484, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10184, pid 33484, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33484, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 0, 0
execute_one time: 1, 16
executor 1 write_server_output
time breakdown 3: 73, 29, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 69, 33, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 67, 43, 0
before receive testcase: 0 1
time breakdown 2: 63, 41, 0
before receive testcase: 0 1
2023/03/09 08:26:01 for select break: 1
2023/03/09 08:26:01 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:01 wg wait finish
2023/03/09 08:26:01 ------ all executors finish execution
2023/03/09 08:26:01 exec time: 116
2023/03/09 08:26:01 ----- PS len: 4
2023/03/09 08:26:01 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:01 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:01 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:01 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:01 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:01 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:01 ----- no new client coverage: false, true
2023/03/09 08:26:01 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:01 prog length: 3
2023/03/09 08:26:01 HasCrashFail:false HasNetFail:false
08:26:01 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x1f581c80, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8547
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 216
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8548 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8548
receive_execute: 24, 228
receive_execute: 28, 227
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 32, 248
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 37, 247
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33489, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33489, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 10193, pid 33489, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 94, 1, 0
execute_one time: 0, 95
time breakdown 3: 284, 150, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 254, 173, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 256, 177, 0
before receive testcase: 0 0
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:02 wg wait finish
2023/03/09 08:26:02 ------ all executors finish execution
2023/03/09 08:26:02 exec time: 417
2023/03/09 08:26:02 ----- PS len: 4
2023/03/09 08:26:02 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:02 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:02 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:02 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:02 ----- no new client coverage: false, true
2023/03/09 08:26:02 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:02 prog length: 3
2023/03/09 08:26:02 HasCrashFail:false HasNetFail:false
08:26:02 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x20581c40, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 280, 165, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8548
remove dir time 87
-----finish removing dir
receive_execute: 4, 112
receive_execute: 9, 112
mkdir time 18
executor 3 create dir /root/lustre-client/dfs-0-8549 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8549
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 14, 112
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 17, 126
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
----- executor 3 write_call_output, size 5334, pid 33494, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33494, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33494, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 1, 14
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 132, 33, 0
before receive testcase: 0 0
time breakdown 3: 143, 21, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 116, 44, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 121, 44, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:02 wg wait finish
2023/03/09 08:26:02 ------ all executors finish execution
2023/03/09 08:26:02 exec time: 175
2023/03/09 08:26:02 ----- PS len: 4
2023/03/09 08:26:02 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:02 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:02 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:02 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:02 ----- no new client coverage: false, true
2023/03/09 08:26:02 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:02 prog length: 3
2023/03/09 08:26:02 HasCrashFail:false HasNetFail:false
08:26:02 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x40086602, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8549
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 72
-----finish removing dir
mkdir time 5
executor 3 create dir /root/lustre-client/dfs-0-8550 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8550
receive_execute: 26, 95
receive_execute: 32, 88
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 27, 104
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 46, 105
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33499, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33499, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 34, pid 33499, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 20, 1, 0
execute_one time: 1, 21
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 158, 24, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 122, 54, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 131, 46, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:02 wg wait finish
2023/03/09 08:26:02 ------ all executors finish execution
2023/03/09 08:26:02 exec time: 161
2023/03/09 08:26:02 ----- PS len: 4
2023/03/09 08:26:02 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:02 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/09 08:26:02 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:02 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:02 ----- no new client coverage: true, true
2023/03/09 08:26:02 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:02 prog length: 3
2023/03/09 08:26:02 HasCrashFail:false HasNetFail:false
08:26:02 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x40086685, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8550
time breakdown 0: 127, 64, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 52
-----finish removing dir
mkdir time 11
executor 3 create dir /root/lustre-client/dfs-0-8551 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8551
receive_execute: 12, 63
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 66
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 14, 100
receive_execute: 15, 103
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33504, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33504, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 10193, pid 33504, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 81, 1, 0
execute_one time: 1, 83
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 118, 86, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 68, 125, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 75, 130, 0
before receive testcase: 0 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:02 for select break: 1
2023/03/09 08:26:02 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:02 wg wait finish
2023/03/09 08:26:02 ------ all executors finish execution
2023/03/09 08:26:02 exec time: 205
2023/03/09 08:26:02 ----- PS len: 4
2023/03/09 08:26:02 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:02 fuzzer receive 2508 signal and 0 cover from executor 3
time breakdown 1: 114, 102, 0
2023/03/09 08:26:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:26:02 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:02 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:02 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:02 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/09 08:26:02 ----- no new client coverage: false, true
2023/03/09 08:26:02 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:02 prog length: 3
2023/03/09 08:26:02 HasCrashFail:false HasNetFail:false
08:26:02 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x4008669a, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8551
remove dir time 50
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8552 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8552
receive_execute: 11, 66
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 0, 75
receive_execute: 27, 64
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 13, 66
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33509, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33509, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 30, pid 33509, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 3 signal number : 11
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 41, 1, 0
execute_one time: 3, 43
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 79, 83, 0
before receive testcase: 0 0
time breakdown 3: 92, 71, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 77, 94, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 75, 106, 0
before receive testcase: 0 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:03 wg wait finish
2023/03/09 08:26:03 ------ all executors finish execution
2023/03/09 08:26:03 exec time: 187
2023/03/09 08:26:03 ----- PS len: 4
2023/03/09 08:26:03 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:03 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:03 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/09 08:26:03 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:03 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:03 ----- no new client coverage: true, true
2023/03/09 08:26:03 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:03 prog length: 3
2023/03/09 08:26:03 HasCrashFail:false HasNetFail:false
08:26:03 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x4008669b, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8552
remove dir time 84
-----finish removing dir
receive_execute: 27, 110
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8553 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8553
receive_execute: 8, 108
receive_execute: 61, 90
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 5334, pid 33514, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
receive_execute: 36, 109
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33514, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 10184, pid 33514, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 88, 1, 0
execute_one time: 1, 89
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 151, 92, 0
before receive testcase: 0 0
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 141, 93, 0
before receive testcase: 0 1
time breakdown 1: 116, 110, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 158, 92, 0
before receive testcase: 0 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:03 wg wait finish
2023/03/09 08:26:03 ------ all executors finish execution
2023/03/09 08:26:03 exec time: 239
2023/03/09 08:26:03 ----- PS len: 4
2023/03/09 08:26:03 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:03 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:03 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:03 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:03 ----- no new client coverage: false, true
2023/03/09 08:26:03 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:03 prog length: 3
2023/03/09 08:26:03 HasCrashFail:false HasNetFail:false
08:26:03 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x400866a6, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8553
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 173
-----finish removing dir
mkdir time 48
executor 3 create dir /root/lustre-client/dfs-0-8554 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8554
receive_execute: 33, 228
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 239
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 231
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 43, 246
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33519, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33519, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 807, pid 33519, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 807, flag collect 0
----- executor 3 signal number : 135
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
time breakdown 3: 289, 11, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
time breakdown 2: 261, 38, 0
2023/03/09 08:26:03 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 256, 34, 0
before receive testcase: 0 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:03 wg wait finish
2023/03/09 08:26:03 ------ all executors finish execution
2023/03/09 08:26:03 exec time: 276
2023/03/09 08:26:03 ----- PS len: 4
2023/03/09 08:26:03 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:03 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 135 signal and 0 cover from executor 3
2023/03/09 08:26:03 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:03 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:03 ----- no new client coverage: true, true
2023/03/09 08:26:03 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:03 prog length: 3
2023/03/09 08:26:03 HasCrashFail:false HasNetFail:false
08:26:03 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x400866d6, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 258, 27, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8554
remove dir time 39
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8555 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8555
receive_execute: 10, 66
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 75
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 75
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33524, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33524, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 33524, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 36, 1, 0
execute_one time: 9, 37
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 84, 60, 0
before receive testcase: 0 1
time breakdown 3: 99, 47, 0
before receive testcase: 0 1
time breakdown 0: 76, 71, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:03 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:03 wg wait finish
2023/03/09 08:26:03 ------ all executors finish execution
2023/03/09 08:26:03 exec time: 148
2023/03/09 08:26:03 ----- PS len: 4
2023/03/09 08:26:03 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:03 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/09 08:26:03 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:03 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:03 ----- no new client coverage: true, true
2023/03/09 08:26:03 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:03 prog length: 3
2023/03/09 08:26:03 HasCrashFail:false HasNetFail:false
08:26:03 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x400866d7, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 76, 78, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8555
remove dir time 233
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8556 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8556
receive_execute: 12, 244
receive_execute: 13, 243
receive_execute: 5, 244
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 22, 238
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33529, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10184, pid 33529, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 33529, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 1, 10
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 256, 18, 0
time breakdown 3: 260, 12, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 256, 15, 0
before receive testcase: 0 1
executor 1, execute_one inner time: 12, 0, 0
execute_one time: 7, 12
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:03 for select break: 1
2023/03/09 08:26:03 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:03 wg wait finish
2023/03/09 08:26:03 ------ all executors finish execution
2023/03/09 08:26:03 exec time: 265
2023/03/09 08:26:03 ----- PS len: 4
2023/03/09 08:26:03 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:03 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:03 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/09 08:26:03 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:03 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:03 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/09 08:26:03 ----- no new client coverage: true, true
2023/03/09 08:26:03 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:03 prog length: 3
2023/03/09 08:26:03 HasCrashFail:false HasNetFail:false
08:26:03 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x40087602, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 249, 21, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8556
remove dir time 101
-----finish removing dir
mkdir time 13
executor 3 create dir /root/lustre-client/dfs-0-8557 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8557
receive_execute: 0, 131
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 133
receive_execute: 5, 133
receive_execute: 19, 121
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5337, pid 33534, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 10305, pid 33534, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10305, flag collect 0
----- executor 3 signal number : 1464
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 28, pid 33534, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 37, 1, 0
execute_one time: 1, 38
time breakdown 3: 140, 41, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 131, 44, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 134, 45, 0
before receive testcase: 0 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:04 wg wait finish
2023/03/09 08:26:04 ------ all executors finish execution
2023/03/09 08:26:04 exec time: 183
2023/03/09 08:26:04 ----- PS len: 4
2023/03/09 08:26:04 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:04 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 1464 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/09 08:26:04 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:04 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:04 ----- no new client coverage: true, true
2023/03/09 08:26:04 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:04 prog length: 3
2023/03/09 08:26:04 HasCrashFail:false HasNetFail:false
08:26:04 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x401466fc, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8557
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 139, 48, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 25
-----finish removing dir
receive_execute: 5, 32
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8558 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8558
executor 0 before execute_one
receive_execute: 8, 33
receive_execute: 2, 32
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 13, 32
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 5, 1
----- executor 3 write_call_output, size 5334, pid 33539, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33539, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 75, pid 33539, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 75, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 0, 0
execute_one time: 1, 14
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 38, 22, 0
time breakdown 3: 45, 16, 0
before receive testcase: 0 1
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 41, 27, 0
before receive testcase: 0 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:04 wg wait finish
2023/03/09 08:26:04 ------ all executors finish execution
2023/03/09 08:26:04 exec time: 68
2023/03/09 08:26:04 ----- PS len: 4
2023/03/09 08:26:04 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:04 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/09 08:26:04 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:04 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:04 ----- no new client coverage: true, true
2023/03/09 08:26:04 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:04 prog length: 3
2023/03/09 08:26:04 HasCrashFail:false HasNetFail:false
08:26:04 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x401866d5, 0x0)
---

end of program
----- executor 0 receive testcase
time breakdown 2: 35, 34, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8558
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8559 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8559
receive_execute: 10, 30
receive_execute: 10, 36
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 1, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33544, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33544, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 77, pid 33544, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 77, flag collect 0
----- executor 3 signal number : 18
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 18, 1, 0
execute_one time: 1, 19
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 61, 39, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 46, 48, 0
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 40, 57, 0
before receive testcase: 0 0
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:04 wg wait finish
2023/03/09 08:26:04 ------ all executors finish execution
2023/03/09 08:26:04 exec time: 99
2023/03/09 08:26:04 ----- PS len: 4
2023/03/09 08:26:04 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:04 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/09 08:26:04 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:04 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:04 ----- no new client coverage: true, true
2023/03/09 08:26:04 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:04 prog length: 3
2023/03/09 08:26:04 HasCrashFail:false HasNetFail:false
08:26:04 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x401866d8, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8559
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 43, 57, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 160
-----finish removing dir
mkdir time 13
executor 3 create dir /root/lustre-client/dfs-0-8560 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8560
receive_execute: 13, 172
receive_execute: 14, 170
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 173
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 16, 180
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5337, pid 33549, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 10193, pid 33549, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 30, pid 33549, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 3 signal number : 11
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 0, 0
execute_one time: 1, 19
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 197, 23, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 184, 32, 0
before receive testcase: 0 0
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 177, 31, 0
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:04 wg wait finish
2023/03/09 08:26:04 ------ all executors finish execution
2023/03/09 08:26:04 exec time: 210
2023/03/09 08:26:04 ----- PS len: 4
2023/03/09 08:26:04 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:04 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/09 08:26:04 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:04 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/09 08:26:04 ----- no new client coverage: true, true
2023/03/09 08:26:04 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:04 prog length: 3
2023/03/09 08:26:04 HasCrashFail:false HasNetFail:false
08:26:04 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x401866d9, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 185, 37, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8560
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 84
-----finish removing dir
receive_execute: 1, 86
receive_execute: 6, 87
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8561 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8561
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 85
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 7, 100
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33554, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33554, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 38
cover_reset in execute_call
----- executor 3 write_call_output, size 74, pid 33554, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 74, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 71, 0, 0
execute_one time: 1, 71
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 88, 87, 0
before receive testcase: 0 1
2023/03/09 08:26:04 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 --------- executor 1 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 100, 78, 0
before receive testcase: 0 0
time breakdown 3: 107, 73, 0
before receive testcase: 0 0
time breakdown 1: 93, 89, 0
before receive testcase: 0 0
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:04 wg wait finish
2023/03/09 08:26:04 ------ all executors finish execution
2023/03/09 08:26:04 exec time: 191
2023/03/09 08:26:04 ----- PS len: 4
2023/03/09 08:26:04 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:04 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/09 08:26:04 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:04 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:04 ----- no new client coverage: true, true
2023/03/09 08:26:04 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:04 prog length: 3
2023/03/09 08:26:04 HasCrashFail:false HasNetFail:false
08:26:04 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x401c5820, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8561
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 85
-----finish removing dir
receive_execute: 19, 102
mkdir time 19
executor 3 create dir /root/lustre-client/dfs-0-8562 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8562
receive_execute: 16, 104
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 15, 104
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 112
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33559, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 10185, pid 33559, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 33, pid 33559, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 33, flag collect 0
----- executor 3 signal number : 14
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 39, 1, 0
execute_one time: 1, 40
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 131, 42, 0
before receive testcase: 0 1
time breakdown 0: 121, 52, 0
before receive testcase: 0 1
2023/03/09 08:26:04 for select break: 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:04 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 2 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 126, 53, 0
before receive testcase: 0 1
time breakdown 1: 120, 60, 0
before receive testcase: 0 1
2023/03/09 08:26:04 for select break: 1
2023/03/09 08:26:04 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:04 wg wait finish
2023/03/09 08:26:04 ------ all executors finish execution
2023/03/09 08:26:04 exec time: 177
2023/03/09 08:26:04 ----- PS len: 4
2023/03/09 08:26:04 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:04 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:04 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/09 08:26:04 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:04 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:04 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:04 ----- no new client coverage: true, true
2023/03/09 08:26:04 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:04 prog length: 3
2023/03/09 08:26:04 HasCrashFail:false HasNetFail:false
08:26:04 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x402066db, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8562
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 200
-----finish removing dir
mkdir time 7
executor 3 create dir /root/lustre-client/dfs-0-8563 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8563
receive_execute: 15, 210
receive_execute: 28, 196
receive_execute: 36, 197
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 28, 214
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33564, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10184, pid 33564, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 46
cover_reset in execute_call
----- executor 3 write_call_output, size 28, pid 33564, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 3 receive reply, reply.done 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 71, 1, 0
execute_one time: 1, 72
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 242, 75, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 226, 86, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 224, 99, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 238, 90, 0
before receive testcase: 0 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:05 wg wait finish
2023/03/09 08:26:05 ------ all executors finish execution
2023/03/09 08:26:05 exec time: 317
2023/03/09 08:26:05 ----- PS len: 4
2023/03/09 08:26:05 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:05 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/09 08:26:05 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:05 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:05 ----- no new client coverage: true, true
2023/03/09 08:26:05 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:05 prog length: 3
2023/03/09 08:26:05 HasCrashFail:false HasNetFail:false
08:26:05 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x411066fd, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8563
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 177
-----finish removing dir
mkdir time 19
executor 3 create dir /root/lustre-client/dfs-0-8564 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8564
receive_execute: 32, 195
receive_execute: 10, 205
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 26, 207
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33569, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33569, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 4
receive_execute: 13, 206
cover_reset in execute_call
----- executor 3 write_call_output, size 33, pid 33569, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 33, flag collect 0
----- executor 3 signal number : 14
----- completed 3
execute_one loop: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 8, 2, 0
execute_one time: 1, 10
2023/03/09 08:26:05 for select break: 1
executor 0 write_server_output
executor 2 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 228, 9, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 227, 21, 0
before receive testcase: 0 1
time breakdown 3: 233, 15, 0
before receive testcase: 0 1
2023/03/09 08:26:05 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 215, 44, 0
before receive testcase: 0 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:05 wg wait finish
2023/03/09 08:26:05 ------ all executors finish execution
2023/03/09 08:26:05 exec time: 252
2023/03/09 08:26:05 ----- PS len: 4
2023/03/09 08:26:05 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:05 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/09 08:26:05 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:05 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:05 ----- no new client coverage: true, true
2023/03/09 08:26:05 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:05 prog length: 3
2023/03/09 08:26:05 HasCrashFail:false HasNetFail:false
08:26:05 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x54000000, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8564
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 7
executor 3 create dir /root/lustre-client/dfs-0-8565 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8565
receive_execute: 24, 49
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 48
receive_execute: 2, 51
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 29, 57
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33574, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
----- executor 3 write_call_output, size 10185, pid 33574, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33574, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 14, 7, 0
execute_one time: 1, 21
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 53, 30, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 76, 34, 0
before receive testcase: 0 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 86, 23, 0
before receive testcase: 0 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:05 wg wait finish
2023/03/09 08:26:05 ------ all executors finish execution
2023/03/09 08:26:05 exec time: 100
2023/03/09 08:26:05 ----- PS len: 4
2023/03/09 08:26:05 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:05 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:05 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:05 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:05 ----- no new client coverage: false, true
2023/03/09 08:26:05 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:05 prog length: 3
2023/03/09 08:26:05 HasCrashFail:false HasNetFail:false
08:26:05 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x6c6608c0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 73, 51, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8565
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 177
-----finish removing dir
receive_execute: 0, 187
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8566 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8566
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 28, 178
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 199
receive_execute: 27, 194
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33579, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 40
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33579, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 41
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33579, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 112, 0, 0
execute_one time: 0, 112
time breakdown 3: 221, 114, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 218, 119, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 206, 136, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 187, 137, 0
before receive testcase: 0 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:05 for select break: 1
2023/03/09 08:26:05 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:05 wg wait finish
2023/03/09 08:26:05 ------ all executors finish execution
2023/03/09 08:26:05 exec time: 343
2023/03/09 08:26:05 ----- PS len: 4
2023/03/09 08:26:05 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:05 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:05 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:05 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:05 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:05 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:05 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:05 ----- no new client coverage: false, true
2023/03/09 08:26:05 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:05 prog length: 3
2023/03/09 08:26:05 HasCrashFail:false HasNetFail:false
08:26:05 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x7f668080, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8566
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 358
-----finish removing dir
mkdir time 55
executor 3 create dir /root/lustre-client/dfs-0-8567 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8567
receive_execute: 19, 413
receive_execute: 24, 414
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 20, 419
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 440
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33584, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33584, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33584, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 18, 1, 0
execute_one time: 0, 19
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 468, 21, 0
before receive testcase: 0 1
time breakdown 2: 434, 50, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
before receive testcase: 0 0
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 439, 54, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:06 wg wait finish
2023/03/09 08:26:06 ------ all executors finish execution
2023/03/09 08:26:06 exec time: 479
2023/03/09 08:26:06 ----- PS len: 4
time breakdown 1: 439, 60, 0
before receive testcase: 0 0
2023/03/09 08:26:06 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:06 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:06 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:06 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:06 ----- no new client coverage: false, true
2023/03/09 08:26:06 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:06 prog length: 3
2023/03/09 08:26:06 HasCrashFail:false HasNetFail:false
08:26:06 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x800466af, 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8567
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 19
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8568 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8568
receive_execute: 11, 24
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 19, 30
receive_execute: 30, 30
receive_execute: 19, 33
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33589, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 10192, pid 33589, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 110, pid 33589, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 110, flag collect 0
----- executor 3 signal number : 35
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 0, 10
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 60, 12, 0
before receive testcase: 0 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 49, 17, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:06 wg wait finish
2023/03/09 08:26:06 ------ all executors finish execution
2023/03/09 08:26:06 exec time: 59
2023/03/09 08:26:06 ----- PS len: 4
2023/03/09 08:26:06 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:06 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/09 08:26:06 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:06 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:06 ----- no new client coverage: true, true
2023/03/09 08:26:06 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:06 prog length: 3
2023/03/09 08:26:06 HasCrashFail:false HasNetFail:false
08:26:06 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x800466f7, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 37, 30, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 52, 26, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8568
remove dir time 53
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8569 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8569
receive_execute: 2, 78
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 0, 78
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 26, 71
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 12, 78
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
----- executor 3 write_call_output, size 5334, pid 33594, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33594, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 34, pid 33594, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 24, 0, 0
execute_one time: 0, 24
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 97, 25, 0
before receive testcase: 0 0
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 90, 36, 0
before receive testcase: 0 0
time breakdown 2: 78, 41, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:06 wg wait finish
2023/03/09 08:26:06 ------ all executors finish execution
2023/03/09 08:26:06 exec time: 142
2023/03/09 08:26:06 ----- PS len: 4
2023/03/09 08:26:06 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:06 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/09 08:26:06 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:06 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:06 ----- no new client coverage: true, true
2023/03/09 08:26:06 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:06 prog length: 3
2023/03/09 08:26:06 HasCrashFail:false HasNetFail:false
08:26:06 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x80086601, 0x0)
---

end of program
time breakdown 1: 80, 63, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8569
remove dir time 40
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8570 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8570
receive_execute: 25, 71
receive_execute: 1, 71
receive_execute: 24, 74
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 57, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33599, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10185, pid 33599, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 2591, pid 33599, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 2591, flag collect 0
----- executor 3 signal number : 128
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 47, 1, 0
execute_one time: 1, 49
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 108, 51, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:06 wg wait finish
2023/03/09 08:26:06 ------ all executors finish execution
2023/03/09 08:26:06 exec time: 133
2023/03/09 08:26:06 ----- PS len: 4
2023/03/09 08:26:06 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:06 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/09 08:26:06 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:06 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:06 ----- no new client coverage: true, true
2023/03/09 08:26:06 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:06 prog length: 3
2023/03/09 08:26:06 HasCrashFail:false HasNetFail:false
08:26:06 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x80086603, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8570
time breakdown 0: 96, 60, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 98, 56, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 72, 61, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 54
-----finish removing dir
receive_execute: 3, 68
mkdir time 13
executor 3 create dir /root/lustre-client/dfs-0-8571 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8571
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
receive_execute: 2, 77
receive_execute: 0, 88
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 103
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33604, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33604, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 29, pid 33604, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 3 signal number : 10
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 21, 1, 0
execute_one time: 1, 23
executor 0 write_server_output
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 79, 54, 0
before receive testcase: 0 0
time breakdown 3: 112, 25, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 71, 66, 0
before receive testcase: 0 1
2023/03/09 08:26:06 for select break: 1
2023/03/09 08:26:06 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:06 wg wait finish
2023/03/09 08:26:06 ------ all executors finish execution
2023/03/09 08:26:06 exec time: 139
2023/03/09 08:26:06 ----- PS len: 4
2023/03/09 08:26:06 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:06 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:06 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/09 08:26:06 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:06 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:06 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:06 ----- no new client coverage: true, true
2023/03/09 08:26:06 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:06 prog length: 3
2023/03/09 08:26:06 HasCrashFail:false HasNetFail:false
08:26:06 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x800866a8, 0x0)
---

end of program
----- executor 0 receive testcase
time breakdown 1: 88, 49, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8571
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 47
-----finish removing dir
receive_execute: 8, 58
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8572 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8572
receive_execute: 0, 56
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 13, 57
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 19, 65
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33609, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33609, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 10184, pid 33609, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 102, 0, 0
execute_one time: 1, 102
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 66, 121, 0
before receive testcase: 0 0
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 84, 104, 0
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 70, 118, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:07 wg wait finish
2023/03/09 08:26:07 ------ all executors finish execution
2023/03/09 08:26:07 exec time: 195
2023/03/09 08:26:07 ----- PS len: 4
2023/03/09 08:26:07 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:07 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:07 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:07 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:07 ----- no new client coverage: false, true
2023/03/09 08:26:07 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:07 prog length: 3
2023/03/09 08:26:07 HasCrashFail:false HasNetFail:false
08:26:07 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x800866ad, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 56, 137, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8572
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 131
-----finish removing dir
receive_execute: 28, 137
mkdir time 11
executor 3 create dir /root/lustre-client/dfs-0-8573 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8573
receive_execute: 0, 153
receive_execute: 25, 148
receive_execute: 18, 151
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 5337, pid 33614, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10192, pid 33614, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 30, pid 33614, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 30, flag collect 0
----- executor 3 signal number : 11
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 14, 1, 0
execute_one time: 1, 15
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 3 receive reply, reply.done 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 180, 7, 0
before receive testcase: 0 1
time breakdown 3: 173, 18, 0
before receive testcase: 0 0
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 153, 31, 0
2023/03/09 08:26:07 for select break: 1
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 171, 34, 0
2023/03/09 08:26:07 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:07 wg wait finish
2023/03/09 08:26:07 ------ all executors finish execution
2023/03/09 08:26:07 exec time: 190
2023/03/09 08:26:07 ----- PS len: 4
2023/03/09 08:26:07 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:07 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/09 08:26:07 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 2 has 0 replies
before receive testcase: 0 1
2023/03/09 08:26:07 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:07 ----- no new client coverage: true, true
2023/03/09 08:26:07 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:07 prog length: 3
2023/03/09 08:26:07 HasCrashFail:false HasNetFail:false
08:26:07 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x80087601, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8573
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 118
-----finish removing dir
mkdir time 35
executor 3 create dir /root/lustre-client/dfs-0-8574 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8574
receive_execute: 37, 133
receive_execute: 6, 154
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 18, 161
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 152
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33619, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33619, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 29, pid 33619, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 3 signal number : 10
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 62, 0, 0
execute_one time: 1, 62
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 179, 65, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 160, 78, 0
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:07 wg wait finish
2023/03/09 08:26:07 ------ all executors finish execution
2023/03/09 08:26:07 exec time: 236
2023/03/09 08:26:07 ----- PS len: 4
2023/03/09 08:26:07 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:07 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/09 08:26:07 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:07 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:07 ----- no new client coverage: false, true
2023/03/09 08:26:07 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:07 prog length: 3
2023/03/09 08:26:07 HasCrashFail:false HasNetFail:false
08:26:07 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x800c6613, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8574
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 166, 69, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 170, 73, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8575 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8575
receive_execute: 2, 38
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 47
receive_execute: 3, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33624, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33624, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 32, pid 33624, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 32, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 48, 1, 0
execute_one time: 26, 49
2023/03/09 08:26:07 for select break: 1
executor 2 write_server_output
executor 0 write_server_output
2023/03/09 08:26:07 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 35, 91, 0
before receive testcase: 0 0
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 57, 78, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:07 wg wait finish
2023/03/09 08:26:07 ------ all executors finish execution
2023/03/09 08:26:07 exec time: 133
2023/03/09 08:26:07 ----- PS len: 4
2023/03/09 08:26:07 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:07 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:07 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:07 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/09 08:26:07 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:07 fsMds: [map[] map[] map[] map[]]
time breakdown 1: 40, 95, 0
2023/03/09 08:26:07 ----- no new client coverage: true, true
2023/03/09 08:26:07 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:07 prog length: 3
2023/03/09 08:26:07 HasCrashFail:false HasNetFail:false
08:26:07 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x801066f2, 0x0)
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8575
time breakdown 0: 51, 80, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 103
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8576 successfully
receive_execute: 5, 105
current dir: executor 3: /root/lustre-client/dfs-0-8576
receive_execute: 5, 105
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
receive_execute: 0, 118
receive_execute: 8, 131
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 5
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5280, pid 33629, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5280, flag collect 0
----- executor 3 signal number : 2497
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33629, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1473
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 34, pid 33629, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 3 signal number : 15
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 1, 10
time breakdown 3: 147, 12, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 118, 40, 0
before receive testcase: 0 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 111, 50, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 111, 82, 0
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:07 wg wait finish
2023/03/09 08:26:07 ------ all executors finish execution
2023/03/09 08:26:07 exec time: 188
2023/03/09 08:26:07 ----- PS len: 4
2023/03/09 08:26:07 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:07 fuzzer receive 2497 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 1473 signal and 0 cover from executor 3
2023/03/09 08:26:07 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/09 08:26:07 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:07 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:07 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:07 ----- no new client coverage: true, true
2023/03/09 08:26:07 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:07 prog length: 3
2023/03/09 08:26:07 HasCrashFail:false HasNetFail:false
08:26:07 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x801c581f, 0x0)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8576
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 33, 37
executor 2 before execute_one
remove dir time 27
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8577 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8577
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 34, 34
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 64
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 40, 61
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5333, pid 33634, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5333, flag collect 0
----- executor 3 signal number : 2504
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33634, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 32, pid 33634, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 32, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 39, 0, 0
execute_one time: 1, 39
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 3: 114, 41, 0
before receive testcase: 0 0
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:07 for select break: 1
2023/03/09 08:26:07 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 71, 99, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 64, 70, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:08 wg wait finish
2023/03/09 08:26:08 ------ all executors finish execution
2023/03/09 08:26:08 exec time: 167
2023/03/09 08:26:08 ----- PS len: 4
2023/03/09 08:26:08 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:08 fuzzer receive 2504 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/09 08:26:08 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:08 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:08 ----- no new client coverage: true, true
2023/03/09 08:26:08 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:08 prog length: 3
2023/03/09 08:26:08 HasCrashFail:false HasNetFail:false
08:26:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x8020669b, 0x0)
---

end of program
----- executor 0 receive testcase
time breakdown 1: 68, 117, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8577
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 268
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8578 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8578
receive_execute: 29, 283
receive_execute: 14, 281
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 32, 291
receive_execute: 60, 279
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33639, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10184, pid 33639, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 38
cover_reset in execute_call
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 5241, pid 33639, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 5241, flag collect 0
----- executor 3 signal number : 183
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 141, 1, 0
execute_one time: 1, 142
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 339, 156, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 0: 323, 158, 0
before receive testcase: 0 0
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 2: 312, 169, 0
before receive testcase: 0 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:08 wg wait finish
2023/03/09 08:26:08 ------ all executors finish execution
2023/03/09 08:26:08 exec time: 462
2023/03/09 08:26:08 ----- PS len: 4
2023/03/09 08:26:08 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:08 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 183 signal and 0 cover from executor 3
2023/03/09 08:26:08 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:08 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:08 ----- no new client coverage: true, true
2023/03/09 08:26:08 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:08 prog length: 3
2023/03/09 08:26:08 HasCrashFail:false HasNetFail:false
08:26:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x8080667f, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8578
time breakdown 1: 295, 175, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 60
-----finish removing dir
mkdir time 15
executor 3 create dir /root/lustre-client/dfs-0-8579 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8579
receive_execute: 7, 70
receive_execute: 13, 77
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 11, 83
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 16, 110
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33644, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10190, pid 33644, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10190, flag collect 0
----- executor 3 signal number : 1457
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 41, pid 33644, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 41, flag collect 0
----- executor 3 signal number : 20
----- completed 3
execute_one loop: 0, 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 13, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 90, 55, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 94, 48, 0
before receive testcase: 0 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 126, 20, 0
before receive testcase: 0 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:08 wg wait finish
2023/03/09 08:26:08 ------ all executors finish execution
2023/03/09 08:26:08 exec time: 141
2023/03/09 08:26:08 ----- PS len: 4
2023/03/09 08:26:08 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:08 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 1457 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/09 08:26:08 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:08 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:08 ----- no new client coverage: true, true
2023/03/09 08:26:08 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:08 prog length: 3
2023/03/09 08:26:08 HasCrashFail:false HasNetFail:false
08:26:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x80806683, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8579
executor 0: prog_data_offset 1312, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 100, 44, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 151
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8580 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8580
receive_execute: 8, 154
receive_execute: 0, 156
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 10, 159
receive_execute: 12, 158
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33649, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33649, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 42, pid 33649, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 42, flag collect 0
----- executor 3 signal number : 21
----- completed 3
execute_one loop: 0, 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 33, 0, 0
execute_one time: 1, 33
executor 1 write_server_output
time breakdown 3: 170, 35, 1
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 169, 36, 0
before receive testcase: 0 1
time breakdown 1: 156, 40, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:08 wg wait finish
2023/03/09 08:26:08 ------ all executors finish execution
2023/03/09 08:26:08 exec time: 207
2023/03/09 08:26:08 ----- PS len: 4
2023/03/09 08:26:08 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:08 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/09 08:26:08 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:08 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:08 ----- no new client coverage: true, true
2023/03/09 08:26:08 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:08 prog length: 3
2023/03/09 08:26:08 HasCrashFail:false HasNetFail:false
08:26:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x836608c0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8580
time breakdown 2: 163, 44, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 92
-----finish removing dir
receive_execute: 15, 93
receive_execute: 21, 84
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8581 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8581
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 13, 104
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33654, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 7, 100
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 10183, pid 33654, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10183, flag collect 0
----- executor 3 signal number : 1457
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 130, pid 33654, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 3 signal number : 107
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 23, 1, 0
execute_one time: 1, 24
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 108, 37, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 107, 32, 0
before receive testcase: 0 1
time breakdown 3: 117, 28, 0
before receive testcase: 0 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 105, 39, 0
before receive testcase: 0 1
2023/03/09 08:26:08 for select break: 1
2023/03/09 08:26:08 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:08 wg wait finish
2023/03/09 08:26:08 ------ all executors finish execution
2023/03/09 08:26:08 exec time: 160
2023/03/09 08:26:08 ----- PS len: 4
2023/03/09 08:26:08 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:08 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 1457 signal and 0 cover from executor 3
2023/03/09 08:26:08 fuzzer receive 107 signal and 0 cover from executor 3
2023/03/09 08:26:08 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:08 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:08 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:08 ----- no new client coverage: false, true
2023/03/09 08:26:08 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:08 prog length: 3
2023/03/09 08:26:08 HasCrashFail:false HasNetFail:false
08:26:08 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x83668080, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8581
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 140
-----finish removing dir
receive_execute: 27, 174
mkdir time 33
executor 3 create dir /root/lustre-client/dfs-0-8582 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8582
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 27, 174
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 29, 182
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33659, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
receive_execute: 29, 182
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10184, pid 33659, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33659, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 18, 1, 0
execute_one time: 0, 20
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 201, 34, 0
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 211, 24, 0
before receive testcase: 0 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 212, 21, 0
before receive testcase: 0 1
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:09 wg wait finish
2023/03/09 08:26:09 ------ all executors finish execution
2023/03/09 08:26:09 exec time: 225
2023/03/09 08:26:09 ----- PS len: 4
2023/03/09 08:26:09 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:09 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:09 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:09 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:09 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:09 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:09 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:09 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:09 ----- no new client coverage: false, true
2023/03/09 08:26:09 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:09 prog length: 3
2023/03/09 08:26:09 HasCrashFail:false HasNetFail:false
08:26:09 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x85660840, 0x0)
---

end of program
time breakdown 1: 201, 51, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8582
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 137
-----finish removing dir
mkdir time 7
executor 3 create dir /root/lustre-client/dfs-0-8583 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8583
receive_execute: 12, 151
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 0, 166
receive_execute: 28, 144
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 29, 223
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33664, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33664, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33664, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 66, 0, 0
execute_one time: 2, 66
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 252, 73, 0
before receive testcase: 0 1
time breakdown 2: 172, 151, 0
before receive testcase: 0 1
time breakdown 1: 166, 144, 0
before receive testcase: 0 0
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:09 wg wait finish
2023/03/09 08:26:09 ------ all executors finish execution
2023/03/09 08:26:09 exec time: 317
2023/03/09 08:26:09 ----- PS len: 4
2023/03/09 08:26:09 [CLIENT] executor 3 has 3 replies
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:09 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:09 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:09 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:09 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:09 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:09 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:09 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:09 ----- no new client coverage: false, true
2023/03/09 08:26:09 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:09 prog length: 3
2023/03/09 08:26:09 HasCrashFail:false HasNetFail:false
08:26:09 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x966608c0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8583
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 163, 166, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 177
-----finish removing dir
receive_execute: 8, 220
receive_execute: 14, 221
receive_execute: 0, 221
mkdir time 44
executor 3 create dir /root/lustre-client/dfs-0-8584 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8584
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 14, 234
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33669, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 33669, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 10185, pid 33669, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 93, 1, 0
execute_one time: 1, 94
executor 2 write_server_output
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 248, 108, 0
before receive testcase: 0 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 221, 127, 0
before receive testcase: 0 1
executor 1 write_server_output
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:09 for select break: 1
2023/03/09 08:26:09 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:09 wg wait finish
2023/03/09 08:26:09 ------ all executors finish execution
2023/03/09 08:26:09 exec time: 352
2023/03/09 08:26:09 ----- PS len: 4
2023/03/09 08:26:09 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:09 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/09 08:26:09 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:09 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:09 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:09 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:09 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:09 ----- no new client coverage: false, true
2023/03/09 08:26:09 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:09 prog length: 3
2023/03/09 08:26:09 HasCrashFail:false HasNetFail:false
08:26:09 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x9a660840, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8584
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 235, 131, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 229, 131, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 95
-----finish removing dir
mkdir time 4
executor 3 create dir /root/lustre-client/dfs-0-8585 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8585
receive_execute: 1, 100
receive_execute: 6, 100
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 102
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 12, 107
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33674, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33674, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33674, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 33, 0, 0
execute_one time: 0, 33
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 104, 58, 0
before receive testcase: 0 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 106, 63, 0
before receive testcase: 0 0
time breakdown 3: 120, 49, 0
before receive testcase: 0 1
time breakdown 1: 102, 65, 0
before receive testcase: 0 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:10 wg wait finish
2023/03/09 08:26:10 ------ all executors finish execution
2023/03/09 08:26:10 exec time: 176
2023/03/09 08:26:10 ----- PS len: 4
2023/03/09 08:26:10 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:10 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:10 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:10 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:10 ----- no new client coverage: false, true
2023/03/09 08:26:10 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:10 prog length: 3
2023/03/09 08:26:10 HasCrashFail:false HasNetFail:false
08:26:10 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x9a6620c0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8585
remove dir time 90
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8586 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8586
receive_execute: 16, 101
receive_execute: 13, 99
receive_execute: 16, 103
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 1
receive_execute: 21, 119
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33679, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 10185, pid 33679, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10185, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33679, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 93, 0, 0
execute_one time: 2, 93
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 140, 96, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 119, 112, 0
before receive testcase: 0 1
executor 1 write_server_output
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:10 wg wait finish
2023/03/09 08:26:10 ------ all executors finish execution
2023/03/09 08:26:10 exec time: 231
2023/03/09 08:26:10 ----- PS len: 4
2023/03/09 08:26:10 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:10 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:10 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:10 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:10 ----- no new client coverage: false, true
2023/03/09 08:26:10 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:10 prog length: 3
2023/03/09 08:26:10 HasCrashFail:false HasNetFail:false
08:26:10 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x9b660840, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
time breakdown 1: 112, 129, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8586
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 117, 129, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 180
-----finish removing dir
mkdir time 37
executor 3 create dir /root/lustre-client/dfs-0-8587 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8587
receive_execute: 13, 221
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 222
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 1, 220
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 14, 274
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33684, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 36
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33684, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33684, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 52, 0, 0
execute_one time: 2, 52
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 234, 110, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 288, 55, 0
before receive testcase: 0 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:10 wg wait finish
2023/03/09 08:26:10 ------ all executors finish execution
2023/03/09 08:26:10 exec time: 334
2023/03/09 08:26:10 ----- PS len: 4
2023/03/09 08:26:10 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:10 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:10 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:10 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:10 ----- no new client coverage: false, true
2023/03/09 08:26:10 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:10 prog length: 3
2023/03/09 08:26:10 HasCrashFail:false HasNetFail:false
08:26:10 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0x9b662080, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8587
time breakdown 1: 231, 101, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 2: 224, 112, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 71
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8588 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8588
receive_execute: 4, 76
receive_execute: 0, 78
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 21, 61
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 6, 78
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 5334, pid 33689, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33689, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33689, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 1, 0
execute_one time: 0, 20
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 for select break: 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 81, 28, 0
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 78, 26, 0
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 3: 87, 22, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:10 wg wait finish
2023/03/09 08:26:10 ------ all executors finish execution
2023/03/09 08:26:10 exec time: 114
2023/03/09 08:26:10 ----- PS len: 4
2023/03/09 08:26:10 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:10 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:10 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:10 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:10 ----- no new client coverage: false, true
2023/03/09 08:26:10 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:10 prog length: 3
2023/03/09 08:26:10 HasCrashFail:false HasNetFail:false
08:26:10 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xa266b0c0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 82, 36, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8588
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8589 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8589
receive_execute: 11, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 41
receive_execute: 0, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33694, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 10193, pid 33694, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33694, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 7, 0
execute_one time: 1, 20
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
time breakdown 1: 41, 47, 0
before receive testcase: 0 1
time breakdown 3: 69, 22, 0
before receive testcase: 0 1
time breakdown 2: 50, 49, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 44, 55, 0
before receive testcase: 0 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:10 for select break: 1
2023/03/09 08:26:10 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:10 wg wait finish
2023/03/09 08:26:10 ------ all executors finish execution
2023/03/09 08:26:10 exec time: 100
2023/03/09 08:26:10 ----- PS len: 4
2023/03/09 08:26:10 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:10 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:10 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:10 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:10 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:10 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:10 ----- no new client coverage: false, true
2023/03/09 08:26:10 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:10 prog length: 3
2023/03/09 08:26:10 HasCrashFail:false HasNetFail:false
08:26:10 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xa46608c0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8589
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 22
executor 3 create dir /root/lustre-client/dfs-0-8590 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8590
receive_execute: 16, 42
receive_execute: 11, 48
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 21, 53
receive_execute: 11, 53
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33699, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10192, pid 33699, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33699, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 80, 1, 0
execute_one time: 0, 81
time breakdown 3: 74, 116, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 60, 123, 0
before receive testcase: 0 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:11 wg wait finish
2023/03/09 08:26:11 ------ all executors finish execution
2023/03/09 08:26:11 exec time: 181
2023/03/09 08:26:11 ----- PS len: 4
2023/03/09 08:26:11 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:11 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:11 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:11 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:11 ----- no new client coverage: false, true
2023/03/09 08:26:11 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:11 prog length: 3
2023/03/09 08:26:11 HasCrashFail:false HasNetFail:false
08:26:11 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xa6660840, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8590
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 60, 130, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 64, 128, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 122
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8591 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8591
receive_execute: 4, 127
receive_execute: 13, 123
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 14, 131
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33704, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33704, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33704, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
receive_execute: 0, 130
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 0, 0
execute_one time: 1, 12
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
time breakdown 2: 136, 21, 0
before receive testcase: 0 0
time breakdown 3: 145, 14, 0
before receive testcase: 0 1
2023/03/09 08:26:11 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 3 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 130, 29, 0
before receive testcase: 0 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:11 wg wait finish
2023/03/09 08:26:11 ------ all executors finish execution
2023/03/09 08:26:11 exec time: 170
2023/03/09 08:26:11 ----- PS len: 4
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:11 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:11 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:11 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:11 ----- no new client coverage: false, true
2023/03/09 08:26:11 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:11 prog length: 3
2023/03/09 08:26:11 HasCrashFail:false HasNetFail:false
08:26:11 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xa8660880, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 132, 41, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8591
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 46
-----finish removing dir
receive_execute: 12, 49
mkdir time 2
executor 3 create dir /root/lustre-client/dfs-0-8592 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8592
receive_execute: 0, 54
receive_execute: 24, 54
receive_execute: 23, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5337, pid 33709, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10192, pid 33709, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10192, flag collect 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 signal number : 1459
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33709, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 0, 0
execute_one time: 1, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 79, 14, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 2: 78, 22, 0
time breakdown 0: 62, 26, 0
before receive testcase: 0 1
before receive testcase: 0 1
time breakdown 1: 55, 16, 0
before receive testcase: 0 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:11 wg wait finish
2023/03/09 08:26:11 ------ all executors finish execution
2023/03/09 08:26:11 exec time: 93
2023/03/09 08:26:11 ----- PS len: 4
2023/03/09 08:26:11 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:11 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 1459 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:11 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:11 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:11 ----- no new client coverage: false, true
2023/03/09 08:26:11 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:11 prog length: 3
2023/03/09 08:26:11 HasCrashFail:false HasNetFail:false
08:26:11 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xad660880, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8592
remove dir time 105
-----finish removing dir
receive_execute: 18, 158
mkdir time 40
executor 3 create dir /root/lustre-client/dfs-0-8593 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8593
receive_execute: 22, 161
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
receive_execute: 24, 172
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 14, 160
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5334, pid 33714, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33714, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33714, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 47, 1, 0
execute_one time: 1, 48
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 196, 50, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 183, 66, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:11 wg wait finish
2023/03/09 08:26:11 ------ all executors finish execution
2023/03/09 08:26:11 exec time: 234
2023/03/09 08:26:11 ----- PS len: 4
2023/03/09 08:26:11 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:11 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:11 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:11 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:11 ----- no new client coverage: false, true
2023/03/09 08:26:11 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:11 prog length: 3
2023/03/09 08:26:11 HasCrashFail:false HasNetFail:false
08:26:11 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xae6608c0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8593
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 176, 71, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 190, 53, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 55
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8594 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8594
receive_execute: 2, 59
receive_execute: 7, 59
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 59
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 5337, pid 33719, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 3 signal number : 2508
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 10193, pid 33719, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10193, flag collect 0
----- executor 3 signal number : 1458
----- completed 2
execute_one loop: 0, 0, 33
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33719, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 95, 0, 0
execute_one time: 1, 95
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 75, 97, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 2 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:11 for select break: 1
2023/03/09 08:26:11 --------- executor 0 receive reply, reply.done 1
2023/03/09 08:26:11 wg wait finish
2023/03/09 08:26:11 ------ all executors finish execution
2023/03/09 08:26:11 exec time: 179
2023/03/09 08:26:11 ----- PS len: 4
2023/03/09 08:26:11 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:11 fuzzer receive 2508 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 1458 signal and 0 cover from executor 3
2023/03/09 08:26:11 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:11 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:11 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:11 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:11 ----- no new client coverage: false, true
2023/03/09 08:26:11 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:11 prog length: 3
2023/03/09 08:26:11 HasCrashFail:false HasNetFail:false
08:26:11 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xaf660480, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8594
time breakdown 2: 70, 110, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 66, 112, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 61, 116, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 164
-----finish removing dir
receive_execute: 6, 165
receive_execute: 8, 168
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 166
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8595 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8595
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 19, 184
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33724, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 10184, pid 33724, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10184, flag collect 0
----- executor 3 signal number : 1456
----- completed 2
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 33724, write pid:-1752259747
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 99
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 126, 1, 0
execute_one time: 1, 127
2023/03/09 08:26:12 for select break: 1
2023/03/09 08:26:12 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
2023/03/09 08:26:12 for select break: 1
2023/03/09 08:26:12 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 203, 129, 0
before receive testcase: 0 0
2023/03/09 08:26:12 for select break: 1
2023/03/09 08:26:12 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 171, 147, 0
before receive testcase: 0 0
time breakdown 0: 172, 146, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 178, 175, 0
before receive testcase: 0 1
2023/03/09 08:26:12 for select break: 1
2023/03/09 08:26:12 --------- executor 1 receive reply, reply.done 1
2023/03/09 08:26:12 wg wait finish
2023/03/09 08:26:12 ------ all executors finish execution
2023/03/09 08:26:12 exec time: 353
2023/03/09 08:26:12 ----- PS len: 4
2023/03/09 08:26:12 [CLIENT] executor 3 has 3 replies
2023/03/09 08:26:12 fuzzer receive 2505 signal and 0 cover from executor 3
2023/03/09 08:26:12 fuzzer receive 1456 signal and 0 cover from executor 3
2023/03/09 08:26:12 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/09 08:26:12 [SERVER] executor 0 has 0 replies
2023/03/09 08:26:12 [SERVER] executor 1 has 0 replies
2023/03/09 08:26:12 [SERVER] executor 2 has 0 replies
2023/03/09 08:26:12 fsMds: [map[] map[] map[] map[]]
2023/03/09 08:26:12 ----- no new client coverage: false, true
2023/03/09 08:26:12 HasCrashFail: false, .HasNetFail: false
2023/03/09 08:26:12 prog length: 3
2023/03/09 08:26:12 HasCrashFail:false HasNetFail:false
08:26:12 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
r0 = open(&(0x7f00000000c0)='./file0/../file0\x00', 0x0, 0x0)
ioctl(r0, 0xc008666c, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/lustre-client/dfs-0-8595
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 63
-----finish removing dir
mkdir time 3
executor 3 create dir /root/lustre-client/dfs-0-8596 successfully
current dir: executor 3: /root/lustre-client/dfs-0-8596
receive_execute: 8, 74
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 30, 74
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 28, 82
receive_execute: 46, 75
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5334, pid 33729, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 5334, flag collect 0
----- executor 3 signal number : 2505
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10298, pid 33729, write pid:-1752130629
----- executor 3 executes write_coverage_signal cov->size 10298, flag collect 0
----- executor 3 signal number : 1463
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
[ 1528.012051] kasan: CONFIG_KASAN_INLINE enabled
[ 1528.015072] kasan: GPF could be caused by NULL-ptr deref or user memory access
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
[ 1528.035228] general protection fault: 0000 [#1] SMP KASAN NOPTI
[ 1528.042400] CPU: 0 PID: 33730 Comm: syz-executor Tainted: G           O      5.4.148+ #7
[ 1528.043149] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 04/01/2014
[ 1528.043986] RIP: 0010:lustre_set_wire_obdo+0x7e/0x570 [obdclass]
[ 1528.044577] Code: 40 84 c6 0f 85 78 04 00 00 84 c9 0f 95 c2 0f 9e c0 84 c2 0f 85 68 04 00 00 48 ba 00 00 00 00 00 fc ff df 4c 89 e0 48 c1 e8 03 <0f> b6 0c 10 49 8d 84 24 cf 00 00 00 48 89 c6 83 e0 07 48 c1 ee 03
[ 1528.046503] RSP: 0018:ff1100022691f678 EFLAGS: 00010206
[ 1528.047034] RAX: 0000000000000003 RBX: ff11000254a1b2a0 RCX: 0000000000000000
[ 1528.047687] RDX: dffffc0000000000 RSI: 1fe2200048ab6e01 RDI: ff11000254a1b2a0
[ 1528.048239] RBP: ff110002455b70e8 R08: ff11000244a98000 R09: ffe21c004a943652
[ 1528.048790] R10: ffe21c004a943651 R11: ff11000254a1b28b R12: 0000000000000018
[ 1528.049307] R13: ff1100024017f800 R14: 0000000000000018 R15: ff11000244564920
[ 1528.049865] FS:  00007ffff40bf640(0000) GS:ff11000257200000(0000) knlGS:0000000000000000
[ 1528.050536] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 1528.050981] CR2: 00007ffff8012888 CR3: 000000023e49e004 CR4: 0000000000761ef0
[ 1528.051572] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 1528.052121] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 1528.052680] PKRU: 55555554
[ 1528.052919] Call Trace:
[ 1528.053124]  osc_getattr+0x1eb/0x950 [osc]
[ 1528.053499]  ? osc_pack_req_body+0xb0/0xb0 [osc]
[ 1528.053884]  osc_iocontrol+0x4f1/0xe80 [osc]
[ 1528.054239]  ? osc_import_event+0x3530/0x3530 [osc]
[ 1528.054625]  lov_iocontrol+0x4ba/0x5de0 [lov]
[ 1528.054958]  ? ll_dir_open+0x1f3/0x250 [lustre]
[ 1528.055360]  ? do_sys_open+0x183/0x290
[ 1528.055677]  ? lov_statfs+0xf50/0xf50 [lov]
[ 1528.056003]  ? __sanitizer_cov_trace_switch+0x50/0x90
[ 1528.056422]  ? lprocfs_stats_lock+0xcf/0x220 [obdclass]
[ 1528.056906]  ? lprocfs_stats_unlock+0xd2/0x130 [obdclass]
[ 1528.057612]  ? lprocfs_counter_add+0x43a/0x600 [obdclass]
[ 1528.058358]  ? lprocfs_alloc_md_stats+0x400/0x400 [obdclass]
[ 1528.059132]  ? __sanitizer_cov_trace_switch+0x50/0x90
[ 1528.059829]  ? lov_statfs+0xf50/0xf50 [lov]
[ 1528.060179]  ? ll_dir_ioctl+0x2834/0x17cc0 [lustre]
[ 1528.060570]  ll_dir_ioctl+0x2834/0x17cc0 [lustre]
execute_one loop: 0, 0, 50
[ 1528.061116]  ? __sanitizer_cov_trace_switch+0x50/0x90
[ 1528.061796]  ? ll_rmfid+0x17d0/0x17d0 [lustre]
[ 1528.062198]  ? free_one_page+0xa9/0x450
[ 1528.062518]  ? __sanitizer_cov_trace_switch+0x50/0x90
[ 1528.063404]  ? null_free_repbuf+0x1d0/0x6f0 [ptlrpc]
[ 1528.063968]  ? sptlrpc_cli_free_repbuf+0x31c/0x660 [ptlrpc]
[ 1528.064573]  ? __switch_to_asm+0x40/0x70
[ 1528.065389]  ? __switch_to_asm+0x34/0x70
[ 1528.066131]  ? __switch_to_asm+0x40/0x70
[ 1528.066857]  ? __switch_to_asm+0x34/0x70
[ 1528.067503]  ? __switch_to_asm+0x40/0x70
[ 1528.068292]  ? __switch_to_asm+0x34/0x70
[ 1528.069020]  ? __switch_to_asm+0x40/0x70
[ 1528.069684]  ? __switch_to_asm+0x34/0x70
[ 1528.070488]  ? arch_stack_walk+0x66/0xf0
[ 1528.071213]  ? unwind_next_frame+0x3f4/0x4a0
[ 1528.071910]  ? arch_stack_walk+0x66/0xf0
[ 1528.072723]  ? unwind_next_frame+0x3f4/0x4a0
[ 1528.073585]  ? __module_text_address+0xe/0x60
[ 1528.074273]  ? is_ftrace_trampoline+0x5/0x10
[ 1528.074952]  ? kernel_text_address+0x107/0x110
[ 1528.075631]  ? create_prof_cpu_mask+0x20/0x20
[ 1528.076276]  ? __kernel_text_address+0xe/0x30
[ 1528.076965]  ? unwind_get_return_address+0x1b/0x30
[ 1528.077694]  ? create_prof_cpu_mask+0x20/0x20
[ 1528.078334]  ? arch_stack_walk+0xa2/0xf0
[ 1528.078935]  ? update_load_avg+0x2c5/0x5b0
[ 1528.079522]  ? cpumask_next+0x17/0x20
[ 1528.080084]  ? enqueue_task_fair+0x22e/0x760
[ 1528.080706]  ? check_preempt_curr+0x4a/0x90
[ 1528.081353]  ? ttwu_do_wakeup.isra.0+0x14/0xe0
[ 1528.082043]  ? try_to_wake_up+0x3b5/0x5b0
[ 1528.082630]  ? avc_has_extended_perms+0xe0/0x460
[ 1528.083361]  ? generic_update_time+0x9d/0xc0
[ 1528.084013]  ? file_update_time+0xf7/0x140
[ 1528.084637]  ? pipe_write+0x396/0x430
[ 1528.085239]  ? do_vfs_ioctl+0x405/0x660
[ 1528.085805]  do_vfs_ioctl+0x405/0x660
[ 1528.086402]  ksys_ioctl+0x5e/0x90
[ 1528.086909]  ? ksys_write+0xc4/0xe0
[ 1528.087475]  __x64_sys_ioctl+0x16/0x20
[ 1528.088116]  do_syscall_64+0x48/0x140
[ 1528.088713]  entry_SYSCALL_64_after_hwframe+0x44/0xa9
[ 1528.089486] RIP: 0033:0x7ffff73891ed
[ 1528.090020] Code: 02 b8 ff ff ff ff c3 66 0f 1f 44 00 00 f3 0f 1e fa 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 c7 c1 b0 ff ff ff f7 d8 64 89 01 48
[ 1528.092798] RSP: 002b:00007ffff40bec18 EFLAGS: 00000216 ORIG_RAX: 0000000000000010
[ 1528.093897] RAX: ffffffffffffffda RBX: 00007ffff73e341f RCX: 00007ffff73891ed
[ 1528.094945] RDX: 0000000000000000 RSI: 00000000c008666c RDI: 0000000000000003
[ 1528.095978] RBP: 00007ffff40bec70 R08: 0000000000000000 R09: 0000000000000000
[ 1528.097015] R10: 0000000000000000 R11: 0000000000000216 R12: 00007ffff40bf640
[ 1528.098062] R13: 0000000000000016 R14: 00007ffff7342550 R15: 00007ffff409f000
[ 1528.099092] Modules linked in: mgc(O) lustre(O) lmv(O) mdc(O) fid(O) lov(O) fld(O) osc(O) ksocklnd(O) ptlrpc(O) obdclass(O) lnet(O) libcfs(O)
[ 1528.100944] ---[ end trace cab774f90dfb13bb ]---
[ 1528.101644] RIP: 0010:lustre_set_wire_obdo+0x7e/0x570 [obdclass]
[ 1528.102543] Code: 40 84 c6 0f 85 78 04 00 00 84 c9 0f 95 c2 0f 9e c0 84 c2 0f 85 68 04 00 00 48 ba 00 00 00 00 00 fc ff df 4c 89 e0 48 c1 e8 03 <0f> b6 0c 10 49 8d 84 24 cf 00 00 00 48 89 c6 83 e0 07 48 c1 ee 03
[ 1528.105268] RSP: 0018:ff1100022691f678 EFLAGS: 00010206
[ 1528.106046] RAX: 0000000000000003 RBX: ff11000254a1b2a0 RCX: 0000000000000000
[ 1528.107098] RDX: dffffc0000000000 RSI: 1fe2200048ab6e01 RDI: ff11000254a1b2a0
[ 1528.108184] RBP: ff110002455b70e8 R08: ff11000244a98000 R09: ffe21c004a943652
[ 1528.109228] R10: ffe21c004a943651 R11: ff11000254a1b28b R12: 0000000000000018
[ 1528.110463] R13: ff1100024017f800 R14: 0000000000000018 R15: ff11000244564920
[ 1528.111597] FS:  00007ffff40bf640(0000) GS:ff11000257200000(0000) knlGS:0000000000000000
[ 1528.112810] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 1528.113628] CR2: 00007ffff8012888 CR3: 000000023e49e004 CR4: 0000000000761ef0
[ 1528.115349] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
[ 1528.116758] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
[ 1528.118319] PKRU: 55555554

VM DIAGNOSIS:
08:26:12  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=00007fffffffeba8 RCX=00007ffff7387eff RDX=00007ffff71c3000
RSI=00007fffffffc320 RDI=0000000000000001 RBP=00007fffffffe430 RSP=00007fffffffe410
R8 =0000000000000000 R9 =0000000000000000 R10=000000000000000a R11=0000000000000293
R12=000000000000000f R13=00007fffffffeb28 R14=00007ffff743e760 R15=0000000000000003
RIP=00007ffff7302c46 RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff480 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=000000021de18001 CR4=00761ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=000000003f200002 Opmask01=000000000000000f Opmask02=00000000000000bf Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748b2e3 00007ffff748b2e3
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007fffffffe440 0000003000000010
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7ffe240 00007ffff7ffe240
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7ffe240 00007ffff7ffe240
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7ffe230 00007ffff7ffe230
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748caa0 00007ffff7402f32
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff7387dc8 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 2525252525252525 2525252525252525 2525252525252525 2525252525252525
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 7865000000000000 0a64252064697020 72656b726f772064 656e77617073000a
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 5d40000000000000 0a410005414c5505 57404e574a520541 404b52445556000a
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
info registers vcpu 1
RAX=ffffffff99dfe290 RBX=0000000000000001 RCX=0000000000000000 RDX=0000000000000001
RSI=ff110002556dfe58 RDI=00000163d4598ec9 RBP=0000000000000001 RSP=ff110002556dfeb8
R8 =0000000000000001 R9 =ff1100025558c380 R10=0000000000000000 R11=0000000000000400
R12=ff110002556bdac0 R13=0000000000000000 R14=0000000000000000 R15=ff110002556bdac0
RIP=ffffffff99dfe2b3 RFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00000000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00000000
FS =0000 0000000000000000 ffffffff 00000000
GS =0000 ff11000257300000 ffffffff 00000000
LDT=0000 0000000000000000 ffffffff 00000000
TR =0040 fffffe000003c000 0000206f 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003a000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffdf2 CR3=000000024a59e001 CR4=00761ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
Opmask00=0000000001c40000 Opmask01=0000000000000000 Opmask02=00000000000000bf Opmask03=0000000000000000
Opmask04=0000000000000000 Opmask05=0000000000000000 Opmask06=0000000000000000 Opmask07=0000000000000000
ZMM00=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240 0000000000000000
ZMM01=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 00000000000f4240
ZMM02=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 6161616161616161 6161616161616161
ZMM03=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM04=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffff0000
ZMM05=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffffffff
ZMM06=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 ffffffffffffffff ffffffffffff0000
ZMM07=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM08=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM09=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM10=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM11=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM12=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM13=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM14=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM15=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM16=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM17=0000000000000000 0000000000000000 0000000000000000 0000000000000000 00007ffff748cac0 00007ffff748caa0 00007ffff748caa8 00007ffff748caa0
ZMM18=0000000000000000 0000000000000000 0000000000000000 0000000000000000 303a303030302f73 6563697665642f69 63702f7375622f73 79732f000000000a
ZMM19=0000000000000000 0000000000000000 0000000000000000 0000000000000000 151f151515150a56 40464c5340410a4c 46550a5650470a56 5c560a000000000a
ZMM20=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM21=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM22=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM23=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM24=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM25=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM26=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM27=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM28=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM29=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM30=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
ZMM31=0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000
