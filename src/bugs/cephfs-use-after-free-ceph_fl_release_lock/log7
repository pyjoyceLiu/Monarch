2023/03/29 14:24:49 fuzzer started
2023/03/29 14:24:50 dialing manager at localhost:42459
2023/03/29 14:24:50 syscalls: 123
2023/03/29 14:24:50 code coverage: enabled
2023/03/29 14:24:50 comparison tracing: enabled
2023/03/29 14:24:50 extra coverage: enabled
2023/03/29 14:24:50 setuid sandbox: enabled
2023/03/29 14:24:50 namespace sandbox: /proc/self/ns/user does not exist
2023/03/29 14:24:50 Android sandbox: /sys/fs/selinux/policy can't be opened (open /sys/fs/selinux/policy: invalid argument)
2023/03/29 14:24:50 fault injection: CONFIG_FAULT_INJECTION_DEBUG_FS or CONFIG_FAILSLAB are not enabled
2023/03/29 14:24:50 leak checking: CONFIG_DEBUG_KMEMLEAK is not enabled
2023/03/29 14:24:50 net packet injection: /dev/net/tun does not exist
2023/03/29 14:24:50 net device setup: enabled
2023/03/29 14:24:50 concurrency sanitizer: /sys/kernel/debug/kcsan does not exist
2023/03/29 14:24:50 devlink PCI setup: enabled
2023/03/29 14:24:50 USB emulation: /dev/raw-gadget does not exist
2023/03/29 14:24:50 hci packet injection: /dev/vhci does not exist
2023/03/29 14:24:50 wifi device emulation: /sys/class/mac80211_hwsim/ does not exist
2023/03/29 14:24:50 802.15.4 emulation: /sys/bus/platform/devices/mac802154_hwsim does not exist
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 9
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 20
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 8
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 20
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 11
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 13
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 15
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 19
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 fetching corpus: 50, signal 2634/25891/29701 (executing program)
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 10
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 13
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 12
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 8
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 12
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 12
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 1
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 7
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 6
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 19
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 7
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 4
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 3
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 14
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 19
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 2
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 5
2023/03/29 14:24:50 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:50 prog length: 15
2023/03/29 14:24:50 fetching corpus: 100, signal 3078/40061/44634 (executing program)
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 19
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 1
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 11
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 1
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 10
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 7
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 6
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 7
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 7
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 6
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 8
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 10
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 1
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 18
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 12
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 9
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 20
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 14
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 13
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 1
2023/03/29 14:24:51 fetching corpus: 150, signal 3291/41825/47182 (executing program)
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 20
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 8
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 7
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 4
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 20
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 6
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 18
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 7
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 13
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 8
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 8
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 5
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 12
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:51 fetching corpus: 200, signal 3346/43931/49864 (executing program)
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 3
2023/03/29 14:24:51 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:51 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 20
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 8
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 9
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 11
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 8
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 7
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 20
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 19
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 8
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 12
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 15
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 14
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 20
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 20
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 fetching corpus: 250, signal 3490/47481/53660 (executing program)
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 7
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 13
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 14
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 11
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 13
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 11
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 15
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 1
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 13
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 7
2023/03/29 14:24:52 fetching corpus: 300, signal 3532/47818/54565 (executing program)
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 7
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 15
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 11
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 10
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 20
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 10
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 7
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 8
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 5
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 13
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 2
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 6
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 4
2023/03/29 14:24:52 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:52 prog length: 3
2023/03/29 14:24:52 fetching corpus: 350, signal 3569/48255/55525 (executing program)
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 9
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 19
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 17
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 11
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 10
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 6
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 18
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 12
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 7
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 16
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 7
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 15
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 fetching corpus: 400, signal 3605/48467/56264 (executing program)
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 8
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 10
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 7
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 8
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 8
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 8
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 8
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 5
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 20
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 13
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 12
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 14
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 16
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 1
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 7
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 6
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 18
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 6
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 4
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 3
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 13
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:53 prog length: 2
2023/03/29 14:24:53 fetching corpus: 450, signal 3629/49237/57361 (executing program)
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 14
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 8
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 12
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 13
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 10
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 13
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 7
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 19
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 16
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 10
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 11
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 8
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 12
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 fetching corpus: 500, signal 3655/50778/59024 (executing program)
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 10
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 18
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 8
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 11
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 20
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 8
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 9
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 fetching corpus: 550, signal 3670/50858/59559 (executing program)
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 10
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 7
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 20
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 12
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 19
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 11
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 8
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 12
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 14
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 1
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 6
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 3
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 5
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 8
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 2
2023/03/29 14:24:54 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:54 prog length: 4
2023/03/29 14:24:54 fetching corpus: 600, signal 3708/51022/60144 (executing program)
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 8
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 16
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 6
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 20
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 10
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 20
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 12
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 8
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 14
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 10
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 11
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 8
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 20
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 1
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 9
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 1
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 10
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 10
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 15
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 8
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 fetching corpus: 650, signal 3737/51334/60794 (executing program)
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 1
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 5
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 10
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 5
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 6
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 13
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 14
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 13
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 16
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 5
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 1
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 14
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 11
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 11
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 16
2023/03/29 14:24:55 fetching corpus: 700, signal 3747/51435/61323 (executing program)
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 7
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 9
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 5
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 20
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 6
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 2
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 8
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 1
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 5
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 5
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 11
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 6
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 1
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 3
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:55 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:55 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 20
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 12
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 8
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 20
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 11
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 11
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 14
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 fetching corpus: 750, signal 3795/51570/61889 (executing program)
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 13
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 16
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 8
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 11
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 9
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 9
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 7
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 7
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 19
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 19
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 20
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 10
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 7
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 12
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 16
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 7
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 fetching corpus: 800, signal 3806/52306/62780 (executing program)
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 8
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 15
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 20
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 20
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 13
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 10
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 7
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 4
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 5
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 3
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 7
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 6
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 1
2023/03/29 14:24:56 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:56 prog length: 2
2023/03/29 14:24:56 fetching corpus: 850, signal 3845/52592/63384 (executing program)
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 8
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 6
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 6
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 7
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 7
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 20
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 6
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 14
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 15
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 1
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 16
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 1
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 10
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 12
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 8
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 6
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 1
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 9
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 20
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 7
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 9
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 1
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 fetching corpus: 900, signal 3854/52678/63839 (executing program)
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 6
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 7
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 8
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 6
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 10
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 5
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 10
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 3
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 2
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 10
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 18
2023/03/29 14:24:57 deserializeInput: hasCrash false hasNet false
2023/03/29 14:24:57 prog length: 4
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/64308 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/64712 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/65119 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/65543 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/65953 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/66406 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/66782 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/67188 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/67602 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/67996 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/68414 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/68830 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/69226 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/69639 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/70039 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/70445 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/70483 (executing program)
2023/03/29 14:24:57 fetching corpus: 945, signal 3872/52721/70483 (executing program)
2023/03/29 14:24:58 starting 1 fuzzer processes
2023/03/29 14:24:58 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/29 14:24:58 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/29 14:24:58 ----- generateCall 2373 mkdir mkdir
2023/03/29 14:24:58 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/29 14:24:58 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/29 14:24:58 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/29 14:24:58 ----- generateCall 2809 rename rename
2023/03/29 14:24:58 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/29 14:24:58 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/29 14:24:58 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/29 14:24:58 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/29 14:24:58 ----- generateCall 2462 openat openat
2023/03/29 14:24:58 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/29 14:24:58 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/29 14:24:58 ----- generateCall 3967 truncate truncate
2023/03/29 14:24:58 ----- generateCall 2458 open open
2023/03/29 14:24:58 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/29 14:24:58 ----- generateCall 2753 read read
2023/03/29 14:24:58 ----- generateCall 2458 open open
2023/03/29 14:24:58 ----- generateCall 3970 unlink unlink
2023/03/29 14:24:58 map[./file0:true ./file0/file0:true ./file1:true ./file1/file0:true]
2023/03/29 14:24:58 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:24:58 prog length: 20
2023/03/29 14:24:58 HasCrashFail:false HasNetFail:false
14:24:58 ---executing program 0:
---
---
---
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x0)
lsetxattr$security_selinux(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='system_u:object_r:memory_device_t:s0\x00', 0x25, 0x3)
mkdir(&(0x7f0000000180)='./file0/file0\x00', 0x48)
lsetxattr$trusted_overlay_redirect(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='./file0/file0\x00', 0xe, 0x1)
setxattr$trusted_overlay_origin(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0), &(0x7f0000000300), 0x2, 0x5)
setxattr$trusted_overlay_opaque(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x2, 0x6)
rename(&(0x7f0000000400)='./file0/file0\x00', &(0x7f0000000440)='./file0\x00')
setxattr$user(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0), &(0x7f0000000500)='+&\x00', 0x3, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000540)='./file0/file0\x00', &(0x7f0000000580), &(0x7f00000005c0)={0x0, 0xfb, 0x50, 0x0, 0x8, "d93fa3c40cf1699eb0106dc78c5a68e0", "076e3166874c31f8f54cce72726f0d947633528bb8f102d1db979cd1d5dfbe72139a943cb071dac7416d04314231f56e73530e5c7c79a0dfe24bb0"}, 0x50, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000640)='./file1\x00', &(0x7f0000000680)='security.SMACK64EXEC\x00', &(0x7f00000006c0)={'y\x00'}, 0x3, 0x2)
lsetxattr$trusted_overlay_upper(&(0x7f0000000700)='./file1/file0\x00', &(0x7f0000000740), &(0x7f0000000780)={0x0, 0xfb, 0x96, 0x4, 0x20, "79ff0cfe67db456c99363adae4ddc827", "5f33813e1c7c9236f3ade19c81aa5b2fb3f3cae749dbb9b58ad61a6a51807a71ce4ce051913cd588d31b88c5642b3ee39eb1e7bf31c381f38f2c5a535940e04c415999d0710600245135c28f654b498f295f517795290ec2df1757b9136a9ea47fe86ec29ad9f91e416cfb92f4406447b7d8bb00e52671a3182b9d83904994248c"}, 0x96, 0x0)
r0 = openat(0xffffffffffffffff, &(0x7f0000000840)='./file0\x00', 0x400, 0x188)
write$binfmt_misc(r0, &(0x7f0000000880)={'syz1', "d9fa6b0d312a1bf0c84888db92895ad83a36ff85c037e433405393d2565ce7a6ff6aa5271d98e50db80add0d7012d9bf222516a379d5889ee599ff0eca6b2e33d24d85a99cac95212d0127e8911066b56837"}, 0x56)
setxattr$security_ima(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000940), &(0x7f0000000980)=@ng={0x4, 0xb, "bce230966b4e"}, 0x8, 0x3)
truncate(&(0x7f00000009c0)='./file1\x00', 0x1)
open(&(0x7f0000000a00)='./file0\x00', 0x40040, 0x46)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000a40)='./file1/file0\x00', &(0x7f0000000a80), &(0x7f0000000ac0), 0x2, 0x0)
read(r0, &(0x7f0000000b00)=""/196, 0xc4)
open(&(0x7f0000000c00)='./file1/file0\x00', 0x18040, 0x60)
unlink(&(0x7f0000000c40)='./file0/file0\x00')
---

end of program
2023/03/29 14:24:58 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/cephfs-images/focal.id_rsa root@192.168.0.59 /root/syz-executor exec 0 0 cephfs 3 4 192.168.0.59 0 "1 1 1 1" false true false false false]
2023/03/29 14:24:58 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/cephfs-images/focal.id_rsa root@192.168.0.60 /root/syz-executor exec 0 1 cephfs 3 4 192.168.0.59 0 "1 1 1 1" false true false false false]
2023/03/29 14:24:58 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/cephfs-images/focal.id_rsa root@192.168.0.61 /root/syz-executor exec 0 2 cephfs 3 4 192.168.0.59 0 "1 1 1 1" false true false false false]
2023/03/29 14:24:58 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/cephfs-images/focal.id_rsa root@192.168.0.62 /root/syz-executor exec 1 3 cephfs 3 4 192.168.0.59 0 "1 1 1 1" false true false false false]
Warning: Permanently added '192.168.0.60' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.59' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.61' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.62' (ECDSA) to the list of known hosts.
----- is restarting 0
---- dfs_name cephfs is_dfs_client 0
unlink FIFO failed: No such file or directory
[0;1;38;5;185mJournal file /var/log/journal/62e1bbd01f3b4c5ca392a60d70223e76/system@0005f77f21a45b96-697e21065998b594.journal~ is truncated, ignoring file.[0m
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #9 SMP Thu Mar 23 12:39:08 CET 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.60 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdcfff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffdd000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 2f93001, primary cpu clock
[    0.000001] kernel: kvm-clock: using sched offset of 260496738 cycles
[    0.000004] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000006] kernel: tsc: Detected 2899.988 MHz processor
[    0.001241] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.001245] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.001249] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.001311] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.001318] kernel: last_pfn = 0xbffdd max_arch_pfn = 0x10000000000
[    0.006239] kernel: found SMP MP-table at [mem 0x000f5c70-0x000f5c7f]
[    0.006315] kernel: Using GB pages for direct mapping
[    0.007113] kernel: ACPI: Early table checksum verification disabled
[    0.007123] kernel: ACPI: RSDP 0x00000000000F5A40 000014 (v00 BOCHS )
[    0.007131] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.007137] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.007144] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.0executor 1 finishes userspace_cover_open
before receiving handshake request
07148] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.007151] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.007154] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.007157] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.007159] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.007160] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.007161] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.007162] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.007538] kernel: No NUMA configuration found
[    0.007539] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.007543] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.007609] kernel: Zone ranges:
[    0.007611] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.007613] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.007614] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007616] kernel: Movable zone start for each node
[    0.007617] kernel: Early memory node ranges
[    0.007618] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.007619] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdcfff]
[    0.007620] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007622] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.008101] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.008123] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.066010] kernel: On node 0, zone Normal: 35 pages in unavailable ranges
[    0.478369] kernel: kasan: KernelAddressSanitizer initialized
[    0.478833] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.478841] kernel: ACPI: LAPIC_NMI (afsync test_dir /root/req 6
req.flags ea2
----- executor 1 do_sandbox_none at begining
----- executor 1 do_sandbox_none before fork()
cpi_id[0xff] dfl dfl lint[0x1])
[    0.478886] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.478889] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.478891] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.478894] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.478895] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.478897] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.478901] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.478902] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.478906] kernel: TSC deadline timer available
[    0.478907] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.478935] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.478941] kernel: kvm-guest: setup PV sched yield
[    0.478957] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.478959] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.478960] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.478961] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.478963] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffdd000-0xbfffffff]
[    0.478965] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.478966] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.478967] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.478968] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.478970] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.478971] kernel: Booting paravirtualized kernel on KVM
[    0.478974] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_before receive testcase: 0 1
idle_ns: 1910969940391419 ns
[    0.484365] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.484985] kernel: percpu: Embedded 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.484992] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.484995] kernel: pcpu-alloc: [0] 0 1 
[    0.485025] kernel: kvm-guest: setup async PF for cpu 0
[    0.485031] kernel: kvm-guest: stealtime: cpu 0, msr 26561f140
[    0.485035] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580189
[    0.485037] kernel: Policy zone: Normal
[    0.485039] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.60 quiet nokaslr
[    0.485140] kernel: Unknown command line parameters: nokaslr
[    0.489709] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.492333] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.492402] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.683078] kernel: Memory: 8868028K/10485228K available (16396K kernel code, 3196K rwdata, 3688K rodata, 1416K init, 2608K bss, 1617000K reserved, 0K cma-reserved)
[    0.683208] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.683825] kernel: rcu: Hierarchical RCU implementation.
[    0.683827] kernel: rcu:         RCU event tracing is enabled.
[    0.683827] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.683830] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.683831] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.688445] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.688793] kernel: random: get_random_bytes called from start_kernel+0x4b1/0x67a with crng_init=0
[    0.693646] kernel: Console: colour VGA+ 80x25
[    0.693698] kernel: printk: console [ttyS0] enabled
[    0.693721] kernel: ACPI: Core revision 20210730
[    0.693910] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.694012] kernel: APIC: Switch to symmetric I/O mode setup
[    0.694015] kernel: kvm-guest: setup PV IPIs
[    0.695323] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.695352] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.695361] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.695364] kernel: pid_max: default: 32768 minimum: 301
[    0.695409] kernel: LSM: Security Framework initializing
[    0.695427] kernel: SELinux:  Initializing.
[    0.695524] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.696367] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.697152] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0.697366] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.697367] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.697380] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.697385] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.697386] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.697388] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.697390] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.697391] kernel: TAA: Mitigation: TSX disabled
[    0.704784] kernel: Freeing SMP alternatives memory: 40K
[    0.704975] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.705135] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.705256] kernel: ... version:                2
[    0.705257] kernel: ... bit width:              48
[    0.705258] kernel: ... generic registers:      8
[    0.705259] kernel: ... value mask:             0000ffffffffffff
[    0.705260] kernel: ... max period:             00007fffffffffff
[    0.705261] kernel: ... fixed-purpose events:   3
[    0.705262] kernel: ... event mask:             00000007000000ff
[    0.705356] kernel: rcu: Hierarchical SRCU implementation.
[    0.705356] kernel: smp: Bringing up secondary CPUs ...
[    0.705426] kernel: x86: Booting SMP configuration:
[    0.705426] kernel: .... node  #0, CPUs:      #1
[    0.006599] kernel: kvm-clock: cpu 1, msr 2f93041, secondary cpu clock
[    0.006599] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.706384] kernel: kvm-guest: setup async PF for cpu 1
[    0.706394] kernel: kvm-guest: stealtime: cpu 1, msr 26571f140
[    0.706405] kernel: smp: Brought up 1 node, 2 CPUs
[    0.706405] kernel: smpboot: Max logical packages: 2
[    0.706405] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.707440] kernel: devtmpfs: initialized
[    0.707926] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.707926] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.708485] kernel: PM: RTC time: 14:24:39, date: 2023-03-29
[    0.709120] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.709428] kernel: audit: initializing netlink subsys (disabled)
[    0.709472] kernel: audit: type=2000 audit(1680099879.048:1): state=initialized audit_enabled=0 res=1
[    0.709586] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.709587] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.709619] kernel: cpuidle: using governor menu
[    0.709619] kernel: ACPI: bus type PCI registered
[    0.709619] kernel: PCI: Using configuration type 1 for base access
[    0.718651] kernel: Kprobes globally optimized
[    0.718697] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.718697] kernel: cryptomgr_test (26) used greatest stack depth: 31384 bytes left
[    0.719440] kernel: ACPI: Added _OSI(Module Device)
[    0.719440] kernel: ACPI: Added _OSI(Processor Device)
[    0.719440] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.719440] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.719440] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.719440] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.719440] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.729751] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.733315] kernel: ACPI: Interpreter enabled
[    0.733365] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.733367] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.733417] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.733921] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.751036] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.751052] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.751127] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.751294] kernel: PCI host bridge to bus 0000:00
[    0.751298] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.751301] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.751304] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.751307] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.751311] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.751314] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.752241] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    0.753820] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    0.755016] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    0.757718] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc0c0-0xc0cf]
[    0.758965] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    0.758969] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    0.758970] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    0.758971] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    0.760778] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    0.761156] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    0.761165] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    0.762496] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    0.763852] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    0.765976] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    0.769890] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    0.771178] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    0.771765] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc080-0xc09f]
[    0.774902] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    0.777414] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    0.778361] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc0a0-0xc0bf]
[    0.779360] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    0.782360] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    0.783359] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    0.784863] kernel: pci 0000:00:05.0: [1af4:1001] type 00 class 0x010000
[    0.786173] kernel: pci 0000:00:05.0: reg 0x10: [io  0xc000-0xc07f]
[    0.787360] kernel: pci 0000:00:05.0: reg 0x14: [mem 0xfeb92000-0xfeb92fff]
[    0.789852] kernel: pci 0000:00:05.0: reg 0x20: [mem 0xfe208000-0xfe20bfff 64bit pref]
[    0.792298] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    0.793259] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    0.795362] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    0.799737] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    0.800364] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    0.801754] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe20c000-0xfe20c3ff 64bit pref]
[    0.805711] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    0.806904] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb95000-0xfeb950ff]
[    0.808883] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    0.815507] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    0.816098] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    0.816687] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    0.817278] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    0.817513] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    0.818506] kernel: iommu: Default domain type: Translated 
[    0.818508] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    0.818546] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    0.818546] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    0.818546] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    0.818546] kernel: vgaarb: loaded
[    0.818690] kernel: SCSI subsystem initialized
[    0.818749] kernel: libata version 3.00 loaded.
[    0.818749] kernel: ACPI: bus type USB registered
[    0.818749] kernel: usbcore: registered new interface driver usbfs
[    0.818749] kernel: usbcore: registered new interface driver hub
[    0.818749] kernel: usbcore: registered new device driver usb
[    0.818749] kernel: pps_core: LinuxPPS API ver. 1 registered
[    0.818749] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.819375] kernel: PTP clock support registered
[    0.819462] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    0.819877] kernel: NetLabel: Initializing
[    0.819878] kernel: NetLabel:  domain hash size = 128
[    0.819879] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    0.819925] kernel: NetLabel:  unlabeled traffic allowed by default
[    0.819968] kernel: PCI: Using ACPI for IRQ routing
[    0.819968] kernel: PCI: pci_cache_line_size set to 64 bytes
[    0.819968] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    0.819968] kernel: e820: reserve RAM buffer [mem 0xbffdd000-0xbfffffff]
[    0.820359] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    0.820364] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    0.823436] kernel: clocksource: Switched to clocksource kvm-clock
[    0.864204] kernel: VFS: Disk quotas dquot_6.6.0
[    0.864228] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.864370] kernel: pnp: PnP ACPI init
[    0.864804] kernel: pnp 00:03: [dma 2]
[    0.867247] kernel: pnp: PnP ACPI: found 6 devices
[    0.876716] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    0.876803] kernel: NET: Registered PF_INET protocol family
[    0.877566] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    0.880868] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    0.881372] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    0.881572] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    0.882120] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    0.882192] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.882238] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.882385] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    0.882800] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    0.882804] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    0.882806] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    0.882807] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    0.882809] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    0.882979] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    0.882990] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    0.883000] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    0.883045] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    0.883097] kernel: PCI: CLS 0 bytes, default 64
[    0.883237] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    0.883238] kernel: software IO TLB: mapped [mem 0x00000000bbfdd000-0x00000000bffdd000] (64MB)
[    0.883333] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    0.883347] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.883373] kernel: clocksource: Switched to clocksource tsc
[    0.885641] kernel: Initialise system trusted keyrings
[    0.885732] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    0.894080] kernel: fuse: init (API version 7.34)
[    0.894632] kernel: ceph: loaded (mds proto 32)
[    0.904139] kernel: Key type asymmetric registered
[    0.904141] kernel: Asymmetric key parser 'x509' registered
[    0.904233] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    0.904235] kernel: io scheduler mq-deadline registered
[    0.904237] kernel: io scheduler kyber registered
[    0.904808] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    0.904942] kernel: ACPI: button: Power Button [PWRF]
[    1.337189] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    1.768942] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    2.188492] kernel: ACPI: \_SB_.LNKA: Enabled at IRQ 10
[    2.189827] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    2.189936] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    2.191458] kernel: Non-volatile memory driver v1.3
[    2.191514] kernel: Linux agpgart interface v0.103
[    2.195993] kernel: loop: module loaded
[    2.197263] kernel: virtio_blk virtio2: [vda] 1024000 512-byte logical blocks (524 MB/500 MiB)
[    2.198835] kernel: ata_piix 0000:00:01.1: version 2.13
[    2.200035] kernel: scsi host0: ata_piix
[    2.200858] kernel: scsi host1: ata_piix
[    2.200952] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc0c0 irq 14
[    2.200955] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc0c8 irq 15
[    2.201289] kernel: libphy: Fixed MDIO Bus: probed
[    2.204068] kernel: e100: Intel(R) PRO/100 Network Driver
[    2.204071] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    2.204091] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    2.204092] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    2.204123] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    2.204124] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    2.204149] kernel: sky2: driver version 1.30
[    2.204420] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    2.204422] kernel: ehci-pci: EHCI PCI platform driver
[    2.204439] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    2.204447] kernel: ohci-pci: OHCI PCI platform driver
[    2.204463] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    2.204619] kernel: usbcore: registered new interface driver usblp
[    2.204635] kernel: usbcore: registered new interface driver usb-storage
[    2.204684] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    2.205308] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    2.205317] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    2.205838] kernel: rtc_cmos 00:00: RTC can wake from S4
[    2.206006] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    2.207945] kernel: rtc_cmos 00:00: registered as rtc0
[    2.208007] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    2.208444] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    2.208448] kernel: intel_pstate: CPU model not supported
[    2.208525] kernel: hid: raw HID events driver (C) Jiri Kosina
[    2.208913] kernel: usbcore: registered new interface driver usbhid
[    2.208914] kernel: usbhid: USB HID core driver
[    2.209246] kernel: netem: version 1.3
[    2.211076] kernel: Initializing XFRM netlink socket
[    2.211478] kernel: NET: Registered PF_INET6 protocol family
[    2.212598] kernel: Segment Routing with IPv6
[    2.212615] kernel: In-situ OAM (IOAM) with IPv6
[    2.212717] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    2.213033] kernel: NET: Registered PF_PACKET protocol family
[    2.213098] kernel: 9pnet: Installing 9P2000 support
[    2.213129] kernel: Key type dns_resolver registered
[    2.213145] kernel: Key type ceph registered
[    2.213323] kernel: libceph: loaded (mon/osd proto 15/24)
[    2.213629] kernel: IPI shorthand broadcast: enabled
[    2.213657] kernel: sched_clock: Marking stable (2207954151, 5599609)->(2250143233, -36589473)
[    2.213969] kernel: registered taskstats version 1
[    2.213971] kernel: Loading compiled-in X.509 certificates
[    2.215257] kernel: PM:   Magic number: 15:21:436
[    2.215308] kernel: printk: console [netcon0] enabled
[    2.215310] kernel: netconsole: network logging started
[    2.357982] kernel: ata1.01: NODEV after polling detection
[    2.358217] kernel: ata2.01: NODEV after polling detection
[    2.358451] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    2.358453] kernel: ata1.00: 150992896 sectors, multi 16: LBA48 
[    2.358626] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    2.359374] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    2.359629] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    2.360004] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    2.360320] kernel: sd 0:0:0:0: [sda] 150992896 512-byte logical blocks: (77.3 GB/72.0 GiB)
[    2.360486] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    2.360491] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    2.360817] kernel: sd 0:0:0:0: [sda] Write cache: enabled, re----- is restarting 0
---- dfs_name cephfs is_dfs_client 0
ad cache: enabled, doesn't support DPO or FUA
[    2.361726] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    2.377948] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    2.377958] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    2.395431] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    2.395693] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    2.829972] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    2.842400] kernel: IP-Config: Guessing netmask 255.255.255.0
[    2.842403] kernel: IP-Config: Complete:
[    2.842404] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:3c, ipaddr=192.168.0.60, mask=255.255.255.0, gw=255.255.255.255
[    2.842407] kernel:      host=192.168.0.60, domain=, nis-domain=(none)
[    2.842408] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    2.842532] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.842818] kernel: kworker/u4:1 (69) used greatest stack depth: 30464 bytes left
[    2.843795] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.843809] kernel: ALSA device list:
[    2.843811] kernel:   No soundcards found.
[    2.844084] kernel: md: Waiting for all devices to be available before autodetect
[    2.844085] kernel: md: If you don't use raid, use raid=noautodetect
[    2.844086] kernel: md: Autodetecting RAID arrays.
[    2.844087] kernel: md: autorun ...
[    2.844088] kernel: md: ... autorun DONE.
[    2.844413] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.844418] kernel: cfg80211: failed to load regulatory.db
[    2.852386] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    2.852427] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    2.853489] kernel: devtmpfs: mounted
[    2.853895] kernel: Freeing unused kernel imageunlink FIFO failed: No such file or directory
[0;1;38;5;185mJournal file /var/log/journal/62e1bbd01f3b4c5ca392a60d70223e76/system@0005f77f21a45b96-697e21065998b594.journal~ is truncated, ignoring file.[0m
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #9 SMP Thu Mar 23 12:39:08 CET 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.59 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XS (initmem) memory: 1416K
[    2.857401] kernel: Write protecting the kernel read-only data: 22528k
[    2.857975] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    2.858122] kernel: Freeing unused kernel image (rodata/data gap) memory: 408K
[    2.858132] kernel: Run /sbin/init as init process
[    2.858133] kernel:   with arguments:
[    2.858134] kernel:     /sbin/init
[    2.858135] kernel:     nokaslr
[    2.858135] kernel:   with environment:
[    2.858136] kernel:     HOME=/
[    2.858137] kernel:     TERM=linux
[    2.891333] kernel: random: fast init done
[    2.946349] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    2.946442] systemd[1]: Detected virtualization kvm.
[    2.946448] systemd[1]: Detected architecture x86-64.
[    2.954798] systemd[1]: Set hostname to <dfs-fuzzing>.
[    2.987716] kernel: netplan (78) used greatest stack depth: 29456 bytes left
[    3.033504] kernel: random: lvmconfig: uninitialized urandom read (4 bytes read)
[    3.040317] kernel: lvmconfig (81) used greatest stack depth: 29184 bytes left
[    3.040580] kernel: lvm2-activation (77) used greatest stack depth: 29136 bytes left
[    3.040607] kernel: systemd-sysv-ge (90) used greatest stack depth: 28912 bytes left
[    3.111970] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    3.143821] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    3.143830] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    3.144164] systemd[1]: Created slice system-modprobe.slice.
[    3.14AVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bff4342] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    3.144476] systemd[1]: Created slice User and Session Slice.
[    3.144570] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    3.144640] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    3.145501] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    3.145548] systemd[1]: Reached target Local Encrypted Volumes.
[    3.145570] systemd[1]: Reached target Paths.
[    3.145580] systemd[1]: Reached target Remote File Systems.
[    3.145589] systemd[1]: Reached target Slices.
[    3.145605] systemd[1]: Reached target Swap.
[    3.145729] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    3.145907] systemd[1]: Listening on LVM2 poll daemon socket.
[    3.146037] systemd[1]: Listening on Syslog Socket.
[    3.146111] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    3.146370] systemd[1]: Listening on Jourdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 2f93001, primary cpu clock
[    0.000001] kernel: kvm-clock: using sched offset of 225618269 cycles
[    0.000003] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000005] kernel: tsc: Detected 2899.9nal Audit Socket.
[    3.146501] systemd[1]: Listening on Journal Socket (/dev/log).
[    3.146674] systemd[1]: Listening on Journal Socket.
[    3.146832] systemd[1]: Listening on udev Control Socket.
[    3.146937] systemd[1]: Listening on udev Kernel Socket.
[    3.148137] systemd[1]: Mounting Huge Pages File System...
[    3.149280] systemd[1]: Mounting POSIX Message Queue File System...
[    3.150345] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    3.151879] systemd[1]: Mounting /sys/kernel/config...
[    3.153176] systemd[1]: Mounting /sys/kernel/debug...
[    3.154316] systemd[1]: Mounting Kernel Trace File System...
[    3.155385] systemd[1]: Starting Journal Service...
[    3.156437] systemd[1]: Starting Availability of block devices...
[    3.160071] systemd[1]: Starting Set the console keyboard layout...
[    3.160106] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    3.161987] systemd[1]: Starting Mo88 MHz processor
[    0.000747] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.000750] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.000754] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.000810] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.000817] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.005324] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.005385] kernel: Using GB pages for direct mapping
[    0.006156] kernel: ACPI: Early table checksum verification disabled
[    0.006164] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.006173] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.006179] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.006185] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.0executor 0 finishes userspace_cover_open
before receiving handshake request
nitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling...
[    3.162031] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    3.164290] systemd[1]: Starting Load Kernel Modules...
[    3.165926] systemd[1]: Starting Remount Root and Kernel File Systems...
[    3.166959] systemd[1]: Starting udev Coldplug all Devices...
[    3.168682] systemd[1]: Mounted Huge Pages File System.
[    3.169008] systemd[1]: Mounted POSIX Message Queue File System.
[    3.169286] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    3.169613] systemd[1]: Mounted /sys/kernel/config.
[    3.169892] systemd[1]: Mounted /sys/kernel/debug.
[    3.170180] systemd[1]: Mounted Kernel Trace File System.
[    3.171801] systemd[1]: Finished Availability of block devices.
[    3.179058] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    3.185510] systemd[1]: Finished Load Kernel Modules.
[    3.187464] systemd[1]: Mounting FUSE C06189] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.006192] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.006196] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.006198] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.006200] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.006201] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.006203] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.006204] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.006532] kernel: No NUMA configuration found
[    0.006534] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.006537] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.006588] kernel: Zone ranges:
[    0.006589] kernel:   DMA      [mem 0x000000000----- is restarting 0
---- dfs_name cephfs is_dfs_client 1
ontrol File System...
[    3.188339] kernel: random: lvm: uninitialized urandom read (4 bytes read)
[    3.189625] systemd[1]: Starting Apply Kernel Variables...
[    3.208792] systemd[1]: Mounted FUSE Control File System.
[    3.221393] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    3.255902] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    3.257544] systemd[1]: Finished Remount Root and Kernel File Systems.
[    3.258576] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    3.258613] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    3.261012] systemd[1]: Starting Load/Save Random Seed...
[    3.262742] systemd[1]: Starting Create System Users...
[    3.287916] systemd[1]: Finished Apply Kernel Variables.
[    3.301503] systemd[1]: Finished Create System Users.
[    3.303092] systemd[1]: Starting Create Static Device Nodes in /dev...
[    3.344037] systemd[1]: 0001000-0x0000000000ffffff]
[    0.006591] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.006592] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.006593] kernel: Movable zone start for each node
[    0.006594] kernel: Early memory node ranges
[    0.006594] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.006595] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.006596] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.006597] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.007082] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.007100] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.059064] kernel: On node 0, zone Normal: 32 pages in unavailable ranges
[    0.479026] kernel: kasan: KernelAddressSanitizer initialized
[    0.479480] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.479492] kernel: ACPI: LAPIC_NMI (abefore receiving handshake request
cpi_id[0xff] dfl dfl lint[0x1])
[    0.479542] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.479546] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.479549] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.479551] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.479553] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.479555] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.479559] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.479561] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.479566] kernel: TSC deadline timer available
[    0.479568] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.479597] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.479603] kernel: kvm-guest: setup PV sched yield
[    0.479622] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0[0;1;38;5;185mJournal file /var/log/journal/62e1bbd01f3b4c5ca392a60d70223e76/system@0005f77f21a45b96-697e21065998b594.journal~ is truncated, ignoring file.[0m
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #9 SMP Thu Mar 23 12:39:08 CET 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.62 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSx00000fff]
[    0.479625] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.479627] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.479628] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.479630] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.479631] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.479633] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.479634] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.479636] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.479638] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.479640] kernel: Booting paravirtualized kernel on KVM
[    0.479643] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_AVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffFinished Create Static Device Nodes in /dev.
[    3.345559] systemd[1]: Starting udev Kernel Device Manager...
[    3.360701] systemd[1]: Finished udev Coldplug all Devices.
[    3.408623] systemd[1]: Finished Set the console keyboard layout.
[    3.413015] systemd[1]: Started udev Kernel Device Manager.
[    3.616132] systemd[1]: Found device /dev/ttyS0.
[    3.655230] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    3.808624] systemd[1]: Started Journal Service.
[    4.076573] kernel: random: crng init done
idle_ns: 1910969940391419 ns
[    0.484535] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.485251] kernel: percpu: Embedded 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.485260] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.485264] kernel: pcpu-alloc: [0] 0 1 
[    0.485298] kernel: kvm-guest: setup async PF for cpu 0
[    0.485303] kernel: kvm-guest: stealtime: cpu 0, msr 26561f140
[    0.485309] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580192
[    0.485311] kernel: Policy zone: Normal
[    0.485313] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.59 quiet nokaslr
[    0.485416] kernel: Unknown command line parameters: nokaslr
[    0.490768] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.493515] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.493593] kernel: mem auto-initdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 2f93001, primary cpu clock
[    0.000001] kernel: kvm-clock: using sched offset of 235689647 cycles
[    0.000003] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000006] kernel: tsc: Detected 2899.9fsync test_dir /root/req 3
req.flags ea2
: stack:off, heap alloc:off, heap free:off
[    0.729408] kernel: Memory: 8868040K/10485240K available (16396K kernel code, 3196K rwdata, 3688K rodata, 1416K init, 2608K bss, 1617000K reserved, 0K cma-reserved)
[    0.729540] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.730173] kernel: rcu: Hierarchical RCU implementation.
[    0.730175] kernel: rcu:         RCU event tracing is enabled.
[    0.730176] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.730178] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.730180] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.734725] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.735066] kernel: random: get_random_bytes called from start_kernel+0x4b1/0x67a with crng_init=0
[    0.740077] kernel: Console: colour VGA+ 80x25
[    0.740132] kernel: printk: console [ttyS0] enabled
[    0.740161] kernel: ACPI: 88 MHz processor
[    0.001106] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.001109] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.001113] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.001172] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.001178] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.006210] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.006291] kernel: Using GB pages for direct mapping
[    0.007093] kernel: ACPI: Early table checksum verification disabled
[    0.007103] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.007112] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.007119] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.007125] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.007129] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.007132] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.007135] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.007138] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.007140] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.007141] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.007143] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.007144] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.007517] kernel: No NUMA configuration found
[    0.007518] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.007521] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.007586] kernel: Zone ranges:
[    0.007587] kernel:   DMA      [mem 0x000000000Core revision 20210730
[    0.740367] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.740524] kernel: APIC: Switch to symmetric I/O mode setup
[    0.740529] kernel: kvm-guest: setup PV IPIs
[    0.741931] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.741964] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.741975] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.741978] kernel: pid_max: default: 32768 minimum: 301
[    0.742031] kernel: LSM: Security Framework initializing
[    0.742050] kernel: SELinux:  Initializing.
[    0.742139] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.742981] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.743622] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0001000-0x0000000000ffffff]
[    0.007590] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.007591] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007593] kernel: Movable zone start for each node
[    0.007594] kernel: Early memory node ranges
[    0.007595] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.007596] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.007598] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007599] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.008112] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.008133] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.061105] kernel: On node 0, zone Normal: 32 pages in unavailable ranges
[    0.482742] kernel: kasan: KernelAddressSanitizer initialized
[    0.483097] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.483105] kernel: ACPI: LAPIC_NMI (a0.744006] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.744007] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.744019] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.744023] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.744024] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.744025] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.744027] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.744028] kernel: TAA: Mitigation: TSX disabled
[    0.750613] kernel: Freeing SMP alternatives memory: 40K
[    0.750812] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.750943] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.751044] kernelcpi_id[0xff] dfl dfl lint[0x1])
[    0.483143] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.483146] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.483148] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.483149] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.483150] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.483151] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.483154] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.483155] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.483159] kernel: TSC deadline timer available
[    0.483160] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.483183] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.483188] kernel: kvm-guest: setup PV sched yield
[    0.483200] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.483202] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.483203] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.483204] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.483205] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.483206] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.483207] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.483207] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.483208] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.483210] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.483210] kernel: Booting paravirtualized kernel on KVM
[    0.483213] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.487900] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.488651] kernel: percpu: Embedded 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.488658] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.488661] kernel: pcpu-alloc: [0] 0 1 
[    0.488690] kernel: kvm-guest: setup async PF for cpu 0
[    0.488696] kernel: kvm-guest: stealtime: cpu 0, msr 26561f140
[    0.488700] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580192
[    0.488702] kernel: Policy zone: Normal
[    0.488704] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.62 quiet nokaslr
[    0.488807] kernel: Unknown command line parameters: nokaslr
[    0.494476] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.497304] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.497367] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.711290] kernel: Memory: 8868040K/10485240K available (16396K kernel code, 3196K rwdata, 3688K rodata, 1416K init, 2608K bss, 1617000K reserved, 0K cma-reserved)
[    0.711426] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.712066] kernel: rcu: Hierarchical RCU implementation.
[    0.712068] kernel: rcu:         RCU event tracing is enabled.
[    0.712069] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.712072] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.712074] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.716822] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.717038] kernel: random: get_random_bytes called from start_kernel+0x4b1/0x67a with crng_init=0
[    0.720794] kernel: Console: colour VGA+ 80x25
[    0.720838] kernel: printk: console [ttyS0] enabled
[    0.720869] kernel: ACPI: : ... version:                2
[    0.751046] kernel: ... bit width:              48
[    0.751047] kernel: ... generic registers:      8
[    0.751048] kernel: ... value mask:             0000ffffffffffff
[    0.751050] kernel: ... max period:             00007fffffffffff
[    0.751051] kernel: ... fixed-purpose events:   3
[    0.751052] kernel: ... event mask:             00000007000000ff
[    0.751294] kernel: rcu: Hierarchical SRCU implementation.
[    0.751827] kernel: smp: Bringing up secondary CPUs ...
[    0.752003] kernel: x86: Booting SMP configuration:
[    0.752005] kernel: .... node  #0, CPUs:      #1
[    0.006941] kernel: kvm-clock: cpu 1, msr 2f93041, secondary cpu clock
[    0.006941] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.753006] kernel: kvm-guest: setup async PF for cpu 1
[    0.753014] kernel: kvm-guest: stealtime: cpu 1, msr 26571f140
[    0.753026] kernel: smp: Brought up 1 node, 2 CPUs
[    0.753026] kernel: smpboot: Max logical p----- is restarting 0
---- dfs_name cephfs is_dfs_client 0
Core revision 20210730
[    0.721055] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.721161] kernel: APIC: Switch to symmetric I/O mode setup
[    0.721166] kernel: kvm-guest: setup PV IPIs
[    0.722243] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.722272] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.722281] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.722284] kernel: pid_max: default: 32768 minimum: 301
[    0.722325] kernel: LSM: Security Framework initializing
[    0.722339] kernel: SELinux:  Initializing.
[    0.722427] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.723069] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.724013] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    unlink FIFO failed: No such file or directory
[0;1;38;5;185mJournal file /var/log/journal/62e1bbd01f3b4c5ca392a60d70223e76/system@0005f77f21a45b96-697e21065998b594.journal~ is truncated, ignoring file.[0m
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #9 SMP Thu Mar 23 12:39:08 CET 2023
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.61 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XS0.724178] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.724179] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.724191] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.724196] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.724197] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.724198] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.724200] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.724201] kernel: TAA: Mitigation: TSX disabled
[    0.731302] kernel: Freeing SMP alternatives memory: 40K
[    0.731461] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.731588] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.732343] kernelAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu: xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bff: ... version:                2
[    0.732345] kernel: ... bit width:              48
[    0.732345] kernel: ... generic registers:      8
[    0.732346] kernel: ... value mask:             0000ffffffffffff
[    0.732348] kernel: ... max period:             00007fffffffffff
[    0.732349] kernel: ... fixed-purpose events:   3
[    0.732349] kernel: ... event mask:             00000007000000ff
[    0.732540] kernel: rcu: Hierarchical SRCU implementation.
[    0.733009] kernel: smp: Bringing up secondary CPUs ...
[    0.733148] kernel: x86: Booting SMP configuration:
[    0.733149] kernel: .... node  #0, CPUs:      #1
[    0.005267] kernel: kvm-clock: cpu 1, msr 2f93041, secondary cpu clock
[    0.005267] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.734296] kernel: kvm-guest: setup async PF for cpu 1
[    0.734300] kernel: kvm-guest: stealtime: cpu 1, msr 26571f140
[    0.734308] kernel: smp: Brought up 1 node, 2 CPUs
[    0.734308] kernel: smpboot: Max logical pdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 2f93001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 247954817 cycles
[    0.000004] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000007] kernel: tsc: Detected 2899.9ackages: 2
[    0.734308] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.734890] kernel: devtmpfs: initialized
[    0.736463] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.736471] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.737410] kernel: PM: RTC time: 14:24:38, date: 2023-03-29
[    0.738172] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.738513] kernel: audit: initializing netlink subsys (disabled)
[    0.738555] kernel: audit: type=2000 audit(1680099878.630:1): state=initialized audit_enabled=0 res=1
[    0.738641] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.738643] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.738686] kernel: cpuidle: using governor menu
[    0.738686] kernel: ACPI: bus type PCI registered
[    0.739314] kernel: PCI: Using configuration type 1 for base access
[    0.749500executor 2 finishes userspace_cover_open
before receiving handshake request
] kernel: Kprobes globally optimized
[    0.749552] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.749552] kernel: cryptomgr_test (26) used greatest stack depth: 31384 bytes left
[    0.750355] kernel: ACPI: Added _OSI(Module Device)
[    0.750355] kernel: ACPI: Added _OSI(Processor Device)
[    0.750355] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.750355] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.750355] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.750355] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.750356] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.760368] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.764138] kernel: ACPI: Interpreter enabled
[    0.764186] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.764188] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.764231] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.765028] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.783920] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.783936] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.784010] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.784172] kernel: PCI host bridge to bus 0000:00
[    0.784175] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.784179] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.784182] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.784185] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.784188] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.784192] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.785080] kernel: pci 0000:00:00.0: [8ackages: 2
[    0.753026] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.754318] kernel: devtmpfs: initialized
[    0.755143] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.755150] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.755384] kernel: PM: RTC time: 14:24:38, date: 2023-03-29
[    0.756058] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.756410] kernel: audit: initializing netlink subsys (disabled)
[    0.756459] kernel: audit: type=2000 audit(1680099878.647:1): state=initialized audit_enabled=0 res=1
[    0.756459] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.756459] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.756459] kernel: cpuidle: using governor menu
[    0.757093] kernel: ACPI: bus type PCI registered
[    0.757314] kernel: PCI: Using configuration type 1 for base access
[    0.767749086:1237] type 00 class 0x060000
[    0.786627] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    0.787852] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    0.790611] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    0.791889] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    0.791893] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    0.791894] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    0.791895] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    0.793376] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    0.793728] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    0.793735] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    0.795030] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    0.795841] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xf] kernel: Kprobes globally optimized
[    0.768012] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.768059] kernel: cryptomgr_test (26) used greatest stack depth: 31384 bytes left
[    0.769177] kernel: ACPI: Added _OSI(Module Device)
[    0.769177] kernel: ACPI: Added _OSI(Processor Device)
[    0.769177] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.769177] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.769177] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.769177] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.769177] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.781736] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.785092] kernel: ACPI: Interpreter enabled
[    0.785930] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.785934] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.786713] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report ----- executor 3 do_sandbox_none at begining
----- executor 3 do_sandbox_none before fork()
dffffff pref]
[    0.797777] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    0.802283] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    0.803777] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    0.804279] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    0.807282] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    0.810830] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    0.811915] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    0.812837] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    0.815840] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    0.817100] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    0.819286] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    0.820281] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    0.822281] kernel: pci 000a bug
[    0.787339] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.805435] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.805450] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.805520] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.805679] kernel: PCI host bridge to bus 0000:00
[    0.805683] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.805686] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.805689] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.805692] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.805695] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.805698] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.806583] kernel: pci 0000:00:00.0: [80:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    0.826782] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    0.827279] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    0.828280] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    0.832325] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    0.833280] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    0.835281] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    0.842373] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    0.842838] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    0.843327] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    0.843638] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    0.843757] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    0.844543] kernel: iommu: Default domain type: Translated 
[    0.086:1237] type 00 class 0x060000
[    0.808101] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    0.809333] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    0.811974] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    0.813735] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    0.813741] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    0.813742] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    0.813743] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    0.815286] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    0.815647] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    0.815655] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    0.816994] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    0.818531] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    0.820659] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    0.824976] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    0.826574] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    0.827369] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    0.830974] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    0.834085] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    0.834973] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    0.835973] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    0.838974] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    0.839973] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    0.842756] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    0.843514] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    0.845484] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    0.850679] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    0.851376] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    0.852445] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    0.855286] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    0.856430] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    0.858444] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    0.865983] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    0.866561] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    0.867095] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    0.867640] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    0.867850] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    0.868800] kernel: iommu: Default domain type: Translated 
[    0.before receive testcase: 0 1
844545] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    0.844587] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    0.844587] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    0.844587] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    0.844587] kernel: vgaarb: loaded
[    0.844587] kernel: SCSI subsystem initialized
[    0.844625] kernel: libata version 3.00 loaded.
[    0.844625] kernel: ACPI: bus type USB registered
[    0.844625] kernel: usbcore: registered new interface driver usbfs
[    0.844625] kernel: usbcore: registered new interface driver hub
[    0.844625] kernel: usbcore: registered new device driver usb
[    0.845319] kernel: pps_core: LinuxPPS API ver. 1 registered
[    0.845321] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.845331] kernel: PTP clock support registered
[    0.845389] kernel: Advanced Linux Sound Architec868802] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    0.868849] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    0.868849] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    0.868849] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    0.868849] kernel: vgaarb: loaded
[    0.869242] kernel: SCSI subsystem initialized
[    0.869294] kernel: libata version 3.00 loaded.
[    0.869294] kernel: ACPI: bus type USB registered
[    0.869294] kernel: usbcore: registered new interface driver usbfs
[    0.869294] kernel: usbcore: registered new interface driver hub
[    0.869294] kernel: usbcore: registered new device driver usb
[    0.869294] kernel: pps_core: LinuxPPS API ver. 1 registered
[    0.869294] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.869294] kernel: PTP clock support registered
[    0.869319] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    0.845645] kernel: NetLabel: Initializing
[    0.845646] kernel: NetLabel:  domain hash size = 128
[    0.845647] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    0.845677] kernel: NetLabel:  unlabeled traffic allowed by default
[    0.845705] kernel: PCI: Using ACPI for IRQ routing
[    0.845705] kernel: PCI: pci_cache_line_size set to 64 bytes
[    0.845705] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    0.845705] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    0.845705] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    0.845705] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    0.847357] kernel: clocksource: Switched to clocksource kvm-clock
[    0.878635] kernel: VFS: Disk quotas dquot_6.6.0
[    0.878657] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.878778] kernel: pnp: PnP ACPI init
[    0.879216] kernel: pnp 00:03: [dma 2]
[    0.880516] kernel: pnp:ture Driver Initialized.
[    0.870186] kernel: NetLabel: Initializing
[    0.870187] kernel: NetLabel:  domain hash size = 128
[    0.870188] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    0.870240] kernel: NetLabel:  unlabeled traffic allowed by default
[    0.870282] kernel: PCI: Using ACPI for IRQ routing
[    0.870282] kernel: PCI: pci_cache_line_size set to 64 bytes
[    0.870282] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    0.870282] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    0.870282] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    0.870282] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    0.874077] kernel: clocksource: Switched to clocksource kvm-clock
[    0.918379] kernel: VFS: Disk quotas dquot_6.6.0
[    0.918443] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.918618] kernel: pnp: PnP ACPI init
[    0.919131] kernel: pnp 00:03: [dma 2]
[    0.920902] kernel: pnp: PnP ACPI: found 6 devices
[    0.889726] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    0.889799] kernel: NET: Registered PF_INET protocol family
[    0.890586] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    0.892432] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    0.892982] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    0.893166] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    0.893726] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    0.893804] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.893849] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.893990] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    0.894346] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
88 MHz processor
[    0.000957] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.000962] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.000967] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.001026] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.001033] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.005890] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.005974] kernel: Using GB pages for direct mapping
[    0.006726] kernel: ACPI: Early table checksum verification disabled
[    0.006735] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.006744] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.006751] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.006758] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.0[    0.894351] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    0.894352] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    0.894354] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    0.894355] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    0.894514] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    0.894523] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    0.894530] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    0.894561] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    0.894592] kernel: PCI: CLS 0 bytes, default 64
[    0.894717] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    0.894718] kernel: software IO TLB: mapped [mem 0x00000000bbfe0000-0x00000000bffe0000] (64MB)
[    0.894813] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer06762] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.006765] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.006769] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.006772] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.006774] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.006775] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.006776] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.006778] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.007177] kernel: No NUMA configuration found
[    0.007179] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.007182] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.007257] kernel: Zone ranges:
[    0.007258] kernel:   DMA      [mem 0x000000000 PnP ACPI: found 6 devices
[    0.931281] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    0.931381] kernel: NET: Registered PF_INET protocol family
[    0.932393] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    0.934644] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    0.935398] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    0.935619] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    0.936553] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    0.936663] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.936729] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.936943] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    0.937414] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
fsync test_dir /root/req 7
req.flags ea2
----- executor 2 do_sandbox_none at begining
----- executor 2 do_sandbox_none before fork()
[    0.937420] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    0.937421] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    0.937423] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    0.937424] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    0.937583] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    0.937598] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    0.937612] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    0.937672] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    0.937733] kernel: PCI: CLS 0 bytes, default 64
[    0.937910] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    0.937912] kernel: software IO TLB: mapped [mem 0x00000000bbfe0000-0x00000000bffe0000] (64MB)
[    0.938063] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer0001000-0x0000000000ffffff]
[    0.007260] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.007262] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007264] kernel: Movable zone start for each node
[    0.007265] kernel: Early memory node ranges
[    0.007265] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.007267] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.007269] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.007271] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.007846] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.007863] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.064312] kernel: On node 0, zone Normal: 32 pages in unavailable ranges
[    0.490301] kernel: kasan: KernelAddressSanitizer initialized
[    0.490681] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.490691] kernel: ACPI: LAPIC_NMI (a
[    0.894826] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.894849] kernel: clocksource: Switched to clocksource tsc
[    0.897293] kernel: Initialise system trusted keyrings
[    0.897399] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    0.905033] kernel: fuse: init (API version 7.34)
[    0.905577] kernel: ceph: loaded (mds proto 32)
[    0.914999] kernel: Key type asymmetric registered
[    0.915003] kernel: Asymmetric key parser 'x509' registered
[    0.915139] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    0.915142] kernel: io scheduler mq-deadline registered
[    0.915143] kernel: io scheduler kyber registered
[    0.915739] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    0.915877] kernel: ACPI: button: Power Button [PWRF]
[    1.429178] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    1.872537] kernel: ACPI: \_SB_.LNKD:
[    0.938080] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.938109] kernel: clocksource: Switched to clocksource tsc
[    0.941167] kernel: Initialise system trusted keyrings
[    0.941280] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    0.949775] kernel: fuse: init (API version 7.34)
[    0.950412] kernel: ceph: loaded (mds proto 32)
[    0.960802] kernel: Key type asymmetric registered
[    0.960809] kernel: Asymmetric key parser 'x509' registered
[    0.960964] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    0.960984] kernel: io scheduler mq-deadline registered
[    0.960986] kernel: io scheduler kyber registered
[    0.961657] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    0.961816] kernel: ACPI: button: Power Button [PWRF]
[    1.494811] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    1.951276] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    1.874513] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    1.874620] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    1.875419] kernel: Non-volatile memory driver v1.3
[    1.875490] kernel: Linux agpgart interface v0.103
[    1.880193] kernel: loop: module loaded
[    1.880390] kernel: ata_piix 0000:00:01.1: version 2.13
[    1.882094] kernel: scsi host0: ata_piix
[    1.882450] kernel: scsi host1: ata_piix
[    1.882574] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    1.882576] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    1.882996] kernel: libphy: Fixed MDIO Bus: probed
[    1.885466] kernel: e100: Intel(R) PRO/100 Network Driver
[    1.885468] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    1.885487] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    1.885488] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    1.885519] kerne Enabled at IRQ 10
[    1.952944] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    1.953077] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    1.954209] kernel: Non-volatile memory driver v1.3
[    1.954287] kernel: Linux agpgart interface v0.103
[    1.960217] kernel: loop: module loaded
[    1.960496] kernel: ata_piix 0000:00:01.1: version 2.13
[    1.962675] kernel: scsi host0: ata_piix
[    1.963069] kernel: scsi host1: ata_piix
[    1.963194] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    1.963196] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    1.963629] kernel: libphy: Fixed MDIO Bus: probed
[    1.966102] kernel: e100: Intel(R) PRO/100 Network Driver
[    1.966104] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    1.966122] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    1.966123] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    1.966152] kernecpi_id[0xff] dfl dfl lint[0x1])
[    0.490730] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.490733] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.490734] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.490736] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.490737] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.490738] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.490741] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.490742] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.490745] kernel: TSC deadline timer available
[    0.490747] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.490771] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.490775] kernel: kvm-guest: setup PV sched yield
[    0.490790] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0before receive testcase: 0 1
l: e1000e: Intel(R) PRO/1000 Network Driver
[    1.885519] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.885547] kernel: sky2: driver version 1.30
[    1.885799] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.885801] kernel: ehci-pci: EHCI PCI platform driver
[    1.885819] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.885829] kernel: ohci-pci: OHCI PCI platform driver
[    1.885847] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    1.885988] kernel: usbcore: registered new interface driver usblp
[    1.886013] kernel: usbcore: registered new interface driver usb-storage
[    1.886074] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    1.886726] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    1.886733] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    1.887296] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/inl: e1000e: Intel(R) PRO/1000 Network Driver
[    1.966152] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.966180] kernel: sky2: driver version 1.30
[    1.966457] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.966459] kernel: ehci-pci: EHCI PCI platform driver
[    1.966478] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.966488] kernel: ohci-pci: OHCI PCI platform driver
[    1.966504] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    1.966644] kernel: usbcore: registered new interface driver usblp
[    1.966670] kernel: usbcore: registered new interface driver usb-storage
[    1.966734] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    1.967393] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    1.967400] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    1.967941] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    1.895241] kernel: rtc_cmos 00:00: RTC can wake from S4
[    1.896070] kernel: rtc_cmos 00:00: registered as rtc0
[    1.896117] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    1.896604] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    1.896610] kernel: intel_pstate: CPU model not supported
[    1.896688] kernel: hid: raw HID events driver (C) Jiri Kosina
[    1.897051] kernel: usbcore: registered new interface driver usbhid
[    1.897052] kernel: usbhid: USB HID core driver
[    1.897449] kernel: netem: version 1.3
[    1.899090] kernel: Initializing XFRM netlink socket
[    1.899388] kernel: NET: Registered PF_INET6 protocol family
[    1.900599] kernel: Segment Routing with IPv6
[    1.900615] kernel: In-situ OAM (IOAM) with IPv6
[    1.900797] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.901036] kernel: NET: Registered PF_PACKET protocol family
[    1.901076] kernel: 9pneput1
[    1.968493] kernel: rtc_cmos 00:00: RTC can wake from S4
[    1.969756] kernel: rtc_cmos 00:00: registered as rtc0
[    1.969894] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    1.970384] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    1.970388] kernel: intel_pstate: CPU model not supported
[    1.970479] kernel: hid: raw HID events driver (C) Jiri Kosina
[    1.970872] kernel: usbcore: registered new interface driver usbhid
[    1.970874] kernel: usbhid: USB HID core driver
[    1.971197] kernel: netem: version 1.3
[    1.973306] kernel: Initializing XFRM netlink socket
[    1.973726] kernel: NET: Registered PF_INET6 protocol family
[    1.974931] kernel: Segment Routing with IPv6
[    1.974944] kernel: In-situ OAM (IOAM) with IPv6
[    1.975031] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.975271] kernel: NET: Registered PF_PACKET protocol family
[    1.975312] kernel: 9pnet: Installing 9P2000 support
[    1.901099] kernel: Key type dns_resolver registered
[    1.901109] kernel: Key type ceph registered
[    1.901314] kernel: libceph: loaded (mon/osd proto 15/24)
[    1.901688] kernel: IPI shorthand broadcast: enabled
[    1.901713] kernel: sched_clock: Marking stable (1897328276, 4267818)->(1958656285, -57060191)
[    1.901930] kernel: registered taskstats version 1
[    1.901932] kernel: Loading compiled-in X.509 certificates
[    1.902976] kernel: PM:   Magic number: 15:21:436
[    1.903023] kernel: printk: console [netcon0] enabled
[    1.903025] kernel: netconsole: network logging started
[    2.040956] kernel: ata1.01: NODEV after polling detection
[    2.041209] kernel: ata2.01: NODEV after polling detection
[    2.041460] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    2.041462] kernel: ata1.00: 150992896 sectors, multi 16: LBA48 
[    2.041650] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    2.042428] kernel: scsi 0x00000fff]
[    0.490792] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.490794] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.490795] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.490796] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.490798] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.490798] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.490800] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.490801] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.490803] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.490804] kernel: Booting paravirtualized kernel on KVM
[    0.490807] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_t: Installing 9P2000 support
[    1.975339] kernel: Key type dns_resolver registered
[    1.975354] kernel: Key type ceph registered
[    1.975521] kernel: libceph: loaded (mon/osd proto 15/24)
[    1.975850] kernel: IPI shorthand broadcast: enabled
[    1.975882] kernel: sched_clock: Marking stable (1969829675, 5941114)->(2020497845, -44727056)
[    1.976131] kernel: registered taskstats version 1
[    1.976133] kernel: Loading compiled-in X.509 certificates
[    1.977101] kernel: PM:   Magic number: 15:21:436
[    1.977145] kernel: printk: console [netcon0] enabled
[    1.977147] kernel: netconsole: network logging started
[    2.116624] kernel: ata1.01: NODEV after polling detection
[    2.116892] kernel: ata2.01: NODEV after polling detection
[    2.117144] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    2.117147] kernel: ata1.00: 150992896 sectors, multi 16: LBA48 
[    2.117328] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    2.118100] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    2.042697] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    2.043056] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    2.043521] kernel: sd 0:0:0:0: [sda] 150992896 512-byte logical blocks: (77.3 GB/72.0 GiB)
[    2.043533] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    2.043538] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    2.043554] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    2.044820] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    2.060791] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    2.060801] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    2.078166] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    2.078369] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    2.522317] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042idle_ns: 1910969940391419 ns
[    0.495396] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.496128] kernel: percpu: Embedded 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.496134] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.496137] kernel: pcpu-alloc: [0] 0 1 
[    0.496162] kernel: kvm-guest: setup async PF for cpu 0
[    0.496167] kernel: kvm-guest: stealtime: cpu 0, msr 26561f140
[    0.496171] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580192
[    0.496172] kernel: Policy zone: Normal
[    0.496175] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.61 quiet nokaslr
[    0.496257] kernel: Unknown command line parameters: nokaslr
[    0.501924] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.504942] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.505014] kernel: mem auto-init:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    2.118466] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    2.118617] kernel: sd 0:0:0:0: [sda] 150992896 512-byte logical blocks: (77.3 GB/72.0 GiB)
[    2.118629] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    2.118633] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    2.118729] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    2.118870] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    2.120840] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    2.137552] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    2.137561] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    2.155252] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    2.155615] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    2.589084] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    2.602026] kernel: IP-Config: Guessing netmask 255.255.255.0
[    2.602031] kernel: IP-Config: Complete:
[    2.602032] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:3b, ipaddr=192.168.0.59, mask=255.255.255.0, gw=255.255.255.255
[    2.602036] kernel:      host=192.168.0.59, domain=, nis-domain=(none)
[    2.602038] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    2.602186] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.602470] kernel: kworker/u4:1 (69) used greatest stack depth: 30464 bytes left
[    2.602998] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.603011] kernel: ALSA device list:
[    2.603012] kernel:   No soundcards found.
[    2.603767] kernel: md: Waiting for all devices to be available before autodetect
[    2.603769] kernel: md: If you don't use raid, use raid=noautodetect
[    2.603770] kernel: md: Autodetecting RAID arrays.
[    2.603771: stack:off, heap alloc:off, heap free:off
[    0.716322] kernel: Memory: 8868040K/10485240K available (16396K kernel code, 3196K rwdata, 3688K rodata, 1416K init, 2608K bss, 1617000K reserved, 0K cma-reserved)
[    0.716427] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.717081] kernel: rcu: Hierarchical RCU implementation.
[    0.717083] kernel: rcu:         RCU event tracing is enabled.
[    0.717084] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.717087] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.717089] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.720412] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.720628] kernel: random: get_random_bytes called from start_kernel+0x4b1/0x67a with crng_init=0
[    0.724547] kernel: Console: colour VGA+ 80x25
[    0.724592] kernel: printk: console [ttyS0] enabled
[    0.724620] kernel: ACPI: Core revision 20210730
[    0.724800] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.724901] kernel: APIC: Switch to symmetric I/O mode setup
[    0.724905] kernel: kvm-guest: setup PV IPIs
[    0.725811] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.725832] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.725839] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.725841] kernel: pid_max: default: 32768 minimum: 301
[    0.725874] kernel: LSM: Security Framework initializing
[    0.725888] kernel: SELinux:  Initializing.
[    0.726924] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.727408] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.728107] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    ] kernel: md: autorun ...
[    2.603772] kernel: md: ... autorun DONE.
[    2.604144] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.604151] kernel: cfg80211: failed to load regulatory.db
[    2.610978] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    2.611011] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    2.611854] kernel: devtmpfs: mounted
[    2.612190] kernel: Freeing unused kernel image (initmem) memory: 1416K
[    2.616008] kernel: Write protecting the kernel read-only data: 22528k
[    2.616515] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    2.616629] kernel: Freeing unused kernel image (rodata/data gap) memory: 408K
[    2.616638] kernel: Run /sbin/init as init process
[    2.616639] kernel:   with arguments:
[    2.616640] kernel:     /sbin/init
[    2.616640] kernel:     nokaslr
[    2.616641] kernel:   with environment0.728280] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.728282] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.728294] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.728299] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.728300] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.728302] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.728304] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.728305] kernel: TAA: Mitigation: TSX disabled
[    0.735208] kernel: Freeing SMP alternatives memory: 40K
[    0.735361] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.735488] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.735902] kernel:
[    2.616641] kernel:     HOME=/
[    2.616641] kernel:     TERM=linux
[    2.642723] kernel: random: fast init done
[    2.693657] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    2.693734] systemd[1]: Detected virtualization kvm.
[    2.693740] systemd[1]: Detected architecture x86-64.
[    2.705554] systemd[1]: Set hostname to <dfs-fuzzing>.
[    2.759483] kernel: systemd-debug-g (81) used greatest stack depth: 29008 bytes left
[    2.764899] kernel: systemd-run-gen (87) used greatest stack depth: 28936 bytes left
[    2.787252] kernel: random: lvmconfig: uninitialized urandom read (4 bytes read)
[    2.794006] kernel: lvmconfig (91) used greatest stack depth: 28880 bytes left
[    2.858739] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy dire: ... version:                2
[    0.735903] kernel: ... bit width:              48
[    0.735904] kernel: ... generic registers:      8
[    0.735905] kernel: ... value mask:             0000ffffffffffff
[    0.735907] kernel: ... max period:             00007fffffffffff
[    0.735908] kernel: ... fixed-purpose events:   3
[    0.735909] kernel: ... event mask:             00000007000000ff
[    0.736083] kernel: rcu: Hierarchical SRCU implementation.
[    0.736414] kernel: smp: Bringing up secondary CPUs ...
[    0.736520] kernel: x86: Booting SMP configuration:
[    0.736521] kernel: .... node  #0, CPUs:      #1
[    0.005237] kernel: kvm-clock: cpu 1, msr 2f93041, secondary cpu clock
[    0.005237] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.737869] kernel: kvm-guest: setup async PF for cpu 1
[    0.737876] kernel: kvm-guest: stealtime: cpu 1, msr 26571f140
[    0.737887] kernel: smp: Brought up 1 node, 2 CPUs
[    0.737887] kernel: smpboot: Max logical p/serio1/input/input3
[    2.534329] kernel: IP-Config: Guessing netmask 255.255.255.0
[    2.534332] kernel: IP-Config: Complete:
[    2.534332] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:3e, ipaddr=192.168.0.62, mask=255.255.255.0, gw=255.255.255.255
[    2.534335] kernel:      host=192.168.0.62, domain=, nis-domain=(none)
[    2.534336] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    2.534430] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.534674] kernel: kworker/u4:1 (69) used greatest stack depth: 30464 bytes left
[    2.535104] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.535117] kernel: ALSA device list:
[    2.535118] kernel:   No soundcards found.
[    2.535357] kernel: md: Waiting for all devices to be available before autodetect
[    2.535358] kernel: md: If you don't use raid, use raid=noautodetect
[    2.535359] kernel: md: Autodetecting RAID arrays.
[    2.535359ctory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    2.887525] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    2.887531] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    2.887832] systemd[1]: Created slice system-modprobe.slice.
[    2.888056] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    2.888181] systemd[1]: Created slice User and Session Slice.
[    2.888277] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    2.888351] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    2.888669] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    2.888703] systemd[1]: Reached target Local Encrypted Volumes.
[    2.888723] systemd[1]: Reached target Paths.
[    2.888735] systemd[1]: ackages: 2
[    0.737888] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.738910] kernel: devtmpfs: initialized
[    0.739288] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.739288] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.739288] kernel: PM: RTC time: 14:24:38, date: 2023-03-29
[    0.740514] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.740783] kernel: audit: initializing netlink subsys (disabled)
[    0.740847] kernel: audit: type=2000 audit(1680099878.653:1): state=initialized audit_enabled=0 res=1
[    0.741097] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.741099] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.741146] kernel: cpuidle: using governor menu
[    0.741146] kernel: ACPI: bus type PCI registered
[    0.741155] kernel: PCI: Using configuration type 1 for base access
[    0.749683] kernel: md: autorun ...
[    2.535360] kernel: md: ... autorun DONE.
[    2.536152] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.536157] kernel: cfg80211: failed to load regulatory.db
[    2.544091] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    2.544127] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    2.545092] kernel: devtmpfs: mounted
[    2.545468] kernel: Freeing unused kernel image (initmem) memory: 1416K
[    2.545472] kernel: Write protecting the kernel read-only data: 22528k
[    2.546015] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    2.546129] kernel: Freeing unused kernel image (rodata/data gap) memory: 408K
[    2.546136] kernel: Run /sbin/init as init process
[    2.546137] kernel:   with arguments:
[    2.546138] kernel:     /sbin/init
[    2.546138] kernel:     nokaslr
[    2.546139] kernel:   with environmentReached target Remote File Systems.
[    2.888743] systemd[1]: Reached target Slices.
[    2.888756] systemd[1]: Reached target Swap.
[    2.888862] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    2.889068] systemd[1]: Listening on LVM2 poll daemon socket.
[    2.889203] systemd[1]: Listening on Syslog Socket.
[    2.889271] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    2.889519] systemd[1]: Listening on Journal Audit Socket.
[    2.889648] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.890352] systemd[1]: Listening on Journal Socket.
[    2.890575] systemd[1]: Listening on udev Control Socket.
[    2.890676] systemd[1]: Listening on udev Kernel Socket.
[    2.891881] systemd[1]: Mounting Huge Pages File System...
[    2.893134] systemd[1]: Mounting POSIX Message Queue File System...
[    2.894228] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    2.895338] systemd[1]: Mounting /sys/kernel/config...
[    2.896768] systemd[1]: Mounting ] kernel: Kprobes globally optimized
[    0.749921] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.749921] kernel: cryptomgr_test (26) used greatest stack depth: 31384 bytes left
[    0.750857] kernel: ACPI: Added _OSI(Module Device)
[    0.750859] kernel: ACPI: Added _OSI(Processor Device)
[    0.750860] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.750860] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.750864] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.750866] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.750868] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.760041] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.765209] kernel: ACPI: Interpreter enabled
[    0.765261] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.765264] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.765313] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report :
[    2.546140] kernel:     HOME=/
[    2.546140] kernel:     TERM=linux
[    2.577943] kernel: random: fast init done
[    2.626630] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    2.626720] systemd[1]: Detected virtualization kvm.
[    2.626727] systemd[1]: Detected architecture x86-64.
[    2.637158] systemd[1]: Set hostname to <dfs-fuzzing>.
[    2.684756] kernel: systemd-debug-g (81) used greatest stack depth: 29776 bytes left
[    2.685560] kernel: systemd-cryptse (80) used greatest stack depth: 29760 bytes left
[    2.686605] kernel: netplan (78) used greatest stack depth: 29456 bytes left
[    2.705776] kernel: systemd-sysv-ge (90) used greatest stack depth: 29216 bytes left
[    2.714525] kernel: random: lvmconfig: uninitialized urandom read (4 bytes read)
[    2.719193] kernel: lva bug
[    0.765821] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.780784] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.780800] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.780866] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.780984] kernel: PCI host bridge to bus 0000:00
[    0.780987] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.780991] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.780993] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.780996] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.780999] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.781002] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.781825] kernel: pci 0000:00:00.0: [8mconfig (84) used greatest stack depth: 29136 bytes left
[    2.776557] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    2.808469] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    2.808477] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    2.808800] systemd[1]: Created slice system-modprobe.slice.
[    2.808968] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    2.809084] systemd[1]: Created slice User and Session Slice.
[    2.809174] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    2.809249] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    2.809661] systemd[1]: Set up automount Arbitrary Executable File Formats File086:1237] type 00 class 0x060000
[    0.783222] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    0.784415] kernel: pci 0000:00:01.1: [8086:7010] type 00 class 0x010180
[    0.786839] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    0.787857] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    0.787861] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    0.787862] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    0.787864] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    0.789343] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    0.789623] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    0.789630] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    0.790569] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    0.791840] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xf/sys/kernel/debug...
[    2.898146] systemd[1]: Mounting Kernel Trace File System...
[    2.899703] systemd[1]: Starting Journal Service...
[    2.902368] systemd[1]: Starting Availability of block devices...
[    2.904463] systemd[1]: Starting Set the console keyboard layout...
[    2.904492] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    2.905532] systemd[1]: Starting Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling...
[    2.905574] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    2.908462] systemd[1]: Starting Load Kernel Modules...
[    2.909381] systemd[1]: Starting Remount Root and Kernel File Systems...
[    2.910775] systemd[1]: Starting udev Coldplug all Devices...
[    2.912879] systemd[1]: Mounted Huge Pages File System.
[    2.913197] systemd[1]: Mounted POSIX Message Queue File System.
[    2.913463] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    2.913740] systemd[1]: Mounted /sys/kernel/config.
[    2.919492] systemd[1]: Mounted /sys/kernel/debug.
[    2.919753] systemd[1]: Mounted Kernel Trace File System.
[    2.920757] systemd[1]: Finished Availability of block devices.
[    2.922558] kernel: random: lvm: uninitialized urandom read (4 bytes read)
[    2.926199] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    2.941138] systemd[1]: Finished Load Kernel Modules.
[    2.943073] systemd[1]: Mounting FUSE Control File System...
[    2.943880] systemd[1]: Starting Apply Kernel Variables...
[    2.968572] systemd[1]: Mounted FUSE Control File System.
[    3.002835] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    3.007538] systemd[1]: Finished Remount Root and Kernel File Systems.
[    3.008920] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    3.008966] systemd[1]: Condition check resulted in Platform Persistent Sto System Automount Point.
[    2.809696] systemd[1]: Reached target Local Encrypted Volumes.
[    2.809716] systemd[1]: Reached target Paths.
[    2.809727] systemd[1]: Reached target Remote File Systems.
[    2.809736] systemd[1]: Reached target Slices.
[    2.809747] systemd[1]: Reached target Swap.
[    2.809857] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    2.810041] systemd[1]: Listening on LVM2 poll daemon socket.
[    2.810170] systemd[1]: Listening on Syslog Socket.
[    2.810237] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    2.810499] systemd[1]: Listening on Journal Audit Socket.
[    2.810638] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.810814] systemd[1]: Listening on Journal Socket.
[    2.810975] systemd[1]: Listening on udev Control Socket.
[    2.811086] systemd[1]: Listening on udev Kernel Socket.
[    2.812259] systemd[1]: Mounting Huge Pages File System...
[    2.813967] systemd[1]: Mounting POSIX Message Queue File dffffff pref]
[    0.793840] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    0.797841] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    0.799410] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    0.800842] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    0.803615] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    0.805986] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    0.806839] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    0.807840] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    0.811842] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    0.812841] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    0.814616] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    0.815378] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    0.817357] kernel: pci 000rage Archival being skipped.
[    3.010318] systemd[1]: Starting Load/Save Random Seed...
[    3.011526] systemd[1]: Starting Create System Users...
[    3.012988] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    3.029248] systemd[1]: Finished Set the console keyboard layout.
[    3.031173] systemd[1]: Finished Apply Kernel Variables.
[    3.051923] systemd[1]: Finished Create System Users.
[    3.052906] systemd[1]: Starting Create Static Device Nodes in /dev...
[    3.099354] systemd[1]: Finished Create Static Device Nodes in /dev.
[    3.100744] systemd[1]: Starting udev Kernel Device Manager...
[    3.111749] systemd[1]: Finished udev Coldplug all Devices.
[    3.138549] systemd[1]: Started udev Kernel Device Manager.
[    3.321342] systemd[1]: Found device /dev/ttyS0.
[    3.366883] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    3.449469] systemd[1]: Finished Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progresSystem...
[    2.815110] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    2.816118] systemd[1]: Mounting /sys/kernel/config...
[    2.817291] systemd[1]: Mounting /sys/kernel/debug...
[    2.818525] systemd[1]: Mounting Kernel Trace File System...
[    2.820284] systemd[1]: Starting Journal Service...
[    2.821460] systemd[1]: Starting Availability of block devices...
[    2.822911] systemd[1]: Starting Set the console keyboard layout...
[    2.822943] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    2.823982] systemd[1]: Starting Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling...
[    2.824030] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    2.829160] systemd[1]: Starting Load Kernel Modules...
[    2.830197] systemd[1]: Starting Remount Root and Kernel File Systems...
[    2.831407] systemd[1]: Starting udev Coldplug all Devices...
[    2.8336390:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    0.822761] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    0.823251] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    0.824617] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    0.827913] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    0.828840] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    0.831829] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    0.838411] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    0.839007] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    0.839565] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    0.840314] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    0.840498] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    0.841502] kernel: iommu: Default domain type: Translated 
[    0.s polling.
[    3.449679] systemd[1]: Reached target Local File Systems (Pre).
[    3.449692] systemd[1]: Reached target Local File Systems.
[    3.450620] systemd[1]: Starting Set console font and keymap...
[    3.450681] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    3.491103] systemd[1]: Finished Set console font and keymap.
[    3.568994] systemd[1]: Started Journal Service.
[    3.639153] kernel: random: crng init done
[    4.504627] kernel: prometheus (187) used greatest stack depth: 28592 bytes left
] systemd[1]: Mounted Huge Pages File System.
[    2.833951] systemd[1]: Mounted POSIX Message Queue File System.
[    2.834262] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    2.840169] systemd[1]: Mounted /sys/kernel/config.
[    2.840460] systemd[1]: Mounted /sys/kernel/debug.
[    2.840736] systemd[1]: Mounted Kernel Trace File System.
[    2.841310] systemd[1]: Finished Availability of block devices.
[    2.847811] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    2.849250] systemd[1]: Finished Load Kernel Modules.
[    2.851034] systemd[1]: Mounting FUSE Control File System...
[    2.852203] systemd[1]: Starting Apply Kernel Variables...
[    2.853543] kernel: random: lvm: uninitialized urandom read (4 bytes read)
[    2.860881] systemd[1]: Mounted FUSE Control File System.
[    2.904581] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    2.906469] systemd[1]: Finished Remount Root and Kernel File Systems.
[    2.913589] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    2.913644] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    2.914803] systemd[1]: Starting Load/Save Random Seed...
[    2.915878] systemd[1]: Starting Create System Users...
[    2.928337] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    2.940804] systemd[1]: Finished Apply Kernel Variables.
[    2.945607] kernel: gzip (117) used greatest stack depth: 29008 bytes left
[    2.963895] systemd[1]: Finished Create System Users.
[    2.964898] systemd[1]: Starting Create Static Device Nodes in /dev...
[    3.000637] systemd[1]: Finished Create Static Device Nodes in /dev.
[    3.002185] systemd[1]: Starting udev Kernel Device Manager...
[    3.059333] systemd[1]: Finished Set the console keyboard layout.
[    3.062788] systemd[1]: Started udev Kernel Device Manager.
[    3.203536] systemd[1]: Finished udev Coldplug all Devices.
[841504] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    0.841548] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    0.841548] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    0.841548] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    0.841548] kernel: vgaarb: loaded
[    0.841959] kernel: SCSI subsystem initialized
[    0.842013] kernel: libata version 3.00 loaded.
[    0.842013] kernel: ACPI: bus type USB registered
[    0.842023] kernel: usbcore: registered new interface driver usbfs
[    0.842049] kernel: usbcore: registered new interface driver hub
[    0.842068] kernel: usbcore: registered new device driver usb
[    0.842126] kernel: pps_core: LinuxPPS API ver. 1 registered
[    0.842128] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    0.842139] kernel: PTP clock support registered
[    0.842190] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    0.842908] kernel: NetLabel: Initializing
[    0.842910] kernel: NetLabel:  domain hash size = 128
[    0.842911] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    0.842956] kernel: NetLabel:  unlabeled traffic allowed by default
[    0.842995] kernel: PCI: Using ACPI for IRQ routing
[    0.842995] kernel: PCI: pci_cache_line_size set to 64 bytes
[    0.842995] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    0.842995] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    0.843070] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    0.843074] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    0.846930] kernel: clocksource: Switched to clocksource kvm-clock
[    0.886957] kernel: VFS: Disk quotas dquot_6.6.0
[    0.886978] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    0.887101] kernel: pnp: PnP ACPI init
[    0.887418] kernel: pnp 00:03: [dma 2]
[    0.888942] kernel: pnp: PnP ACPI: found 6 devices
[    0.897942] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    0.898035] kernel: NET: Registered PF_INET protocol family
[    0.898768] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    0.900579] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    0.901229] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    0.901404] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    0.902029] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    0.902115] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.902161] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    0.902320] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    0.902728] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
    3.291880] systemd[1]: Found device /dev/ttyS0.
[    3.345522] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    3.387313] systemd[1]: Finished Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling.
[    3.388433] systemd[1]: Reached target Local File Systems (Pre).
[    3.388456] systemd[1]: Reached target Local File Systems.
[    3.389910] systemd[1]: Starting Set console font and keymap...
[    3.389988] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    3.402559] systemd[1]: Finished Set console font and keymap.
[    3.507218] systemd[1]: Started Journal Service.
[    3.558850] kernel: random: crng init done
[    4.240555] kernel: sshd (173) used greatest stack depth: 28608 bytes left
[    0.902732] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    0.902733] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    0.902735] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    0.902735] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    0.902853] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    0.902861] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    0.902868] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    0.902902] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    0.902935] kernel: PCI: CLS 0 bytes, default 64
[    0.903037] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    0.903039] kernel: software IO TLB: mapped [mem 0x00000000bbfe0000-0x00000000bffe0000] (64MB)
[    0.903113] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    0.903124] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.903145] kernel: clocksource: Switched to clocksource tsc
[    0.905476] kernel: Initialise system trusted keyrings
[    0.905614] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    0.912153] kernel: fuse: init (API version 7.34)
[    0.912584] kernel: ceph: loaded (mds proto 32)
[    0.924055] kernel: Key type asymmetric registered
[    0.924060] kernel: Asymmetric key parser 'x509' registered
[    0.924197] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    0.924200] kernel: io scheduler mq-deadline registered
[    0.924201] kernel: io scheduler kyber registered
[    0.924767] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    0.924914] kernel: ACPI: button: Power Button [PWRF]
[    1.377915] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    1.810210] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    1.811564] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    1.811671] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    1.812655] kernel: Non-volatile memory driver v1.3
[    1.812730] kernel: Linux agpgart interface v0.103
[    1.818403] kernel: loop: module loaded
[    1.818633] kernel: ata_piix 0000:00:01.1: version 2.13
[    1.819788] kernel: scsi host0: ata_piix
[    1.820119] kernel: scsi host1: ata_piix
[    1.820229] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    1.820231] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    1.820584] kernel: libphy: Fixed MDIO Bus: probed
[    1.822748] kernel: e100: Intel(R) PRO/100 Network Driver
[    1.822750] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    1.822767] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    1.822768] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    1.822799] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    1.822800] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    1.822828] kernel: sky2: driver version 1.30
[    1.823051] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    1.823052] kernel: ehci-pci: EHCI PCI platform driver
[    1.823069] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    1.823080] kernel: ohci-pci: OHCI PCI platform driver
[    1.823098] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    1.823187] kernel: usbcore: registered new interface driver usblp
[    1.823203] kernel: usbcore: registered new interface driver usb-storage
[    1.823249] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    1.827571] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    1.827579] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    1.827987] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    1.828345] kernel: rtc_cmos 00:00: RTC can wake from S4
[    1.835670] kernel: rtc_cmos 00:00: registered as rtc0
[    1.835702] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    1.836047] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    1.836052] kernel: intel_pstate: CPU model not supported
[    1.836107] kernel: hid: raw HID events driver (C) Jiri Kosina
[    1.836334] kernel: usbcore: registered new interface driver usbhid
[    1.836335] kernel: usbhid: USB HID core driver
[    1.836623] kernel: netem: version 1.3
[    1.838201] kernel: Initializing XFRM netlink socket
[    1.838481] kernel: NET: Registered PF_INET6 protocol family
[    1.840170] kernel: Segment Routing with IPv6
[    1.840188] kernel: In-situ OAM (IOAM) with IPv6
[    1.840308] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    1.840641] kernel: NET: Registered PF_PACKET protocol family
[    1.840708] kernel: 9pnet: Installing 9P2000 support
[    1.840738] kernel: Key type dns_resolver registered
[    1.840753] kernel: Key type ceph registered
[    1.840958] kernel: libceph: loaded (mon/osd proto 15/24)
[    1.841257] kernel: IPI shorthand broadcast: enabled
[    1.841286] kernel: sched_clock: Marking stable (1836949554, 4237652)->(1877898992, -36711786)
[    1.841557] kernel: registered taskstats version 1
[    1.841558] kernel: Loading compiled-in X.509 certificates
[    1.842886] kernel: PM:   Magic number: 15:21:436
[    1.842929] kernel: printk: console [netcon0] enabled
[    1.842930] kernel: netconsole: network logging started
[    1.973421] kernel: ata1.01: NODEV after polling detection
[    1.973644] kernel: ata2.01: NODEV after polling detection
[    1.973865] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    1.973867] kernel: ata1.00: 150992896 sectors, multi 16: LBA48 
[    1.974031] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    1.974803] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    1.975126] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    1.975209] kernel: sd 0:0:0:0: [sda] 150992896 512-byte logical blocks: (77.3 GB/72.0 GiB)
[    1.975491] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    1.975950] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    1.975956] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    1.975977] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    1.977018] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    1.995106] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    1.995113] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    2.013092] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    2.013318] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    2.462222] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    2.474890] kernel: IP-Config: Guessing netmask 255.255.255.0
[    2.474895] kernel: IP-Config: Complete:
[    2.474895] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:3d, ipaddr=192.168.0.61, mask=255.255.255.0, gw=255.255.255.255
[    2.474899] kernel:      host=192.168.0.61, domain=, nis-domain=(none)
[    2.474901] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    2.475025] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    2.475282] kernel: kworker/u4:1 (69) used greatest stack depth: 30464 bytes left
[    2.475746] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    2.475758] kernel: ALSA device list:
[    2.475759] kernel:   No soundcards found.
[    2.476013] kernel: md: Waiting for all devices to be available before autodetect
[    2.476014] kernel: md: If you don't use raid, use raid=noautodetect
[    2.476015] kernel: md: Autodetecting RAID arrays.
[    2.476016] kernel: md: autorun ...
[    2.476017] kernel: md: ... autorun DONE.
[    2.476787] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    2.476792] kernel: cfg80211: failed to load regulatory.db
[    2.485966] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    2.486002] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    2.486911] kernel: devtmpfs: mounted
[    2.487228] kernel: Freeing unused kernel image (initmem) memory: 1416K
[    2.487232] kernel: Write protecting the kernel read-only data: 22528k
[    2.487735] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    2.487877] kernel: Freeing unused kernel image (rodata/data gap) memory: 408K
[    2.487886] kernel: Run /sbin/init as init process
[    2.487887] kernel:   with arguments:
[    2.487887] kernel:     /sbin/init
[    2.487888] kernel:     nokaslr
[    2.487889] kernel:   with environment:
[    2.487889] kernel:     HOME=/
[    2.487890] kernel:     TERM=linux
[    2.531253] kernel: random: fast init done
[    2.577806] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    2.577873] systemd[1]: Detected virtualization kvm.
[    2.577877] systemd[1]: Detected architecture x86-64.
[    2.587482] systemd[1]: Set hostname to <dfs-fuzzing>.
[    2.629387] kernel: netplan (78) used greatest stack depth: 29456 bytes left
[    2.641325] kernel: systemd-gpt-aut (85) used greatest stack depth: 29008 bytes left
[    2.661277] kernel: systemd-sysv-ge (90) used greatest stack depth: 28776 bytes left
[    2.665595] kernel: random: lvmconfig: uninitialized urandom read (4 bytes read)
[    2.724877] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    2.757241] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    2.757247] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    2.757489] systemd[1]: Created slice system-modprobe.slice.
[    2.757635] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    2.757725] systemd[1]: Created slice User and Session Slice.
[    2.757820] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    2.757879] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    2.758116] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    2.758140] systemd[1]: Reached target Local Encrypted Volumes.
[    2.758152] systemd[1]: Reached target Paths.
[    2.758160] systemd[1]: Reached target Remote File Systems.
[    2.758165] systemd[1]: Reached target Slices.
[    2.758171] systemd[1]: Reached target Swap.
[    2.758247] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    2.758385] systemd[1]: Listening on LVM2 poll daemon socket.
[    2.758484] systemd[1]: Listening on Syslog Socket.
[    2.758536] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    2.758712] systemd[1]: Listening on Journal Audit Socket.
[    2.758829] systemd[1]: Listening on Journal Socket (/dev/log).
[    2.758958] systemd[1]: Listening on Journal Socket.
[    2.759078] systemd[1]: Listening on udev Control Socket.
[    2.759701] systemd[1]: Listening on udev Kernel Socket.
[    2.760586] systemd[1]: Mounting Huge Pages File System...
[    2.761592] systemd[1]: Mounting POSIX Message Queue File System...
[    2.762603] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    2.763467] systemd[1]: Mounting /sys/kernel/config...
[    2.764374] systemd[1]: Mounting /sys/kernel/debug...
[    2.766043] systemd[1]: Mounting Kernel Trace File System...
[    2.768083] systemd[1]: Starting Journal Service...
[    2.773184] systemd[1]: Starting Availability of block devices...
[    2.775254] systemd[1]: Starting Set the console keyboard layout...
[    2.775289] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    2.776120] systemd[1]: Starting Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling...
[    2.776164] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    2.779882] systemd[1]: Starting Load Kernel Modules...
[    2.781080] systemd[1]: Starting Remount Root and Kernel File Systems...
[    2.784208] systemd[1]: Starting udev Coldplug all Devices...
[    2.785514] systemd[1]: Mounted Huge Pages File System.
[    2.785712] systemd[1]: Mounted POSIX Message Queue File System.
[    2.789306] kernel: random: lvm: uninitialized urandom read (4 bytes read)
[    2.791162] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    2.791429] systemd[1]: Mounted /sys/kernel/config.
[    2.791591] systemd[1]: Mounted /sys/kernel/debug.
[    2.791746] systemd[1]: Mounted Kernel Trace File System.
[    2.794871] systemd[1]: Finished Availability of block devices.
[    2.798917] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    2.805175] systemd[1]: Finished Load Kernel Modules.
[    2.806409] systemd[1]: Mounting FUSE Control File System...
[    2.807366] systemd[1]: Starting Apply Kernel Variables...
[    2.816045] systemd[1]: Mounted FUSE Control File System.
[    2.856546] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    2.862548] systemd[1]: Finished Remount Root and Kernel File Systems.
[    2.865242] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    2.865297] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    2.868853] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    2.869131] systemd[1]: Starting Load/Save Random Seed...
[    2.870269] systemd[1]: Starting Create System Users...
[    2.887429] systemd[1]: Finished Apply Kernel Variables.
[    2.911638] systemd[1]: Finished Create System Users.
[    2.913189] systemd[1]: Starting Create Static Device Nodes in /dev...
[    2.944625] systemd[1]: Finished Create Static Device Nodes in /dev.
[    2.946128] systemd[1]: Starting udev Kernel Device Manager...
[    3.008442] systemd[1]: Started udev Kernel Device Manager.
[    3.037477] systemd[1]: Finished udev Coldplug all Devices.
[    3.086124] systemd[1]: Finished Set the console keyboard layout.
[    3.199560] systemd[1]: Found device /dev/ttyS0.
[    3.238500] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    3.325713] systemd[1]: Finished Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling.
[    3.326058] systemd[1]: Reached target Local File Systems (Pre).
[    3.326078] systemd[1]: Reached target Local File Systems.
[    3.327297] systemd[1]: Starting Set console font and keymap...
[    3.327392] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    3.365212] systemd[1]: Finished Set console font and keymap.
[    3.466947] systemd[1]: Started Journal Service.
[    3.683628] kernel: random: crng init done
---- executor 0 config DFS: call atexit in pid 542 tid 542

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 542, pid 542, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 1, thread 543, pid 542, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 2, thread 544, pid 542, value 1

---- executor 0 config DFS: creating /tmp/ceph.mon.keyring

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 2, thread 544, pid 542

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec9fc000 shmid 2

-----executor 0 collect shmids 2
----- directly resend shmid 2
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 1, thread 543, pid 542

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 1

-----executor 0 collect shmids 1
----- directly resend shmid 1
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 0, thread 542, pid 542

-----executor 0 collect shmids 0
----- directly resend shmid 0
---- executor 0 config DFS: call atexit in pid 545 tid 545

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 3, thread 545, pid 545, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 4, thread 546, pid 545, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 5, thread 547, pid 545, value 1

---- executor 0 config DFS: creating /etc/ceph/ceph.client.admin.keyring

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 5, thread 547, pid 545

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec9fc000 shmid 5

-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 4
----- directly resend shmid 4
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 4, thread 546, pid 545

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 4

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 3, thread 545, pid 545

-----executor 0 collect shmids 3
----- directly resend shmid 3
---- executor 0 config DFS: call atexit in pid 548 tid 548

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 6, thread 548, pid 548, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 7, thread 549, pid 548, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 8, thread 550, pid 548, value 1

---- executor 0 config DFS: creating /var/lib/ceph/bootstrap-osd/ceph.keyring

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 8, thread 550, pid 548

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec9fc000 shmid 8

-----executor 0 collect shmids 8
----- directly resend shmid 8
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 7, thread 549, pid 548

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 7

-----executor 0 collect shmids 7
----- directly resend shmid 7
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 6, thread 548, pid 548

-----executor 0 collect shmids 6
----- directly resend shmid 6
---- executor 0 config DFS: call atexit in pid 551 tid 551

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 9, thread 551, pid 551, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 10, thread 552, pid 551, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 11, thread 553, pid 551, value 1

---- executor 0 config DFS: importing contents of /etc/ceph/ceph.client.admin.keyring into /tmp/ceph.mon.keyring

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 11, thread 553, pid 551

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec9fc000 shmid 11

-----executor 0 collect shmids 11
----- directly resend shmid 11
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 10, thread 552, pid 551

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 10

-----executor 0 collect shmids 10
----- directly resend shmid 10
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 9, thread 551, pid 551

-----executor 0 collect shmids 9
----- directly resend shmid 9
---- executor 0 config DFS: call atexit in pid 554 tid 554

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 12, thread 554, pid 554, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 13, thread 555, pid 554, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 14, thread 556, pid 554, value 1

---- executor 0 config DFS: importing contents of /var/lib/ceph/bootstrap-osd/ceph.keyring into /tmp/ceph.mon.keyring

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 14, thread 556, pid 554

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec9fc000 shmid 14

-----executor 0 collect shmids 14
----- directly resend shmid 14
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 13, thread 555, pid 554

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 13

-----executor 0 collect shmids 13
----- directly resend shmid 13
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 12, thread 554, pid 554

-----executor 0 collect shmids 12
----- directly resend shmid 12
---- executor 0 config DFS: call atexit in pid 558 tid 558

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 15, thread 558, pid 558, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 16, thread 559, pid 558, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 17, thread 560, pid 558, value 1

---- executor 0 config DFS: monmaptool: monmap file /tmp/monmap

---- executor 0 config DFS: monmaptool: set fsid to 6d63a920-8a5d-4816-a31e-63a620652fbd

---- executor 0 config DFS: monmaptool: writing epoch 0 to /tmp/monmap (1 monitors)

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 17, thread 560, pid 558

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec9fc000 shmid 17

-----executor 0 collect shmids 17
----- directly resend shmid 17
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 16, thread 559, pid 558

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 16

-----executor 0 collect shmids 16
----- directly resend shmid 16
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 15, thread 558, pid 558

-----executor 0 collect shmids 15
----- directly resend shmid 15
---- executor 0 config DFS: rm: cannot remove '/var/lib/ceph/mon/ceph-node1': No such file or directory

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: rm: cannot remove '/var/lib/ceph/mgr/ceph-node1': No such file or directory

---- executor 0 config DFS: call atexit in pid 593 tid 593

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 18, thread 593, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 19, thread 595, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 19, thread 595, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 19

-----executor 0 collect shmids 19
----- directly resend shmid 19
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 20, thread 596, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 20, thread 596, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 20

-----executor 0 collect shmids 20
----- directly resend shmid 20
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 21, thread 597, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 22, thread 600, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 23, thread 599, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 24, thread 598, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 25, thread 604, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 26, thread 603, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 27, thread 602, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 28, thread 601, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 25, thread 604, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 25

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 26, thread 603, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 26

-----executor 0 collect shmids 25
----- directly resend shmid 25
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 27, thread 602, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 27

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 28, thread 601, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 28

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 29, thread 645, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 30, thread 646, pid 593, value 1

-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 31, thread 647, pid 593, value 1

-----executor 0 collect shmids 28
----- directly resend shmid 28
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 32, thread 649, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 33, thread 651, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 34, thread 650, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 35, thread 648, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 21, thread 597, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 21

-----executor 0 collect shmids 21
----- directly resend shmid 21
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 36, thread 653, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 37, thread 654, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 38, thread 652, pid 593, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 39, thread 655, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 39, thread 655, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 39

-----executor 0 collect shmids 39
----- directly resend shmid 39
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 40, thread 656, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 40, thread 656, pid 593

-----executor 0 collect shmids 40
----- directly resend shmid 40
---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44f9000 shmid 40

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 41, thread 657, pid 593, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 37, thread 654, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 37

-----executor 0 collect shmids 37
----- directly resend shmid 37
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 36, thread 653, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 36

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 38, thread 652, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 38

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 33, thread 651, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 33

-----executor 0 collect shmids 36
----- directly resend shmid 36
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 34, thread 650, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4739000 shmid 34

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 32, thread 649, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe47b9000 shmid 32

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 35, thread 648, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 35

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 31, thread 647, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 31

-----executor 0 collect shmids 38
----- directly resend shmid 38
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 24, thread 598, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c1000 shmid 24

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 23, thread 599, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec101000 shmid 23

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 22, thread 600, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec141000 shmid 22

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 30, thread 646, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 30

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 29, thread 645, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 29

-----executor 0 collect shmids 33
----- directly resend shmid 33
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 41, thread 657, pid 593

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44f9000 shmid 41

-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 41
----- directly resend shmid 41
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 18, thread 593, pid 593

-----executor 0 collect shmids 18
----- directly resend shmid 18
---- executor 0 config DFS: call atexit in pid 658 tid 658

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 42, thread 658, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 43, thread 659, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 44, thread 660, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 45, thread 662, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 46, thread 661, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 47, thread 664, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 48, thread 665, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 49, thread 666, pid 658, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 50, thread 663, pid 658, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 49, thread 666, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe9332000 shmid 49

-----executor 0 collect shmids 49
----- directly resend shmid 49
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 48, thread 665, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe9372000 shmid 48

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 47, thread 664, pid 658

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 50, thread 663, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffea3b4000 shmid 47

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe92f2000 shmid 50

-----executor 0 collect shmids 48
----- directly resend shmid 48
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 44, thread 660, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffeb476000 shmid 44

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 46, thread 661, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffeb3f6000 shmid 46

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 45, thread 662, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffeb436000 shmid 45

-----executor 0 collect shmids 47
----- directly resend shmid 47
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 43, thread 659, pid 658

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffedff5000 shmid 43

-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 43
----- directly resend shmid 43
---- executor 0 config DFS: call atexit in pid 670 tid 670

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 70, thread 670, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 71, thread 689, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 71, thread 689, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 71

-----executor 0 collect shmids 71
----- directly resend shmid 71
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 72, thread 690, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 72, thread 690, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 72

-----executor 0 collect shmids 72
----- directly resend shmid 72
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 73, thread 691, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 74, thread 694, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 75, thread 693, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 76, thread 692, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 77, thread 698, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 78, thread 697, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 79, thread 695, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 80, thread 696, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 77, thread 698, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 77

-----executor 0 collect shmids 77
----- directly resend shmid 77
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 78, thread 697, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 78

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 79, thread 695, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 79

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 80, thread 696, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 80

-----executor 0 collect shmids 78
----- directly resend shmid 78
-----executor 0 collect shmids 79
----- directly resend shmid 79
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 81, thread 704, pid 670, value 1

-----executor 0 collect shmids 80
----- directly resend shmid 80
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 82, thread 702, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 84, thread 700, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 85, thread 701, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 83, thread 699, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 87, thread 705, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 86, thread 703, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 73, thread 691, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 73

-----executor 0 collect shmids 73
----- directly resend shmid 73
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 88, thread 706, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 89, thread 707, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 90, thread 709, pid 670, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 91, thread 708, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 90, thread 709, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 90

-----executor 0 collect shmids 90
----- directly resend shmid 90
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 92, thread 710, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 92, thread 710, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44f9000 shmid 92

-----executor 0 collect shmids 92
----- directly resend shmid 92
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 93, thread 711, pid 670, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 91, thread 708, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 91

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 89, thread 707, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 89

-----executor 0 collect shmids 91
----- directly resend shmid 91
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 88, thread 706, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 88

-----executor 0 collect shmids 89
----- directly resend shmid 89
-----executor 0 collect shmids 88
----- directly resend shmid 88
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 87, thread 705, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 87

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 81, thread 704, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 81

-----executor 0 collect shmids 87
----- directly resend shmid 87
-----executor 0 collect shmids 81
----- directly resend shmid 81
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 86, thread 703, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 86

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 82, thread 702, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 82

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 85, thread 701, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe47b9000 shmid 85

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 76, thread 692, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c1000 shmid 76

-----executor 0 collect shmids 86
----- directly resend shmid 86
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 75, thread 693, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec101000 shmid 75

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 74, thread 694, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec141000 shmid 74

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 84, thread 700, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 84

-----executor 0 collect shmids 82
----- directly resend shmid 82
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 83, thread 699, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4739000 shmid 83

-----executor 0 collect shmids 85
----- directly resend shmid 85
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 93, thread 711, pid 670

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44f9000 shmid 93

-----executor 0 collect shmids 76
----- directly resend shmid 76
-----executor 0 collect shmids 75
----- directly resend shmid 75
-----executor 0 collect shmids 74
----- directly resend shmid 74
-----executor 0 collect shmids 84
----- directly resend shmid 84
-----executor 0 collect shmids 83
----- directly resend shmid 83
-----executor 0 collect shmids 93
----- directly resend shmid 93
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 70, thread 670, pid 670

-----executor 0 collect shmids 70
----- directly resend shmid 70
---- executor 0 config DFS: Warning: Permanently added '192.168.0.60' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: Warning: Permanently added '192.168.0.59' (ECDSA) to the list of known hosts.

-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 6
----- directly resend shmid 6
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 31
----- directly resend shmid 31
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 32
----- directly resend shmid 32
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 34
----- directly resend shmid 34
-----executor 1 collect shmids 35
----- directly resend shmid 35
-----executor 1 collect shmids 33
----- directly resend shmid 33
-----executor 1 collect shmids 37
----- directly resend shmid 37
-----executor 1 collect shmids 38
----- directly resend shmid 38
-----executor 1 collect shmids 43
----- directly resend shmid 43
-----executor 1 collect shmids 46
----- directly resend shmid 46
-----executor 1 collect shmids 45
----- directly resend shmid 45
-----executor 1 collect shmids 44
----- directly resend shmid 44
-----executor 1 collect shmids 39
----- directly resend shmid 39
-----executor 1 collect shmids 55
----- directly resend shmid 55
-----executor 1 collect shmids 58
----- directly resend shmid 58
-----executor 1 collect shmids 56
----- directly resend shmid 56
-----executor 1 collect shmids 54
----- directly resend shmid 54
-----executor 1 collect shmids 57
----- directly resend shmid 57
-----executor 1 collect shmids 48
----- directly resend shmid 48
-----executor 1 collect shmids 51
----- directly resend shmid 51
-----executor 1 collect shmids 49
----- directly resend shmid 49
-----executor 1 collect shmids 52
----- directly resend shmid 52
-----executor 1 collect shmids 47
----- directly resend shmid 47
-----executor 1 collect shmids 42
----- directly resend shmid 42
-----executor 1 collect shmids 41
----- directly resend shmid 41
-----executor 1 collect shmids 40
----- directly resend shmid 40
-----executor 1 collect shmids 50
----- directly resend shmid 50
-----executor 1 collect shmids 53
----- directly resend shmid 53
-----executor 1 collect shmids 59
----- directly resend shmid 59
-----executor 1 collect shmids 36
----- directly resend shmid 36
-----executor 1 collect shmids 62
----- directly resend shmid 62
-----executor 1 collect shmids 61
----- directly resend shmid 61
-----executor 1 collect shmids 60
----- directly resend shmid 60
---- executor 0 config DFS: Running command: /usr/bin/ceph-authtool --gen-print-key

---- executor 0 config DFS: Running command: /usr/bin/ceph --cluster ceph --name client.bootstrap-osd --keyring /var/lib/ceph/bootstrap-osd/ceph.keyring -i - osd new e8e08f95-9290-4d6a-b4d2-c1002882ca54

---- executor 0 config DFS: Running command: /usr/sbin/vgcreate --force --yes ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed /dev/vda

---- executor 0 config DFS:  stdout: Physical volume "/dev/vda" successfully created.

---- executor 0 config DFS:  stdout: Volume group "ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed" successfully created

---- executor 0 config DFS: Running command: /usr/sbin/lvcreate --yes -l 100%FREE -n osd-block-e8e08f95-9290-4d6a-b4d2-c1002882ca54 ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed

---- executor 0 config DFS:  stdout: Logical volume "osd-block-e8e08f95-9290-4d6a-b4d2-c1002882ca54" created.

---- executor 0 config DFS: Running command: /usr/bin/ceph-authtool --gen-print-key

---- executor 0 config DFS: Running command: /usr/bin/mount -t tmpfs tmpfs /var/lib/ceph/osd/ceph-0

---- executor 0 config DFS: --> Executable selinuxenabled not in PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games

---- executor 0 config DFS: Running command: /usr/bin/chown -h ceph:ceph /dev/ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed/osd-block-e8e08f95-9290-4d6a-b4d2-c1002882ca54

---- executor 0 config DFS: Running command: /usr/bin/chown -R ceph:ceph /dev/dm-0

---- executor 0 config DFS: Running command: /usr/bin/ln -s /dev/ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed/osd-block-e8e08f95-9290-4d6a-b4d2-c1002882ca54 /var/lib/ceph/osd/ceph-0/block

---- executor 0 config DFS: Running command: /usr/bin/ceph --cluster ceph --name client.bootstrap-osd --keyring /var/lib/ceph/bootstrap-osd/ceph.keyring mon getmap -o /var/lib/ceph/osd/ceph-0/activate.monmap

---- executor 0 config DFS:  stderr: call atexit in pid 636 tid 636

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 36, thread 636, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 37, thread 638, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 37, thread 638, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffed3e4000 shmid 37

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 38, thread 639, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 38, thread 639, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffed3e4000 shmid 38

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 39, thread 640, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 40, thread 643, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 41, thread 642, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 42, thread 641, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 43, thread 647, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 44, thread 644, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 45, thread 645, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 46, thread 646, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 43, thread 647, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffec082000 shmid 43

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 46, thread 646, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 46

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 45, thread 645, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec002000 shmid 45

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 44, thread 644, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec042000 shmid 44

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 47, thread 650, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 48, thread 654, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 49, thread 652, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 50, thread 649, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 51, thread 653, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 52, thread 651, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 53, thread 648, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 39, thread 640, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e4000 shmid 39

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 54, thread 656, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 55, thread 658, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 56, thread 657, pid 636, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 57, thread 655, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 55, thread 658, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 55

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 58, thread 659, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 58, thread 659, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffe44f9000 shmid 58

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 59, thread 660, pid 636, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 56, thread 657, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 56

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 54, thread 656, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffed3e4000 shmid 54

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 57, thread 655, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 57

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 48, thread 654, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec042000 shmid 48

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 51, thread 653, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 51

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 49, thread 652, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec002000 shmid 49

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 52, thread 651, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffe4739000 shmid 52

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 47, thread 650, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec082000 shmid 47

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 42, thread 641, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c2000 shmid 42

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 41, thread 642, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec102000 shmid 41

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 40, thread 643, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec142000 shmid 40

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 50, thread 649, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe47b9000 shmid 50

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 53, thread 648, pid 636

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 53

---- executor 0 config DFS:  stderr: got monmap epoch 2

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 59, thread 660, pid 636

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffe44f9000 shmid 59

---- executor 0 config DFS:  stderr: proc_exit destr_fn

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 36, thread 636, pid 636

---- executor 0 config DFS: Running command: /usr/bin/ceph-authtool /var/lib/ceph/osd/ceph-0/keyring --create-keyring --name osd.0 --add-key AQBBSiRkUTqOFRAAuPNnYJJFsH0Y1BN2bXcK6A==

---- executor 0 config DFS:  stderr: call atexit in pid 661 tid 661

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 60, thread 661, pid 661, value 1

---- executor 0 config DFS:  stdout: creating /var/lib/ceph/osd/ceph-0/keyring

---- executor 0 config DFS:  stdout: added entity osd.0 auth(key=AQBBSiRkUTqOFRAAuPNnYJJFsH0Y1BN2bXcK6A==)

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 61, thread 662, pid 661, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 62, thread 663, pid 661, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 62, thread 663, pid 661

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffec9fc000 shmid 62

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 61, thread 662, pid 661

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffee579000 shmid 61

---- executor 0 config DFS:  stderr: proc_exit destr_fn

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 60, thread 661, pid 661

---- executor 0 config DFS: Running command: /usr/bin/chown -R ceph:ceph /var/lib/ceph/osd/ceph-0/keyring

---- executor 0 config DFS: Running command: /usr/bin/chown -R ceph:ceph /var/lib/ceph/osd/ceph-0/

---- executor 0 config DFS: Running command: /usr/bin/ceph-osd --cluster ceph --osd-objectstore bluestore --mkfs -i 0 --monmap /var/lib/ceph/osd/ceph-0/activate.monmap --keyfile - --osd-data /var/lib/ceph/osd/ceph-0/ --osd-uuid e8e08f95-9290-4d6a-b4d2-c1002882ca54 --setuser ceph --setgroup ceph

-----executor 0 collect shmids 99
----- directly resend shmid 99
-----executor 0 collect shmids 108
----- directly resend shmid 108
-----executor 0 collect shmids 109
----- directly resend shmid 109
-----executor 0 collect shmids 106
----- directly resend shmid 106
-----executor 0 collect shmids 107
----- directly resend shmid 107
-----executor 0 collect shmids 116
----- directly resend shmid 116
-----executor 0 collect shmids 117
----- directly resend shmid 117
-----executor 0 collect shmids 118
----- directly resend shmid 118
-----executor 0 collect shmids 114
----- directly resend shmid 114
-----executor 0 collect shmids 123
----- directly resend shmid 123
-----executor 0 collect shmids 126
----- directly resend shmid 126
-----executor 1 collect shmids 67
----- directly resend shmid 67
-----executor 1 collect shmids 66
----- directly resend shmid 66
-----executor 1 collect shmids 65
----- directly resend shmid 65
---- executor 0 config DFS: --> ceph-volume lvm prepare successful for: /dev/vda

---- executor 0 config DFS: Running command: /usr/bin/chown -R ceph:ceph /var/lib/ceph/osd/ceph-0

---- executor 0 config DFS: Running command: /usr/bin/ceph-bluestore-tool --cluster=ceph prime-osd-dir --dev /dev/ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed/osd-block-e8e08f95-9290-4d6a-b4d2-c1002882ca54 --path /var/lib/ceph/osd/ceph-0 --no-mon-config

---- executor 0 config DFS:  stderr: call atexit in pid 782 tid 782

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 65, thread 782, pid 782, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 66, thread 783, pid 782, value 1

---- executor 0 config DFS:  stderr: executor __sanitizer_cov_trace_pc: retrieve shmid 67, thread 784, pid 782, value 1

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 67, thread 784, pid 782

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffec96b000 shmid 67

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 66, thread 783, pid 782

---- executor 0 config DFS:  stderr: destr_fn: executor send back shm 0x7fffee4e8000 shmid 66

---- executor 0 config DFS:  stderr: proc_exit destr_fn

---- executor 0 config DFS:  stderr: destr_fn: before unspec_area == NULL, shmid 65, thread 782, pid 782

---- executor 0 config DFS: Running command: /usr/bin/ln -snf /dev/ceph-d76c3ad2-674d-4f29-b255-2c145d2a59ed/osd-block-e8e08f95-9290-4d6a-b4d2-c1002882ca54 /var/lib/ceph/osd/ceph-0/block

---- executor 0 config DFS: Running command: /usr/bin/chown -h ceph:ceph /var/lib/ceph/osd/ceph-0/block

---- executor 0 config DFS: Running command: /usr/bin/chown -R ceph:ceph /dev/dm-0

---- executor 0 config DFS: Running command: /usr/bin/chown -R ceph:ceph /var/lib/ceph/osd/ceph-0

---- executor 0 config DFS: Running command: /usr/bin/systemctl enable ceph-volume@lvm-0-e8e08f95-9290-4d6a-b4d2-c1002882ca54

---- executor 0 config DFS:  stderr: Created symlink /etc/systemd/system/multi-user.target.wants/ceph-volume@lvm-0-e8e08f95-9290-4d6a-b4d2-c1002882ca54.service → /etc/systemd/system/ceph-volume@.service.

---- executor 0 config DFS: Running command: /usr/bin/systemctl enable --runtime ceph-osd@0

---- executor 0 config DFS:  stderr: Created symlink /run/systemd/system/ceph-osd.target.wants/ceph-osd@0.service → /etc/systemd/system/ceph-osd@.service.

---- executor 0 config DFS: Running command: /usr/bin/systemctl start ceph-osd@0

---- executor 0 config DFS: --> ceph-volume lvm activate successful for osd ID: 0

---- executor 0 config DFS: --> ceph-volume lvm create successful for: /dev/vda

---- executor 0 config DFS: Warning: Permanently added '192.168.0.61' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: rm: cannot remove '/var/lib/ceph/mds/ceph-mds0': No such file or directory

---- executor 0 config DFS: Warning: Permanently added '192.168.0.59' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: call atexit in pid 561 tid 561

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 0, thread 561, pid 561, value 1

---- executor 0 config DFS: creating /var/lib/ceph/mds/ceph-mds0/keyring

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 1, thread 563, pid 561, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 1, thread 563, pid 561

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 1

-----executor 2 collect shmids 1
----- directly resend shmid 1
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 2, thread 562, pid 561, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 2, thread 562, pid 561

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 2

-----executor 2 collect shmids 2
----- directly resend shmid 2
-----executor 2 collect shmids 0
----- directly resend shmid 0
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 0, thread 561, pid 561

---- executor 0 config DFS: call atexit in pid 565 tid 565

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 3, thread 565, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 4, thread 567, pid 565, value 1

-----executor 2 collect shmids 4
----- directly resend shmid 4
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 4, thread 567, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 4

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 5, thread 568, pid 565, value 1

-----executor 2 collect shmids 5
----- directly resend shmid 5
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 5, thread 568, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 5

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 6, thread 569, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 7, thread 572, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 8, thread 571, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 9, thread 570, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 10, thread 576, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 11, thread 575, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 12, thread 573, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 13, thread 574, pid 565, value 1

-----executor 2 collect shmids 10
----- directly resend shmid 10
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 10, thread 576, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 10

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 11, thread 575, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 11

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 13, thread 574, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 13

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 12, thread 573, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 12

-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 12
----- directly resend shmid 12
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 14, thread 577, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 15, thread 578, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 16, thread 583, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 17, thread 581, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 18, thread 579, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 19, thread 582, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 20, thread 580, pid 565, value 1

-----executor 2 collect shmids 6
----- directly resend shmid 6
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 6, thread 569, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 6

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 21, thread 584, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 22, thread 585, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 23, thread 586, pid 565, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 24, thread 587, pid 565, value 1

-----executor 2 collect shmids 24
----- directly resend shmid 24
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 24, thread 587, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 24

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 25, thread 588, pid 565, value 1

-----executor 2 collect shmids 25
----- directly resend shmid 25
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 25, thread 588, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 25

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 26, thread 589, pid 565, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 23, thread 586, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 23

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 22, thread 585, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 22

-----executor 2 collect shmids 23
----- directly resend shmid 23
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 21, thread 584, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 21

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 16, thread 583, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 16

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 19, thread 582, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4739000 shmid 19

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 17, thread 581, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe47b9000 shmid 17

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 20, thread 580, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 20

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 18, thread 579, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 18

-----executor 2 collect shmids 22
----- directly resend shmid 22
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 9, thread 570, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c1000 shmid 9

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 8, thread 571, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec101000 shmid 8

-----executor 2 collect shmids 21
----- directly resend shmid 21
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 7, thread 572, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec141000 shmid 7

-----executor 2 collect shmids 16
----- directly resend shmid 16
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 15, thread 578, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 15

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 14, thread 577, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 14

-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 17
----- directly resend shmid 17
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 18
----- directly resend shmid 18
---- executor 0 config DFS: added key for mds.mds0

-----executor 2 collect shmids 9
----- directly resend shmid 9
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 2 collect shmids 15
----- directly resend shmid 15
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 26, thread 589, pid 565

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 26

-----executor 2 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 26
----- directly resend shmid 26
-----executor 2 collect shmids 3
----- directly resend shmid 3
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 3, thread 565, pid 565

---- executor 0 config DFS: call atexit in pid 590 tid 590

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 27, thread 590, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 28, thread 591, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 29, thread 593, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 30, thread 594, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 31, thread 592, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 32, thread 597, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 33, thread 595, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 34, thread 598, pid 590, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 35, thread 596, pid 590, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 34, thread 598, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe98b6000 shmid 34

-----executor 2 collect shmids 34
----- directly resend shmid 34
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 32, thread 597, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe9936000 shmid 32

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 35, thread 596, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe9876000 shmid 35

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 33, thread 595, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe98f6000 shmid 33

-----executor 2 collect shmids 32
----- directly resend shmid 32
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 31, thread 592, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffeb97a000 shmid 31

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 29, thread 593, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffeb9fa000 shmid 29

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 30, thread 594, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffeb9ba000 shmid 30

-----executor 2 collect shmids 35
----- directly resend shmid 35
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 28, thread 591, pid 590

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffee579000 shmid 28

---- executor 0 config DFS: fork hook

-----executor 2 collect shmids 33
----- directly resend shmid 33
---- executor 0 config DFS: call atexit in pid 599 tid 599

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 36, thread 599, pid 599, value 1

-----executor 2 collect shmids 31
----- directly resend shmid 31
-----executor 2 collect shmids 29
----- directly resend shmid 29
-----executor 2 collect shmids 30
----- directly resend shmid 30
-----executor 2 collect shmids 28
----- directly resend shmid 28
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 37, thread 601, pid 599, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 38, thread 600, pid 599, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 39, thread 605, pid 599, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 40, thread 603, pid 599, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 41, thread 602, pid 599, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 42, thread 604, pid 599, value 1

---- executor 0 config DFS: starting mds.mds0 at 

-----executor 2 collect shmids 27
----- directly resend shmid 27
---- executor 0 config DFS: call atexit in pid 916 tid 916

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 135, thread 916, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 136, thread 918, pid 916, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 136, thread 918, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 136

-----executor 0 collect shmids 136
----- directly resend shmid 136
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 137, thread 919, pid 916, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 137, thread 919, pid 916

-----executor 0 collect shmids 137
----- directly resend shmid 137
---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 137

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 138, thread 920, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 139, thread 921, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 141, thread 922, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 140, thread 923, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 142, thread 924, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 143, thread 926, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 144, thread 927, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 145, thread 925, pid 916, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 144, thread 927, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 144

-----executor 0 collect shmids 144
----- directly resend shmid 144
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 143, thread 926, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 143

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 145, thread 925, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 145

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 142, thread 924, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 142

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 146, thread 928, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 147, thread 929, pid 916, value 1

-----executor 0 collect shmids 143
----- directly resend shmid 143
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 148, thread 930, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 149, thread 932, pid 916, value 1

-----executor 0 collect shmids 145
----- directly resend shmid 145
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 150, thread 933, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 151, thread 934, pid 916, value 1

-----executor 0 collect shmids 142
----- directly resend shmid 142
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 152, thread 931, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 153, thread 935, pid 916, value 1

-----executor 0 collect shmids 138
----- directly resend shmid 138
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 138, thread 920, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 138

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 154, thread 937, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 155, thread 938, pid 916, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 156, thread 936, pid 916, value 1

-----executor 0 collect shmids 155
----- directly resend shmid 155
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 155, thread 938, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 155

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 157, thread 939, pid 916, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 157, thread 939, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 157

-----executor 0 collect shmids 157
----- directly resend shmid 157
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 158, thread 942, pid 916, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 154, thread 937, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 154

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 156, thread 936, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 156

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 153, thread 935, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 153

-----executor 0 collect shmids 154
----- directly resend shmid 154
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 151, thread 934, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4739000 shmid 151

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 150, thread 933, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 150

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 152, thread 931, pid 916

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 149, thread 932, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 152

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe47b9000 shmid 149

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 148, thread 930, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 148

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 139, thread 921, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec141000 shmid 139

-----executor 0 collect shmids 156
----- directly resend shmid 156
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 141, thread 922, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec101000 shmid 141

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 140, thread 923, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c1000 shmid 140

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 147, thread 929, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 147

-----executor 0 collect shmids 153
----- directly resend shmid 153
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 146, thread 928, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 146

-----executor 0 collect shmids 151
---- executor 0 config DFS: pool 'cephfs_data' created

----- directly resend shmid 151
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 158, thread 942, pid 916

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 158

-----executor 0 collect shmids 150
----- directly resend shmid 150
-----executor 0 collect shmids 152
----- directly resend shmid 152
-----executor 0 collect shmids 149
----- directly resend shmid 149
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 135, thread 916, pid 916

-----executor 0 collect shmids 148
----- directly resend shmid 148
-----executor 0 collect shmids 139
----- directly resend shmid 139
-----executor 0 collect shmids 141
----- directly resend shmid 141
-----executor 0 collect shmids 140
----- directly resend shmid 140
-----executor 0 collect shmids 147
----- directly resend shmid 147
-----executor 0 collect shmids 146
----- directly resend shmid 146
-----executor 0 collect shmids 158
----- directly resend shmid 158
-----executor 0 collect shmids 135
----- directly resend shmid 135
---- executor 0 config DFS: call atexit in pid 943 tid 943

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 159, thread 943, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 160, thread 945, pid 943, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 160, thread 945, pid 943

-----executor 0 collect shmids 160
----- directly resend shmid 160
---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 160

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 161, thread 946, pid 943, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 161, thread 946, pid 943

-----executor 0 collect shmids 161
----- directly resend shmid 161
---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 161

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 162, thread 947, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 163, thread 948, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 164, thread 949, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 165, thread 950, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 166, thread 951, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 167, thread 952, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 168, thread 953, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 169, thread 954, pid 943, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 169, thread 954, pid 943

-----executor 0 collect shmids 169
----- directly resend shmid 169
---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe57bb000 shmid 169

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 168, thread 953, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 168

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 167, thread 952, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 167

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 166, thread 951, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 166

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 170, thread 955, pid 943, value 1

-----executor 0 collect shmids 168
----- directly resend shmid 168
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 171, thread 956, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 172, thread 957, pid 943, value 1

-----executor 0 collect shmids 167
----- directly resend shmid 167
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 173, thread 958, pid 943, value 1

-----executor 0 collect shmids 166
----- directly resend shmid 166
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 174, thread 961, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 175, thread 960, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 176, thread 959, pid 943, value 1

-----executor 0 collect shmids 162
----- directly resend shmid 162
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 162, thread 947, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 162

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 177, thread 965, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 178, thread 963, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 179, thread 964, pid 943, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 180, thread 962, pid 943, value 1

-----executor 0 collect shmids 177
----- directly resend shmid 177
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 177, thread 965, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 177

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 181, thread 966, pid 943, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 181, thread 966, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 181

-----executor 0 collect shmids 181
----- directly resend shmid 181
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 182, thread 969, pid 943, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 179, thread 964, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 179

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 178, thread 963, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 178

-----executor 0 collect shmids 179
----- directly resend shmid 179
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 180, thread 962, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 180

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 174, thread 961, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 174

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 175, thread 960, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4739000 shmid 175

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 176, thread 959, pid 943

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 173, thread 958, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 176

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 173

-----executor 0 collect shmids 178
----- directly resend shmid 178
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 172, thread 957, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 172

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 163, thread 948, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec101000 shmid 163

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 164, thread 949, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec141000 shmid 164

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 165, thread 950, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c1000 shmid 165

-----executor 0 collect shmids 180
----- directly resend shmid 180
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 171, thread 956, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 171

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 170, thread 955, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 170

-----executor 0 collect shmids 174
----- directly resend shmid 174
-----executor 0 collect shmids 175
----- directly resend shmid 175
-----executor 0 collect shmids 176
----- directly resend shmid 176
---- executor 0 config DFS: pool 'cephfs_metadata' created

-----executor 0 collect shmids 173
----- directly resend shmid 173
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 182, thread 969, pid 943

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 182

-----executor 0 collect shmids 172
----- directly resend shmid 172
-----executor 0 collect shmids 163
----- directly resend shmid 163
-----executor 0 collect shmids 164
----- directly resend shmid 164
-----executor 0 collect shmids 165
----- directly resend shmid 165
-----executor 0 collect shmids 171
----- directly resend shmid 171
-----executor 0 collect shmids 170
----- directly resend shmid 170
-----executor 0 collect shmids 182
----- directly resend shmid 182
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 159, thread 943, pid 943

-----executor 0 collect shmids 159
----- directly resend shmid 159
---- executor 0 config DFS: call atexit in pid 970 tid 970

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 183, thread 970, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 184, thread 973, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 184, thread 973, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 184

-----executor 0 collect shmids 184
----- directly resend shmid 184
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 185, thread 974, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 185, thread 974, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 185

-----executor 0 collect shmids 185
----- directly resend shmid 185
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 186, thread 975, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 187, thread 976, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 188, thread 978, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 189, thread 977, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 190, thread 979, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 191, thread 981, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 192, thread 980, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 193, thread 982, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 193, thread 982, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4fba000 shmid 193

-----executor 0 collect shmids 193
----- directly resend shmid 193
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 191, thread 981, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 191

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 192, thread 980, pid 970

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 190, thread 979, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 192

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 190

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 194, thread 983, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 195, thread 984, pid 970, value 1

-----executor 0 collect shmids 191
----- directly resend shmid 191
-----executor 0 collect shmids 192
----- directly resend shmid 192
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 196, thread 985, pid 970, value 1

-----executor 0 collect shmids 190
----- directly resend shmid 190
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 197, thread 987, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 198, thread 986, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 199, thread 988, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 200, thread 989, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 186, thread 975, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 186

-----executor 0 collect shmids 186
----- directly resend shmid 186
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 201, thread 990, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 202, thread 991, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 204, thread 993, pid 970, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 203, thread 992, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 204, thread 993, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4679000 shmid 204

-----executor 0 collect shmids 204
----- directly resend shmid 204
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 205, thread 994, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 205, thread 994, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 205

-----executor 0 collect shmids 205
----- directly resend shmid 205
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 206, thread 995, pid 970, value 1

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 203, thread 992, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4639000 shmid 203

-----executor 0 collect shmids 203
----- directly resend shmid 203
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 202, thread 991, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46b9000 shmid 202

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 201, thread 990, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffed3e3000 shmid 201

-----executor 0 collect shmids 202
----- directly resend shmid 202
-----executor 0 collect shmids 201
----- directly resend shmid 201
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 200, thread 989, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe46f9000 shmid 200

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 199, thread 988, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4739000 shmid 199

-----executor 0 collect shmids 200
----- directly resend shmid 200
-----executor 0 collect shmids 199
----- directly resend shmid 199
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 197, thread 987, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe47b9000 shmid 197

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 198, thread 986, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe4779000 shmid 198

-----executor 0 collect shmids 197
----- directly resend shmid 197
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 196, thread 985, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec001000 shmid 196

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 187, thread 976, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec101000 shmid 187

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 189, thread 977, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec0c1000 shmid 189

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 188, thread 978, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec141000 shmid 188

-----executor 0 collect shmids 198
----- directly resend shmid 198
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 195, thread 984, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec041000 shmid 195

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 194, thread 983, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffec081000 shmid 194

-----executor 0 collect shmids 196
----- directly resend shmid 196
---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 206, thread 995, pid 970

---- executor 0 config DFS: destr_fn: executor send back shm 0x7fffe44b9000 shmid 206

---- executor 0 config DFS: new fs with metadata pool 3 and data pool 2

-----executor 0 collect shmids 187
----- directly resend shmid 187
-----executor 0 collect shmids 189
----- directly resend shmid 189
-----executor 0 collect shmids 188
----- directly resend shmid 188
-----executor 0 collect shmids 195
----- directly resend shmid 195
-----executor 0 collect shmids 194
----- directly resend shmid 194
-----executor 0 collect shmids 206
----- directly resend shmid 206
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 183, thread 970, pid 970

-----executor 0 collect shmids 183
----- directly resend shmid 183
---- executor 0 config DFS: Warning: Permanently added '192.168.0.62' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: rm: cannot remove '/etc/ceph': No such file or directory

---- executor 0 config DFS: Warning: Permanently added '192.168.0.59' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: fork hook

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: modprobe: FATAL: Module ceph not found in directory /lib/modules/5.15.0+

---- executor 0 config DFS: failed to load ceph kernel module (1)

fsync test_dir /root/req 7
req.flags ea2
----- executor 0 do_sandbox_none at begining
----- executor 0 do_sandbox_none before fork()
2023/03/29 14:25:20 ----- before executor 0 handshake recv reply &{0}
2023/03/29 14:25:20 ----- after executor 0 handshake recv reply &{195948557} at 16
2023/03/29 14:25:20 ----- handshake 0 finished <- nil
2023/03/29 14:25:20 ----- before executor 1 handshake recv reply &{195948557}
2023/03/29 14:25:20 ----- after executor 1 handshake recv reply &{195948557} at 16
2023/03/29 14:25:20 ----- handshake 1 finished <- nil
2023/03/29 14:25:20 ----- before executor 2 handshake recv reply &{195948557}
2023/03/29 14:25:20 ----- after executor 2 handshake recv reply &{195948557} at 16
2023/03/29 14:25:20 ----- handshake 2 finished <- nil
2023/03/29 14:25:20 ----- before executor 3 handshake recv reply &{195948557}
2023/03/29 14:25:20 ----- after executor 3 handshake recv reply &{195948557} at 16
2023/03/29 14:25:20 ----- handshake 3 finished <- nil
2023/03/29 14:25:20 ----- handshake timeout
2023/03/29 14:25:20 ----- handshake return
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5296
-----finish removing dir
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
mkdir time 7
executor 3 create dir /root/cephfs-client/dfs-0-0 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-0
receive_execute: 22364, 8
receive_execute: 22355, 8
receive_execute: 22417, 8
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
receive_execute: 0, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 654, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 444
----- completed 16
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 558, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 0, 8
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22372, 9, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22425, 10, 0
----- executor 0 signal number : 731
executor 0 server cover_cnt 1 output_pos_value 735
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:20 wg wait finish
2023/03/29 14:25:20 ------ all executors finish execution
2023/03/29 14:25:20 exec time: 20
2023/03/29 14:25:20 ----- PS len: 4
2023/03/29 14:25:20 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:20 [SERVER] executor 2 has 4 replies
2023/03/29 14:25:20 [CLIENT] executor 3 has 20 replies
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:20 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 14:25:20 [SERVER] executor 0 has 1 replies
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 ------- fuzzer executor 0 receive 731 signal and 0 cover from userspace component
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 8, 13, 0
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 4745 signal and 0 cover from userspace component
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 444 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 523 signal and 0 cover from userspace component
2023/03/29 14:25:20 fuzzer receive 6 signal and 0 cover from executor 3
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 14:25:20 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:20 ----- no new client coverage: false, true
2023/03/29 14:25:20 mutate testcase with failures
2023/03/29 14:25:20 ----- mutateArg()
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 28270, flag collect 0
----- executor 2 signal number : 4745
----- executor 2 executes write_coverage_signal cov->size 6153, flag collect 0
----- executor 2 signal number : 523
executor 2 server cover_cnt 4 output_pos_value 6612
time breakdown 2: 22363, 12, 0
before receive testcase: 0 0
2023/03/29 14:25:20 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:20 prog length: 8
2023/03/29 14:25:20 HasCrashFail:false HasNetFail:false
14:25:20 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open(&(0x7f0000000040)='./file1\x00', 0x0, 0x0)
r1 = openat(r0, &(0x7f0000000340)='./file1\x00', 0x22042, 0x0)
lsetxattr$security_evm(&(0x7f0000000080)='./file1/file0\x00', &(0x7f00000000c0), &(0x7f00000001c0)=ANY=[@ANYBLOB="443f7ef0a426f8ea71bd5d894be80c0b07394e77d8f01f000000000000876a9230a2aeae552598fbb9dcc9146bc71b0ed5574fe77affa2f0aa61e2243d9dd28887"], 0xf, 0x1)
rmdir(&(0x7f0000000180)='./file1\x00')
setxattr$security_evm(&(0x7f0000000100)='./file1/file0\x00', &(0x7f0000000140), &(0x7f0000000240)=@ng={0x4, 0x7, "7d0f"}, 0x4, 0x0)
fsetxattr(r0, &(0x7f0000000280)=@random={'os2.', 'security.evm\x00'}, &(0x7f00000002c0)='][+/\x00', 0x5, 0x1)
write$binfmt_misc(r1, &(0x7f0000000300)={'syz1', "f89367e8d51a82450c1dd6b2512c07841f78"}, 0x16)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1744
remove dir: /root/cephfs-client/dfs-0-0
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1
receive_execute: 6, 15
receive_execute: 2, 15
receive_execute: 3, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 5, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 561, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 561, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 561, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 80
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 561, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 561, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 87
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 561, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 31, pid 561, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 3 signal number : 7
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1735, pid 561, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1735, flag collect 0
----- executor 3 signal number : 856
----- completed 8
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 2, 0
execute_one time: 0, 16
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 17, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10506, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 15430, flag collect 0
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 19, 0
----- executor 2 signal number : 918
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 19, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 8031
----- executor 2 executes write_coverage_signal cov->size 1760, flag collect 0
----- executor 2 signal number : 185
----- executor 2 executes write_coverage_signal cov->size 12195, flag collect 0
----- executor 2 signal number : 3121
----- executor 2 executes write_coverage_signal cov->size 18421, flag collect 0
----- executor 2 signal number : 1161
----- executor 2 executes write_coverage_signal cov->size 3603, flag collect 0
----- executor 2 signal number : 512
executor 2 server cover_cnt 8 output_pos_value 15403
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:20 wg wait finish
time breakdown 2: 18, 23, 0
2023/03/29 14:25:20 ------ all executors finish execution
2023/03/29 14:25:20 exec time: 38
2023/03/29 14:25:20 ----- PS len: 4
2023/03/29 14:25:20 [CLIENT] executor 3 has 8 replies
2023/03/29 14:25:20 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 856 signal and 0 cover from executor 3
2023/03/29 14:25:20 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:20 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 918 signal and 0 cover from userspace component
2023/03/29 14:25:20 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 8031 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 185 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 3121 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 1161 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 512 signal and 0 cover from userspace component
2023/03/29 14:25:20 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 1
2023/03/29 14:25:20 ----- no new client coverage: false, true
2023/03/29 14:25:20 mutate testcase with failures
2023/03/29 14:25:20 ----- insertCall()
2023/03/29 14:25:20 ----- generateCall 2459 open$dir open$dir
2023/03/29 14:25:20 ----- mutateArg()
2023/03/29 14:25:20 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:20 prog length: 3
2023/03/29 14:25:20 HasCrashFail:false HasNetFail:false
14:25:20 ---executing program 0:
---
---
---
open(&(0x7f00000003c0)='./file3\x00', 0x2043, 0x0)
truncate(&(0x7f0000000300)='./file3\x00', 0x0)
open$dir(&(0x7f0000000000)='./file3\x00', 0x4101, 0x1f9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 392
remove dir: /root/cephfs-client/dfs-0-1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-2 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-2
receive_execute: 4, 15
receive_execute: 10, 15
receive_execute: 8, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 564, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 284, pid 564, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 284, flag collect 0
----- executor 3 signal number : 154
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 191, pid 564, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 4, 0
executor 2 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11875, flag collect 0
receive_execute: 8, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5020
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
2023/03/29 14:25:20 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 6239, flag collect 0
2023/03/29 14:25:20 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 5, 0
before receive testcase: 0 1
----- executor 2 signal number : 543
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 5, 0
executor 2 server cover_cnt 5 output_pos_value 6917
before receive testcase: 0 0
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:20 wg wait finish
2023/03/29 14:25:20 ------ all executors finish execution
2023/03/29 14:25:20 exec time: 21
2023/03/29 14:25:20 ----- PS len: 4
time breakdown 2: 19, 6, 0
2023/03/29 14:25:20 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:20 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:20 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 154 signal and 0 cover from executor 3
2023/03/29 14:25:20 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:20 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 5020 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
2023/03/29 14:25:20 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:20 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:20 ----- no new client coverage: false, true
2023/03/29 14:25:20 mutate testcase with failures
2023/03/29 14:25:20 ----- insertCall()
2023/03/29 14:25:20 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/29 14:25:20 ----- mutateArg()
2023/03/29 14:25:20 ----- insertCall()
2023/03/29 14:25:20 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/29 14:25:20 ----- insertCall()
2023/03/29 14:25:20 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/29 14:25:20 ----- mutateArg()
2023/03/29 14:25:20 ----- insertCall()
2023/03/29 14:25:20 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/29 14:25:20 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:20 prog length: 7
2023/03/29 14:25:20 HasCrashFail:false HasNetFail:false
14:25:20 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file1\x00', 0x149140, 0x0)
setxattr$smack_xattr_label(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000100)='security.SMACK64EXEC\x00', &(0x7f0000000180)=ANY=[], 0x3, 0x2)
chown(&(0x7f0000000080)='./file1\x00', 0x0, 0x0)
lsetxattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000140)=@random={'system.', '\x00'}, &(0x7f0000000180)='+))\x00', 0x4, 0x1)
setxattr$smack_xattr_label(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='security.SMACK64EXEC\x00', &(0x7f0000000340)={'\xb1MH2\xe0\xed\xd5\xa2\x7fY/d\xd2\xbfE\xef\x8ed\r\xf7\x87\xcd\x99f\xa6\x9f \xf3\xd5\xa8o\x90\xb3P\xdb\xb9\xebD=\xd0`LE(\x1740\x1c\x04\x19\x10\xa6\xb2\x18\x10\xb3\x04\xfeX\x9f'}, 0x3d, 0x1)
lsetxattr$user(&(0x7f0000000300)='./file1/file0\x00', &(0x7f0000000380), &(0x7f00000003c0)='%@', 0x2, 0x0)
setxattr$security_selinux(&(0x7f00000000c0)='./file1/file0\x00', &(0x7f0000000200), &(0x7f0000000240)='system_u:object_r:chfn_exec_t:s0\x00', 0x21, 0x1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1800
remove dir: /root/cephfs-client/dfs-0-2
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-3 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-3
receive_execute: 4, 27
receive_execute: 3, 27
receive_execute: 3, 27
receive_execute: 3, 27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 3 signal number : 130
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 248, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 248, flag collect 0
----- executor 3 signal number : 97
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 5
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 15
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 566, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 31, 6, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11526, flag collect 0
----- executor 2 signal number : 4892
----- executor 2 executes write_coverage_signal cov->size 697, flag collect 0
----- executor 2 signal number : 274
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 0
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 531
time breakdown 1: 30, 8, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7044
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 8, 0
before receive testcase: 0 0
2023/03/29 14:25:20 for select break: 1
2023/03/29 14:25:20 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:20 wg wait finish
2023/03/29 14:25:20 ------ all executors finish execution
2023/03/29 14:25:20 exec time: 36
2023/03/29 14:25:20 ----- PS len: 4
2023/03/29 14:25:20 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:20 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:20 [CLIENT] executor 3 has 7 replies
time breakdown 2: 30, 8, 0
2023/03/29 14:25:20 fuzzer receive 477 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/29 14:25:20 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:20 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 4892 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 274 signal and 0 cover from userspace component
2023/03/29 14:25:20 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
2023/03/29 14:25:20 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:20 ----- no new client coverage: false, true
2023/03/29 14:25:20 mutate testcase with failures
2023/03/29 14:25:20 ----- insertCall()
2023/03/29 14:25:20 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/29 14:25:20 ----- mutateArg()
2023/03/29 14:25:20 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:20 prog length: 8
2023/03/29 14:25:20 HasCrashFail:false HasNetFail:false
14:25:20 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
setxattr$security_capability(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), 0x0, 0x0, 0x0)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f00000002c0)="11f72bee696eb960a8756cc61b1505e70700000058bd6ff144512388adfb38a653b22dc6c1b92ae59247a23a23bbf0c807e39b924d6ece21c7a13b517567e3e104857f83991fc8ce72500fdb9b4ba3ab9b23bd591753618da805fc75a480ca0ce69508c148155b0f4c3894157f60d68a5fe7cf63c29f0bac4274e8df761d10afec65be71a92443b37cce5772072276d5aee4f41b4e13c69fa813434e391a4ce17e5827269c1e1e537547826fe1474110113e577e3ef61fb6220b646d81b9d2e778035855", 0xc4, 0x2)
setxattr$smack_xattr_label(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='security.SMACK64\x00', 0x0, 0x0, 0x0)
r1 = fcntl$dupfd(r0, 0x0, r0)
fsync(r1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1568
remove dir: /root/cephfs-client/dfs-0-3
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-4 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-4
receive_execute: 7, 31
receive_execute: 5, 31
receive_execute: 5, 31
receive_execute: 6, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 569, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 569, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 685, pid 569, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 685, flag collect 0
----- executor 3 signal number : 320
----- completed 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 569, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 77
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 578, pid 569, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 578, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 396, pid 569, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 396, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 569, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 181, pid 569, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 181, flag collect 0
----- executor 3 signal number : 52
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 52
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 33, 54, 0
execute_one time: 1, 87
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 1526, flag collect 0
----- executor 0 signal number : 62
----- executor 0 executes write_coverage_signal cov->size 1654, flag collect 0
----- executor 0 signal number : 887
----- executor 0 executes write_coverage_signal cov->size 3828, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 1181, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 609
----- executor 0 signal number : 553
----- executor 0 executes write_coverage_signal cov->size 2801, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 529
----- executor 0 executes write_coverage_signal cov->size 2071, flag collect 0
----- executor 0 signal number : 513
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1116
----- executor 2 executes write_coverage_signal cov->size 31412, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 16121, flag collect 0
----- executor 0 signal number : 331
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 0
executor 0 server cover_cnt 10 output_pos_value 3231
----- executor 2 signal number : 1488
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 38, 1679, 0
before receive testcase: 0 1
time breakdown 1: 36, 1680, 0
before receive testcase: 0 0
----- executor 2 signal number : 8320
----- executor 2 executes write_coverage_signal cov->size 1192, flag collect 0
----- executor 2 signal number : 265
----- executor 2 executes write_coverage_signal cov->size 17012, flag collect 0
----- executor 2 signal number : 2297
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 397
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
time breakdown 0: 36, 1681, 0
before receive testcase: 0 0
----- executor 2 signal number : 211
----- executor 2 executes write_coverage_signal cov->size 2329, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 25403, flag collect 0
----- executor 2 signal number : 5627
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 570
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1533
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 16 output_pos_value 23106
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 1718
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 8 replies
2023/03/29 14:25:22 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 0 has 10 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 16 replies
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 320 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 77 signal and 0 cover from executor 3
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 609 signal and 0 cover from userspace component
time breakdown 2: 36, 1687, 0
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1116 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1488 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 8320 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 265 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 2297 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 397 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 211 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 5627 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 570 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1533 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:22 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 887 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 553 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 529 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 513 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 331 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 20
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x0, 0x42)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r5})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r6, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3864
remove dir: /root/cephfs-client/dfs-0-4
remove dir time 13
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-5 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-5
receive_execute: 14, 15
receive_execute: 13, 15
receive_execute: 6, 14
receive_execute: 12, 14
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 620, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 573, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 573, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 573, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 573, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 573, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 10
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 573, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 355, pid 573, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 3 signal number : 28
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 3, 1
execute_one time: 0, 15
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1012, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 13983, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 29893, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 28, 19, 0
----- executor 2 signal number : 1084
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 29, 17, 0
before receive testcase: 0 1
----- executor 2 signal number : 7316
----- executor 2 executes write_coverage_signal cov->size 5572, flag collect 0
----- executor 2 signal number : 459
----- executor 2 executes write_coverage_signal cov->size 16669, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3721
----- executor 2 executes write_coverage_signal cov->size 27748, flag collect 0
----- executor 2 signal number : 2132
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 16202
time breakdown 0: 27, 19, 0
before receive testcase: 0 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 38
2023/03/29 14:25:22 ----- PS len: 4
time breakdown 2: 20, 23, 0
2023/03/29 14:25:22 [CLIENT] executor 3 has 20 replies
2023/03/29 14:25:22 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1084 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 7316 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 459 signal and 0 cover from userspace component
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 3721 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 2132 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 170 dup dup
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 3
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
dup(0xffffffffffffffff)
openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x108840, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)={0x0, 0xfb, 0x95, 0x1, 0x9, "581cdc7cdd9c00fb87ff00b9f6bfb5c8", "17680f05a7c64883b7e4f8245b57e04db11c1c87de0950be41a790a384108586a05000d9cc47164137f8a7e93becc3f489744619aa73ae6ad57d9a88004d5d6fff34335643df4cc3b6e30bb2d2964d2a68fe24c96d8b13707c76cf3e1e4c93be6e5a655e07e4814381edd1176b1a9348c4f5de0d4a254d2a83c0b1404b15674b"}, 0x95, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 864
remove dir: /root/cephfs-client/dfs-0-5
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-6 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-6
receive_execute: 9, 10
receive_execute: 2, 10
receive_execute: 7, 9
receive_execute: 6, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 577, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
execute_one time: 1, 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 577, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 577, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 159
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 19, 5, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4294, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11550, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 6, 0
----- executor 2 signal number : 4892
----- executor 2 executes write_coverage_signal cov->size 1055, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 6142, flag collect 0
time breakdown 1: 16, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 531
executor 2 server cover_cnt 5 output_pos_value 7066
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 17
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 3 replies
time breakdown 2: 12, 7, 0
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 4892 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2458 open open
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 3
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0xc0, 0x0)
rename(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
open(&(0x7f0000000000)='./file0\x00', 0x80, 0x8)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/cephfs-client/dfs-0-6
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-7 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-7
receive_execute: 4, 21
receive_execute: 1, 21
receive_execute: 4, 21
receive_execute: 3, 21
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 579, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 614, pid 579, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 614, flag collect 0
----- executor 3 signal number : 104
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 428, pid 579, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 85
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 1, 8
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 600, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10474, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 16806, flag collect 0
time breakdown 3: 25, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 930
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 25, 11, 0
time breakdown 1: 24, 11, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 8253
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 15971, flag collect 0
----- executor 2 signal number : 3609
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1356
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 15634
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 37
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:22 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 8 replies
time breakdown 2: 22, 16, 0
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 930 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 8253 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 3609 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1356 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:22 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2753 read read
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 6
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
r1 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_upper(r0, &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0x56, 0x1, 0x82, "20cf9ceedf35527d6e0e4fbf6020dfb7", "81cbf49544b7fe8e0383b738864a5ec0c649a2032ec14337045006ead037e8ade7a77b0b559ecc9f7b550fa1df1d70dbc817d22923352bc194ba625e12652e3e3b"}, 0x56, 0x0)
read(r1, &(0x7f0000000100)=""/156, 0x9c)
lsetxattr$security_selinux(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:initrc_var_run_t:s0\x00', 0x26, 0x2)
write$binfmt_misc(r0, &(0x7f0000000080)=ANY=[], 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/cephfs-client/dfs-0-7
remove dir time 21
-----finish removing dir
mkdir time 22
executor 3 create dir /root/cephfs-client/dfs-0-8 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-8
receive_execute: 9, 42
receive_execute: 10, 43
executor 3 before execute_one
receive_execute: 8, 43
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 623, pid 582, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 180, pid 582, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 3 signal number : 130
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 582, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 236, pid 582, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 3 signal number : 56
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 3, 43
----- executor 3 write_call_output, size 1285, pid 582, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1285, flag collect 0
----- executor 3 signal number : 938
----- completed 6
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 1, 0
execute_one time: 1, 12
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 53, 14, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 201
----- executor 0 executes write_coverage_signal cov->size 373, flag collect 0
----- executor 0 signal number : 175
executor 0 server cover_cnt 2 output_pos_value 383
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 232, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8756, flag collect 0
time breakdown 0: 51, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 966
----- executor 2 executes write_coverage_signal cov->size 18285, flag collect 0
----- executor 2 signal number : 6492
----- executor 2 executes write_coverage_signal cov->size 1169, flag collect 0
----- executor 2 signal number : 338
----- executor 2 executes write_coverage_signal cov->size 11743, flag collect 0
----- executor 2 signal number : 3123
----- executor 2 executes write_coverage_signal cov->size 17649, flag collect 0
----- executor 2 signal number : 1146
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 13545
time breakdown 1: 51, 16, 0
before receive testcase: 0 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 62
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 6 replies
2023/03/29 14:25:22 fuzzer receive 478 signal and 0 cover from executor 3
time breakdown 2: 51, 15, 0
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 938 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 0 has 2 replies
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 201 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 175 signal and 0 cover from userspace component
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 966 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 6492 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 338 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 3123 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1146 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 3970 unlink unlink
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 220 flock flock
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 3967 truncate truncate
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2458 open open
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 9
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000080)='./file0\x00', 0x210001, 0x80)
fcntl$setflags(r0, 0x2, 0x1)
r1 = open(&(0x7f0000000400)='./file0\x00', 0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
truncate(&(0x7f0000000140)='./file0\x00', 0x3f)
r2 = openat(r1, &(0x7f0000000040)='./file0\x00', 0x4c0, 0x11a)
flock(r2, 0x1)
symlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
open(&(0x7f0000000180)='./file0\x00', 0x20200, 0x10)
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1168
remove dir: /root/cephfs-client/dfs-0-8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-9 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-9
receive_execute: 8, 8
receive_execute: 8, 8
receive_execute: 10, 8
receive_execute: 0, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 343
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 585, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4169, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1266
----- executor 2 executes write_coverage_signal cov->size 10094, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4450
----- executor 2 executes write_coverage_signal cov->size 1061, flag collect 0
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 6193, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 7, 0
before receive testcase: 0 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 535
executor 2 server cover_cnt 5 output_pos_value 6612
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 19
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 9 replies
2023/03/29 14:25:22 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 343 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 6 signal and 0 cover from executor 3
time breakdown 2: 8, 12, 0
2023/03/29 14:25:22 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1266 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 4450 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 535 signal and 0 cover from userspace component
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 9
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
write$binfmt_elf32(0xffffffffffffffff, &(0x7f0000000300)={{0x7f, 0x45, 0x4c, 0x46, 0x5, 0x9, 0x7f, 0x2, 0xffffffffffff1818, 0x3, 0x3, 0xcff, 0xc5, 0x38, 0x22f, 0x9, 0x4, 0x20, 0x2, 0x401, 0x7ff, 0x4}, [{0x4, 0x81, 0xffff, 0x0, 0x5, 0x5, 0x80, 0x6}, {0x1, 0x7, 0xffff0001, 0x7fff, 0x4, 0x4, 0x5, 0x80}], "849f316534ebe143490cf9bb3fc4a9fb3494db934693d10f57d5222e", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x794)
lsetxattr$security_evm(&(0x7f0000000ac0)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0)=@v1={0x2, "ee96d87ff5dc0d09ff6c"}, 0xb, 0x1)
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000100)='./file0\x00', 0x0, 0x4)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file0\x00')
r1 = dup(r0)
fsync(r1)
readlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000180)=""/248, 0xf8)
setxattr$incfs_metadata(&(0x7f0000000140)='./file0\x00', &(0x7f0000000b00), &(0x7f0000000b40)="ffff19ae1aa8f1b911", 0x9, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 18, 6, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5064
remove dir: /root/cephfs-client/dfs-0-9
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-10 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-10
receive_execute: 7, 12
receive_execute: 2, 11
receive_execute: 7, 11
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 6, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 519, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 64
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 340, pid 589, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 340, flag collect 0
----- executor 3 signal number : 164
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 589, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 99
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 9, 2, 0
execute_one time: 1, 11
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 720, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10507, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 18434, flag collect 0
time breakdown 3: 19, 14, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 980
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7683
----- executor 2 executes write_coverage_signal cov->size 2854, flag collect 0
----- executor 2 signal number : 387
----- executor 2 executes write_coverage_signal cov->size 13215, flag collect 0
----- executor 2 signal number : 2906
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 18, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1346
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 14780
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 18, 14, 0
before receive testcase: 0 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 30
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 9 replies
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:22 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
time breakdown 2: 13, 19, 0
before receive testcase: 0 0
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 980 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 7683 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 387 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 2906 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1346 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2344 linkat linkat
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 2458 open open
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 120 chdir chdir
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 9
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
chdir(&(0x7f0000000200)='./file1\x00')
r0 = open(&(0x7f0000000180)='./file1\x00', 0x12040, 0x0)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xace02, 0x0)
r2 = fcntl$dupfd(r0, 0x0, r1)
r3 = dup2(r0, r0)
linkat(r2, &(0x7f0000000080)='./file1\x00', r3, &(0x7f00000000c0)='./file1\x00', 0x400)
truncate(&(0x7f00000001c0)='./file1\x00', 0x2f)
read(r1, &(0x7f0000000000)=""/115, 0x9)
open(&(0x7f0000000100)='./file1\x00', 0x18081, 0x32)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/cephfs-client/dfs-0-10
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-11 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-11
receive_execute: 5, 15
receive_execute: 9, 15
receive_execute: 9, 15
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 8, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 658, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 493
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 1409, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1409, flag collect 0
----- executor 3 signal number : 330
----- completed 3
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 278, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 278, flag collect 0
----- executor 3 signal number : 45
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 808, pid 593, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 808, flag collect 0
----- executor 3 signal number : 610
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 593, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 7, 0
execute_one time: 1, 27
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 24, 30, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 900, flag collect 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 28148, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 287
executor 0 server cover_cnt 2 output_pos_value 355
----- executor 2 signal number : 1430
----- executor 2 executes write_coverage_signal cov->size 30394, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1074
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7644
----- executor 2 executes write_coverage_signal cov->size 4379, flag collect 0
----- executor 2 signal number : 389
----- executor 2 executes write_coverage_signal cov->size 26391, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 33, 0
before receive testcase: 0 0
time breakdown 1: 24, 30, 0
before receive testcase: 0 1
----- executor 2 signal number : 6085
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1974
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 18685
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:22 wg wait finish
2023/03/29 14:25:22 ------ all executors finish execution
2023/03/29 14:25:22 exec time: 52
2023/03/29 14:25:22 ----- PS len: 4
2023/03/29 14:25:22 [CLIENT] executor 3 has 9 replies
2023/03/29 14:25:22 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 493 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 330 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 [SERVER] executor 0 has 2 replies
2023/03/29 14:25:22 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/29 14:25:22 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1430 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1074 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 7644 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 389 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 6085 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 1974 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:22 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 610 signal and 0 cover from executor 3
2023/03/29 14:25:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:22 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:22 ----- no new client coverage: false, true
2023/03/29 14:25:22 mutate testcase with failures
2023/03/29 14:25:22 ----- mutateArg()
time breakdown 2: 20, 36, 0
before receive testcase: 0 0
2023/03/29 14:25:22 ----- insertCall()
2023/03/29 14:25:22 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/29 14:25:22 ----- mutateArg()
2023/03/29 14:25:22 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:22 prog length: 4
2023/03/29 14:25:22 HasCrashFail:false HasNetFail:false
14:25:22 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x1694c2, 0x0)
r1 = dup(r0)
writev(r1, &(0x7f00000001c0)=[{&(0x7f0000000380)="05fa4e09643473620624d60393690f18c5b30ecdfa2b7fe9e599fcf965a7abbc357920b4fe67b32f89e21692f0b9b41233285530da4faf1ccd074ed71900fbb0b3d162e41b073d274d7c29b2de4ad33505a625b3ab104dfe739ad5d8d355423fdf89b98a2e97048ea33e71bedbbee2", 0x6f}, {&(0x7f0000000240)="f6606ab625c903bebf4ffbff9dbf987ae4d83d0801aedcc9991b92a2d4bfea899cb600010000000000440b9e2f5835309c240600cb45eab67f39be8d623c5fd6ef029f19c45c89a4c98c8a35740f0090a825207e", 0x54}, {&(0x7f0000001680)="f3a176d630c17017b86d99a48e7c3fa808e093ca0106b174f7cc4306c4bf1d4abe8c56b5870f585d52d1c019e1d53e6f2e8aaf309b07af5575a4e1abe16505130c53449991d5e2772f686318fbbf94811c028553034b448acb081cb473bddf055a2056036e55a26a1f2c8d254e28b21b263acbf7e6e4012e102da44bdeec922fef9cbf6349a3e72121ebe1c322f11b9edfa992e1bcebdeacb9ea6c7341fd2866749f98a5f3d09831526ec4dc9b3b088719f4ba920a8e18dfda54e7a5e3994856ebd5473a8ee375ccb893982b45b55e51430781d07954aafa57f897ce654f1e443611bf1f1674a3eacfc4dda371ece378e324831338280a40fce64984d4a72497a75f9bc55a00020000000000009e148935d7f4eefec6c7323697a526b7caf2cc6c5a4c2bdfa0e90e489149efda367fa2eaa11d30b30d01e7653fac543dfb272c4ff9a7b52b57497b55bcdb7663674db4a8a332a7aa46d31500d843048dda4ba439df1551664ddae4fbdadf57109366f303a567791ab90522a670eed39282d83424dfa4b7be670cb41eef9709b3340395eaff31da5be5c1f2d158138a76df8a9ffc415889f96327eefd0f81d2504c16611aa1190fa5372cb2ceafaa9b55527188", 0x1c0}, {&(0x7f0000000500)="ba460ebb8011b17f2ff97dfcee41378a0686cdd14a41625060a2674e6c85734202be8a484ab355c3233d3c1f7dd4e23c11eb4050a67b3027c68a42e77996cc3436548f58161306181bfb4cc07d74bff61d96816f007dde928385fbb7a5a4d3d9c191611db8435c5dfc4124d1de9b4d044c3c20bf830f7b129b3e5e22d6109b6bb24702ff6d0230b018cfe6426f0f84ea43d16c57123692e21396fb2104a96bc9794afd578b28303c7ce8cdbcaa32e07a3bb5af945e1f9e57acbf03027abe51917609579e78d2e92e4aaaab567550014070611292c99fcabb5aac84475ef8c582167e51cea472fe8bea084e5039dfac6f01467bf0a77ce7140970bd4add334949c31ff6591b10da4b958cd71a32f040f5dbe9d0f0d213016b33422ca6511f1c863a2354d420225b624b115638b151a07b7f2a0c0771fd929f975942e245317ff28a105fda257e4e856a066acba003c46439c4f7cdc9d5eec5fa9e046bb7ded3561be799402e502cd83898d7a5f66ee8de78c5dbbcebf5dec4a24594b6b5bc8fef7b226de22f9ac7e8ab40cdda627f197bfe7c4909b0e1f9fdf41f94a560b9cd1041f8597baf708963a22c77d06074d8f678aae60507e09dd51d28c933c1be3e34bfd4478477d64f07bbc5bac296fbda5317c90da2e2039df14aff1e69367bab229674d0673433bff7487ffaacf97a1fff4d0d6536d0d2822b2f36e63be368cf482e658f1fd7c89ed3f5cc92af667c12f3dba4dbe237c8c9c4b709ced5439864df8d80dca1890366702f0fdd67aed9391140cd2de2bcc506f4aba2fc2c7febdf84f14bfa855b1cf7e9972e28a8316375b604492f764fc9691e270b18a50d2e2b7eab478078df7b541ebf789bf3adee68dadde8b9e48190a08c7aa0e6442b6ab1ea9c020e267040b90201de65118a98f9a0dbbb73135d60c28e73ee2746712eb34fcf8ed45f1cb7f915f940e0121a20afeaa7c26759f98e030ce89de41d74334e9987d9c89e48643e9a1642faa8cf0fc38b71e093ca94f2e8ea4519e791d231668d9b1ac87aa513b4b6c130418d78ba66eef303cbe29ec615d28d43a1ff566543994a4a65f05e010fff13fdf2916dc4e30afedefaee3e76204b92f8ce0d6eb80d89fc324354b421f6136f625f432644d9d540a013a64153bec01cb4563c60735b4f8f919bd155ba50f0fdf9f2350b2b5ae1ca6d3ba10242300159557905dc7bac38d5fba24b862914feaaff264a964e2407677b37528be1e68760eb1eed12ca74a3fd31bdd906dcf3ec9dd1d89795cbe63115a809802303e0505b44c1aa420a8b83b13a969992abe52d94ddbac8493592ec13c75c9e340b7cf4b4fdac97f0ee76cbd2400396a926663ba4c043db8c5d11c65f6396b3942728e0e0aaf9b0645efe3eaedec2c3655cdb942a12f44910ebad6509e423795b9f11a9d555d6a14745cba7e74c7f7b53282ab7ff051401732f5bbc4331506cd0fcd62d28dd31b450abf8a3df456271c48d7ddb104dba6509480b245309d52658521341128ecc95bed166704a100847d9004a0640176150b78073a95df4c76ca4d7e68027e434d69edb7489465a8c136aa11625ceec04e081ef6f87ddb1ddda134feecc0779d469e3fb2eb188441dc055f25115973e53cdc64cdbb5702b137a9f0cd19e8e9afd5883754fd77c0f2e649c1bed777f83edf30db7c190cde0b0e563fbca0d39ac83c8f774b43e34933f3b19882a3b6d4ff15a8659c853b48b25852649b3e1dc8b046e463d48aec96e8907f34d2a2abe45bc84495efedafa21f21f2328ea4e8252586578c43a7cf4de43403055b50aeab668f1c2f730726a4ea5780956341255e4228935c1c8e2960bd099d10e96ec70238500c313376a837310f763ac78c3f5f8de8d9670d5a73e1b847b390d08d472541c444f25bf5a7316f3a70eeed3d74ae216b8b6fb19bef4c2e4266db3d7fa7e1976a19a82e573674048ca898beca81e9cfa72988e786bba200692fb0a635d2f67bcfaadbdd16e529beb5e1314b36ec9ee7ab341229c6a470cfd6935f0fdcf9881d00984de561a44b8b130a7cd1d47cdf889c96fb9f0968b702c360f78fa750c5ff719161b7c1cb96be5cb1cff108b278b3c0424fbfcc68571652b62193551b2b52399392c6e5d57d2eead0ad39e856e80effe8fd5e1af1490bb84cb09557f2c3c1ba29b0bb14e44507c784cad4a6908964d58df38c202b36de44e9e6f92d9d398bfaee6478828452cbe64c0f9ef769769d3ea5fc252e548453675533e41a3d6e941ef7944d5df8b6295e01b4ab6de2a49f663891bcca7a6f39246cf38a6d3dc5fe38ae711b75cef442fb42243e1ffd7afcdc64d9326c4b8cab10c580667fdf5d90203bba4b3cb7590475fe40e4b76ebfbfc7bcc142d1b7f5ae2c45f5e1bf3862a3f3233b5cbf95e0f78a1411b7024b3cc576fe4f9679d74d0cc1cd2bdf3eb34d2d80ab8de41cd48694b3f86fd4401eee1c8db1544cd0461d62c3bbd6e14a8c97a590250ffb06cf199ec043834b8c4ebaf0da60e8904eb6d85378bc9f74b1e095c73fdb65065af90c5751e8095168e2caf0413165049e5e1838b950076e9b7b8f9f0d3b1a78c768ed8f30b9852506e64d70705ec2ff55196cf34b2b2eb23aebc53ed1d485d9c4c073b64599d3e8dc3f52f4fbab3b4c0cabdcfa2c536d055a094923ab85bb98d36f54c6b9b9d044bfcb7fee9194cb0f44e68bfdd00c3b93051235db091d984fda937c9c115b9d0c95cf5d3669973914bf1e7fa0b806cede3beca07404ca08c6ea1317301f1b3323565d69ce2f52d4d74bfbc4335e5551815ef3e296ef1f2c96ccfddbd9b55a8be6511882e447199314afcee4efb474ae95b7469abdc7698e6b3209f4c35404f70ddde97442e9b25ec6af778ee0221f436035045bbb8928465a448a41fb6df58e63e19169325e2b7a7e7f120bcfb85967a0a23ee23c91b2f936c0351c74fa89411011043f4fd15cfad6e11e8f3045525cda30323887141325b8c4c24847d3e855171922eac527df22a0db1dcc2bf2f63f3bdb90011d1eac56502051a3948ee7280395d37e2eb19f11dbc40a4da9a0a0b2fdd1e9477adcf60d4d83a7b26249efab230c7baf6470f532b6a46ee6e3e1453fb73a04637c3dfdd4971d7537cda26cb22cc0e07c16bc9676d331594c3bad129590511c5b927ca07e4a96304ebf857283618ed9e0cefbc84188e25998fcaf35c0fbc5bea8a3200154cfdc08c35ade056965f47706526a88ac601327a8211949e6a646309d6766250f1e5c907f090433c655bb71d9d2b9c8bec021919703c889c4cd172ebef9ddec0f9752f5b6bfc8283db7cf805b6ffde5ffd97ceda7e030c17a9bacb8b9df74e147f1a5faad4f83c89dd918eb2302e80ca3646fad25b0f4635d16f7aeea1a909cd58d99e7652e040c57a82e9690524e83a0e4be489a6cf49655c38f25728b69dc07e944a1998e6325c5c9d42f69c7c99ff56256e0aafd8d7891e60ec1aa8148f6df078718153c8dc52e1bf69cf95f177949e142ea7f64210f720c361a1417ac683f5a42861005f57d57556bd10aed3737afb331123e2ecbb1059873b4a4f9dc94182c1c6ee5ba484c4266cb12e5123a592613de4ba98b61ace39542a4fb0b2c734f96733a67c73c4c6d3d03a00ebcca3afc4b1a10c3cd5e55c525499e08b8e1d66f7bbe0d6b5c5e447025d5aa03061370f0bf5637e57b2476bde4fe5a4e12c97c4121d371b0fbe527df487510fba381d3a7f77924eacf6ec738d2ed74a6bc3b3e66f7fea19883b682d74ea860d148461b0b44afa5b72d776bad09d700d3321537ba7129dacd84f635a676c7ce7543d854a2e8f7d3e1ded0b00ff5fc1ca68ddaff48ca249f287ed5e28fab08f986c2506b97ba1543441822bd0109ac07ba080b6dc97a32e68efe4b591317efb438c5a6be43f354903fb0b6b86b394ea34bd7e33475235ae384880e66e40204232915ef1f5abc8af352d70f87f38c6b2e8f23101ef0339916194bf823c9a485becba7a1934670efcf7604d9d1ecce596f427b6d3885928b58d0494fe1b743ff3a6d0481335f51c556fa0a922f3035d48e4d33077840ccb82992c3708ddcb25c04bca89b75dc64597b92ca35dbde2579028861c890e20487e82def03252ce444b7475074e9fe888985b5610d8b4ffe6d575abf2455a25e4a56658f45a5237c9a2270c1180501276ec1bafe5660d1432f819dfa25205648e3a51365a77e9928e12f2f9e9a8e53b8674a502ce232f97759f304275f35f931917a6158148a552f904c59f88bbc5277b2cd537384a11ca23d523f9291be9788a4ee1e92e68c824f68b86b1577d896dc1405d111f0a04cf2d3aea4620cbe26d1d4a02fd09c3d93ea29548da69c59f0331e087a4a5b6a300fbe99d6681fd0ed9906ffc57b72212748af644c79a30cebb6b4c977ac0a557a2b08942449a8995f6bc0bb014256d485fb58c990878c2d8c2f1851a5046054232f67571fd92beb0c5faeb142df16a318e1c587cf42acc4ebfc255bb58c34c84a76824d703926e455bc85e4d203a58da12598705d6e302504f8962fc199f6039a11c6d8354a4d6936d4991fbda01625a956642b252fcddd17df7dce74722cd041769d87db5accf176426a0fde06bfb971a1e83b3b5a326a8a98e75897e8b3c1843c30737e7f30363d7c52704249b93b17e470b2a607f744979f5c86bcff52e6728e5c1f364604c092cb7b4c74a6f4805b55ec6a7104dda4683c2518b8529dad374fe1d35c890455c42329ad06c5937e721fb3f76f7d2653d4422936a08c23ed6a75fbfb3c2fbe283046aa39518612fe678e4e31aa0358f355ea6f138200ca4a60e129d7eca0968c51253521ad9d383a08a8de22feb17c725bfc1f24c61ca0f371624117f33c7b32577754f5a4f57dfc1c49a0ef51f16c76462b038fff6432e5c385b3d5a364d670e1bd2228e3321", 0xdb3}, {&(0x7f0000001840)="", 0x1000}, {&(0x7f00000000c0)="c9e9a19abd87ad265046c0871baa4ff8e967dd58ac312a5d5229902fbbd961521320bf2e4836eb5ffde05f0ad2b0518afa585faea10608276ddd56ef1757f02a5d4ac4e212015c96bbd84166fe6c28380a407559f37bbe59dec7f6a91bfc7a91612f588cc8732f4afb1259f2a8eff2a2e4591a8d5b2dfe08e82cdf6564f8e272376b5c861b43b14085f28d8c7071c547e9fa7f56ddace1a6842e5afe2a5569a16d56523c904a6f89a05e1d289682da4696776fe417315213949916546afc48b408027a1df53abe1d8c0fa4037eeb71a84c921c8443fad7bca4c2a536f6ac00d0eb157987954e92358526e9da680710", 0xef}], 0x6)
fcntl$dupfd(r0, 0x406, r1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9672
remove dir: /root/cephfs-client/dfs-0-11
remove dir time 35
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-12 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-12
receive_execute: 10, 38
receive_execute: 8, 37
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 5, 39
----- executor 3 write_call_output, size 625, pid 596, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
----- executor 3 write_call_output, size 1497, pid 596, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1497, flag collect 0
----- executor 3 signal number : 1011
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 596, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 0, 0
execute_one time: 1, 11
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10314, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8653, flag collect 0
----- executor 2 signal number : 941
----- executor 2 executes write_coverage_signal cov->size 17903, flag collect 0
time breakdown 3: 51, 14, 0
before receive testcase: 0 1
----- executor 2 signal number : 6423
----- executor 2 executes write_coverage_signal cov->size 741, flag collect 0
----- executor 2 signal number : 288
----- executor 2 executes write_coverage_signal cov->size 11381, flag collect 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 48, 18, 0
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 3038
----- executor 2 executes write_coverage_signal cov->size 17525, flag collect 0
time breakdown 0: 45, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 1126
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
2023/03/29 14:25:22 for select break: 1
2023/03/29 14:25:22 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 8 output_pos_value 13294
before receive testcase: 0 0
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:23 wg wait finish
2023/03/29 14:25:23 ------ all executors finish execution
2023/03/29 14:25:23 exec time: 59
2023/03/29 14:25:23 ----- PS len: 4
2023/03/29 14:25:23 [CLIENT] executor 3 has 4 replies
2023/03/29 14:25:23 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:23 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:23 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 941 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 6423 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 288 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 3038 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 1126 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 44, 19, 0
before receive testcase: 0 0
2023/03/29 14:25:23 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/29 14:25:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:23 fuzzer receive 1011 signal and 0 cover from executor 3
2023/03/29 14:25:23 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:23 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:23 ----- no new client coverage: false, true
2023/03/29 14:25:23 mutate testcase with failures
2023/03/29 14:25:23 ----- insertCall()
2023/03/29 14:25:23 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/29 14:25:23 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:23 prog length: 3
2023/03/29 14:25:23 HasCrashFail:false HasNetFail:false
14:25:23 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file0\x00', 0x220900, 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000100)='./file0\x00', 0x41, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000080)={'\xd9:/-$-!\xec)&]'}, 0xc, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 632
remove dir: /root/cephfs-client/dfs-0-12
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-13 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-13
receive_execute: 8, 8
receive_execute: 3, 8
receive_execute: 6, 8
receive_execute: 6, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 599, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 660, pid 599, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 3 signal number : 472
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 599, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 3 signal number : 110
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 6, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 12534, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5102
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 8186, flag collect 0
----- executor 2 signal number : 582
time breakdown 1: 14, 7, 0
before receive testcase: 0 1
executor 2 server cover_cnt 5 output_pos_value 7039
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 8, 0
before receive testcase: 0 0
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 8, 0
before receive testcase: 0 0
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:23 wg wait finish
2023/03/29 14:25:23 ------ all executors finish execution
2023/03/29 14:25:23 exec time: 16
2023/03/29 14:25:23 ----- PS len: 4
2023/03/29 14:25:23 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:23 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:23 fuzzer receive 472 signal and 0 cover from executor 3
2023/03/29 14:25:23 fuzzer receive 110 signal and 0 cover from executor 3
2023/03/29 14:25:23 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:23 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:23 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 5102 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 582 signal and 0 cover from userspace component
2023/03/29 14:25:23 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:23 ----- no new client coverage: false, true
2023/03/29 14:25:23 mutate testcase with failures
2023/03/29 14:25:23 ----- mutateArg()
2023/03/29 14:25:23 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:23 prog length: 2
2023/03/29 14:25:23 HasCrashFail:false HasNetFail:false
14:25:23 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x0)
lremovexattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000040)=@known='system.posix_acl_access\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 288
remove dir: /root/cephfs-client/dfs-0-13
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-14 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-14
receive_execute: 4, 13
receive_execute: 3, 13
receive_execute: 3, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 602, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 308, pid 602, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 308, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 5, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4171, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11330, flag collect 0
----- executor 2 signal number : 4696
----- executor 2 executes write_coverage_signal cov->size 354, flag collect 0
----- executor 2 signal number : 247
----- executor 2 executes write_coverage_signal cov->size 7115, flag collect 0
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 521
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 6, 0
executor 2 server cover_cnt 5 output_pos_value 6804
2023/03/29 14:25:23 for select break: 1
2023/03/29 14:25:23 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:23 wg wait finish
2023/03/29 14:25:23 ------ all executors finish execution
2023/03/29 14:25:23 exec time: 21
2023/03/29 14:25:23 ----- PS len: 4
2023/03/29 14:25:23 [CLIENT] executor 3 has 2 replies
2023/03/29 14:25:23 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 14:25:23 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:23 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:23 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/29 14:25:23 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 4696 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 247 signal and 0 cover from userspace component
2023/03/29 14:25:23 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
time breakdown 2: 16, 7, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 14:25:23 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:23 ----- no new client coverage: false, true
2023/03/29 14:25:23 mutate testcase with failures
2023/03/29 14:25:23 ----- insertCall()
2023/03/29 14:25:23 ----- generateCall 2810 renameat renameat
2023/03/29 14:25:23 ----- insertCall()
2023/03/29 14:25:23 ----- generateCall 2458 open open
2023/03/29 14:25:23 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:23 prog length: 17
2023/03/29 14:25:23 HasCrashFail:false HasNetFail:false
14:25:23 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='.\x00', 0x102, 0xe)
sync()
open(&(0x7f0000000580)='./file0\x00', 0x20800, 0x20)
r0 = open(&(0x7f0000000100)='./file0\x00', 0x12040, 0x34)
setxattr$security_capability(&(0x7f00000002c0)='./file0/file0\x00', &(0x7f0000000300), &(0x7f0000000340)=@v2={0x2000000, [{0x9, 0x7}, {0x100, 0x3}]}, 0x14, 0x3)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:lost_found_t:s0\x00', 0x22, 0x2)
open(&(0x7f0000000380)='./file0/file0/file0\x00', 0x8001, 0x88)
r1 = open(&(0x7f00000003c0)='./file0\x00', 0x60280, 0x14)
lsetxattr$security_ima(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)=@md5={0x1, "b8e63ce04c1d414cbd749e83f8791b82"}, 0x11, 0x1)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000280))
symlinkat(&(0x7f0000000140)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
sync()
lsetxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0), 0xff62, 0x51920674dcbc8588)
r2 = open(&(0x7f00000004c0)='./file0/file0\x00', 0x220200, 0x0)
renameat(r2, &(0x7f0000000500)='./file0\x00', r1, &(0x7f0000000540)='./file0/file0/file0\x00')
lsetxattr$user(&(0x7f0000000400)='./file0/file0\x00', &(0x7f0000000440), &(0x7f0000000480)='y\x00', 0x2, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3240
remove dir: /root/cephfs-client/dfs-0-14
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-15 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-15
receive_execute: 6, 18
receive_execute: 3, 19
receive_execute: 4, 19
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 26
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 19
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 797, pid 604, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 797, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 416, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 416, flag collect 0
----- executor 3 signal number : 237
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 650, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 650, flag collect 0
----- executor 3 signal number : 238
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 416, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 416, flag collect 0
----- executor 3 signal number : 105
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1164, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1164, flag collect 0
----- executor 3 signal number : 127
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 453, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 453, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 496, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 496, flag collect 0
----- executor 3 signal number : 50
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 56
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 604, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 554, pid 604, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 554, flag collect 0
----- executor 3 signal number : 21
----- completed 17
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4585, 7, 0
execute_one time: 1, 4592
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 5088, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 1181, flag collect 0
----- executor 2 signal number : 609
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2131, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 3227, flag collect 0
----- executor 0 signal number : 890
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1020
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1071
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 24, 4595, 0
before receive testcase: 0 1
----- executor 0 signal number : 431
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
----- executor 0 signal number : 267
----- executor 0 executes write_coverage_signal cov->size 3483, flag collect 0
----- executor 2 signal number : 1674
----- executor 0 signal number : 529
----- executor 0 executes write_coverage_signal cov->size 4612, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 565
----- executor 0 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 849
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7810
----- executor 2 executes write_coverage_signal cov->size 3451, flag collect 0
----- executor 2 signal number : 345
----- executor 2 executes write_coverage_signal cov->size 13452, flag collect 0
----- executor 0 signal number : 329
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2785
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 422
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
----- executor 2 signal number : 206
----- executor 2 executes write_coverage_signal cov->size 3346, flag collect 0
----- executor 0 signal number : 636
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 393
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4346
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2766
----- executor 0 executes write_coverage_signal cov->size 2208, flag collect 0
----- executor 0 signal number : 51
----- executor 0 executes write_coverage_signal cov->size 169, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 0 signal number : 71
----- executor 0 executes write_coverage_signal cov->size 142, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 2208, flag collect 0
----- executor 0 signal number : 12
executor 0 server cover_cnt 17 output_pos_value 8683
----- executor 2 signal number : 3294
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 536
----- executor 2 executes write_coverage_signal cov->size 151, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1484
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 18 output_pos_value 25291
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 22, 4605, 0
before receive testcase: 0 0
time breakdown 0: 23, 4604, 0
before receive testcase: 0 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:27 wg wait finish
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 4627
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:27 [CLIENT] executor 3 has 17 replies
2023/03/29 14:25:27 [SERVER] executor 2 has 18 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 14:25:27 [SERVER] executor 0 has 17 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 609 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1071 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 890 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1674 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 1020 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 7810 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 345 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 431 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 2785 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 422 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 206 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 393 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 4346 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 267 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 3294 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 536 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 529 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1484 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 565 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 849 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 329 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 636 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 2766 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 51 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/29 14:25:27 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 237 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 238 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 50 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
time breakdown 1: 23, 4608, 0
before receive testcase: 0 0
2023/03/29 14:25:27 ----- generateCall 2458 open open
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 3
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x141000, 0x22)
close(r0)
open(&(0x7f0000000000)='./file1\x00', 0x55ed59bd3eed51da, 0xc)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 352
remove dir: /root/cephfs-client/dfs-0-15
remove dir time 12
-----finish removing dir
receive_execute: 11, 22
receive_execute: 7, 21
receive_execute: 9, 22
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-16 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-16
receive_execute: 29, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 423, pid 609, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 609, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 609, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 42, 4, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4758, flag collect 0
----- executor 2 signal number : 2227
----- executor 2 executes write_coverage_signal cov->size 2541, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 33, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 448
time breakdown 1: 29, 4, 0
executor 2 server cover_cnt 4 output_pos_value 3761
before receive testcase: 0 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:27 wg wait finish
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 28
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:27 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
time breakdown 2: 31, 7, 0
2023/03/29 14:25:27 [SERVER] executor 2 has 4 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 2227 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 448 signal and 0 cover from userspace component
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 198 fcntl$F_GET_FILE_RW_HINT fcntl$F_GET_FILE_RW_HINT
2023/03/29 14:25:27 ----- splice()
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 4127 write$binfmt_aout write$binfmt_aout
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 18
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000080))
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
rename(0x0, 0x0)
r0 = dup(0xffffffffffffffff)
fcntl$setstatus(r0, 0x4, 0x2000)
r1 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r3 = fcntl$dupfd(r2, 0x406, r1)
write$binfmt_aout(r3, &(0x7f00000004c0)={{0x107, 0x3f, 0x1, 0x27b, 0x1f9, 0x1, 0x1ad, 0x2}, "7c108329c7f7e25dcbfa7b3620e929dc07cbbc5b2d14b992c954cc633bf926ce8942d2e18322caaa17ff8be126dd9fe3ce010155a19226f83a8a2cb83db42456e9040eb5d2c8e8d8371e57e26bc73086237cfba7283ea6", ['\x00', '\x00', '\x00', '\x00']}, 0x477)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x0, 0x0, 0xffffffff})
fcntl$lock(r1, 0x6, &(0x7f00000001c0)={0x0, 0x0, 0x81})
setxattr$incfs_metadata(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000002c0)="b4d13e91fd14ae7a05d2041f77630a91bd3a5476d7fc83463e13b7d02d1f139b3c03864fa083006dccfcf1c51f3f1543e0d05e3f844d6183bb686ee8e7f62e2c7a03f20eda915f450e554bb9f980f5ef156a8013d2716fc8daafb57fb5c5d2460ca78d71bc4bc6a44f00062f36e92e4713619540edcc4a221810c5a7434368e85eee211a79816e2bc0ce4e9b95d284442df74cdf51a18dfa208732ec8457296c823b4d8aa9ba2e7fb10bb3bb", 0xac, 0x1)
fcntl$lock(r2, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x0, 0xc9})
fcntl$getownex(r2, 0x10, &(0x7f0000000000))
mkdir(&(0x7f0000000000)='./file0/file0\x00', 0x0)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4728
remove dir: /root/cephfs-client/dfs-0-16
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-17 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-17
receive_execute: 5, 13
receive_execute: 0, 13
receive_execute: 2, 13
receive_execute: 4, 13
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 515, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 324, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 3 signal number : 139
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 583, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 583, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 2
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 48
----- completed 17
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 814, pid 612, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 814, flag collect 0
----- executor 3 signal number : 97
----- completed 18
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 2, 0
execute_one time: 0, 15
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 18, 17, 0
----- executor 2 executes write_coverage_signal cov->size 960, flag collect 0
----- executor 2 signal number : 60
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 17424, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 29716, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 1109
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 6745
----- executor 2 executes write_coverage_signal cov->size 29430, flag collect 0
----- executor 2 signal number : 4458
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 870
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
time breakdown 1: 15, 19, 0
before receive testcase: 0 0
executor 2 server cover_cnt 7 output_pos_value 14660
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:27 wg wait finish
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 37
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [CLIENT] executor 3 has 18 replies
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:27 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/29 14:25:27 [SERVER] executor 2 has 7 replies
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/29 14:25:27 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1109 signal and 0 cover from userspace component
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 6745 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 4458 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 870 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
time breakdown 2: 13, 25, 0
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2346 listxattr listxattr
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 4
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
listxattr(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=""/28, 0x18)
open(&(0x7f0000000140)='./file1\x00', 0x87c1, 0x0)
lsetxattr$security_ima(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000200)=ANY=[@ANYBLOB], 0x5, 0x1)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080), &(0x7f0000000240)='./file1\x00', 0x8, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/cephfs-client/dfs-0-17
remove dir time 23
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-18 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-18
receive_execute: 11, 27
receive_execute: 2, 27
receive_execute: 9, 27
receive_execute: 9, 28
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 616, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 661, pid 616, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 661, flag collect 0
----- executor 3 signal number : 473
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 616, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 136
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 237, pid 616, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 237, flag collect 0
----- executor 3 signal number : 18
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4247, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11901, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5002
----- executor 2 executes write_coverage_signal cov->size 6233, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 36, 5, 0
----- executor 2 signal number : 540
executor 2 server cover_cnt 4 output_pos_value 6877
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 29, 6, 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:27 wg wait finish
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 33
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [CLIENT] executor 3 has 4 replies
time breakdown 0: 37, 6, 0
2023/03/29 14:25:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 473 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/29 14:25:27 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:27 [SERVER] executor 2 has 4 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 5002 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 540 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 3: 38, 4, 0
before receive testcase: 0 0
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2341 lchown lchown
before receive testcase: 0 0
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2343 link link
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 12
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
lgetxattr(&(0x7f0000000180)='./file1/file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="50d307bd00"], &(0x7f0000000200)=""/72, 0x48)
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
setxattr$incfs_metadata(&(0x7f0000000400)='./file1/file0\x00', &(0x7f0000000440), &(0x7f0000000480)="2ec4f7baec84a75beedb39fd8c1b98471c6e703b4f7b7f44ab94454502025c54f95073926f91d85986329e24af6bfc71ba3213b02a9de41373996cc1711d209f70d8afa4907aea39def2c0a75c1960acee849f860fb66106127d5742c1046f82342a401b11cfb9897f6a73227f44918305a5bcd2862c5d2e4af2394c1240e3196427352c1bd3294f24cc61608f4a9d1ade25f3ea", 0x94, 0x1)
link(&(0x7f0000000600)='./file1/file0\x00', &(0x7f0000000640)='./file1/file0\x00')
chmod(&(0x7f0000000140)='./file1\x00', 0x1)
listxattr(&(0x7f0000000280)='./file1/file0\x00', &(0x7f00000002c0)=""/64, 0x40)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000100)='./file1\x00')
stat(&(0x7f0000000340)='./file1/file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lchown(&(0x7f0000000300)='./file1/file0\x00', 0xee00, r1)
lsetxattr(&(0x7f0000000540)='./file1/file0\x00', &(0x7f0000000580)=@known='system.posix_acl_access\x00', &(0x7f00000005c0)='user.incfs.metadata\x00', 0x14, 0x3)
rmdir(&(0x7f0000000080)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2232
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-18
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-19 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-19
receive_execute: 5, 12
receive_execute: 3, 12
receive_execute: 1, 12
receive_execute: 3, 11
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
execute_one time: 0, 1
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 519, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 64
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 82
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 33
----- completed 8
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 548, pid 619, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 548, flag collect 0
----- executor 3 signal number : 75
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10510, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 15079, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 929
----- executor 2 executes write_coverage_signal cov->size 23515, flag collect 0
time breakdown 0: 14, 11, 0
before receive testcase: 0 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 17, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6437
----- executor 2 executes write_coverage_signal cov->size 18144, flag collect 0
time breakdown 1: 15, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 3638
----- executor 2 executes write_coverage_signal cov->size 27021, flag collect 0
----- executor 2 signal number : 1872
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 14351
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:27 wg wait finish
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 26
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [CLIENT] executor 3 has 12 replies
2023/03/29 14:25:27 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/29 14:25:27 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:27 [SERVER] executor 2 has 7 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 929 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 6437 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 3638 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1872 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 13, 15, 0
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 12
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
open$dir(0x0, 0x0, 0x100)
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
mkdir(&(0x7f0000000300)='.\x00', 0x0)
setxattr$security_smack_transmute(&(0x7f0000000040)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000240), 0x4, 0x3)
r1 = fcntl$dupfd(r0, 0x406, r0)
fstat(r1, &(0x7f0000000080))
rename(&(0x7f0000000000)='./file0\x00', &(0x7f0000000100)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1688
remove dir: /root/cephfs-client/dfs-0-19
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 51
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-20 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-20
receive_execute: 8, 54
receive_execute: 2, 53
receive_execute: 7, 53
receive_execute: 7, 54
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 168
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 888, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 888, flag collect 0
----- executor 3 signal number : 154
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 898, pid 623, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 898, flag collect 0
----- executor 3 signal number : 38
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 40, 19, 0
cover_reset in execute_call
execute_one time: 1, 59
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 1246, flag collect 0
----- executor 0 signal number : 734
----- executor 0 executes write_coverage_signal cov->size 680, flag collect 0
----- executor 0 signal number : 367
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 executes write_coverage_signal cov->size 552, flag collect 0
----- executor 0 signal number : 198
executor 0 server cover_cnt 4 output_pos_value 1372
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 60, 64, 0
before receive testcase: 0 0
time breakdown 3: 62, 61, 0
before receive testcase: 0 0
time breakdown 0: 61, 63, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2340, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1408
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1163
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7604
----- executor 2 executes write_coverage_signal cov->size 278, flag collect 0
----- executor 2 signal number : 93
----- executor 2 executes write_coverage_signal cov->size 10013, flag collect 0
----- executor 2 signal number : 575
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6092
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 953
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 9 output_pos_value 17980
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:27 wg wait finish
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 123
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [CLIENT] executor 3 has 12 replies
time breakdown 2: 55, 70, 0
2023/03/29 14:25:27 [SERVER] executor 0 has 4 replies
2023/03/29 14:25:27 [SERVER] executor 2 has 9 replies
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 734 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 367 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 0 receive 198 signal and 0 cover from userspace component
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 154 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1408 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1163 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 7604 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 93 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 575 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 6092 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 953 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2458 open open
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 5
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
symlink(&(0x7f0000000100)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open(&(0x7f00000001c0)='./file1\x00', 0x121041, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x2, 0x3)
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0))
open(&(0x7f0000000140)='./file1\x00', 0x420803, 0x1)
---

end of program
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 824
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-20
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-21 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-21
receive_execute: 3, 17
receive_execute: 10, 17
receive_execute: 12, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 10, 17
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 627, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 627, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 137
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 627, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 133
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 224, pid 627, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 20
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 627, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 2 signal number : 60
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 6468, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1274
----- executor 2 executes write_coverage_signal cov->size 19338, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 7, 0
----- executor 2 signal number : 5650
----- executor 2 executes write_coverage_signal cov->size 1109, flag collect 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 12420, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 27, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 589
executor 2 server cover_cnt 5 output_pos_value 7882
before receive testcase: 0 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:27 wg wait finish
2023/03/29 14:25:27 ------ all executors finish execution
2023/03/29 14:25:27 exec time: 26
2023/03/29 14:25:27 ----- PS len: 4
2023/03/29 14:25:27 [CLIENT] executor 3 has 5 replies
2023/03/29 14:25:27 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/29 14:25:27 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:27 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:27 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 1274 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 5650 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/29 14:25:27 ------- fuzzer executor 2 receive 589 signal and 0 cover from userspace component
time breakdown 2: 20, 9, 0
before receive testcase: 0 0
2023/03/29 14:25:27 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/29 14:25:27 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 3: 30, 6, 0
before receive testcase: 0 0
2023/03/29 14:25:27 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:27 ----- no new client coverage: false, true
2023/03/29 14:25:27 mutate testcase with failures
2023/03/29 14:25:27 ----- insertCall()
2023/03/29 14:25:27 ----- generateCall 2459 open$dir open$dir
2023/03/29 14:25:27 ----- mutateArg()
2023/03/29 14:25:27 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:27 prog length: 7
2023/03/29 14:25:27 HasCrashFail:false HasNetFail:false
14:25:27 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
open$dir(&(0x7f00000000c0)='./file1\x00', 0x8003, 0x6)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(r1, &(0x7f00000001c0)=""/61, 0x3d)
dup2(r0, r1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 968
remove dir: /root/cephfs-client/dfs-0-21
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-22 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-22
receive_execute: 2, 13
receive_execute: 3, 13
receive_execute: 4, 12
receive_execute: 5, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 630, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 630, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 630, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 630, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 630, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 630, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 101
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 115, pid 630, write pid:-2127004809
----- executor 3 executes write_coverage_signal cov->size 115, flag collect 0
----- executor 3 signal number : 81
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 18, 9, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 10514, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 16192, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 16, 11, 0
before receive testcase: 0 1
----- executor 2 signal number : 958
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7447
----- executor 2 executes write_coverage_signal cov->size 2479, flag collect 0
2023/03/29 14:25:27 for select break: 1
2023/03/29 14:25:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 338
----- executor 2 executes write_coverage_signal cov->size 18426, flag collect 0
----- executor 2 signal number : 3329
----- executor 2 executes write_coverage_signal cov->size 18369, flag collect 0
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 14677
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 29
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 7 replies
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 81 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 958 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 7447 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 338 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3329 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 1: 16, 16, 0
before receive testcase: 0 0
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2458 open open
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 194 fchmod fchmod
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 14
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(0x0, &(0x7f0000000240), 0x0, 0x0, 0x4)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
lsetxattr$security_selinux(&(0x7f0000000040)='./file2\x00', &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:agp_device_t:s0\x00', 0x22, 0x2)
link(0x0, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
r0 = open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x4)
fchmod(r0, 0x120)
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
open(&(0x7f00000002c0)='./file0\x00', 0x101000, 0x62)
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x100)
---

end of program
time breakdown 2: 15, 15, 0
before receive testcase: 0 0
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2120
remove dir: /root/cephfs-client/dfs-0-22
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-23 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-23
receive_execute: 10, 17
receive_execute: 5, 16
receive_execute: 9, 16
receive_execute: 3, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 185
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 633, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 29, 0
execute_one time: 0, 44
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 1787, flag collect 0
----- executor 0 signal number : 53
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 122
----- executor 0 executes write_coverage_signal cov->size 597, flag collect 0
----- executor 0 signal number : 306
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 4 output_pos_value 554
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 26, 47, 0
before receive testcase: 0 1
time breakdown 1: 19, 47, 0
before receive testcase: 0 1
----- executor 2 signal number : 1172
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 27, 46, 0
before receive testcase: 0 1
2023/03/29 14:25:28 for select break: 1
----- executor 2 signal number : 7667
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 280, flag collect 0
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 84
----- executor 2 executes write_coverage_signal cov->size 6069, flag collect 0
----- executor 2 signal number : 442
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5987
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 924
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 9 output_pos_value 17778
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 69
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 14 replies
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 0 has 4 replies
2023/03/29 14:25:28 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 0 receive 53 signal and 0 cover from userspace component
2023/03/29 14:25:28 [SERVER] executor 2 has 9 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1172 signal and 0 cover from userspace component
time breakdown 2: 21, 53, 0
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 7667 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 84 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 442 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:28 ------- fuzzer executor 0 receive 122 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 5987 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 0 receive 306 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 924 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- mutateArg()
2023/03/29 14:25:28 ----- mutateArg()
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 4
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x559ec1, 0x59)
r0 = open(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
fchmod(r0, 0x8707983954862d20)
lchown(&(0x7f0000000200)='./file0\x00', 0xee01, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/cephfs-client/dfs-0-23
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-24 successfully
receive_execute: 9, 10
current dir: executor 3: /root/cephfs-client/dfs-0-24
receive_execute: 10, 10
receive_execute: 4, 10
receive_execute: 11, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 637, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 637, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 637, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 637, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 1955, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
----- executor 2 signal number : 2166
----- executor 2 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 2 signal number : 240
executor 2 server cover_cnt 4 output_pos_value 3491
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 14, 6, 0
time breakdown 3: 21, 4, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 19, 6, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 28
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 4 replies
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 4 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
time breakdown 1: 20, 18, 0
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 2166 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2341 lchown lchown
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 20
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000940)='./file0\x00', 0x40100, 0x0)
write$binfmt_elf64(r0, &(0x7f0000001b00)=ANY=[@ANYBLOB=""], 0x10e3)
lgetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='user.incfs.id\x00', &(0x7f0000000080), 0x0)
setxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x3)
lsetxattr$user(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)='trusted.overlay.opaque\x00', 0x17, 0x3)
r1 = open(&(0x7f0000000700)='./file0\x00', 0x1312c2, 0x187)
setxattr$incfs_size(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0), &(0x7f0000000300)=0x83, 0x8, 0x1)
fstat(r0, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lchown(&(0x7f0000000240)='./file0/file0\x00', 0xffffffffffffffff, r2)
readlink(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), 0x0)
stat(&(0x7f0000000380)='./file0\x00', &(0x7f0000000a40)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lsetxattr$security_evm(&(0x7f0000000480)='./file0/file0\x00', &(0x7f00000004c0), &(0x7f0000000500)=@sha1={0x1, "489ed85b10cfbd29a8f77b3a0ba1a6e097da759f"}, 0x15, 0x3)
lsetxattr$security_capability(&(0x7f0000000540)='./file0/file0\x00', &(0x7f0000000580), &(0x7f00000005c0)=@v1={0x1000000, [{0x50, 0x4}]}, 0xc, 0x2)
fstat(r1, &(0x7f0000000640)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$user(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0)='user.test\x00', 0xa, 0x1)
lchown(&(0x7f0000000600)='./file0\x00', r3, r4)
removexattr(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000980)=ANY=[@ANYBLOB="bccf9fdacaa797e13e6cbef45b912a97c0b2ea8e44f90ec8ab5e7b2580001c6890e2f3"])
openat(0xffffffffffffff9c, &(0x7f0000000740)='./file0\x00', 0x240, 0x22)
truncate(&(0x7f0000000780)='./file0\x00', 0x9)
fsetxattr(r1, &(0x7f0000000080)=ANY=[], &(0x7f0000000080)='user.incfs.c\xcf\xe0\xa4W', 0x31, 0x1)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8608
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-24
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-25 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-25
receive_execute: 13, 4
receive_execute: 12, 4
receive_execute: 15, 5
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
receive_execute: 1, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 660, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 660, flag collect 0
----- executor 3 signal number : 230
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 745, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 745, flag collect 0
----- executor 3 signal number : 122
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 19
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 452, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 452, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 846, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 846, flag collect 0
----- executor 3 signal number : 115
----- completed 16
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 1
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1173, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1173, flag collect 0
----- executor 3 signal number : 34
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 11
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 640, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 12, 0
execute_one time: 1, 24
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 20, 26, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1646, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 20517, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1077
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6, 28, 0
before receive testcase: 0 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 7086
----- executor 2 executes write_coverage_signal cov->size 8652, flag collect 0
----- executor 2 signal number : 561
----- executor 2 executes write_coverage_signal cov->size 26416, flag collect 0
----- executor 2 signal number : 4070
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 400
----- executor 2 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 906
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 10 output_pos_value 15604
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 38
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 20 replies
2023/03/29 14:25:28 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 10 replies
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1077 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 230 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 7086 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 561 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 115 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4070 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 400 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 906 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2458 open open
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 3
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file1\x00', 0x10080, 0x188)
open$dir(&(0x7f0000000000)='./file1\x00', 0x101040, 0x0)
open$dir(&(0x7f0000000000)='./file1\x00', 0x141042, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/cephfs-client/dfs-0-25
time breakdown 2: 16, 33, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-26 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-26
receive_execute: 7, 8
receive_execute: 3, 8
receive_execute: 10, 8
receive_execute: 8, 8
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 424, pid 644, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 653, pid 644, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 653, flag collect 0
----- executor 3 signal number : 230
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 644, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 107
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 1
execute_one time: 0, 5
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 240, flag collect 0
time breakdown 0: 15, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4770, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 7468, flag collect 0
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 18426, flag collect 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 8, 0
----- executor 2 signal number : 5871
----- executor 2 executes write_coverage_signal cov->size 1397, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 302
----- executor 2 executes write_coverage_signal cov->size 10846, flag collect 0
----- executor 2 signal number : 2586
----- executor 2 executes write_coverage_signal cov->size 19808, flag collect 0
----- executor 2 signal number : 1722
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 12192
time breakdown 3: 18, 6, 0
before receive testcase: 0 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 18
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 3 replies
time breakdown 2: 11, 10, 0
2023/03/29 14:25:28 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 230 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 107 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 5871 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 302 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 2586 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1722 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 3
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x103040, 0x0)
chown(&(0x7f0000000080)='./file0\x00', 0x0, 0x0)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:inetd_exec_t:s0\x00', 0x22, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 592
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-26
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-27 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-27
receive_execute: 9, 11
receive_execute: 4, 11
receive_execute: 9, 11
receive_execute: 7, 11
executor 2 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 619, pid 647, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 647, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 232, pid 647, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 232, flag collect 0
----- executor 3 signal number : 65
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4251, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11618, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 4, 0
before receive testcase: 0 0
----- executor 2 signal number : 4898
----- executor 2 executes write_coverage_signal cov->size 1055, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 6136, flag collect 0
----- executor 2 signal number : 528
executor 2 server cover_cnt 5 output_pos_value 7060
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 7, 0
time breakdown 3: 20, 4, 0
before receive testcase: 0 0
time breakdown 2: 15, 8, 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 20
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4898 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 528 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- mutateArg()
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 541 ioctl ioctl
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2750 pwritev pwritev
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 19
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000380)='./file0\x00', 0x40000, 0x80)
ioctl(r0, 0x7f, &(0x7f00000003c0)="3642ce80c18a7e69ad3555468517ea24784608e65ba762bfeb33aa3310eb41653df2ff03941df01d56cf4c0876ad14f2fb3a9a44be6cd3e5269f")
r1 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r2 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r3 = openat(r1, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r3, &(0x7f0000000340)='./file0\x00')
r4 = fcntl$dupfd(r1, 0x0, r2)
pwritev(r4, &(0x7f00000008c0)=[{&(0x7f0000000400)}, {&(0x7f0000000a40)="", 0x1000}, {&(0x7f0000000440)="d061c4f25372eacb276eb669220c9e6edccc2aa10ef3953ac138c0d965edf913fbdcf51654b80149299997d0170a33a1b44089e6537fd9a3af2fb6a0e0f1e35c03be916c36b7c88d7f356579227609c614e4270d185a6bf2d6b53f8c33ff337c94d87e439c0d37cb1a977c533e31ba9981845917787251c6f82b9eac89321f553df5e9d35dfbf1eff6ba0408e411c8efd9e7a7358df2df7a3487d94d7233b1c6bd691fa6c5a28d00e15b586218f3ced83333032a07f1d909e5dc4b875549611625cedd4cd38388", 0xc7}, {&(0x7f0000000540)="eced5559649cdc6657a0e7466a5118ce2a1a3facff981961699b7adc69bc48ad94fc50e312ef285f9919fa98c28aa8dadbc9cb1df672b9b247f2e8c2b1e84c04e34af0bce428691fbba0cc7182b7a80455a65226d1cbafac21f69b60fe3e6b7b2dfa3069d78399722f29dbf3d3b80b055debac79873868dd6a79532a339d07ed43707cc09f3da0cb56baf0e045dc431eed3fe14b249c64bbb97bd27a6dcf45410a480cdd71902fc8c673cec1107105b0f79ce51dfd26ef0c8902d5ad6aafb71d7eb84fc3c3da3be3c2c5d6f90696f95b4e7d5cafcc42ad", 0xd7}, {&(0x7f0000000640)="093879e26bff2712f7eeb3d844e6ca3729e53f897f0218e8432b94f26ff57dc11dfb57c032c4371688883702d871120dc659d3bb974cb43143156ca439254563a5ef4fd7e7a159bf07d1a4db1885313cecfa05f99ed6effcec874e4e84518d789e15663be931afe24eae4fb51b07d6f605aa32c1aab13b6a0aed74d7b7e1d851a4ad1950f904cc8bd979e1a94e4e2ecd1129d16f10cca080ec94b4fd04a3dc8c7a0edb71eb11e801b7e0b34d402b", 0xae}, {&(0x7f0000000700)="e275b1f8ed4afd804388709f65bda92ddbac6c4bfa88104b80ba01698f5cc76e68b42f08051b703605f06c6c25de1a2ccf0b390b9d810fa719beb26778f3dd81ae5019de6ebd5faa3320c798cd50f97c9e8786cc5fd571f46676e026d48fb409742a4f98ab8b5b122a6a47b0c32a664460b05921fc565619fec41677c90df5346fc150ebd170c048a8de75f7c2456f08b849c9769b5499430c05458be15ad356846a835ec0eecbf3b9986144372cf6", 0xaf}, {&(0x7f00000007c0)="e754f63807efba608281887c9569771f4c1835b8052cb0c47484f853aa798e2ac298969f91c46e8a513e0f81c0980eff311e231f0c38d812fb0bb8eaa8aa7ae61a1ca4c9f163fe84dd5d9ebdd6243c98834bc6dab41eae536c00871d824261cbc2b6dc373aba646bf28f5b058a1bb0925470a0a1da371d4c6aae8a85f7286ca720aa35004bd90d898adf9b4eba0eff88163f68882e882f51268fd1f24707b44b580621de3a204971c092ef8840d9c17bcba5ba9eb7bd1902db9ce050622e77437091a3f4973983ba9a107637f82854d1b60a19983c731724b32300cbe2a39e1e796e6a89c0840c821a58ba871c690f4f4325c419b1480f4eb2c628", 0xfb}], 0x7, 0x3, 0x80000001)
fcntl$lock(r1, 0x6, &(0x7f0000000a00))
r5 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r5, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x81, 0xbab0})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
fcntl$lock(r5, 0x6, &(0x7f0000000200)={0x1, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000940), &(0x7f0000000980)=@md5={0x1, "adcf78ff499a90c1375110504b408e63"}, 0x11, 0x1)
fcntl$lock(r1, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r6, r5)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9680
remove dir: /root/cephfs-client/dfs-0-27
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 155
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-28 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-28
receive_execute: 2, 156
receive_execute: 7, 156
receive_execute: 8, 156
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
receive_execute: 4, 156
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 654, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 654, flag collect 0
----- executor 3 signal number : 228
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 8
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 650, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 59
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 650, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 534, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 126
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 214, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 3 signal number : 61
----- completed 15
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 246, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 246, flag collect 0
----- executor 3 signal number : 39
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 650, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 1
----- completed 17
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 650, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 342, pid 650, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 342, flag collect 0
----- executor 3 signal number : 31
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 2, 0
execute_one time: 1, 28
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 164, 30, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 900, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 13999, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 24635, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1038
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 163, 31, 0
before receive testcase: 0 0
----- executor 2 signal number : 7409
----- executor 2 executes write_coverage_signal cov->size 16945, flag collect 0
----- executor 2 signal number : 3694
----- executor 2 executes write_coverage_signal cov->size 27712, flag collect 0
----- executor 2 signal number : 2091
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 7 output_pos_value 15716
before receive testcase: 0 0
2023/03/29 14:25:28 for select break: 1
time breakdown 1: 173, 17, 0
before receive testcase: 0 0
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 191
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 19 replies
2023/03/29 14:25:28 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 228 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 2 has 7 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1038 signal and 0 cover from userspace component
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 7409 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3694 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 2091 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
time breakdown 2: 160, 35, 0
before receive testcase: 0 1
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- mutateArg()
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 5
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000006c0)='./file1\x00', 0x40, 0x0)
dup2(r0, r0)
fsetxattr(r0, &(0x7f0000000700)=ANY=[@ANYBLOB='\t'], 0x0, 0x0, 0x1)
r1 = dup2(r0, r0)
fchown(r1, 0xee00, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 736
remove dir: /root/cephfs-client/dfs-0-28
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-29 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-29
receive_execute: 7, 13
receive_execute: 6, 13
receive_execute: 3, 13
receive_execute: 6, 13
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 619, pid 653, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 653, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 31, pid 653, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 3 signal number : 7
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 653, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 653, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 0
----- executor 3 signal number : 140
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 20, 5, 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 120, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4253, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11628, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4886
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 6136, flag collect 0
time breakdown 1: 19, 6, 0
----- executor 2 signal number : 523
executor 2 server cover_cnt 4 output_pos_value 6744
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 16, 7, 0
before receive testcase: 0 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 21
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 5 replies
2023/03/29 14:25:28 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 2 has 4 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
time breakdown 0: 19, 8, 0
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4886 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 523 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- mutateArg()
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 220 flock flock
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 17
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file4\x00', &(0x7f0000000040), &(0x7f00000002c0)='./file2\x00', 0x0, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
setxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x2)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
r2 = openat(r1, &(0x7f00000000c0)='./file3\x00', 0x2000, 0x148)
fsetxattr$security_evm(r2, &(0x7f0000000100), &(0x7f0000000240)=@md5={0x1, "b8083ee288b13ea1d6e8f3f30608c443"}, 0x11, 0x3)
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
r3 = open$dir(&(0x7f0000000380)='./file3\x00', 0x0, 0x8)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
r4 = open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
dup2(r4, 0xffffffffffffffff)
flock(r3, 0x4)
readlinkat(r1, 0xfffffffffffffffc, 0x0, 0x0)
rename(&(0x7f0000000700)='./file4\x00', &(0x7f0000000740)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2584
remove dir: /root/cephfs-client/dfs-0-29
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 19
-----finish removing dir
receive_execute: 4, 22
receive_execute: 3, 22
receive_execute: 4, 23
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-30 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-30
receive_execute: 6, 23
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 656, write pid:-2127101003
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 617, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 617, flag collect 0
----- executor 3 signal number : 467
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 848, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 848, flag collect 0
----- executor 3 signal number : 172
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 33
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 32
----- completed 10
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 538, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 538, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 850, pid 656, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 850, flag collect 0
----- executor 3 signal number : 88
----- completed 17
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 41, 18, 0
execute_one time: 0, 59
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2546, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 62, 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 63, 0
before receive testcase: 0 0
----- executor 2 signal number : 1126
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
time breakdown 3: 29, 61, 0
before receive testcase: 0 0
----- executor 2 signal number : 7799
----- executor 2 executes write_coverage_signal cov->size 843, flag collect 0
----- executor 2 signal number : 138
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4952
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1835
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 17341
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 90
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 17 replies
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 467 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1126 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 7799 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 138 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4952 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1835 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
time breakdown 2: 26, 67, 0
before receive testcase: 0 0
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- mutateArg()
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 20
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x0, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x100000001, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3656
remove dir: /root/cephfs-client/dfs-0-30
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-31 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-31
receive_execute: 9, 31
receive_execute: 4, 30
receive_execute: 8, 30
receive_execute: 8, 31
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 660, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 660, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 502, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 49
----- completed 14
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 233, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 233, flag collect 0
----- executor 3 signal number : 62
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 660, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 6
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 660, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 349, pid 660, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 349, flag collect 0
----- executor 3 signal number : 24
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
  50.597008] ==================================================================
[   50.597743] BUG: KASAN: use-after-free in ceph_fl_release_lock+0x87/0x160
[   50.598376] Write of size 4 at addr ff1100010eca4a9c by task syz-executor/660
[   50.599025] 
[   50.599168] CPU: 1 PID: 660 Comm: syz-executor Tainted: G        W         5.15.0+ #9
[   50.599876] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[   50.600694] Call Trace:
[   50.600923]  dump_stack_lvl+0x34/0x44
[   50.601260]  print_address_description.constprop.0+0x21/0x140
[   50.601776]  ? ceph_fl_release_lock+0x87/0x160
[   50.602171]  ? ceph_fl_release_lock+0x87/0x160
[   50.602569]  kasan_report.cold+0x7f/0x11b
[   50.602945]  ? ceph_fl_copy_lock+0xa1/0xb0
[   50.603316]  ? ceph_fl_release_lock+0x87/0x160
[   50.603709]  kasan_check_range+0x17c/0x1e0
[   50.604076]  ceph_fl_release_lock+0x87/0x160
[   50.604454]  locks_release_private+0x5a/0xb0
[   50.605127]  locks_dispose_list+0x31/0x50
[   50.605669]  posix_lock_inode+0x13e/0x7f0
[   50.606027]  locks_lock_inode_wait+0xb4/0x180
[   50.606405]  ceph_lock+0x3a1/0x550
[   50.606678]  locks_remove_posix+0xc6/0x150
[   50.607025]  filp_close+0x4c/0x60
[   50.607296]  __x64_sys_close+0x9/0x40
[   50.607604]  do_syscall_64+0x38/0x90
[   50.607896]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[   50.608242] RIP: 0033:0x7ffff732bd5b
[   50.608552] Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2f 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
[   50.609954] RSP: 002b:00007fffffffe220 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
[   50.610625] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff732bd5b
[   50.611280] RDX: 000001872dc269a9 RSI: 0000000000000000 RDI: 0000000000000003
cover_reset in execute_call
[   50.611908] RBP: 00007fffffffe250 R08: 0000000000000000 R09: 0000000000010b40
[   50.612618] R10: 0000000064244a58 R11: 0000000000000293 R12: 00007ffff732e270
[   50.613252] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[   50.613884] 
[   50.614028] Allocated by task 662:
[   50.614367] 
[   50.614507] Freed by task 662:
[   50.614810] 
[   50.614954] The buggy address belongs to the object at ff1100010eca4a80
[   50.614954]  which belongs to the cache ceph_file_info of size 32
[   50.616033] The buggy address is located 28 bytes inside of
[   50.616033]  32-byte region [ff1100010eca4a80, ff1100010eca4aa0)
[   50.616911] The buggy address belongs to the page:
[   50.617217] 
[   50.617346] Memory state around the buggy address:
[   50.617634]  ff1100010eca4980: fc fc fa fb fb fb fc fc fa fb fb fb fc fc fa fb
[   50.618089]  ff1100010eca4a00: fb fb fc fc 00 00 00 00 fc fc 00 00 00 00 fc fc
[   50.618599] >ff1100010eca4a80: fa fb fb fb fc fc 00 00 00 00 fc fc fc fc fc fc
[   50.619146]                             ^
[   50.619435]  ff1100010eca4b00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[   50.619986]  ff1100010eca4b80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[   50.620473] ==================================================================
executor 3, execute_one inner time: 13, 2, 25
execute_one time: 0, 40
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 13884, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 24404, flag collect 0
----- executor 2 signal number : 1045
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 39, 44, 0
time breakdown 0: 38, 45, 0
----- executor 2 signal number : 7293
----- executor 2 executes write_coverage_signal cov->size 4218, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 401
----- executor 2 executes write_coverage_signal cov->size 17519, flag collect 0
----- executor 2 signal number : 3768
----- executor 2 executes write_coverage_signal cov->size 27686, flag collect 0
----- executor 2 signal number : 2128
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 16124
time breakdown 3: 40, 42, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 34, 47, 0
before receive testcase: 0 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 79
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 20 replies
2023/03/29 14:25:28 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1045 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 7293 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 401 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3768 signal and 0 cover from userspace component
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 2128 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 3
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
llistxattr(&(0x7f00000002c0)='./file0/../file0\x00', 0x0, 0x0)
setxattr$incfs_metadata(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000001c0)="4cc0bdae35de817ae741b18c2e67881a7f4e4c3b3d52c4b0bab854031ea7e10382168b1e84ab81fe24169e115cb61949e2a2132c5cfcb3beecac0b49e8e75794a8cd5023eade9c31fc8ea241f1f0256dfaccccbe008ce9b3cd7b8898c81ee5a222f52e1d1b1edcb5a2660a7573478e5c56909306abb36fb636b6b84c1bf569a2819ff9d59411298f3404c8bca5399f58b5a1d01af1cd8b1d0852cc9e96905bc86b86e70e22776159ba0a98ed25a176fc20ed119b3be6bf3f6b5792e74a9bdf7f140de3c1ac88f11db6f53f5452159ac8fe77e90c08da1b7ece200950c15153855f9e5af754a8e90086", 0xe9, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 848
remove dir: /root/cephfs-client/dfs-0-31
remove dir time 8
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-32 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-32
receive_execute: 4, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 16
receive_execute: 9, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 664, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 536, pid 664, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 536, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 664, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 127
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 0, 0
execute_one time: 1, 7
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 24, 9, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 11053, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1297
----- executor 2 executes write_coverage_signal cov->size 21626, flag collect 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 15, 14, 0
before receive testcase: 0 0
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5680
----- executor 2 executes write_coverage_signal cov->size 6181, flag collect 0
----- executor 2 signal number : 543
executor 2 server cover_cnt 4 output_pos_value 7593
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
time breakdown 2: 15, 17, 0
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 28
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:28 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/29 14:25:28 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 2 has 4 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1297 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 5680 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
before receive testcase: 0 1
time breakdown 0: 22, 10, 0
before receive testcase: 0 0
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2750 pwritev pwritev
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 3
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x1696c2, 0x0)
fgetxattr(r0, &(0x7f0000000140)=ANY=[@ANYRES64], 0x0, 0x0)
pwritev(r0, &(0x7f0000000200)=[{&(0x7f0000000040)="cb485abd54bc53dd264943c5f9de9bb9cda40e32da027888a5c616bd9503b7c6825ac65a410a3c6fa9acbda4ebd0b307945349983b6f0c6ed0435ce50bd32b41398d00dd487ad6fe74e54cb9f6fdd15a75dbf8a7e593982aeeeef94e578a82c7609a6c3419342774d9bb61ad98d324d756800893887f3170c2a686edfca575e2a4629408a7d1c1502fa4caac0ca316b4c65bef98443f09f173f1b9b36a01b68f7bea262e0444544078d26e84f9b3d502564127ff2957423007674c612704d3b4eb5e34c15777c01ceeb4a7dfa7f60a4592a1184ad69fe8c2a737f68335022d", 0xdf}, {&(0x7f0000000180)="1011ddb3beec4af33f10411f6f6e8e8544bed747ab2cfacb0c6fe4bc392fa601d5474101296bb1f4d529e9995c9c6fcc267c38800e8b67ffd2bded077015692bb26e3e3b81140cecb8e0a7", 0x4b}], 0x2, 0xfffffff8, 0x4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1048
remove dir: /root/cephfs-client/dfs-0-32
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-33 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-33
receive_execute: 8, 18
receive_execute: 5, 17
receive_execute: 7, 17
receive_execute: 7, 18
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 625, pid 667, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 31, pid 667, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1339, pid 667, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1339, flag collect 0
----- executor 3 signal number : 996
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
time breakdown 3: 26, 9, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 300, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8655, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 9234, flag collect 0
----- executor 2 signal number : 914
----- executor 2 executes write_coverage_signal cov->size 15788, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 25, 11, 0
before receive testcase: 0 1
time breakdown 0: 24, 11, 0
before receive testcase: 0 1
----- executor 2 signal number : 5622
----- executor 2 executes write_coverage_signal cov->size 5707, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 11577, flag collect 0
----- executor 2 signal number : 2966
----- executor 2 executes write_coverage_signal cov->size 20196, flag collect 0
----- executor 2 signal number : 1781
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 13216
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:28 for select break: 1
2023/03/29 14:25:28 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:28 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:28 --------- executor 3 receive reply, reply.done 1
2023/03/29 14:25:28 wg wait finish
2023/03/29 14:25:28 ------ all executors finish execution
2023/03/29 14:25:28 exec time: 33
2023/03/29 14:25:28 ----- PS len: 4
2023/03/29 14:25:28 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:28 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:28 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:28 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/29 14:25:28 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 914 signal and 0 cover from userspace component
2023/03/29 14:25:28 fuzzer receive 996 signal and 0 cover from executor 3
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 5622 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 2966 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 1781 signal and 0 cover from userspace component
2023/03/29 14:25:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 22, 14, 0
before receive testcase: 0 1
2023/03/29 14:25:28 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:28 ----- no new client coverage: false, true
2023/03/29 14:25:28 mutate testcase with failures
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2808 removexattr removexattr
2023/03/29 14:25:28 ----- insertCall()
2023/03/29 14:25:28 ----- generateCall 2350 lseek lseek
2023/03/29 14:25:28 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:28 prog length: 7
2023/03/29 14:25:28 HasCrashFail:false HasNetFail:false
14:25:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001140)='./file0\x00', 0x8840, 0x0)
close(r0)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000180), 0x0, 0x0, 0x0)
sync()
rmdir(&(0x7f0000000480)='./file0\x00')
lseek(r0, 0xfff, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)=@random={'os2.', '\x00'})
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 872
remove dir: /root/cephfs-client/dfs-0-33
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-34 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-34
receive_execute: 9, 8
receive_execute: 5, 7
receive_execute: 7, 8
receive_execute: 8, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 28, pid 670, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 28, flag collect 0
----- executor 3 signal number : 19
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 162
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1222, pid 670, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 1222, flag collect 0
----- executor 3 signal number : 333
----- completed 4
execute_one loop: 0, 0, 39
cover_reset in execute_call
----- executor 3 write_call_output, size 140, pid 670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 147, pid 670, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 147, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 41, 2, 0
execute_one time: 0, 43
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 3985, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1787, flag collect 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 signal number : 53
----- executor 2 executes write_coverage_signal cov->size 1364, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2094, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 1181, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 4475, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 609
----- executor 2 executes write_coverage_signal cov->size 23596, flag collect 0
----- executor 0 signal number : 1193
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1096
----- executor 2 executes write_coverage_signal cov->size 24450, flag collect 0
----- executor 0 signal number : 831
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1539
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 15384, flag collect 0
----- executor 0 signal number : 268
----- executor 0 executes write_coverage_signal cov->size 3481, flag collect 0
----- executor 0 signal number : 529
----- executor 0 executes write_coverage_signal cov->size 4142, flag collect 0
----- executor 0 signal number : 405
----- executor 0 executes write_coverage_signal cov->size 76, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7745
----- executor 2 executes write_coverage_signal cov->size 2384, flag collect 0
----- executor 2 signal number : 278
----- executor 2 executes write_coverage_signal cov->size 7633, flag collect 0
----- executor 2 signal number : 1631
----- executor 2 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 2 signal number : 398
----- executor 2 executes write_coverage_signal cov->size 27302, flag collect 0
----- executor 0 signal number : 849
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 15, 3986, 0
before receive testcase: 0 1
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 202
----- executor 2 executes write_coverage_signal cov->size 2330, flag collect 0
----- executor 2 signal number : 372
----- executor 2 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 17542, flag collect 0
----- executor 2 signal number : 3762
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 630
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 545
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2782
----- executor 0 executes write_coverage_signal cov->size 7260, flag collect 0
----- executor 2 signal number : 948
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 16 output_pos_value 19425
----- executor 0 signal number : 1548
----- executor 0 executes write_coverage_signal cov->size 2678, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 142, flag collect 0
----- executor 0 signal number : 123
----- executor 0 executes write_coverage_signal cov->size 305, flag collect 0
----- executor 0 signal number : 66
----- executor 0 executes write_coverage_signal cov->size 133, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 2678, flag collect 0
----- executor 0 signal number : 32
executor 0 server cover_cnt 18 output_pos_value 10140
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 12, 3992, 0
before receive testcase: 0 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 4001
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [CLIENT] executor 3 has 7 replies
2023/03/29 14:25:32 [SERVER] executor 0 has 18 replies
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 1193 signal and 0 cover from userspace component
time breakdown 0: 15, 3993, 0
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 831 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 268 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 529 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 405 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 849 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 630 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 2782 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 1548 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 123 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 66 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 2 has 16 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 53 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 0 receive 32 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 609 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1096 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1539 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 7745 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 278 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1631 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 398 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 202 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 372 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 3762 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 948 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 162 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 2
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
open$dir(&(0x7f00000000c0)='./file1\x00', 0x7ac01, 0x0)
lsetxattr$security_smack_transmute(&(0x7f0000000100)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
remove dir: /root/cephfs-client/dfs-0-34
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 6, 9
receive_execute: 12, 9
receive_execute: 5, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-35 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-35
receive_execute: 13, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 675, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 675, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 1953, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4171, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2164
executor 2 server cover_cnt 3 output_pos_value 3246
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 4, 0
before receive testcase: 0 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 4, 0
time breakdown 3: 22, 2, 0
before receive testcase: 0 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 14
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [CLIENT] executor 3 has 2 replies
2023/03/29 14:25:32 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 2 has 3 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
time breakdown 2: 15, 5, 0
before receive testcase: 0 0
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 9
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
r1 = dup2(r0, r0)
fsetxattr$security_smack_transmute(0xffffffffffffffff, &(0x7f0000000080), &(0x7f00000000c0), 0x4, 0x0)
fcntl$setpipe(r1, 0x407, 0x9)
open$dir(&(0x7f0000000100)='./file0\x00', 0x8080, 0x12)
r2 = dup(r1)
write$binfmt_misc(r2, &(0x7f0000000240)={'syz1', "e31aa928cd89eebb9ec96aebcdefc147f2986f65620e2b2720dc8b639cab29a3ee97feb1c1bea1d91b9c13a380039e9521568e645cb5b3c73b7e63826b7dc80cada5318e5b3472ea17aee8022b0361da4ed5a1e76a53f8616bd55a066c8853d45a709687c85b536e0de2b4c5d34cd9eddaa4ec9d999350b626535be82382077c8e5b046607ed79501b879e356372c0899177bbf343a97e668304793adb200c92d65721f3ea37562c60dceb8fccea90e1d808f79a57522617f911e6d3c771f5ac245aef9e906c6f6dd9485be41d1dae7b9d5ce347a6a9f7f4839250face036648aaf14c7440af05ad5be8b5a889a5e7a78e80176135c2cb213d16e2a309"}, 0x10b)
write$binfmt_script(r0, &(0x7f0000000240)=ANY=[], 0x1023)
open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1568
remove dir: /root/cephfs-client/dfs-0-35
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-36 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-36
receive_execute: 5, 3
receive_execute: 2, 4
receive_execute: 1, 4
receive_execute: 4, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 627, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 627, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 2 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- executor 3 write_call_output, size 0, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 35
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1320, pid 677, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1320, flag collect 0
----- executor 3 signal number : 997
----- completed 7
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 1153, pid 677, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1153, flag collect 0
----- executor 3 signal number : 23
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 590, pid 677, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 590, flag collect 0
----- executor 3 signal number : 95
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 14, 7, 0
execute_one time: 0, 21
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 780, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 9, 22, 0
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1431
----- executor 2 executes write_coverage_signal cov->size 25823, flag collect 0
time breakdown 0: 7, 24, 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 5, 24, 0
before receive testcase: 0 0
----- executor 2 signal number : 1026
----- executor 2 executes write_coverage_signal cov->size 30700, flag collect 0
----- executor 2 signal number : 7225
----- executor 2 executes write_coverage_signal cov->size 4120, flag collect 0
----- executor 2 signal number : 408
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 6489
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1820
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
executor 2 server cover_cnt 8 output_pos_value 18488
time breakdown 2: 6, 29, 0
before receive testcase: 0 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 34
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:32 [CLIENT] executor 3 has 9 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1431 signal and 0 cover from userspace component
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1026 signal and 0 cover from userspace component
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 7225 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 408 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 6489 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1820 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 997 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 95 signal and 0 cover from executor 3
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 3
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
symlink(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140)='./file0/file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000600)='./file0\x00', 0x0, 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 632
remove dir: /root/cephfs-client/dfs-0-36
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 5, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 6
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-37 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-37
receive_execute: 12, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 680, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 680, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 680, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 19, 1, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 2 output_pos_value 73
receive_execute: 10, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 17, 3, 0
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 10
2023/03/29 14:25:32 ----- PS len: 4
time breakdown 0: 18, 2, 0
2023/03/29 14:25:32 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 2 has 2 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 3 signal and 0 cover from executor 3
before receive testcase: 0 0
time breakdown 2: 12, 3, 0
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 220 flock flock
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 4
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
open(&(0x7f00000004c0)='./file0\x00', 0x40, 0x0)
r0 = open(&(0x7f00000004c0)='./file0\x00', 0x60740, 0x0)
flock(r0, 0xa)
setxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000200), 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 616
remove dir: /root/cephfs-client/dfs-0-37
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-38 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-38
receive_execute: 0, 6
receive_execute: 1, 6
receive_execute: 1, 6
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 623, pid 683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
----- executor 3 write_call_output, size 605, pid 683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 605, flag collect 0
----- executor 3 signal number : 201
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 0, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 442, pid 683, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 442, flag collect 0
----- executor 3 signal number : 49
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
executor 0 write_server_output
time breakdown 3: 7, 5, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 8753, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 592
----- executor 2 executes write_coverage_signal cov->size 11470, flag collect 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 7, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 1078
----- executor 2 executes write_coverage_signal cov->size 28832, flag collect 0
----- executor 2 signal number : 7174
----- executor 2 executes write_coverage_signal cov->size 19967, flag collect 0
time breakdown 1: 6, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 3898
----- executor 2 executes write_coverage_signal cov->size 31929, flag collect 0
----- executor 2 signal number : 1615
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 7 output_pos_value 14442
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 16
2023/03/29 14:25:32 ----- PS len: 4
time breakdown 2: 6, 11, 0
2023/03/29 14:25:32 [CLIENT] executor 3 has 4 replies
2023/03/29 14:25:32 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 2 has 7 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 592 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1078 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 7174 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 3898 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1615 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 202 fcntl$addseals fcntl$addseals
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 231 fsetxattr fsetxattr
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 2459 open$dir open$dir
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 8
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001140)='./file0\x00', 0xc0, 0x0)
r1 = dup2(r0, r0)
r2 = open$dir(&(0x7f0000000000)='./file0\x00', 0x0, 0x61)
fsetxattr$smack_xattr_label(r2, &(0x7f0000000080)='security.SMACK64IPIN\x00', 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000140)='./file0\x00', 0x10801, 0x80)
fsetxattr(0xffffffffffffffff, &(0x7f0000000180)=ANY=[@ANYBLOB="6f73322e73656375726974792e534d41434b9c7493626950965d994cc14b8ae524"], &(0x7f00000000c0)='\'@^\x00', 0x4, 0x0)
fsetxattr$smack_xattr_label(r1, &(0x7f0000000100)='security.SMACK64\x00', 0x0, 0x0, 0x0)
fcntl$addseals(r0, 0x409, 0xa)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1360
remove dir: /root/cephfs-client/dfs-0-38
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-39 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-39
receive_execute: 9, 6
receive_execute: 3, 6
receive_execute: 7, 7
receive_execute: 8, 6
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 176, pid 686, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 176, flag collect 0
----- executor 3 signal number : 128
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 686, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 145, pid 686, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 145, flag collect 0
----- executor 3 signal number : 17
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 686, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
time breakdown 3: 15, 5, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 14, 6, 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 4250, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11587, flag collect 0
----- executor 2 signal number : 4903
----- executor 2 executes write_coverage_signal cov->size 696, flag collect 0
----- executor 2 signal number : 280
----- executor 2 executes write_coverage_signal cov->size 10760, flag collect 0
----- executor 2 signal number : 576
executor 2 server cover_cnt 5 output_pos_value 7097
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 14
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [CLIENT] executor 3 has 8 replies
2023/03/29 14:25:32 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 2 has 5 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 9, 8, 0
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 4903 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 576 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 251 ftruncate ftruncate
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 5
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000004c0)='./file0\x00', 0x40, 0x0)
r1 = open(&(0x7f00000003c0)='./file0\x00', 0x0, 0x0)
fsetxattr$security_capability(r1, &(0x7f0000000400), 0x0, 0x0, 0x0)
ftruncate(r0, 0xe8d)
fsync(r0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 672
remove dir: /root/cephfs-client/dfs-0-39
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 14, 6, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
receive_execute: 0, 20
receive_execute: 2, 20
receive_execute: 3, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 9
executor 3 create dir /root/cephfs-client/dfs-0-40 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-40
receive_execute: 5, 19
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 476
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 689, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 176, pid 689, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 176, flag collect 0
----- executor 3 signal number : 128
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 689, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 322, pid 689, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 201
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 1, 5
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 357, flag collect 0
----- executor 2 signal number : 60
----- executor 2 executes write_coverage_signal cov->size 9160, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 24, 6, 0
before receive testcase: 0 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 11781, flag collect 0
----- executor 2 signal number : 999
----- executor 2 executes write_coverage_signal cov->size 18707, flag collect 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 5796
----- executor 2 executes write_coverage_signal cov->size 1085, flag collect 0
----- executor 2 signal number : 302
----- executor 2 executes write_coverage_signal cov->size 6103, flag collect 0
----- executor 2 signal number : 1591
----- executor 2 executes write_coverage_signal cov->size 25793, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 22, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 1776
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 11942
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 29
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [CLIENT] executor 3 has 5 replies
2023/03/29 14:25:32 fuzzer receive 476 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 201 signal and 0 cover from executor 3
time breakdown 2: 20, 10, 0
2023/03/29 14:25:32 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 60 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 999 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 5796 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 302 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1591 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1776 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
before receive testcase: 0 0
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 2814 rmdir rmdir
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 3970 unlink unlink
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 ----- insertCall()
2023/03/29 14:25:32 ----- generateCall 3765 symlinkat symlinkat
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 8
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
rmdir(&(0x7f0000000180)='./file0\x00')
unlink(&(0x7f0000000240)='./file0/../file0\x00')
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64MMAP\x00', 0x0, 0x0, 0x0)
r0 = open$dir(&(0x7f0000000140)='./file0\x00', 0x1, 0x14)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), 0x0, 0x0, 0x3)
symlinkat(&(0x7f0000000280)='./file0\x00', r0, &(0x7f00000002c0)='./file0/../file0\x00')
lgetxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=ANY=[@ANYBLOB="73797374656d2eaac9300039"], 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1376
remove dir: /root/cephfs-client/dfs-0-40
receive_execute: 3, 15
receive_execute: 6, 15
receive_execute: 6, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-41 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-41
receive_execute: 6, 15
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 470
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 399, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 399, flag collect 0
----- executor 3 signal number : 104
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 682, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 682, flag collect 0
----- executor 3 signal number : 164
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 101, pid 692, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 101, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 5, 0
execute_one time: 1, 8
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 21, 10, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 637, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 13655, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 23299, flag collect 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 12, 0
----- executor 2 signal number : 1008
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 21, 12, 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 8554
----- executor 2 executes write_coverage_signal cov->size 3019, flag collect 0
----- executor 2 signal number : 367
----- executor 2 executes write_coverage_signal cov->size 16654, flag collect 0
----- executor 2 signal number : 3857
----- executor 2 executes write_coverage_signal cov->size 28885, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1644
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 8 output_pos_value 16919
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 30
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [CLIENT] executor 3 has 8 replies
2023/03/29 14:25:32 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 470 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
time breakdown 2: 18, 16, 0
2023/03/29 14:25:32 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 2 has 8 replies
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1008 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 8554 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 367 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 3857 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1644 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/29 14:25:32 fuzzer receive 5 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 3
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
open(&(0x7f0000001140)='./file0\x00', 0x109803, 0xf9)
setxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2, 0x14, 0x0)
truncate(&(0x7f0000000100)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 696
remove dir: /root/cephfs-client/dfs-0-41
remove dir time 11
-----finish removing dir
receive_execute: 3, 13
receive_execute: 8, 12
receive_execute: 7, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-42 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-42
receive_execute: 10, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 696, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 696, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 696, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 22, 3, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
----- executor 2 signal number : 2166
----- executor 2 executes write_coverage_signal cov->size 650, flag collect 0
----- executor 2 signal number : 242
executor 2 server cover_cnt 4 output_pos_value 3493
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 4, 0
before receive testcase: 0 0
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 1 receive reply, reply.done 1
2023/03/29 14:25:32 for select break: 1
2023/03/29 14:25:32 --------- executor 2 receive reply, reply.done 1
2023/03/29 14:25:32 wg wait finish
2023/03/29 14:25:32 ------ all executors finish execution
2023/03/29 14:25:32 exec time: 17
2023/03/29 14:25:32 ----- PS len: 4
2023/03/29 14:25:32 [CLIENT] executor 3 has 3 replies
2023/03/29 14:25:32 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/29 14:25:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/29 14:25:32 [SERVER] executor 0 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 1 has 0 replies
2023/03/29 14:25:32 [SERVER] executor 2 has 4 replies
time breakdown 2: 16, 4, 0
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 2166 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/29 14:25:32 ------- fuzzer executor 2 receive 242 signal and 0 cover from userspace component
time breakdown 1: 20, 4, 0
before receive testcase: 0 1
2023/03/29 14:25:32 fsMds: [map[] map[] map[] map[]]
2023/03/29 14:25:32 ----- no new client coverage: false, true
2023/03/29 14:25:32 mutate testcase with failures
2023/03/29 14:25:32 ----- mutateArg()
2023/03/29 14:25:32 HasCrashFail: false, .HasNetFail: false
2023/03/29 14:25:32 prog length: 11
2023/03/29 14:25:32 HasCrashFail:false HasNetFail:false
14:25:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000140)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$lock(r1, 0x26, &(0x7f0000000040)={0x0, 0x1, 0x1f, 0x2e5})
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x60)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x1, 0x2, 0xff, 0x40})
r3 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r4 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r4, 0x6, &(0x7f0000000080)={0x0, 0x2, 0x7f14, 0x9})
flock(r3, 0x6)
dup2(r0, 0xffffffffffffffff)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2168
remove dir: /root/cephfs-client/dfs-0-42
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-43 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-43
receive_execute: 3, 6
receive_execute: 2, 5
receive_execute: 1, 6
receive_execute: 2, 5
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 317, pid 699, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 317, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 699, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 324, pid 699, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 3 signal number : 12
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 699, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 699, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 3
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 699, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 12
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 699, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1

VM DIAGNOSIS:
14:25:28  Registers:
info registers vcpu 0
RAX=ffffffff81d3b3f0 RBX=0000000000000000 RCX=0000000000000000 RDX=ff1100026562e7e0
RSI=ffffffff82607e30 RDI=000000000002269c RBP=ffffffff82619280 RSP=ffffffff82607ea0
R8 =000000000002269b R9 =0000000000000000 R10=0000000000000000 R11=0000000000000000
R12=ffffffff82619280 R13=ffffffff82619280 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81d3b3fb RFL=00000206 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffc88 CR3=000000010fa6a005 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=00000000000000000000ffffffffff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=000000000000001f0000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032fa RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=000000010ec6e003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=000000000000001f0000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
