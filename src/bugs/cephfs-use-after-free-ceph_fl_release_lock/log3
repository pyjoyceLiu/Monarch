xecute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 3767, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 25, pid 3767, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 25, flag collect 0
----- executor 3 signal number : 22
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 2, 1
execute_one time: 1, 6
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 443, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13627, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1464
----- executor 2 executes write_coverage_signal cov->size 9073, flag collect 0
----- executor 2 signal number : 924
time breakdown 1: 16, 9, 0
----- executor 2 executes write_coverage_signal cov->size 17598, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 5773
----- executor 2 executes write_coverage_signal cov->size 2199, flag collect 0
----- executor 2 signal number : 322
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 29963, flag collect 0
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 11, 0
----- executor 2 signal number : 1941
----- executor 2 executes write_coverage_signal cov->size 16942, flag collect 0
----- executor 2 signal number : 4287
executor 2 server cover_cnt 8 output_pos_value 14806
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:13 wg wait finish
2023/03/27 22:20:13 ------ all executors finish execution
2023/03/27 22:20:13 exec time: 23
2023/03/27 22:20:13 ----- PS len: 4
time breakdown 2: 12, 14, 0
2023/03/27 22:20:13 [CLIENT] executor 3 has 8 replies
2023/03/27 22:20:13 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/27 22:20:13 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:13 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/27 22:20:13 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:13 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 1464 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 924 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 5773 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 322 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 1941 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 4287 signal and 0 cover from userspace component
time breakdown 3: 17, 8, 0
before receive testcase: 0 0
2023/03/27 22:20:13 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:13 ----- no new client coverage: false, true
2023/03/27 22:20:13 mutate testcase with failures
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 3764 symlink symlink
2023/03/27 22:20:13 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:13 prog length: 4
2023/03/27 22:20:13 HasCrashFail:false HasNetFail:false
22:20:13 ---executing program 0:
---
---
---
stat(&(0x7f00000000c0)='./file0\x00', 0x0)
symlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
open$dir(&(0x7f0000000080)='./file0\x00', 0x20840, 0x0)
symlink(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/cephfs-client/dfs-0-941
remove dir time 5
-----finish removing dir
receive_execute: 4, 7
receive_execute: 6, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
receive_execute: 9, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-942 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-942
receive_execute: 10, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3770, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 3770, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 369
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3770, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3770, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 0, 2
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 17, 2, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1266
----- executor 2 executes write_coverage_signal cov->size 10100, flag collect 0
----- executor 2 signal number : 4450
----- executor 2 executes write_coverage_signal cov->size 6185, flag collect 0
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 4, 0
before receive testcase: 0 0
----- executor 2 signal number : 533
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 4, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 6325
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:13 wg wait finish
2023/03/27 22:20:13 ------ all executors finish execution
2023/03/27 22:20:13 exec time: 12
2023/03/27 22:20:13 ----- PS len: 4
2023/03/27 22:20:13 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:13 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:13 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:13 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:13 fuzzer receive 369 signal and 0 cover from executor 3
2023/03/27 22:20:13 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:13 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 1266 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 4450 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
time breakdown 2: 11, 4, 0
2023/03/27 22:20:13 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:13 ----- no new client coverage: false, true
2023/03/27 22:20:13 mutate testcase with failures
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 2458 open open
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:13 prog length: 5
2023/03/27 22:20:13 HasCrashFail:false HasNetFail:false
22:20:13 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x250002, 0x144)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r0 = open(&(0x7f0000000040)='./file0\x00', 0x60080, 0x40)
pwrite64(r0, &(0x7f0000000140)="cd", 0x1, 0x0)
pwrite64(r0, &(0x7f0000001140)='T', 0x1, 0x0)
---

end of program
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 784
remove dir: /root/cephfs-client/dfs-0-942
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 9
-----finish removing dir
receive_execute: 2, 12
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-943 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-943
receive_execute: 4, 12
receive_execute: 2, 12
receive_execute: 3, 12
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3773, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 3773, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 471
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3773, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 11
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3773, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3773, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 4
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 6, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4294, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11598, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4904
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 527
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 6792
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 7, 0
before receive testcase: 0 0
2023/03/27 22:20:13 for select break: 1
2023/03/27 22:20:13 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:13 wg wait finish
2023/03/27 22:20:13 ------ all executors finish execution
2023/03/27 22:20:13 exec time: 20
2023/03/27 22:20:13 ----- PS len: 4
2023/03/27 22:20:13 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:13 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:13 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:13 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:13 fuzzer receive 47 signal and 0 cover from executor 3
time breakdown 2: 14, 8, 0
2023/03/27 22:20:13 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 4904 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:20:13 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/27 22:20:13 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:13 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:13 ----- no new client coverage: false, true
2023/03/27 22:20:13 mutate testcase with failures
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 131 close close
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 3985 write write
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 ----- mutateArg()
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 4200 writev writev
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 248 fstat fstat
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 3985 write write
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 131 close close
2023/03/27 22:20:13 ----- insertCall()
2023/03/27 22:20:13 ----- generateCall 131 close close
2023/03/27 22:20:13 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:13 prog length: 15
2023/03/27 22:20:13 HasCrashFail:false HasNetFail:false
22:20:13 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x145641, 0x0)
write$binfmt_misc(r0, &(0x7f00000000c0)=ANY=[], 0xc4)
write(r0, &(0x7f0000000400)="86b0e3c9d30cb8e3a66b57c4c2aec4379508ca314a404bce983f7d0ca7316afd94203f", 0x23)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x38282, 0x80)
r2 = dup2(r1, r1)
write(r2, &(0x7f0000000240)="5292ea4db5c6c2c5af3ed96dcb9dc82df03ebce5b6fbdefa5e2fc208a62b397c27e028fd40c2c3cc75c6bbf650e4385f6d696c208d35d2b5b12d5e1c1c310d4d13ec687ddce81bd3eb78c34a4c8bc002970492f622dc8a891ccbe85ab8a9892c9e8aab785ced352ed5b6f554af475122cf4e49912c15a784b4e79aacec738ed33de8d7292862a1e988445c51c226359ef669aaef0d64f0eda603dfcd7464b1f5d5dda6c4be381bf33b38586ae7a60997d8e35d7ac7219c78611dc817d5917b92b1c5d4f3c5", 0xc5)
r3 = openat(r1, &(0x7f0000000340)='./file1\x00', 0x551c80, 0x134)
fstat(r3, &(0x7f0000000380))
r4 = openat(0xffffffffffffffff, &(0x7f00000000c0)='./file1\x00', 0x511040, 0x40)
close(r4)
writev(r4, &(0x7f0000000200)=[{&(0x7f0000000140)="c36cf46f483f0bbb2dc62a627a257cb29a1860c80b36acb9f79b0b915f63fe9d76677251ee4cc6cf7cc704e979d0b9a9f6e3dfab5294331b5517419e98d18b64230b56a91f0a82c07d0c32dd26e4e33312cac4f1ea2ffc3b41ef882547a22e384babc337f71b31c09c66cf46fcdfb9d5367e9c0ff0ae967d07bfc06d41636adc31e6a52d042df6bf239f331c787e605b", 0x90}], 0x1)
close(r0)
write$binfmt_misc(r1, &(0x7f0000000040)=ANY=[], 0x4)
writev(r0, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x1}], 0x1)
close(r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2480
remove dir: /root/cephfs-client/dfs-0-943
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-944 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-944
receive_execute: 5, 12
receive_execute: 3, 13
receive_execute: 4, 12
receive_execute: 4, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 623, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 1329, pid 3776, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1329, flag collect 0
----- executor 3 signal number : 968
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 1092, pid 3776, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1092, flag collect 0
----- executor 3 signal number : 4
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 50, pid 3776, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 50, flag collect 0
----- executor 3 signal number : 33
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3776, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 21
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 25, 0
execute_one time: 1, 41
2023/03/27 22:20:14 for select break: 1
time breakdown 3: 17, 43, 0
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 762, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1431
----- executor 2 executes write_coverage_signal cov->size 20857, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 44, 0
before receive testcase: 0 0
----- executor 2 signal number : 1022
----- executor 2 executes write_coverage_signal cov->size 29854, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 45, 0
before receive testcase: 0 0
----- executor 2 signal number : 7048
----- executor 2 executes write_coverage_signal cov->size 1853, flag collect 0
----- executor 2 signal number : 321
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 1984
----- executor 2 executes write_coverage_signal cov->size 24396, flag collect 0
----- executor 2 signal number : 5407
executor 2 server cover_cnt 8 output_pos_value 17309
time breakdown 2: 16, 47, 0
before receive testcase: 0 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 66
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 15 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 fuzzer receive 968 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1431 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1022 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7048 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 321 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1984 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5407 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 3
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
lsetxattr$security_ima(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), 0x0, 0x0, 0x0)
listxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=""/132, 0x84)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 488
remove dir: /root/cephfs-client/dfs-0-944
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-945 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-945
receive_execute: 13, 7
receive_execute: 9, 7
receive_execute: 14, 7
receive_execute: 12, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3779, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 3779, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 164
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 122, pid 3779, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 122, flag collect 0
----- executor 3 signal number : 12
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 4172, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 11313, flag collect 0
----- executor 2 signal number : 4689
----- executor 2 executes write_coverage_signal cov->size 7113, flag collect 0
----- executor 2 signal number : 522
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 6, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 6551
time breakdown 0: 19, 7, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 15
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 22:20:14 [CLIENT] executor 3 has 3 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4689 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 522 signal and 0 cover from userspace component
time breakdown 2: 16, 8, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
time breakdown 3: 21, 5, 0
before receive testcase: 0 0
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3967 truncate truncate
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 4
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open(&(0x7f00000001c0)='./file0\x00', 0x121041, 0x0)
write$binfmt_script(r0, 0x0, 0x1012)
fcntl$setflags(r0, 0x2, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x7f)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/cephfs-client/dfs-0-945
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-946 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-946
receive_execute: 4, 27
receive_execute: 1, 27
receive_execute: 2, 27
receive_execute: 2, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 3782, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 345, pid 3782, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 345, flag collect 0
----- executor 3 signal number : 276
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3782, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 278, pid 3782, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 278, flag collect 0
----- executor 3 signal number : 111
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 31, 4, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4251, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11962, flag collect 0
----- executor 2 signal number : 5009
2023/03/27 22:20:14 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 8540, flag collect 0
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 29, 5, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 5, 0
----- executor 2 signal number : 584
executor 2 server cover_cnt 4 output_pos_value 6935
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 34
2023/03/27 22:20:14 ----- PS len: 4
time breakdown 2: 28, 7, 0
2023/03/27 22:20:14 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:14 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 276 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 4 replies
before receive testcase: 0 0
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5009 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 584 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 111 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:14 ----- insertCall()
before receive testcase: 0 0
2023/03/27 22:20:14 ----- generateCall 2373 mkdir mkdir
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 7
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x111040, 0x0)
open$dir(&(0x7f0000000000)='./file0\x00', 0x8000, 0x20)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x40202, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x8480, 0x41)
fchmod(r0, 0x8707983954862d20)
mkdir(&(0x7f0000000080)='./file0\x00', 0x8b)
lchown(&(0x7f0000000200)='./file0\x00', 0x0, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 896
remove dir: /root/cephfs-client/dfs-0-946
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
receive_execute: 2, 12
receive_execute: 3, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-947 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-947
receive_execute: 5, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3784, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 3784, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 4, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 1037, pid 3784, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1037, flag collect 0
----- executor 3 signal number : 221
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3784, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 3784, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 68
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3784, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 237, pid 3784, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 237, flag collect 0
----- executor 3 signal number : 11
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 8, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12413, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 22195, flag collect 0
----- executor 2 signal number : 1026
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
time breakdown 1: 16, 9, 0
before receive testcase: 0 0
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 7747
----- executor 2 executes write_coverage_signal cov->size 4519, flag collect 0
----- executor 2 signal number : 382
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2203
----- executor 2 executes write_coverage_signal cov->size 18297, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 27
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 7 replies
2023/03/27 22:20:14 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 221 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1026 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7747 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 382 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2203 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4193 signal and 0 cover from userspace component
----- executor 2 signal number : 4193
executor 2 server cover_cnt 8 output_pos_value 17035
time breakdown 2: 14, 15, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 3
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
rmdir(&(0x7f0000000040)='./file1\x00')
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00', 0x40000, 0x1aa)
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 368
remove dir: /root/cephfs-client/dfs-0-947
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 3, 7
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-948 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-948
receive_execute: 10, 8
receive_execute: 9, 7
receive_execute: 9, 8
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3787, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3787, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 3787, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 359
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 7, 2, 0
execute_one time: 0, 9
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 510, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10243, flag collect 0
executor 1 write_server_output
time breakdown 3: 18, 11, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1279
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 12, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 6795
----- executor 2 executes write_coverage_signal cov->size 1380, flag collect 0
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 25346, flag collect 0
----- executor 2 signal number : 668
executor 2 server cover_cnt 5 output_pos_value 9121
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
time breakdown 2: 10, 16, 0
before receive testcase: 0 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 23
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 3 replies
2023/03/27 22:20:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1279 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 6795 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 668 signal and 0 cover from userspace component
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 fuzzer receive 359 signal and 0 cover from executor 3
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 170 dup dup
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 239 fsetxattr$trusted_overlay_nlink fsetxattr$trusted_overlay_nlink
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 9
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lseek(r0, 0x0, 0x4)
r1 = dup2(r0, r0)
r2 = openat(r1, &(0x7f0000000000)='./file0\x00', 0x2, 0x114)
dup(r0)
openat(r2, &(0x7f0000000040)='./file0\x00', 0x3, 0x15)
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000100), &(0x7f0000000140)={'L-', 0x4}, 0x16, 0x1)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x2a02, 0x140)
symlinkat(&(0x7f0000000180)='./file0\x00', r2, &(0x7f00000001c0)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1464
remove dir: /root/cephfs-client/dfs-0-948
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 6
executor 3 create dir /root/cephfs-client/dfs-0-949 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-949
receive_execute: 2, 16
receive_execute: 7, 16
receive_execute: 5, 16
receive_execute: 6, 16
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
executor 3 before execute_one
execute_one time: 0, 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 3790, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 3790, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 7
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3790, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3790, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3790, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3790, write pid:-2127041486
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 180, pid 3790, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 3 signal number : 130
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 854, pid 3790, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 854, flag collect 0
----- executor 3 signal number : 275
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3790, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 21, 1, 0
execute_one time: 0, 22
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 23, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10736, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1395
----- executor 2 executes write_coverage_signal cov->size 10380, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 23, 0
before receive testcase: 0 0
----- executor 2 signal number : 985
----- executor 2 executes write_coverage_signal cov->size 17703, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 25, 0
before receive testcase: 0 0
----- executor 2 signal number : 5914
----- executor 2 executes write_coverage_signal cov->size 1098, flag collect 0
----- executor 2 signal number : 284
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 22747, flag collect 0
----- executor 2 signal number : 1708
----- executor 2 executes write_coverage_signal cov->size 12009, flag collect 0
----- executor 2 signal number : 2938
executor 2 server cover_cnt 8 output_pos_value 13319
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 44
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 9 replies
2023/03/27 22:20:14 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 275 signal and 0 cover from executor 3
time breakdown 2: 18, 28, 0
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1395 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 985 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5914 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1708 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2938 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 19
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
r0 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x480243, 0x62)
symlinkat(&(0x7f0000000100)='./file0\x00', r0, &(0x7f0000000200)='./file0\x00')
fsetxattr$trusted_overlay_redirect(r0, &(0x7f00000006c0), &(0x7f0000000700)='./file0\x00', 0x8, 0x0)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x111500, 0x144)
r2 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
lsetxattr$smack_xattr_label(&(0x7f0000000440)='./file0/file0\x00', &(0x7f0000000480)='security.SMACK64\x00', &(0x7f00000000c0)=ANY=[@ANYBLOB="005200a86047bf4c914800000000002ab29fae0e6ea1005f23d72f98"], 0x3, 0x1)
chdir(&(0x7f0000000340)='./file0\x00')
r3 = open(&(0x7f0000000240)='./file0\x00', 0x0, 0xd8)
fcntl$getownex(r3, 0x10, &(0x7f0000000280))
r4 = open$dir(&(0x7f00000002c0)='./file0/file0\x00', 0x240080, 0x1af)
renameat(r4, &(0x7f0000000540)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
r5 = open$dir(&(0x7f0000000500)='./file0\x00', 0x212e40, 0xf0)
lgetxattr(&(0x7f00000004c0)='./file0/file0\x00', &(0x7f0000000580)=@known='security.apparmor\x00', &(0x7f00000005c0)=""/253, 0xfd)
read(r2, &(0x7f0000000380)=""/163, 0xa3)
openat(r0, &(0x7f0000000800)='./file0/file0\x00', 0x40, 0x4)
lsetxattr$user(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0)='\x00', 0x1, 0x2)
mkdirat(r5, &(0x7f0000000300)='./file0\x00', 0x108)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3312
remove dir: /root/cephfs-client/dfs-0-949
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-950 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-950
receive_execute: 7, 8
receive_execute: 3, 7
receive_execute: 7, 8
receive_execute: 6, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 0, execute_one inner time: 1, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3793, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 3, 0
execute_one time: 0, 6
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 15, 8, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 319, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8126, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1270
----- executor 2 executes write_coverage_signal cov->size 22872, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 9, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 10, 0
----- executor 2 signal number : 5341
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 16589, flag collect 0
----- executor 2 signal number : 582
executor 2 server cover_cnt 5 output_pos_value 7284
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 20
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 19 replies
2023/03/27 22:20:14 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 10, 13, 0
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:14 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1270 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5341 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 582 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 5
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x35)
open$dir(&(0x7f0000000000)='./file1\x00', 0x200, 0x0)
setxattr$user(&(0x7f0000000040)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000180)='skstem.posix_acl_access\x00', 0x18, 0x3)
r0 = open(&(0x7f0000000140)='./file1\x00', 0x141042, 0x51)
fsetxattr$system_posix_acl(r0, &(0x7f0000000080)='system.posix_acl_access\x00', &(0x7f0000000480)={{}, {}, [], {}, [], {}, {0x20, 0x4}}, 0x24, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1448
remove dir: /root/cephfs-client/dfs-0-950
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
receive_execute: 2, 24
receive_execute: 5, 25
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-951 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-951
receive_execute: 6, 25
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 25
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 3796, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 3796, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 201
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 3796, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 132
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 3796, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 86
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 480, pid 3796, write pid:-2126518517
----- executor 3 executes write_coverage_signal cov->size 480, flag collect 0
----- executor 3 signal number : 102
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 5, 0
execute_one time: 1, 10
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 31, 28, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 831, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 22600, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 27509, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 30, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 1068
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 7331
----- executor 2 executes write_coverage_signal cov->size 3591, flag collect 0
----- executor 2 signal number : 382
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 29, 30, 0
before receive testcase: 0 0
----- executor 2 signal number : 1881
----- executor 2 executes write_coverage_signal cov->size 23194, flag collect 0
----- executor 2 signal number : 4789
executor 2 server cover_cnt 8 output_pos_value 16952
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 59
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:14 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 132 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
time breakdown 2: 26, 34, 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1068 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7331 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 382 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1881 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4789 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3761 stat stat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 20
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)=ANY=[@ANYBLOB="d08495160608af9b00"/22], 0x16, 0x0)
stat(&(0x7f0000000800)='./file0/file1\x00', &(0x7f0000000840))
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000340)='./file0\x00', 0x8)
lsetxattr$user(&(0x7f0000000040)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='+@\xd7\x00', 0x4, 0x0)
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$security_capability(&(0x7f0000000580)='./file0/file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@v1={0x1000000, [{0x38, 0x4}]}, 0xc, 0x0)
stat(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380))
stat(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
readlink(&(0x7f0000000500)='./file1\x00', &(0x7f0000000700)=""/94, 0x5e)
lsetxattr$system_posix_acl(&(0x7f00000004c0)='./file0/file1\x00', &(0x7f0000000180)='system.posix_acl_default\x00', &(0x7f0000000640)=ANY=[@ANYBLOB="02000000010004000000000002000200", @ANYBLOB="98cd01f1", @ANYBLOB="02000700", @ANYRES64=0x0, @ANYBLOB="02000200", @ANYRESDEC, @ANYBLOB="02000700", @ANYRES32=r1, @ANYBLOB='\x00m+\x00', @ANYRES32=r2, @ANYBLOB="040003000000000008000100", @ANYBLOB="c304453f18996acafe8b49603f0947c239c1cb86c843033784c2a3a969358839e412f3b2b4c53c", @ANYBLOB="088d0f0000379bb9833ef6eb289c6fef1e2177ff7c57d7a3", @ANYRES32=0x0, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB="08000300", @ANYRES32=r3, @ANYBLOB="10000000000000002000020000000000"], 0x6c, 0x2)
setxattr$trusted_overlay_origin(&(0x7f0000000540)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x2, 0x1)
open$dir(&(0x7f0000000040)='./file0\x00', 0xe703, 0x0)
chdir(&(0x7f0000000140)='./file0/file1\x00')
truncate(&(0x7f0000000500)='./file0\x00', 0x0)
fstat(r0, &(0x7f0000000240))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4264
remove dir: /root/cephfs-client/dfs-0-951
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
receive_execute: 4, 7
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-952 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-952
receive_execute: 10, 7
receive_execute: 9, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 7
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 620, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 459, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 459, flag collect 0
----- executor 3 signal number : 55
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 12
----- completed 7
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 476, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 451, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 451, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1003, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1003, flag collect 0
----- executor 3 signal number : 152
----- completed 17
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 3799, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 23
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 3799, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 1
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 19, 9, 0
execute_one time: 1, 28
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 31, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1727, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1446
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 1070
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 7944
----- executor 2 executes write_coverage_signal cov->size 1322, flag collect 0
----- executor 2 signal number : 190
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1441
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6747
executor 2 server cover_cnt 7 output_pos_value 18927
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
time breakdown 2: 11, 36, 0
2023/03/27 22:20:14 exec time: 43
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 20 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:14 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 152 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 2 has 7 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1446 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1070 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7944 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 190 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1441 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 6747 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2374 mkdirat mkdirat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 3
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0)=@known='security.selinux\x00', &(0x7f0000000200)=""/125, 0x7d)
mkdirat(0xffffffffffffff9c, &(0x7f0000000000)='./file1\x00', 0x80)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/cephfs-client/dfs-0-952
remove dir time 6
-----finish removing dir
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-953 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-953
receive_execute: 10, 11
receive_execute: 7, 12
receive_execute: 8, 11
receive_execute: 4, 11
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 3803, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 169, pid 3803, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 169, flag collect 0
----- executor 3 signal number : 86
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 3803, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 45
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 21, 5, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3087, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 12644, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 6306, flag collect 0
time breakdown 0: 19, 6, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 881
----- executor 2 executes write_coverage_signal cov->size 18770, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 7, 0
----- executor 2 signal number : 5432
----- executor 2 executes write_coverage_signal cov->size 6554, flag collect 0
----- executor 2 signal number : 402
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2474
----- executor 2 executes write_coverage_signal cov->size 22661, flag collect 0
----- executor 2 signal number : 1251
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 852
----- executor 2 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 2 signal number : 12
executor 2 server cover_cnt 9 output_pos_value 12781
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 24
2023/03/27 22:20:14 ----- PS len: 4
time breakdown 2: 15, 13, 0
2023/03/27 22:20:14 [CLIENT] executor 3 has 3 replies
2023/03/27 22:20:14 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 86 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:14 [SERVER] executor 2 has 9 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 881 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5432 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 402 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2474 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1251 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 852 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 20
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
fsetxattr$security_ima(r0, &(0x7f0000000140), 0x0, 0x0, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
fsync(r1)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000000540)='./cgroup.net/syz1\x00', 0x1ff)
faccessat(0xffffffffffffffff, &(0x7f0000000140)='./file1\x00', 0x80)
lchown(&(0x7f0000000000)='.\x00', 0x0, 0xee01)
setxattr$incfs_id(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0)={'0000000000000000000000000000000', 0x33}, 0x20, 0x2)
fcntl$setflags(0xffffffffffffffff, 0x2, 0x1)
lsetxattr$security_ima(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@sha1={0x1, "51dab1826b5617c4ec919823805749f6255311bf"}, 0x15, 0x3)
mkdir(&(0x7f0000000240)='./file1\x00', 0x20)
open(&(0x7f0000000280)='./file0\x00', 0x40, 0x1c0)
lremovexattr(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300)=@known='user.incfs.id\x00')
r2 = open$dir(&(0x7f0000000040)='./file0\x00', 0x800, 0x100)
fcntl$getownex(r2, 0x10, &(0x7f00000000c0))
setxattr$smack_xattr_label(&(0x7f0000000480)='./file2\x00', &(0x7f00000004c0)='security.SMACK64IPOUT\x00', &(0x7f0000000700)=ANY=[@ANYBLOB="73656175726974792e696d6100006347a3d0bfcf02db7a980c30ce8adda0bd005bf6bc1b306cdad386ef07c41aaff1ade3b93bae0000006a06006bd9632179d325485871d5d971b9a0aa00c86a0a"], 0xe, 0x1)
rename(&(0x7f0000000080)='./file2\x00', &(0x7f0000000100)='./file2\x00')
fstat(r2, &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000640)='./file2\x00', &(0x7f0000000680)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
chown(&(0x7f0000000580)='./file1\x00', r3, r4)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3384
remove dir: /root/cephfs-client/dfs-0-953
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-954 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-954
receive_execute: 4, 33
receive_execute: 9, 34
receive_execute: 10, 34
receive_execute: 2, 35
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 476
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 176, pid 3806, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 176, flag collect 0
----- executor 3 signal number : 128
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3806, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 322, pid 3806, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 322, flag collect 0
----- executor 3 signal number : 201
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 87
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 631, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 631, flag collect 0
----- executor 3 signal number : 3
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 14
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 3806, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 3806, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 39
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 923, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 14160, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1393
----- executor 2 executes write_coverage_signal cov->size 23288, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1123
time breakdown 1: 37, 13, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 43, 14, 0
----- executor 2 signal number : 7787
----- executor 2 executes write_coverage_signal cov->size 596, flag collect 0
----- executor 2 signal number : 258
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 44, 12, 0
before receive testcase: 0 1
----- executor 2 signal number : 1744
----- executor 2 executes write_coverage_signal cov->size 13923, flag collect 0
----- executor 2 signal number : 2217
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 14620
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 53
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [CLIENT] executor 3 has 20 replies
2023/03/27 22:20:14 fuzzer receive 476 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
time breakdown 2: 37, 18, 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1393 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1123 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7787 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 258 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1744 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2217 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3761 stat stat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 17
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f00000002c0)='./file2\x00', 0x8, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$setsig(r1, 0xa, 0x6)
fstat(0xffffffffffffffff, &(0x7f0000000540))
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
stat(&(0x7f00000005c0)='\x00', &(0x7f0000000600))
rename(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480)='./file4\x00')
read(r1, &(0x7f0000000300)=""/66, 0x42)
open$dir(&(0x7f0000000380)='./file3\x00', 0x30000, 0x8)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
r2 = open(&(0x7f00000001c0)='./file2\x00', 0x1, 0x4)
r3 = open$dir(&(0x7f00000003c0)='./file0\x00', 0x501080, 0x2)
dup2(r2, r3)
readlinkat(r1, 0xfffffffffffffffc, &(0x7f00000004c0)=""/111, 0x6f)
lsetxattr$security_selinux(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2536
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-954
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-955 successfully
receive_execute: 9, 10
receive_execute: 8, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 3: /root/cephfs-client/dfs-0-955
receive_execute: 10, 10
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 659, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 150
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 28
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 388, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 388, flag collect 0
----- executor 3 signal number : 93
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3811, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 763, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 8193, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 592
----- executor 2 executes write_coverage_signal cov->size 19621, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 19, 10, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 1112
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7430
----- executor 2 executes write_coverage_signal cov->size 7369, flag collect 0
before receive testcase: 0 0
time breakdown 3: 20, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 488
----- executor 2 executes write_coverage_signal cov->size 27225, flag collect 0
----- executor 2 signal number : 1637
executor 2 server cover_cnt 6 output_pos_value 11347
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 26
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 17 replies
2023/03/27 22:20:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 6 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 592 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1112 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7430 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 488 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1637 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 28 signal and 0 cover from executor 3
time breakdown 2: 13, 16, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 4
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x141ac1, 0x0)
link(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)='./file0\x00')
open$dir(&(0x7f0000000080)='./file1\x00', 0x200001, 0x99)
write$binfmt_misc(r0, &(0x7f00000015c0)={'syz1'}, 0x4)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 616
remove dir: /root/cephfs-client/dfs-0-955
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-956 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-956
receive_execute: 9, 15
receive_execute: 4, 13
receive_execute: 7, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 8, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 623, pid 3818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 571, pid 3818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 3 signal number : 93
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3818, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1316, pid 3818, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1316, flag collect 0
----- executor 3 signal number : 973
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 0, 9
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10135, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 12116, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 11, 0
time breakdown 3: 24, 10, 0
before receive testcase: 0 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 962
----- executor 2 executes write_coverage_signal cov->size 25520, flag collect 0
----- executor 2 signal number : 6810
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28648, flag collect 0
----- executor 2 signal number : 1785
----- executor 2 executes write_coverage_signal cov->size 14580, flag collect 0
time breakdown 0: 23, 12, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 3598
executor 2 server cover_cnt 8 output_pos_value 14646
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 32
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:14 fuzzer receive 478 signal and 0 cover from executor 3
time breakdown 2: 17, 17, 0
before receive testcase: 0 1
2023/03/27 22:20:14 fuzzer receive 93 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 973 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 962 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 6810 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1785 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3598 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2341 lchown lchown
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 5
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
lchown(&(0x7f0000000040)='./file0\x00', 0xee00, 0xee00)
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
truncate(&(0x7f0000000500)='./file0\x00', 0x401)
fstat(r0, &(0x7f0000000240))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 600
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-956
remove dir time 19
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-957 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-957
receive_execute: 13, 20
receive_execute: 6, 20
receive_execute: 11, 20
receive_execute: 12, 20
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 85, pid 3821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 3821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 471
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 3821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 177
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 3821, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 3
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 3821, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 4, 0
execute_one time: 1, 14
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 799, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 25097, flag collect 0
----- executor 2 signal number : 1425
----- executor 2 executes write_coverage_signal cov->size 22978, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 31, 18, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 32, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 1007
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7122
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 33, 17, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
----- executor 2 signal number : 2142
----- executor 2 executes write_coverage_signal cov->size 21780, flag collect 0
----- executor 2 signal number : 5251
executor 2 server cover_cnt 8 output_pos_value 17052
2023/03/27 22:20:14 exec time: 42
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 471 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1425 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1007 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7122 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 26, 22, 0
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2142 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5251 signal and 0 cover from userspace component
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2458 open open
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2809 rename rename
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 7
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x4, 0x1)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x20040, 0x100)
rename(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='./file0\x00')
openat(r0, &(0x7f0000000280)='./file0\x00', 0x553400, 0x4)
open(&(0x7f0000000040)='./file0\x00', 0x100, 0xa1)
fchown(r0, 0x0, 0x0)
lsetxattr$security_selinux(&(0x7f0000000100)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:random_device_t:s0\x00', 0x25, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1336
remove dir: /root/cephfs-client/dfs-0-957
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-958 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-958
receive_execute: 9, 7
receive_execute: 4, 7
receive_execute: 8, 7
receive_execute: 8, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 3824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 471
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 10
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 3824, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 0
----- executor 3 signal number : 140
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 232, pid 3824, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 232, flag collect 0
----- executor 3 signal number : 65
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11665, flag collect 0
----- executor 2 signal number : 4905
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
time breakdown 0: 15, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 5 output_pos_value 6794
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 15
2023/03/27 22:20:14 ----- PS len: 4
time breakdown 2: 11, 8, 0
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [CLIENT] executor 3 has 7 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 5 replies
time breakdown 1: 15, 7, 0
2023/03/27 22:20:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 471 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:14 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:14 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4905 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 214 fcntl$setsig fcntl$setsig
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 199 fcntl$F_GET_RW_HINT fcntl$F_GET_RW_HINT
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 8
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0xe703, 0x0)
r2 = dup2(r1, r0)
fcntl$setsig(r0, 0xa, 0xe)
fsetxattr$trusted_overlay_redirect(r2, &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x3)
r3 = fcntl$dupfd(r1, 0x406, r2)
fcntl$F_GET_RW_HINT(r3, 0x40b, &(0x7f0000000000))
fsync(r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 16, 5, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1128
remove dir: /root/cephfs-client/dfs-0-958
remove dir time 31
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-959 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-959
receive_execute: 4, 36
receive_execute: 2, 36
receive_execute: 4, 35
receive_execute: 2, 36
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 3828, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 3828, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 290
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 3828, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3828, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 120, pid 3828, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 3 signal number : 61
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3828, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3828, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 181, pid 3828, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 181, flag collect 0
----- executor 3 signal number : 108
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 0, 0
execute_one time: 1, 8
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 444, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 12985, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 11852, flag collect 0
----- executor 2 signal number : 990
----- executor 2 executes write_coverage_signal cov->size 17999, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 12, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 5886
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 26094, flag collect 0
----- executor 2 signal number : 1867
----- executor 2 executes write_coverage_signal cov->size 11454, flag collect 0
----- executor 2 signal number : 2765
executor 2 server cover_cnt 7 output_pos_value 12996
time breakdown 3: 40, 11, 0
before receive testcase: 0 1
time breakdown 1: 38, 12, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 50
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 8 replies
2023/03/27 22:20:14 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 290 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 61 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 38, 14, 0
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 7 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 990 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5886 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1867 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2765 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2458 open open
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2809 rename rename
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 5
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
dup2(r1, r0)
rename(&(0x7f0000000080)='./file0/file0\x00', &(0x7f00000000c0)='./file0\x00')
open(&(0x7f0000000000)='./file0\x00', 0x410000, 0x0)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 720
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-959
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-960 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-960
receive_execute: 7, 8
receive_execute: 6, 9
receive_execute: 5, 9
receive_execute: 3, 9
executor 2 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 3832, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3832, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 3832, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3832, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3832, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4253, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11994, flag collect 0
----- executor 2 signal number : 5000
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 8211, flag collect 0
time breakdown 0: 15, 4, 0
----- executor 2 signal number : 583
before receive testcase: 0 1
executor 2 server cover_cnt 4 output_pos_value 6925
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 14, 6, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 15
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5000 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 583 signal and 0 cover from userspace component
time breakdown 2: 12, 6, 0
2023/03/27 22:20:14 fuzzer receive 478 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:14 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 3: 15, 4, 0
before receive testcase: 0 1
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3761 stat stat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 3
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x139240, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x242, 0x21)
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 392
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-960
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-961 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-961
receive_execute: 5, 16
receive_execute: 4, 16
receive_execute: 2, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
receive_execute: 3, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 622, pid 3835, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1326, pid 3835, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1326, flag collect 0
----- executor 3 signal number : 353
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 3835, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 6, 2, 0
execute_one time: 1, 8
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17598, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 1401
----- executor 2 executes write_coverage_signal cov->size 23005, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1043
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 19, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7737
----- executor 2 executes write_coverage_signal cov->size 3126, flag collect 0
----- executor 2 signal number : 356
time breakdown 3: 21, 11, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2221
----- executor 2 executes write_coverage_signal cov->size 18445, flag collect 0
----- executor 2 signal number : 4213
executor 2 server cover_cnt 8 output_pos_value 17066
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 34
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 3 replies
time breakdown 2: 19, 17, 0
2023/03/27 22:20:14 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 353 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1401 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1043 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7737 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2221 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4213 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2814 rmdir rmdir
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 4
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
lsetxattr$security_ima(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), 0x0, 0x0, 0x0)
rmdir(&(0x7f0000000000)='./file0\x00')
listxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=""/132, 0x84)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 576
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-961
remove dir time 9
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-962 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-962
receive_execute: 10, 11
receive_execute: 3, 11
receive_execute: 9, 11
receive_execute: 8, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 3838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 3838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 164
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 474, pid 3838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 474, flag collect 0
----- executor 3 signal number : 42
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3838, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 636, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10078, flag collect 0
----- executor 2 signal number : 592
----- executor 2 executes write_coverage_signal cov->size 14303, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 1066
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 7, 0
before receive testcase: 0 0
time breakdown 3: 21, 4, 0
before receive testcase: 0 1
----- executor 2 signal number : 7028
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1621
----- executor 2 executes write_coverage_signal cov->size 22969, flag collect 0
----- executor 2 signal number : 3817
executor 2 server cover_cnt 8 output_pos_value 14513
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 23
2023/03/27 22:20:14 ----- PS len: 4
time breakdown 2: 14, 12, 0
2023/03/27 22:20:14 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:14 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 592 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1066 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7028 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1621 signal and 0 cover from userspace component
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3817 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 171 dup2 dup2
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2341 lchown lchown
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 8
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x0)
lsetxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000280), 0x0, 0x0, 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
fsync(r0)
dup2(r0, r0)
chown(&(0x7f0000000080)='./file0\x00', 0xffffffffffffffff, 0xee00)
lchown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, 0x0)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1072
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-962
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-963 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-963
receive_execute: 12, 4
receive_execute: 4, 4
receive_execute: 11, 4
receive_execute: 9, 5
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 3841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 164
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 321, pid 3841, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 3 signal number : 199
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3841, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 387, pid 3841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 387, flag collect 0
----- executor 3 signal number : 85
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 391, pid 3841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 391, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3841, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 3, 0
execute_one time: 1, 10
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 14, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1022, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 16236, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 24714, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 1063
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 7034
----- executor 2 executes write_coverage_signal cov->size 3975, flag collect 0
----- executor 2 signal number : 358
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1835
----- executor 2 executes write_coverage_signal cov->size 16666, flag collect 0
----- executor 2 signal number : 3448
executor 2 server cover_cnt 8 output_pos_value 15227
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 25
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 8 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 164 signal and 0 cover from executor 3
time breakdown 2: 8, 21, 0
2023/03/27 22:20:14 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 199 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1063 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7034 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 358 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1835 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3448 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 121 chmod chmod
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 7
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f00000000c0)='./file1\x00', 0x145241, 0x0)
r1 = open$dir(&(0x7f00000001c0)='./file1\x00', 0x0, 0x0)
fcntl$dupfd(r0, 0x0, r0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f0000000200)={0x0, 0xfb, 0x1015, 0x0, 0x20, "2968f8c9bb70ff0297b23d536a0e167b", ""}, 0x1015, 0x2)
write$binfmt_misc(r0, 0x0, 0x4)
chmod(&(0x7f0000000000)='./file1\x00', 0x70)
read(r1, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5416
remove dir: /root/cephfs-client/dfs-0-963
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-964 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-964
receive_execute: 8, 13
receive_execute: 9, 13
receive_execute: 3, 14
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3846, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1952, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4166, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
----- executor 2 executes write_coverage_signal cov->size 338, flag collect 0
----- executor 2 signal number : 245
executor 2 server cover_cnt 4 output_pos_value 3496
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 5, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 6, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 20
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 7 replies
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 245 signal and 0 cover from userspace component
time breakdown 2: 17, 6, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 171 dup2 dup2
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 2
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000140)='./file0\x00', 0x668f00, 0x4)
dup2(r0, r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 23, 4, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/cephfs-client/dfs-0-964
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
receive_execute: 1, 4
receive_execute: 3, 4
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-965 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-965
receive_execute: 4, 3
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
receive_execute: 2, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3850, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
cover_reset in execute_call
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 1: 5, 4, 0
before receive testcase: 0 1
time breakdown 0: 7, 3, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 14631, flag collect 0
----- executor 2 signal number : 810
executor 2 server cover_cnt 2 output_pos_value 881
time breakdown 2: 5, 4, 0
before receive testcase: 0 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 9
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 2 replies
2023/03/27 22:20:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 2 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 810 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2781 readlinkat readlinkat
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2458 open open
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 8
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file1\x00')
open(&(0x7f0000000100)='./file2\x00', 0x2, 0x142)
r1 = fcntl$dupfd(r0, 0x0, r0)
getdents64(r1, &(0x7f0000001540)=""/78, 0x4e)
readlinkat(r1, &(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0x0)
openat(r1, &(0x7f00000001c0)='./file1\x00', 0x240, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 7, 3, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-965
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-966 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-966
receive_execute: 3, 3
receive_execute: 1, 3
receive_execute: 2, 3
receive_execute: 2, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 519, pid 3852, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3852, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 3852, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 430, pid 3852, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 430, flag collect 0
----- executor 3 signal number : 108
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3852, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 3852, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 96
----- completed 6
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3852, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 704, pid 3852, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 3 signal number : 69
----- completed 8
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 1, 0
cover_reset in execute_call
execute_one time: 0, 18
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 6, 20, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 715, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 16778, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 20168, flag collect 0
time breakdown 0: 5, 21, 0
before receive testcase: 0 0
----- executor 2 signal number : 985
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 5, 21, 1
before receive testcase: 0 0
----- executor 2 signal number : 7393
----- executor 2 executes write_coverage_signal cov->size 4239, flag collect 0
----- executor 2 signal number : 395
----- executor 2 executes write_coverage_signal cov->size 7437, flag collect 0
----- executor 2 signal number : 932
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 797
----- executor 2 executes write_coverage_signal cov->size 31959, flag collect 0
----- executor 2 signal number : 4297
executor 2 server cover_cnt 8 output_pos_value 16281
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 30
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 8 replies
time breakdown 2: 4, 27, 0
2023/03/27 22:20:14 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 96 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 69 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 985 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7393 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 395 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 932 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 797 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4297 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 5
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x3893c0, 0x30)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x242, 0x104)
r2 = dup2(r1, r0)
fsetxattr$trusted_overlay_redirect(r2, &(0x7f0000000340), &(0x7f0000000380)='./file0\x00', 0x8, 0x3)
fsync(r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 744
remove dir: /root/cephfs-client/dfs-0-966
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-967 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-967
receive_execute: 10, 13
receive_execute: 3, 13
receive_execute: 8, 13
receive_execute: 9, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3855, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 662, pid 3855, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 3 signal number : 474
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3855, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3855, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3855, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 195, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4251, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 12606, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5085
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 7432, flag collect 0
----- executor 2 signal number : 583
2023/03/27 22:20:14 for select break: 1
executor 2 server cover_cnt 5 output_pos_value 7018
time breakdown 0: 22, 5, 0
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 6, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 19
2023/03/27 22:20:14 ----- PS len: 4
time breakdown 2: 16, 6, 0
2023/03/27 22:20:14 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:14 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:14 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:14 fuzzer receive 474 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5085 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 583 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
time breakdown 3: 23, 4, 0
before receive testcase: 0 1
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 250 fsync fsync
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 4
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x242, 0x0)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000100), 0x0, 0x0, 0x0)
fsync(r0)
setxattr$security_evm(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), &(0x7f0000000200)=ANY=[], 0x11, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
remove dir: /root/cephfs-client/dfs-0-967
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
receive_execute: 3, 10
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-968 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-968
receive_execute: 4, 11
receive_execute: 2, 11
receive_execute: 4, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 3858, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 176, pid 3858, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 176, flag collect 0
----- executor 3 signal number : 128
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 327, pid 3858, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 327, flag collect 0
----- executor 3 signal number : 205
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 303, pid 3858, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 303, flag collect 0
----- executor 3 signal number : 45
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 3, 0
execute_one time: 1, 8
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 15, 11, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14330, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 11548, flag collect 0
----- executor 2 signal number : 955
----- executor 2 executes write_coverage_signal cov->size 19123, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 12, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5988
----- executor 2 executes write_coverage_signal cov->size 3243, flag collect 0
----- executor 2 signal number : 362
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 29953, flag collect 0
----- executor 2 signal number : 1983
----- executor 2 executes write_coverage_signal cov->size 13024, flag collect 0
----- executor 2 signal number : 3231
executor 2 server cover_cnt 8 output_pos_value 14012
time breakdown 0: 14, 13, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 26
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/27 22:20:14 fuzzer receive 205 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 955 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5988 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 362 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1983 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3231 signal and 0 cover from userspace component
time breakdown 2: 14, 15, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 2
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x1cb9c0, 0x1)
fchmod(r0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 240
remove dir: /root/cephfs-client/dfs-0-968
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-969 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-969
receive_execute: 9, 7
receive_execute: 7, 7
receive_execute: 7, 8
receive_execute: 4, 8
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3861, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3861, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 82
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 16, 4, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 4249, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11664, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4884
----- executor 2 executes write_coverage_signal cov->size 1043, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 8783, flag collect 0
----- executor 2 signal number : 582
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 5, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7106
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 4, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 13
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 2 replies
2023/03/27 22:20:14 fuzzer receive 478 signal and 0 cover from executor 3
time breakdown 2: 12, 5, 0
2023/03/27 22:20:14 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 4884 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 582 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 220 flock flock
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 171 dup2 dup2
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 4
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
flock(0xffffffffffffffff, 0x0)
r0 = open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
getxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@known='system.posix_acl_default\x00', 0x0, 0x0)
dup2(r0, r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/cephfs-client/dfs-0-969
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-970 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-970
receive_execute: 4, 11
receive_execute: 3, 11
receive_execute: 3, 11
receive_execute: 3, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3863, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3863, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 485, pid 3863, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 485, flag collect 0
----- executor 3 signal number : 199
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3863, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 2, 2
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
time breakdown 3: 15, 5, 0
before receive testcase: 0 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6192, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 15388, flag collect 0
time breakdown 1: 14, 6, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5430
----- executor 2 executes write_coverage_signal cov->size 2448, flag collect 0
----- executor 2 signal number : 327
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 531
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 7, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7651
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 19
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 199 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 14, 8, 0
2023/03/27 22:20:14 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 5430 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 327 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 531 signal and 0 cover from userspace component
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2808 removexattr removexattr
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 196 fchown fchown
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 22:20:14 ----- mutateArg()
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 16
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(0x0, &(0x7f0000000240), 0x0, 0x0, 0x4)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
link(0x0, 0x0)
unlink(&(0x7f0000000000)='./file4\x00')
r0 = open(&(0x7f00000001c0)='./file3\x00', 0x0, 0x34)
r1 = openat(r0, &(0x7f0000000200)='./file4\x00', 0x420080, 0x8)
openat(r1, &(0x7f00000002c0)='./file4\x00', 0x800, 0x197)
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
symlinkat(&(0x7f0000000300)='./file3\x00', r0, &(0x7f0000000340)='./file4\x00')
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fchown(r0, r2, 0xee00)
removexattr(&(0x7f0000000040)='./file2\x00', &(0x7f0000000080)=@known='com.apple.FinderInfo\x00')
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x100)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2432
remove dir: /root/cephfs-client/dfs-0-970
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-971 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-971
receive_execute: 6, 11
receive_execute: 2, 12
receive_execute: 4, 12
receive_execute: 4, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 185
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 586, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 7
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 419, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 419, flag collect 0
----- executor 3 signal number : 33
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 4
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3866, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 5, 0
execute_one time: 2, 15
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1087, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 18727, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 25607, flag collect 0
----- executor 2 signal number : 1088
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 16, 20, 0
before receive testcase: 0 0
time breakdown 1: 15, 21, 0
----- executor 2 signal number : 7670
----- executor 2 executes write_coverage_signal cov->size 6052, flag collect 0
----- executor 2 signal number : 435
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 17, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 1655
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6520
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 18857
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 38
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 16 replies
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 185 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1088 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7670 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 435 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1655 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 6520 signal and 0 cover from userspace component
time breakdown 2: 14, 26, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 187 faccessat faccessat
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2462 openat openat
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 9
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
mkdirat(r0, &(0x7f0000000000)='./file0\x00', 0x0)
faccessat(r0, &(0x7f0000000100)='./file0\x00', 0x104)
lsetxattr$security_evm(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@ng={0x4, 0x6, "0d9cfb73426449f2bf9e33f382bcb03995e42678"}, 0x16, 0x0)
lremovexattr(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)=@random={'trusted.', '%\x00'})
setxattr$security_selinux(&(0x7f00000002c0)='./file0/file0\x00', &(0x7f0000000300), &(0x7f0000000340)='system_u:object_r:systemd_passwd_var_run_t:s0\x00', 0x2e, 0x2)
getdents64(r0, &(0x7f0000000040)=""/80, 0x50)
openat(r0, &(0x7f0000000380)='./file0/file0\x00', 0x151001, 0xf52298ab5845acef)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1800
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-971
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-972 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-972
receive_execute: 11, 16
receive_execute: 9, 16
receive_execute: 8, 16
receive_execute: 3, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 470, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 470, flag collect 0
----- executor 3 signal number : 99
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 366, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 366, flag collect 0
----- executor 3 signal number : 101
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 3869, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 139
----- completed 8
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 482, pid 3869, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 482, flag collect 0
----- executor 3 signal number : 54
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11872, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1404
----- executor 2 executes write_coverage_signal cov->size 20388, flag collect 0
----- executor 2 signal number : 983
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 24, 13, 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 13, 0
before receive testcase: 0 0
time breakdown 3: 27, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 7248
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 31792, flag collect 0
----- executor 2 signal number : 957
----- executor 2 executes write_coverage_signal cov->size 20680, flag collect 0
----- executor 2 signal number : 3964
executor 2 server cover_cnt 8 output_pos_value 14659
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:14 wg wait finish
2023/03/27 22:20:14 ------ all executors finish execution
2023/03/27 22:20:14 exec time: 34
2023/03/27 22:20:14 ----- PS len: 4
2023/03/27 22:20:14 [CLIENT] executor 3 has 9 replies
2023/03/27 22:20:14 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:14 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:14 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 983 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 7248 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 957 signal and 0 cover from userspace component
2023/03/27 22:20:14 ------- fuzzer executor 2 receive 3964 signal and 0 cover from userspace component
time breakdown 2: 19, 18, 0
before receive testcase: 0 0
2023/03/27 22:20:14 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 22:20:14 fuzzer receive 54 signal and 0 cover from executor 3
2023/03/27 22:20:14 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:14 ----- no new client coverage: false, true
2023/03/27 22:20:14 mutate testcase with failures
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 170 dup dup
2023/03/27 22:20:14 ----- insertCall()
2023/03/27 22:20:14 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:14 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:14 prog length: 14
2023/03/27 22:20:14 HasCrashFail:false HasNetFail:false
22:20:14 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
lsetxattr$security_selinux(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000380)='system_u:object_r:sendmail_exec_t:s0\x00', 0x22, 0x5)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
write(r1, &(0x7f0000000040)="9e", 0x400000)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000300), &(0x7f0000000340)={'L+', 0x1ff}, 0x16, 0x3)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000240), &(0x7f0000000280)={'L+', 0x6}, 0x16, 0x1)
chdir(&(0x7f00000002c0)='./file1\x00')
r2 = open$dir(&(0x7f00000003c0)='./file1\x00', 0x10000, 0x121)
fcntl$F_SET_RW_HINT(r2, 0x40c, &(0x7f0000000400))
dup(r1)
open$dir(&(0x7f00000004c0)='./file1\x00', 0x400, 0x2)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file0\x00', 0x8, 0x1)
unlink(&(0x7f0000000100)='./file1\x00')
write$binfmt_misc(r0, &(0x7f0000000440)={'syz0', "11142e8e646b07c351667d4d7cbc97910c834fee91f8f0fd2042e69616ded87c87c18e5738874548daf7df6e11384b41dd07a7e09a85ed8008f384f33c23e3bf797f8880d750c64a2d12f32a3e7e6d8364f43da9d90f87350bc9af800c873d94a77c57302a8a609f3d54e7"}, 0x6f)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2632
remove dir: /root/cephfs-client/dfs-0-972
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-973 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-973
receive_execute: 10, 19
receive_execute: 4, 19
receive_execute: 8, 19
receive_execute: 9, 19
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 31
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 155
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 55940, pid 3872, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 55940, flag collect 0
----- executor 3 signal number : 322
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3872, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 141, pid 3872, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 141, flag collect 0
----- executor 3 signal number : 60
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3872, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1067, pid 3872, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1067, flag collect 0
----- executor 3 signal number : 554
----- completed 14
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 8, 0
execute_one time: 1, 22
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32127, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1441
----- executor 2 executes write_coverage_signal cov->size 29715, flag collect 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 28, 24, 0
before receive testcase: 0 0
2023/03/27 22:20:14 for select break: 1
2023/03/27 22:20:14 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 25, 0
----- executor 2 signal number : 1030
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 29, 24, 0
before receive testcase: 0 1
----- executor 2 signal number : 6343
----- executor 2 executes write_coverage_signal cov->size 3240, flag collect 0
----- executor 2 signal number : 362
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1817
----- executor 2 executes write_coverage_signal cov->size 23848, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 5435
executor 2 server cover_cnt 8 output_pos_value 16523
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 50
2023/03/27 22:20:15 ----- PS len: 4
time breakdown 2: 23, 31, 0
2023/03/27 22:20:15 [CLIENT] executor 3 has 14 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1441 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 155 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 322 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1030 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6343 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 362 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 554 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1817 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 5435 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 3
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file1\x00', 0x4002, 0x5)
lsetxattr$smack_xattr_label(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
listxattr(&(0x7f0000000340)='./file1\x00', &(0x7f00000003c0)=""/27, 0x1b)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-973
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-974 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-974
receive_execute: 4, 9
receive_execute: 10, 10
receive_execute: 11, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 10
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 3877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 363
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3877, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 2, 2
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 1950, flag collect 0
----- executor 2 signal number : 1013
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 4173, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2164
----- executor 2 executes write_coverage_signal cov->size 352, flag collect 0
----- executor 2 signal number : 246
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 3498
time breakdown 1: 18, 6, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 8, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 17
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 3 replies
2023/03/27 22:20:15 fuzzer receive 363 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2164 signal and 0 cover from userspace component
time breakdown 2: 13, 8, 0
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 246 signal and 0 cover from userspace component
time breakdown 3: 21, 5, 0
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3761 stat stat
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 12
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
sync()
chmod(&(0x7f00000001c0)='./file0\x00', 0x180)
open$dir(&(0x7f0000000700)='./file0\x00', 0x121640, 0x0)
stat(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0))
lchown(&(0x7f0000000440)='./file0\x00', 0xee01, 0xee01)
open$dir(&(0x7f0000000200)='./file0\x00', 0x200a00, 0xe0)
link(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)='./file1\x00')
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
stat(&(0x7f0000000240)='./file0/file0\x00', &(0x7f00000004c0))
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x103003, 0x20)
readlinkat(r0, &(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=""/140, 0x8c)
chown(&(0x7f0000000080)='./file0\x00', 0xee00, 0xffffffffffffffff)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1512
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-974
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-975 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-975
receive_execute: 1, 3
receive_execute: 2, 2
receive_execute: 4, 3
receive_execute: 3, 3
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1883, pid 3880, write pid:-2126838430
----- executor 3 executes write_coverage_signal cov->size 1883, flag collect 0
----- executor 3 signal number : 391
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 45
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 651, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 651, flag collect 0
----- executor 3 signal number : 412
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 9
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 566, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 566, flag collect 0
----- executor 3 signal number : 49
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 70
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 395, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 395, flag collect 0
----- executor 3 signal number : 27
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 468, pid 3880, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 468, flag collect 0
----- executor 3 signal number : 12
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 25, 58, 0
execute_one time: 1, 83
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1563, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 4, 86, 0
before receive testcase: 0 0
----- executor 2 signal number : 1091
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6, 87, 0
time breakdown 3: 7, 84, 0
before receive testcase: 0 0
----- executor 2 signal number : 5858
----- executor 2 executes write_coverage_signal cov->size 2932, flag collect 0
----- executor 2 signal number : 378
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 816
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 5433
executor 2 server cover_cnt 8 output_pos_value 15080
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 95
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 12 replies
2023/03/27 22:20:15 fuzzer receive 391 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 45 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 412 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 49 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 70 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
time breakdown 2: 4, 93, 0
before receive testcase: 0 0
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1091 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 5858 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 378 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 816 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 5433 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 2
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
mkdir(&(0x7f00000000c0)='./file1/file0\x00', 0x0)
setxattr(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="757365721c50ecff703ddbf110582eeaea8a792e00"], 0x0, 0x0, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 368
remove dir: /root/cephfs-client/dfs-0-975
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-976 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-976
receive_execute: 16, 9
receive_execute: 14, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3884, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3884, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
receive_execute: 10, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/27 22:20:15 for select break: 1
executor 0 write_server_output
executor 1 write_server_output
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3416, flag collect 0
----- executor 2 signal number : 325
executor 2 server cover_cnt 1 output_pos_value 329
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
time breakdown 1: 19, 4, 0
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 14
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 2 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 1 replies
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 325 signal and 0 cover from userspace component
time breakdown 2: 17, 5, 0
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2809 rename rename
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2373 mkdir mkdir
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 7
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x18842, 0x8)
fdatasync(r0)
lsetxattr$security_smack_transmute(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140), &(0x7f00000002c0), 0x4, 0x0)
setxattr$smack_xattr_label(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000180)='security.SMACK64EXEC\x00', &(0x7f0000000200)=ANY=[@ANYRES64=r0], 0x13, 0x1)
fsetxattr$security_smack_transmute(r0, &(0x7f0000000240), &(0x7f0000000280), 0x4, 0x3)
rename(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='./file0\x00')
mkdir(&(0x7f0000000080)='./file0\x00', 0x130)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 26, 2, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/cephfs-client/dfs-0-976
time breakdown 0: 24, 3, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-977 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-977
receive_execute: 3, 6
receive_execute: 2, 6
receive_execute: 1, 6
receive_execute: 0, 6
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 0
----- executor 3 write_call_output, size 624, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 133
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 428, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3886, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 0, 6
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 12095, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1295
----- executor 2 executes write_coverage_signal cov->size 29644, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 7, 8, 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6334
----- executor 2 executes write_coverage_signal cov->size 28583, flag collect 0
----- executor 2 signal number : 723
executor 2 server cover_cnt 4 output_pos_value 8432
time breakdown 3: 9, 7, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 17
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 7 replies
2023/03/27 22:20:15 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
time breakdown 2: 6, 11, 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1295 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6334 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 723 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 220 flock flock
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 220 flock flock
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2347 llistxattr llistxattr
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 9
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000080))
flock(0xffffffffffffffff, 0xb)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
flock(0xffffffffffffffff, 0xf)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000000040)='./cgroup.cpu/syz1\x00', 0x1ff)
open$dir(&(0x7f00000000c0)='./file1\x00', 0x3ac01, 0x400000c)
open$dir(&(0x7f0000000100)='./file1\x00', 0x3cca46a47febc8a5, 0x2d)
fcntl$lock(0xffffffffffffffff, 0x7, &(0x7f0000001180)={0x0, 0x3, 0x6, 0x80000000})
llistxattr(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180)=""/4096, 0x1000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-977
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-978 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-978
receive_execute: 8, 18
receive_execute: 4, 18
receive_execute: 6, 18
receive_execute: 5, 18
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 514, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 514, flag collect 0
----- executor 3 signal number : 404
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 109
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3890, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 1, 5
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 5912, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 15399, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 5231
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 7109, flag collect 0
time breakdown 3: 26, 7, 0
before receive testcase: 0 1
----- executor 2 signal number : 534
executor 2 server cover_cnt 5 output_pos_value 7127
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 9, 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 28
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 9 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 5231 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 534 signal and 0 cover from userspace component
time breakdown 2: 22, 10, 0
before receive testcase: 0 0
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 404 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 109 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 1
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000040)='./file0\x00', 0x500c0, 0x70)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-978
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-979 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-979
receive_execute: 4, 19
receive_execute: 2, 18
receive_execute: 3, 19
receive_execute: 1, 18
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 621, pid 3893, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 621, flag collect 0
----- executor 3 signal number : 499
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 22, 5, 0
before receive testcase: 0 1
time breakdown 1: 19, 6, 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 24
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 1 replies
2023/03/27 22:20:15 fuzzer receive 499 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4815 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 601 signal and 0 cover from userspace component
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11773, flag collect 0
----- executor 2 signal number : 4815
----- executor 2 executes write_coverage_signal cov->size 6918, flag collect 0
----- executor 2 signal number : 601
executor 2 server cover_cnt 4 output_pos_value 6767
time breakdown 2: 20, 6, 0
before receive testcase: 0 0
time breakdown 3: 23, 3, 0
before receive testcase: 0 1
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 5
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lchown(&(0x7f00000002c0)='./file1\x00', 0x0, 0xffffffffffffffff)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 632
remove dir: /root/cephfs-client/dfs-0-979
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-980 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-980
receive_execute: 4, 14
receive_execute: 3, 13
receive_execute: 1, 14
receive_execute: 2, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 511, pid 3895, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 3895, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 3895, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 3895, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 82
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 163, pid 3895, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 3 signal number : 55
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 7, 0
execute_one time: 0, 13
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 831, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11992, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 20559, flag collect 0
----- executor 2 signal number : 937
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 16, 0
before receive testcase: 0 0
time breakdown 3: 18, 14, 0
before receive testcase: 0 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 17, 0
----- executor 2 signal number : 6906
----- executor 2 executes write_coverage_signal cov->size 353, flag collect 0
----- executor 2 signal number : 250
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1590
----- executor 2 executes write_coverage_signal cov->size 23924, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 4809
executor 2 server cover_cnt 8 output_pos_value 15977
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 34
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:15 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 937 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6906 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 250 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1590 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4809 signal and 0 cover from userspace component
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
time breakdown 2: 15, 21, 0
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2810 renameat renameat
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 17
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
r3 = fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r4 = open(&(0x7f0000000380)='./file0\x00', 0x420100, 0x44)
renameat(r4, &(0x7f00000003c0)='./file0\x00', r3, &(0x7f0000000400)='./file0\x00')
r5 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r5, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x81, 0xbab0})
truncate(&(0x7f0000000440)='./file0\x00', 0x4)
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
fcntl$lock(r5, 0x6, &(0x7f0000000200)={0x1, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r6, r5)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3352
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-980
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-981 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-981
receive_execute: 11, 14
receive_execute: 6, 14
receive_execute: 9, 14
receive_execute: 4, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 3898, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 3898, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 3898, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 1
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3898, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 347, pid 3898, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 3 signal number : 28
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 4, 1
execute_one time: 0, 14
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 967, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14120, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 24237, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 23, 30, 0
before receive testcase: 0 0
time breakdown 1: 20, 29, 0
----- executor 2 signal number : 1046
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 25, 28, 0
before receive testcase: 0 0
----- executor 2 signal number : 7305
----- executor 2 executes write_coverage_signal cov->size 4924, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 422
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27700, flag collect 0
----- executor 2 signal number : 1956
----- executor 2 executes write_coverage_signal cov->size 17282, flag collect 0
----- executor 2 signal number : 4102
executor 2 server cover_cnt 8 output_pos_value 16326
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 48
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
time breakdown 2: 18, 35, 0
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 [CLIENT] executor 3 has 17 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1046 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7305 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 422 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1956 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4102 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3967 truncate truncate
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3967 truncate truncate
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2808 removexattr removexattr
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 11
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
lsetxattr$security_selinux(&(0x7f0000000400)='./file1\x00', &(0x7f0000000440), &(0x7f0000000480)='system_u:object_r:var_spool_t:s0\x00', 0x21, 0x1)
open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
truncate(&(0x7f0000000000)='./file1\x00', 0x40)
lsetxattr$smack_xattr_label(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
open$dir(&(0x7f0000000300)='./file1\x00', 0x0, 0x195)
lsetxattr$security_evm(&(0x7f0000000080)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000140)=@sha1={0x1, "e5a614894de92cb2dc8f169b45469a35c3f5106c"}, 0x15, 0x2)
setxattr$security_evm(&(0x7f00000001c0)='./file1\x00', &(0x7f0000000200), &(0x7f0000000240)=@ng={0x4, 0x3, '%h'}, 0x4, 0x0)
truncate(&(0x7f0000000180)='./file1\x00', 0x2000000000000ff)
listxattr(&(0x7f0000000340)='./file1\x00', &(0x7f00000003c0)=""/27, 0x1b)
removexattr(&(0x7f0000000040)='./file1\x00', &(0x7f0000000380)=@known='trusted.syz\x00')
lsetxattr$security_capability(&(0x7f00000004c0)='./file1\x00', &(0x7f0000000500), &(0x7f0000000540)=@v2={0x2000000, [{0x8001, 0xd6f0}, {0x8, 0x2}]}, 0x14, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2472
remove dir: /root/cephfs-client/dfs-0-981
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-982 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-982
receive_execute: 10, 7
receive_execute: 3, 8
receive_execute: 7, 7
receive_execute: 8, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 657, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 657, flag collect 0
----- executor 3 signal number : 470
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 177
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 436, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 436, flag collect 0
----- executor 3 signal number : 46
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 551, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 551, flag collect 0
----- executor 3 signal number : 90
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 417, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 417, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 119, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 119, flag collect 0
----- executor 3 signal number : 10
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 512, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 512, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 3904, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 13, 8, 0
execute_one time: 1, 21
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1477, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 27896, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1421
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1075
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 25, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 25, 0
----- executor 2 signal number : 7765
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1785
----- executor 2 executes write_coverage_signal cov->size 30779, flag collect 0
before receive testcase: 0 0
time breakdown 3: 17, 23, 0
before receive testcase: 0 0
----- executor 2 signal number : 5332
executor 2 server cover_cnt 7 output_pos_value 17470
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 36
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 11 replies
2023/03/27 22:20:15 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 470 signal and 0 cover from executor 3
time breakdown 2: 11, 28, 0
2023/03/27 22:20:15 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 7 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 7 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1421 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1075 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7765 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1785 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 5332 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 8
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
open(&(0x7f0000000000)='./file0\x00', 0x18842, 0x0)
open(&(0x7f0000000100)='./file0\x00', 0x0, 0x1b0)
open(&(0x7f0000000000)='./file0\x00', 0x18842, 0x0)
lsetxattr$security_capability(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@v2, 0x14, 0x0)
chown(&(0x7f0000000140)='.\x00', 0xee01, 0xee01)
lchown(&(0x7f0000000200)='./file0\x00', 0xffffffffffffffff, 0x0)
lchown(&(0x7f0000000200)='./file0\x00', 0x0, 0xffffffffffffffff)
setxattr$incfs_id(&(0x7f0000000180)='./file0/file0\x00', &(0x7f00000001c0), &(0x7f0000000240)={'0000000000000000000000000000000', 0x33}, 0x20, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1608
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-982
remove dir time 7
-----finish removing dir
mkdir time 16
executor 3 create dir /root/cephfs-client/dfs-0-983 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-983
receive_execute: 9, 23
receive_execute: 4, 23
receive_execute: 8, 23
receive_execute: 6, 24
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 420, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 3 signal number : 73
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 332, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 332, flag collect 0
----- executor 3 signal number : 47
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 886, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 886, flag collect 0
----- executor 3 signal number : 101
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 15
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3908, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 0, 10
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 965, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10508, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 21308, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 1009
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 30, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 8249
----- executor 2 executes write_coverage_signal cov->size 2125, flag collect 0
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 4007, flag collect 0
time breakdown 3: 32, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 733
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1176
----- executor 2 executes write_coverage_signal cov->size 12353, flag collect 0
----- executor 2 signal number : 2886
executor 2 server cover_cnt 8 output_pos_value 15875
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 41
2023/03/27 22:20:15 ----- PS len: 4
time breakdown 2: 27, 18, 0
2023/03/27 22:20:15 [CLIENT] executor 3 has 8 replies
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1009 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 8249 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 733 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1176 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2886 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2350 lseek lseek
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 5
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000140)='./file0\x00', 0x280, 0x41)
r1 = openat(r0, &(0x7f0000000200)='./file0\x00', 0x50040, 0x0)
read(r1, &(0x7f0000000000)=""/253, 0xfd)
fcntl$getownex(r1, 0x10, &(0x7f0000000100))
lseek(r1, 0x401, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-983
remove dir time 24
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-984 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-984
receive_execute: 9, 27
receive_execute: 3, 27
receive_execute: 8, 27
receive_execute: 7, 27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 425, pid 3912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 0
----- executor 3 signal number : 366
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3912, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 36, 3, 0
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1956, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4175, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2166
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 3 output_pos_value 3253
time breakdown 1: 34, 3, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 35, 4, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 32
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:15 fuzzer receive 366 signal and 0 cover from executor 3
time breakdown 2: 30, 5, 0
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 3 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2166 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2780 readlink readlink
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2458 open open
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2458 open open
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2373 mkdir mkdir
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 8
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
open(&(0x7f0000000100)='./file0\x00', 0x80, 0x8)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
mkdir(&(0x7f0000000280)='./file1\x00', 0x110)
chown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
readlink(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0)=""/57, 0x39)
lsetxattr$trusted_overlay_origin(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x2, 0x2)
open(&(0x7f0000000140)='./file0\x00', 0x101500, 0x20)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1192
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-984
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-985 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-985
receive_execute: 4, 4
receive_execute: 2, 4
receive_execute: 3, 4
receive_execute: 4, 4
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 428, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 428, flag collect 0
----- executor 3 signal number : 365
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 226
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 169
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 42
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 223, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 223, flag collect 0
----- executor 3 signal number : 25
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 565, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 3 signal number : 80
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3915, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 4
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 4, 0
execute_one time: 0, 7
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15320, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 27085, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1042
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 7, 10, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 10, 0
----- executor 2 signal number : 7515
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 8, 9, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 signal number : 1955
----- executor 2 executes write_coverage_signal cov->size 21904, flag collect 0
----- executor 2 signal number : 4081
executor 2 server cover_cnt 7 output_pos_value 16078
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 19
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 8 replies
2023/03/27 22:20:15 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 226 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 42 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 80 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
time breakdown 2: 6, 15, 0
2023/03/27 22:20:15 [SERVER] executor 2 has 7 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1042 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7515 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1955 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4081 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 5
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x145641, 0x0)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file1\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x1)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x28202, 0x0)
write$binfmt_misc(r1, &(0x7f0000000040)=ANY=[], 0x4)
writev(r0, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x1}], 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/cephfs-client/dfs-0-985
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 0
executor 3 create dir /root/cephfs-client/dfs-0-986 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-986
receive_execute: 4, 8
receive_execute: 9, 9
receive_execute: 8, 9
receive_execute: 6, 8
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 623, pid 3918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 3918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 161
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 343, pid 3918, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 343, flag collect 0
----- executor 3 signal number : 89
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 384, pid 3918, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 3 signal number : 262
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1894, pid 3918, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1894, flag collect 0
----- executor 3 signal number : 806
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 10, 21, 0
execute_one time: 0, 31
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 738, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 29952, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1425
----- executor 2 executes write_coverage_signal cov->size 20997, flag collect 0
time breakdown 0: 17, 34, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 35, 0
before receive testcase: 0 0
----- executor 2 signal number : 1045
----- executor 2 executes write_coverage_signal cov->size 30608, flag collect 0
time breakdown 3: 18, 32, 0
before receive testcase: 0 0
----- executor 2 signal number : 7486
----- executor 2 executes write_coverage_signal cov->size 1129, flag collect 0
----- executor 2 signal number : 309
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2067
----- executor 2 executes write_coverage_signal cov->size 23882, flag collect 0
----- executor 2 signal number : 5423
executor 2 server cover_cnt 8 output_pos_value 17853
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
time breakdown 2: 12, 39, 0
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 47
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 5 replies
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 fuzzer receive 161 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 262 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 806 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1425 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1045 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7486 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 309 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2067 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 5423 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 13
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
readv(0xffffffffffffffff, &(0x7f0000000680)=[{&(0x7f0000000380)=""/142, 0x8e}, {&(0x7f0000000440)=""/222, 0xde}, {&(0x7f0000000540)=""/23, 0x17}, {&(0x7f0000000580)=""/233, 0xe9}], 0x4)
open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
open(&(0x7f0000000200)='./file0\x00', 0x101042, 0x10)
setxattr$trusted_overlay_nlink(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)={'U-', 0x3}, 0x16, 0x3)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x40400, 0x160)
fcntl$notify(r1, 0x402, 0x80000028)
write$binfmt_script(r0, &(0x7f00000007c0)={'#! ', './file0', [{0x20, 'security.ima\x00'}, {0x20, '-}}('}, {0x20, 'security.ima\x00'}, {0x20, '\xdd/'}, {0x20, ':^-\xae'}, {}, {0x20, 'U-'}], 0xa, "48d7c193207429f6d2b332861166f12f22cfe323fd12f60152d102d40024ee265fa19c4ba4a346e2bd51e5d83d1d90f1983dcea78efd6661d84ffbc966ed04e459c6a3f0d28690a4c9fc0f318a2d374d47747978a5013c697279a194493bff037c7056f7b94854d2"}, 0xa0)
ioctl(r0, 0xee, &(0x7f00000006c0)="04d1fef1cfa031af9a423f9def3be98cd2ed99ee3b069cbe1ef3ba32a92179ec0d2a89df3f9ccc87f6154a26c6addaff9e3dc333e8562dc9a7d983df95237b2327b1097538f412c3bed23bcb355a464d0f04e5e52c3bc14beb9ff843e33bd237757ead72732b5da65225637b0a630b956a9d19c59694c7017246745034b1947013acf912e760ec30ff807905fd56f5eebbde9f0162d1ceefcafbd88a1323b0a9a4944e7f5769b0be61e01224b0da0a999e41a96923c92cca9f88e1e862c4e3595c965372490dff3ba3c4dcc6090f00ca75")
lsetxattr$security_ima(&(0x7f0000000280)='./file0/file0\x00', &(0x7f00000002c0), &(0x7f0000000340)=ANY=[@ANYBLOB="041331b3c6e3a3975005"], 0xa, 0x5)
lsetxattr$trusted_overlay_upper(&(0x7f0000000880)='./file0/file0\x00', &(0x7f00000008c0), &(0x7f0000000900)={0x0, 0xfb, 0xc6, 0x6, 0x5a, "d7c0e74033f66ff7143c7fc30f163c63", "3a098e241207bd29b2ce381ff068ae8d1f2e55850ac8d53b40a4cd6af97a02d22d3bdf928dae2120fccb62f7c75b9e7a9dc0539f579fdf2940750b8f3f61fe633f4532615d738ab62e959b2ffbda73f6d6ce27d21158ba699ac6229bef55cba28423143d72403f27f64db0309be9e979f987fd80029f31d75acd4d5b8cf3b58005cbd2b5fb02808d530bb5bfbdb1f4478e2f3305a4d0b3967b8c85ad681941715133a71c27423e51375dd8a27221009b64"}, 0xc6, 0x1)
setxattr$trusted_overlay_opaque(&(0x7f0000000a00)='./file0\x00', &(0x7f0000000a40), &(0x7f0000000a80), 0x2, 0x3)
readv(r0, &(0x7f0000000300)=[{&(0x7f0000000080)=""/182, 0xb6}], 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4168
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-986
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-987 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-987
receive_execute: 11, 7
receive_execute: 9, 7
receive_execute: 9, 7
receive_execute: 4, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3921, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 622, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 683, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 3 signal number : 232
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 94
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 3921, write pid:-2126911943
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 243, pid 3921, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 243, flag collect 0
----- executor 3 signal number : 71
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 325, pid 3921, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 3 signal number : 116
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
2023/03/27 22:20:15 for select break: 1
executor 2 write_server_output
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8274, flag collect 0
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 20408, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 17, 8, 0
before receive testcase: 0 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1011
----- executor 2 executes write_coverage_signal cov->size 30722, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 16, 8, 0
time breakdown 3: 18, 7, 0
before receive testcase: 0 1
----- executor 2 signal number : 8169
----- executor 2 executes write_coverage_signal cov->size 2116, flag collect 0
----- executor 2 signal number : 351
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 14762, flag collect 0
----- executor 2 signal number : 1018
----- executor 2 executes write_coverage_signal cov->size 11567, flag collect 0
----- executor 2 signal number : 2855
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 14887
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 20
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 13 replies
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 fuzzer receive 232 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 94 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 71 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 116 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1011 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 8169 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 351 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1018 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2855 signal and 0 cover from userspace component
time breakdown 2: 12, 12, 0
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 11
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
stat(&(0x7f0000000080)='./file0/file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
lsetxattr$smack_xattr_label(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='security.SMACK64\x00', &(0x7f0000000480)={'trusted.overlay.origin\x00'}, 0x37, 0x1)
faccessat(0xffffffffffffff9c, &(0x7f0000000600)='./file0\x00', 0x20)
lsetxattr$system_posix_acl(&(0x7f0000000000)='.\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000240)={{}, {0x1, 0x5}, [{0x2, 0x3, 0xee00}, {0x2, 0x6, 0xffffffffffffffff}, {0x2, 0x4}, {0x2, 0x7}, {0x2, 0x2, 0xffffffffffffffff}, {0x2, 0x7, r0}], {0x4, 0x1}, [{0x8, 0x1, 0xee01}, {0x8, 0x6}, {0x8, 0x0, r1}], {0x10, 0x6}, {0x20, 0x1}}, 0x6c, 0x5)
lgetxattr(&(0x7f00000001c0)='./file1\x00', &(0x7f00000004c0)=@random={'security.', 'security.SMACK64\x00'}, &(0x7f0000000500)=""/195, 0xc3)
lsetxattr$trusted_overlay_origin(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000380), &(0x7f00000003c0), 0x2, 0x2)
open$dir(&(0x7f00000006c0)='./file2\x00', 0x20800, 0x90)
lchown(&(0x7f0000000200)='./file0\x00', 0xee01, 0x0)
lremovexattr(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680)=@random={'security.', 'system.posix_acl_default\x00'})
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 3832
remove dir: /root/cephfs-client/dfs-0-987
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-988 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-988
receive_execute: 9, 7
receive_execute: 4, 6
receive_execute: 7, 7
receive_execute: 6, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 write_call_output, size 3774, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 108
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 85
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 64
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 804, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 804, flag collect 0
----- executor 3 signal number : 135
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 505, pid 3924, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 505, flag collect 0
----- executor 3 signal number : 6
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 9, 3, 0
execute_one time: 0, 12
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1161, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10498, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 27809, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 14, 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1059
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 14, 15, 0
before receive testcase: 0 0
time breakdown 3: 16, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 7731
----- executor 2 executes write_coverage_signal cov->size 5184, flag collect 0
----- executor 2 signal number : 357
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 30715, flag collect 0
----- executor 2 signal number : 1202
----- executor 2 executes write_coverage_signal cov->size 15382, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3272
executor 2 server cover_cnt 8 output_pos_value 15108
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 26
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 11 replies
2023/03/27 22:20:15 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 135 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1059 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7731 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 357 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1202 signal and 0 cover from userspace component
time breakdown 2: 10, 20, 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3272 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 259 getdents64 getdents64
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 6
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r1 = dup2(r0, r0)
getdents64(r1, &(0x7f00000000c0)=""/62, 0x3e)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file0\x00')
linkat(r0, &(0x7f0000000540)='./file0\x00', r0, &(0x7f0000000580)='./file1\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/cephfs-client/dfs-0-988
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-989 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-989
receive_execute: 10, 12
receive_execute: 4, 11
receive_execute: 8, 12
receive_execute: 5, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 3929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 44, pid 3929, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 44, flag collect 0
----- executor 3 signal number : 25
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 3929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 540, pid 3929, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 540, flag collect 0
----- executor 3 signal number : 38
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 9910, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1310
----- executor 2 executes write_coverage_signal cov->size 31495, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 20, 7, 0
time breakdown 1: 16, 8, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 6426
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 21288, flag collect 0
time breakdown 3: 22, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 651
executor 2 server cover_cnt 5 output_pos_value 8478
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 22
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 6 replies
2023/03/27 22:20:15 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
time breakdown 2: 15, 11, 0
2023/03/27 22:20:15 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:15 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1310 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6426 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 651 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 38 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3764 symlink symlink
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 9
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file2\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
mkdir(&(0x7f0000000300)='./file4\x00', 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1200
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-989
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-990 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-990
receive_execute: 7, 20
receive_execute: 2, 21
receive_execute: 5, 20
receive_execute: 6, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 463, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 3 signal number : 26
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 24
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 658, pid 3932, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 3 signal number : 59
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 27, 10, 0
execute_one time: 1, 37
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1722, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32641, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1406
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1081
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 27, 41, 0
before receive testcase: 0 0
time breakdown 1: 25, 41, 0
time breakdown 3: 27, 39, 0
before receive testcase: 0 0
----- executor 2 signal number : 7574
----- executor 2 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 6144, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 448
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1026
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6255
executor 2 server cover_cnt 9 output_pos_value 17974
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 68
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 9 replies
2023/03/27 22:20:15 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 9 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
time breakdown 2: 23, 47, 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1406 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1081 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7574 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 448 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1026 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6255 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 10
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
open$dir(&(0x7f00000011c0)='./file1\x00', 0x12441, 0x0)
open(&(0x7f0000000040)='./file1\x00', 0x40101, 0x0)
r0 = open$dir(&(0x7f0000000080)='./file1\x00', 0x0, 0x100)
open(&(0x7f00000002c0)='./file1\x00', 0x0, 0x0)
fstat(r0, &(0x7f0000000300))
setxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file1\x00', 0x8, 0x1)
r1 = open$dir(&(0x7f0000000380)='./file1\x00', 0x103002, 0x7)
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100)='./file1\x00', 0x8, 0x3)
read(r1, &(0x7f00000003c0)=""/109, 0x6d)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000440), &(0x7f0000000480)={'L+', 0x4f}, 0x16, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1784
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-990
remove dir time 17
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-991 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-991
receive_execute: 2, 18
receive_execute: 11, 18
receive_execute: 8, 18
receive_execute: 7, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 229
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 328, pid 3935, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 328, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 130
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 220, pid 3935, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 220, flag collect 0
----- executor 3 signal number : 17
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 347, pid 3935, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 3 signal number : 148
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 180, pid 3935, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 180, flag collect 0
----- executor 3 signal number : 14
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 382, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6465, flag collect 0
----- executor 2 signal number : 1386
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 17987, flag collect 0
time breakdown 3: 29, 7, 1
before receive testcase: 0 1
----- executor 2 signal number : 1011
----- executor 2 executes write_coverage_signal cov->size 28452, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 26, 9, 0
before receive testcase: 0 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 25, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 7416
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18411, flag collect 0
----- executor 2 signal number : 1589
----- executor 2 executes write_coverage_signal cov->size 10456, flag collect 0
----- executor 2 signal number : 2430
executor 2 server cover_cnt 7 output_pos_value 13924
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 30
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 10 replies
2023/03/27 22:20:15 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
time breakdown 2: 20, 12, 0
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:15 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 130 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 7 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1011 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7416 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1589 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2430 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 258 getdents getdents
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 258 getdents getdents
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 11
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000080)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000140)='./file1\x00')
getdents(r0, &(0x7f0000000280)=""/102, 0x66)
r1 = open$dir(&(0x7f0000000000)='./file1\x00', 0x0, 0x0)
getdents(r1, &(0x7f0000000380)=""/69, 0x45)
r2 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x1, 0x50)
r3 = openat(r2, &(0x7f0000000240)='./file1\x00', 0x10082, 0xca)
getdents(r3, &(0x7f0000000400)=""/4096, 0x1000)
r4 = dup2(r0, r0)
getdents(r4, &(0x7f0000000180)=""/163, 0xa3)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1512
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-991
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-992 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-992
receive_execute: 7, 17
receive_execute: 3, 17
receive_execute: 6, 17
receive_execute: 6, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 511, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 431, pid 3939, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 431, flag collect 0
----- executor 3 signal number : 179
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 95, pid 3939, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 95, flag collect 0
----- executor 3 signal number : 52
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3939, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 3939, write pid:-2127058828
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 1
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 13061, flag collect 0
----- executor 2 signal number : 927
----- executor 2 executes write_coverage_signal cov->size 27186, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 23, 11, 0
before receive testcase: 0 1
----- executor 2 signal number : 6665
----- executor 2 executes write_coverage_signal cov->size 2478, flag collect 0
----- executor 2 signal number : 326
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 18971, flag collect 0
----- executor 2 signal number : 854
----- executor 2 executes write_coverage_signal cov->size 18490, flag collect 0
----- executor 2 signal number : 3783
executor 2 server cover_cnt 8 output_pos_value 14040
time breakdown 3: 24, 10, 0
before receive testcase: 0 0
time breakdown 1: 23, 11, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
time breakdown 2: 20, 15, 0
before receive testcase: 0 0
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 33
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [CLIENT] executor 3 has 11 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 179 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 927 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6665 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 326 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 854 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3783 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 2
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000000)='.\x00', &(0x7f0000000080), &(0x7f00000000c0), 0xff49, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 432
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-992
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-993 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-993
receive_execute: 10, 13
receive_execute: 9, 13
receive_execute: 5, 13
receive_execute: 9, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 3942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 605, pid 3942, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 605, flag collect 0
----- executor 3 signal number : 179
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 0, 5
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 23, 7, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4763, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 10842, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 8, 0
----- executor 2 signal number : 1067
----- executor 2 executes write_coverage_signal cov->size 23900, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6399
----- executor 2 executes write_coverage_signal cov->size 709, flag collect 0
----- executor 2 signal number : 279
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 25321, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1920
----- executor 2 executes write_coverage_signal cov->size 12684, flag collect 0
----- executor 2 signal number : 3123
executor 2 server cover_cnt 8 output_pos_value 13474
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 25
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 2 replies
2023/03/27 22:20:15 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 179 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1067 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 6399 signal and 0 cover from userspace component
time breakdown 2: 18, 12, 0
before receive testcase: 0 0
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 279 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1920 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3123 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 248 fstat fstat
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3761 stat stat
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 14
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x41)
r1 = dup2(r0, r0)
fcntl$setflags(r1, 0x2, 0x0)
stat(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r1, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fstat(r0, &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000680)='./file0\x00', &(0x7f00000006c0))
stat(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
lsetxattr$security_selinux(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580), &(0x7f00000005c0)='system_u:object_r:wireless_device_t:s0\x00', 0x27, 0x1)
setxattr$system_posix_acl(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)='system.posix_acl_access\x00', &(0x7f00000004c0)={{}, {0x1, 0x3}, [{0x2, 0x1, r2}, {0x2, 0xe, 0xee00}], {}, [{0x8, 0x4, 0xffffffffffffffff}, {0x8, 0x6, r3}, {0x8, 0x4, 0xee01}, {0x8, 0x0, r4}, {0x8, 0x1, 0xffffffffffffffff}, {0x8, 0x6, 0xee01}, {0x8, 0x2, r5}], {0x10, 0x2}, {0x20, 0x2}}, 0x6c, 0x3)
truncate(&(0x7f0000000040)='./file0\x00', 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x40202, 0x52)
readlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=""/174, 0xae)
fstat(r1, &(0x7f0000000600))
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3768
remove dir: /root/cephfs-client/dfs-0-993
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 5
-----finish removing dir
receive_execute: 4, 7
receive_execute: 7, 7
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-994 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-994
receive_execute: 9, 7
receive_execute: 7, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 1, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 148
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 547, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 547, flag collect 0
----- executor 3 signal number : 105
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 577, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 577, flag collect 0
----- executor 3 signal number : 101
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 779, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 779, flag collect 0
----- executor 3 signal number : 125
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3944, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 0, 11
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 14, 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 15, 0
time breakdown 3: 16, 13, 0
before receive testcase: 0 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 579, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10282, flag collect 0
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 18403, flag collect 0
----- executor 2 signal number : 985
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 8196
----- executor 2 executes write_coverage_signal cov->size 3135, flag collect 0
----- executor 2 signal number : 368
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28884, flag collect 0
----- executor 2 signal number : 1360
----- executor 2 executes write_coverage_signal cov->size 16801, flag collect 0
----- executor 2 signal number : 4037
executor 2 server cover_cnt 8 output_pos_value 16430
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 26
2023/03/27 22:20:15 ----- PS len: 4
time breakdown 2: 11, 18, 0
2023/03/27 22:20:15 [CLIENT] executor 3 has 14 replies
2023/03/27 22:20:15 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 125 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 985 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 8196 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 368 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1360 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4037 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 20
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40200, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000480)={0x1, 0x0, 0x1, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r5=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r5})
r6 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r6, r3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3864
remove dir: /root/cephfs-client/dfs-0-994
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-995 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-995
receive_execute: 11, 9
receive_execute: 9, 9
receive_execute: 8, 9
receive_execute: 7, 8
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 3947, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 3947, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 3947, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3947, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 318, pid 3947, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 318, flag collect 0
----- executor 3 signal number : 10
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3947, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 19
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 355, pid 3947, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 3 signal number : 28
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 11, 2, 2
execute_one time: 0, 16
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 20, 17, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1225, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14121, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 28822, flag collect 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 18, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 18, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 1075
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7316
----- executor 2 executes write_coverage_signal cov->size 5851, flag collect 0
----- executor 2 signal number : 419
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 30005, flag collect 0
----- executor 2 signal number : 1999
----- executor 2 executes write_coverage_signal cov->size 16955, flag collect 0
----- executor 2 signal number : 4064
executor 2 server cover_cnt 8 output_pos_value 16367
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 32
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
time breakdown 2: 15, 24, 0
2023/03/27 22:20:15 [CLIENT] executor 3 has 20 replies
2023/03/27 22:20:15 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 1
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1075 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7316 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 419 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1999 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4064 signal and 0 cover from userspace component
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 12
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
fsetxattr$user(r0, &(0x7f0000000100), &(0x7f0000000140)='trusted.overlay.redirect\x00', 0x19, 0x0)
truncate(&(0x7f0000000400)='./file0\x00', 0x7fffffff)
readv(r0, &(0x7f00000003c0)=[{&(0x7f0000000440)=""/56, 0x38}], 0x1)
r1 = open(&(0x7f0000000180)='./file0\x00', 0x2, 0x100)
fsetxattr$user(r1, &(0x7f00000001c0), &(0x7f0000000200)='trusted.overlay.redirect\x00', 0x19, 0x2)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000080), &(0x7f00000000c0)='./file0\x00', 0x8, 0x0)
fsetxattr$trusted_overlay_redirect(r0, &(0x7f0000000240), &(0x7f0000000280)='./file0\x00', 0x8, 0x0)
open$dir(&(0x7f0000000700)='./file0\x00', 0x2040, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
chown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, 0xee00)
open$dir(&(0x7f00000002c0)='./file0\x00', 0x109900, 0x9a)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2216
remove dir: /root/cephfs-client/dfs-0-995
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-996 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-996
receive_execute: 13, 11
receive_execute: 6, 12
receive_execute: 12, 11
receive_execute: 12, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 205, pid 3951, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 205, flag collect 0
----- executor 3 signal number : 131
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 498, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 3 signal number : 153
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1903, pid 3951, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 1903, flag collect 0
----- executor 3 signal number : 620
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 396, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 396, flag collect 0
----- executor 3 signal number : 16
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 239, pid 3951, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 239, flag collect 0
----- executor 3 signal number : 22
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 109, pid 3951, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 109, flag collect 0
----- executor 3 signal number : 11
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 145, pid 3951, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 145, flag collect 0
----- executor 3 signal number : 7
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 501, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 501, flag collect 0
----- executor 3 signal number : 13
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 238, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 238, flag collect 0
----- executor 3 signal number : 32
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3951, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 16, 107, 0
execute_one time: 1, 123
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 24, 126, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 833, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1414
----- executor 2 executes write_coverage_signal cov->size 28588, flag collect 0
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7347
----- executor 2 executes write_coverage_signal cov->size 2568, flag collect 0
----- executor 2 signal number : 365
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2203
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4284
executor 2 server cover_cnt 8 output_pos_value 16752
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 18, 132, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 23, 128, 0
before receive testcase: 0 0
2023/03/27 22:20:15 for select break: 1
2023/03/27 22:20:15 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:15 wg wait finish
2023/03/27 22:20:15 ------ all executors finish execution
2023/03/27 22:20:15 exec time: 153
2023/03/27 22:20:15 ----- PS len: 4
2023/03/27 22:20:15 [CLIENT] executor 3 has 12 replies
2023/03/27 22:20:15 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:15 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:15 fuzzer receive 153 signal and 0 cover from executor 3
2023/03/27 22:20:15 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:15 fuzzer receive 620 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1414 signal and 0 cover from userspace component
2023/03/27 22:20:15 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:15 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 7347 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 365 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 2203 signal and 0 cover from userspace component
2023/03/27 22:20:15 ------- fuzzer executor 2 receive 4284 signal and 0 cover from userspace component
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 23, 142, 0
2023/03/27 22:20:15 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:15 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/27 22:20:15 mutate testcase with failures
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 3967 truncate truncate
2023/03/27 22:20:15 ----- mutateArg()
2023/03/27 22:20:15 ----- insertCall()
2023/03/27 22:20:15 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/27 22:20:15 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:15 prog length: 15
2023/03/27 22:20:15 HasCrashFail:false HasNetFail:false
22:20:15 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
fcntl$setstatus(r0, 0x4, 0x0)
r1 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r2 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r2, 0x26, &(0x7f0000000100)={0x0, 0x0, 0xffffffff})
fcntl$lock(r1, 0x6, &(0x7f00000001c0)={0x0, 0x0, 0x81})
setxattr$incfs_metadata(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000002c0)="b4d13e91fd14ae7a05d2041f77630a91bd3a5476d7fc83463e13b7d02d1f139b3c03864fa083006dccfcf1c51f3f1543e0d05e3f844d6183bb686ee8e7f62e2c7a03f20eda915f450e554bb9f980f5ef156a8013d2716fc8daafb57fb5c5d2460ca78d71bc4bc6a44f00062f36e92e4713619540edcc4a221810c5a7434368e85eee211a79816e2bc0ce4e9b95d284442df74cdf51a18dfa208732ec8457296c823b4d8aa9ba2e7fb10bb3bb", 0xac, 0x1)
fcntl$getownex(r1, 0x10, &(0x7f0000000000)={0x0, <r3=>0x0})
fcntl$lock(r1, 0x7, &(0x7f0000000180)={0x2, 0x2, 0xc4, 0x4d16d712, r3})
fcntl$lock(r2, 0x7, &(0x7f0000000240)={0x1, 0x1, 0x0, 0xc9})
r4 = fcntl$dupfd(r1, 0x406, r0)
r5 = open(&(0x7f0000000380)='./file1\x00', 0x8700, 0xa1)
fcntl$getownex(r5, 0x10, &(0x7f00000003c0))
fcntl$getownex(r4, 0x10, &(0x7f0000000140))
truncate(&(0x7f0000000200)='./file0\x00', 0x8)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2984
remove dir: /root/cephfs-client/dfs-0-996
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 45
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-997 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-997
receive_execute: 14, 47
receive_execute: 4, 47
receive_execute: 19, 47
receive_execute: 21, 47
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 3958, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 122
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 3958, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 131
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 3958, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 9
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 3958, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3958, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 424, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 424, flag collect 0
----- executor 3 signal number : 32
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
execute_one loop: 0, 0, 50
----- executor 3 write_call_output, size 502, pid 3958, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 502, flag collect 0
----- executor 3 signal number : 82
----- completed 15
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 80, 1, 0
execute_one time: 1, 81
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 83, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1040, flag collect 0
----- executor 2 signal number : 65
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1420
----- executor 2 executes write_coverage_signal cov->size 25890, flag collect 0
----- executor 2 signal number : 1087
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 66, 84, 0
before receive testcase: 0 0
----- executor 2 signal number : 7291
----- executor 2 executes write_coverage_signal cov->size 2770, flag collect 0
----- executor 2 signal number : 354
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24514, flag collect 0
----- executor 2 signal number : 1649
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
time breakdown 0: 51, 85, 0
before receive testcase: 0 0
----- executor 2 signal number : 1420
executor 2 server cover_cnt 8 output_pos_value 13315
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 135
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 15 replies
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1420 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1087 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 82 signal and 0 cover from executor 3
time breakdown 2: 61, 88, 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7291 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 354 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1420 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 1
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x108840, 0x11)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 168
remove dir: /root/cephfs-client/dfs-0-997
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 120
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-998 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-998
receive_execute: 7, 123
receive_execute: 2, 124
receive_execute: 6, 123
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 123
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 3963, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
time breakdown 3: 130, 8, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 6586, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 902
----- executor 2 executes write_coverage_signal cov->size 11719, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 4911
----- executor 2 executes write_coverage_signal cov->size 6134, flag collect 0
----- executor 2 signal number : 535
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 129, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 1831
executor 2 server cover_cnt 6 output_pos_value 9673
before receive testcase: 0 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 126, 12, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 145
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 1 replies
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 6 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 902 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4911 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 535 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1831 signal and 0 cover from userspace component
time breakdown 1: 129, 21, 0
before receive testcase: 0 0
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 13
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
getxattr(&(0x7f0000000180)='./file0\x00', &(0x7f0000000240)=ANY=[@ANYRES32], &(0x7f0000002240)=""/191, 0xbf)
r0 = open$dir(&(0x7f0000002300)='./file0\x00', 0x111903, 0x6)
readv(r0, &(0x7f0000000000), 0x1000000000000302)
fsetxattr(r0, &(0x7f0000001400)=@random={'system.', '\x00'}, &(0x7f0000001440)='+%@)(*-[{\x00', 0xa, 0x0)
mkdirat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x0)
r1 = open(&(0x7f0000001480)='./file0/file0\x00', 0x140, 0x0)
r2 = openat(r1, &(0x7f0000000280)='./file0/file0\x00', 0x101000, 0x180)
preadv(r2, &(0x7f00000001c0)=[{&(0x7f00000000c0)=""/63, 0x3f}, {&(0x7f0000000100)=""/98, 0x62}], 0x2, 0x2, 0x10000)
getxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000002c0)=@known='user.syz\x00', &(0x7f0000000300)=""/4096, 0x1000)
fdatasync(r1)
truncate(&(0x7f0000001300)='./file0\x00', 0x800)
open$dir(&(0x7f0000000040)='./file0\x00', 0x10002, 0x81)
lsetxattr$security_capability(&(0x7f0000001340)='./file0\x00', &(0x7f0000001380), &(0x7f00000013c0)=@v2={0x2000000, [{0x7ff, 0x4}, {0x7f}]}, 0x14, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2528
remove dir: /root/cephfs-client/dfs-0-998
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 115
-----finish removing dir
receive_execute: 13, 188
receive_execute: 15, 189
mkdir time 74
executor 3 create dir /root/cephfs-client/dfs-0-999 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-999
receive_execute: 16, 189
receive_execute: 3, 188
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 358
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 687, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 687, flag collect 0
----- executor 3 signal number : 126
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 237, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 237, flag collect 0
----- executor 3 signal number : 62
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 3965, write pid:-2126826171
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 466, pid 3965, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 466, flag collect 0
----- executor 3 signal number : 90
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 2, 0
execute_one time: 0, 10
time breakdown 3: 205, 11, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 455, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 2648, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 12804, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1058
----- executor 2 executes write_coverage_signal cov->size 32450, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 192, 12, 0
before receive testcase: 0 1
----- executor 2 signal number : 7089
----- executor 2 executes write_coverage_signal cov->size 3869, flag collect 0
----- executor 2 signal number : 423
----- executor 2 executes write_coverage_signal cov->size 19531, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 657
before receive testcase: 0 1
executor 2 server cover_cnt 6 output_pos_value 9902
time breakdown 0: 204, 14, 0
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 204
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 13 replies
2023/03/27 22:20:16 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 6 replies
time breakdown 2: 201, 16, 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1058 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7089 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 423 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 657 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 358 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 126 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 62 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 ----- generateCall 2782 readv readv
2023/03/27 22:20:16 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:20:16 ----- generateCall 220 flock flock
2023/03/27 22:20:16 ----- generateCall 2724 preadv preadv
2023/03/27 22:20:16 ----- generateCall 4127 write$binfmt_aout write$binfmt_aout
2023/03/27 22:20:16 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:20:16 ----- generateCall 541 ioctl ioctl
2023/03/27 22:20:16 ----- generateCall 222 fremovexattr fremovexattr
2023/03/27 22:20:16 ----- generateCall 170 dup dup
2023/03/27 22:20:16 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:20:16 ----- generateCall 2343 link link
2023/03/27 22:20:16 ----- generateCall 171 dup2 dup2
2023/03/27 22:20:16 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/27 22:20:16 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:20:16 ----- generateCall 171 dup2 dup2
2023/03/27 22:20:16 map[./file0:true]
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 20
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
readv(0xffffffffffffffff, &(0x7f0000001200)=[{&(0x7f0000000000)=""/20, 0x14}, {&(0x7f0000000040)=""/99, 0x63}, {&(0x7f00000000c0)=""/4096, 0x1000}, {&(0x7f00000010c0)}, {&(0x7f0000001100)=""/204, 0xcc}], 0x5)
fcntl$lock(0xffffffffffffffff, 0x5, &(0x7f0000001280)={0x0, 0x2, 0x401, 0x2, 0xffffffffffffffff})
r0 = dup(0xffffffffffffffff)
flock(r0, 0x2)
preadv(r0, &(0x7f0000001480)=[{&(0x7f00000012c0)=""/95, 0x5f}, {&(0x7f0000001340)=""/246, 0xf6}, {&(0x7f0000001440)=""/15, 0xf}], 0x3, 0x0, 0x7)
write$binfmt_aout(r0, &(0x7f00000014c0)={{0x10b, 0x7f, 0x7, 0x21f, 0x3cf, 0x2, 0xb, 0x8000}, "12da64781fff5d2d6c12f819744834433d0b981c4ecb4af49f6cfeca6a8fac4e5e5bb46575cae7fa5b32c8ff3719f761c22c7bdf60d1ac987f690ced29e717c0fe7db8b1a0d304e0d173041c456bec273c73ce082839abe906f6056df160973277e1a77afad763dce7aba49a71b2f5680a349ea40b06fb56163860c032de89ea3841b58c69f90e315fdc0f73542a5fd80725df061031131d5818f9"}, 0xbb)
r1 = fcntl$dupfd(r0, 0x0, r0)
r2 = open(&(0x7f0000001580)='./file0\x00', 0x400100, 0x0)
ioctl(r2, 0x1, &(0x7f00000015c0)="61d41430a7b154b6ed9f896a1cc0db40ef911c4662de1fe164e2b598427a15240ca2ba4e9f3b119d01234970546dd1ba408757b7700d34b9cf51a125223eea29aef3044df4bb8c7667c5a0e05604928f6a8b50e0ce41c903c5d5174b79e0846aa1d61506c27c596d87134d61754bed9a523a2ad9d5bef923082473ab5e079395bb73da46")
fremovexattr(r1, &(0x7f0000001680)=@random={'system.', '\x00'})
r3 = fcntl$dupfd(r2, 0x0, r2)
dup(r3)
r4 = dup2(r1, r3)
fcntl$lock(r4, 0x26, &(0x7f00000016c0)={0x2, 0x2, 0x55, 0x7, 0xffffffffffffffff})
link(&(0x7f0000001700)='./file0\x00', &(0x7f0000001740)='./file0\x00')
dup2(r2, r1)
write$binfmt_script(r3, &(0x7f0000001780)={'#! ', './file0', [{0x20, ',{\xbd'}, {0x20, 'system.'}, {0x20, '^+@@['}, {0x20, '#&,+/,)'}], 0xa, "1672ac616b8bde10647cb8d728ee639400cfd9e323364a96e44d03605d6d5bb0ea613b91d867cad731337b4e7d97f2dcc8c0f8ca63f5e1b1156777"}, 0x60)
r5 = open$dir(&(0x7f0000001800)='./file0\x00', 0x723700, 0x88)
fcntl$lock(r5, 0x5, &(0x7f0000001840)={0x0, 0x3, 0x3, 0xff})
dup2(r3, r2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4968
remove dir: /root/cephfs-client/dfs-0-999
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 74
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1000 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1000
receive_execute: 8, 75
receive_execute: 7, 75
receive_execute: 5, 76
receive_execute: 3, 76
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 15
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3968, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 1, 7
cover_reset in execute_call
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 585, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 2 signal number : 255
----- executor 2 executes write_coverage_signal cov->size 3039, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 637
executor 2 server cover_cnt 4 output_pos_value 1359
time breakdown 1: 82, 9, 0
before receive testcase: 0 1
time breakdown 0: 81, 10, 0
before receive testcase: 0 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
time breakdown 2: 79, 10, 0
2023/03/27 22:20:16 exec time: 86
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 20 replies
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 255 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 637 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 6
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000200)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
open$dir(&(0x7f0000000080)='./file1/../file0\x00', 0x20000, 0x0)
lsetxattr$user(&(0x7f0000000000)='./file1/file0/../file0\x00', &(0x7f0000000240), 0x0, 0x0, 0x2)
stat(&(0x7f00000000c0)='./file1/file0\x00', &(0x7f0000000100))
---

end of program
time breakdown 3: 83, 9, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
remove dir: /root/cephfs-client/dfs-0-1000
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1001 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1001
receive_execute: 3, 5
receive_execute: 1, 5
receive_execute: 3, 5
receive_execute: 1, 5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 515, pid 3971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 515, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 493, pid 3971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 493, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 832, pid 3971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 832, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 3971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 110
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 751, pid 3971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 751, flag collect 0
----- executor 3 signal number : 119
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 508, pid 3971, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 508, flag collect 0
----- executor 3 signal number : 37
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 2, 0
execute_one time: 0, 13
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 8, 15, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1105, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 20128, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 29713, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 17, 0
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 1084
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6986
----- executor 2 executes write_coverage_signal cov->size 5344, flag collect 0
----- executor 2 signal number : 418
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 782
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4726
executor 2 server cover_cnt 8 output_pos_value 15484
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 27
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 6 replies
2023/03/27 22:20:16 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 110 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 fuzzer receive 37 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
time breakdown 2: 6, 22, 0
before receive testcase: 0 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1084 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 6986 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 418 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 782 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4726 signal and 0 cover from userspace component
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 3
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
open(&(0x7f0000000100)='./file0\x00', 0x410681, 0x101)
r0 = open$dir(&(0x7f0000000340)='./file0\x00', 0x0, 0x0)
fgetxattr(r0, &(0x7f0000000000)=ANY=[@ANYBLOB='sys\'(\x00'], 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 464
remove dir: /root/cephfs-client/dfs-0-1001
remove dir time 14
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1002 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1002
receive_execute: 10, 15
receive_execute: 8, 15
receive_execute: 7, 15
receive_execute: 4, 15
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 3974, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 3974, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3974, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 25, 3, 0
executor 0 write_server_output
executor 1 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 585, flag collect 0
----- executor 2 signal number : 390
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 341, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 254
----- executor 2 executes write_coverage_signal cov->size 2562, flag collect 0
----- executor 2 signal number : 623
executor 2 server cover_cnt 4 output_pos_value 1342
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 4, 0
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 4, 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 20
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [CLIENT] executor 3 has 3 replies
2023/03/27 22:20:16 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:16 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 254 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 623 signal and 0 cover from userspace component
time breakdown 2: 19, 5, 0
before receive testcase: 0 0
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2341 lchown lchown
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 6
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000100)='./file0\x00', 0x18040, 0x0)
lsetxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64EXEC\x00', 0x0, 0x0, 0x0)
lchown(&(0x7f0000000180)='./file0\x00', 0xffffffffffffffff, 0xee01)
open$dir(&(0x7f0000000140)='./file0\x00', 0x1, 0x14)
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0), 0x0, 0x0, 0x2)
lgetxattr(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)=@known='trusted.overlay.impure\x00', 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1112
remove dir: /root/cephfs-client/dfs-0-1002
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 3
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-1003 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1003
receive_execute: 4, 7
receive_execute: 1, 7
receive_execute: 3, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 7
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 624, pid 3977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 403, pid 3977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 403, flag collect 0
----- executor 3 signal number : 129
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 758, pid 3977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 758, flag collect 0
----- executor 3 signal number : 166
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 686, pid 3977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 686, flag collect 0
----- executor 3 signal number : 99
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 488, pid 3977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 488, flag collect 0
----- executor 3 signal number : 9
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 462, pid 3977, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 462, flag collect 0
----- executor 3 signal number : 4
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 0, 0
execute_one time: 1, 9
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 11, 11, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 16813, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 28171, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 10, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 10, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 7867
----- executor 2 executes write_coverage_signal cov->size 4174, flag collect 0
----- executor 2 signal number : 382
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28804, flag collect 0
----- executor 2 signal number : 1216
----- executor 2 executes write_coverage_signal cov->size 24490, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 24
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 6 replies
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7867 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 382 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1216 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4374 signal and 0 cover from userspace component
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 166 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 7
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fsync(r0)
write$binfmt_script(r0, &(0x7f0000000180)={'#! ', './file1', [{0x20, './binderfs\x00'}, {0x20, './binderfs\x00'}], 0xa, "c3e13a524bbb770eeb8fe151b2c095efea000f542ebf224541b4802342cc1aed99fcc68f0c98de12e34c97019ce7afed499df14004fdaf22177217a2a9abb89341f38a0ce213c4cb427ef09fb3130cb9e7caf4562e2b55714e4413ced3ddd33eaa7d76d9db430dd8615548b35386e20dcf2d9b636455971b66b539187a29277a9daca8d6528b7e684ddf024d26903410df69cbb3c16d964c58d8042c81df77ce602c"}, 0xc5)
linkat(r0, &(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file0\x00', 0x1c00)
r1 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x40000, 0x160)
linkat(r0, &(0x7f0000000080)='./file1\x00', r1, &(0x7f0000000100)='./file0\x00', 0x1400)
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000140)='./binderfs\x00', 0x1ff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1616
remove dir: /root/cephfs-client/dfs-0-1003
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 signal number : 4374
executor 2 server cover_cnt 8 output_pos_value 16345
time breakdown 2: 8, 16, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1004 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1004
receive_execute: 5, 10
receive_execute: 10, 11
receive_execute: 9, 10
receive_execute: 7, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 510, pid 3981, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 510, flag collect 0
----- executor 3 signal number : 152
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 7, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 6090, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1269
----- executor 2 executes write_coverage_signal cov->size 15536, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 5192
time breakdown 0: 18, 8, 0
----- executor 2 executes write_coverage_signal cov->size 1376, flag collect 0
----- executor 2 signal number : 299
----- executor 2 executes write_coverage_signal cov->size 7110, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 528
time breakdown 1: 19, 9, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 7371
before receive testcase: 0 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 20
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 7 replies
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1269 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 5192 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 299 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 528 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 152 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
time breakdown 2: 15, 10, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 3765 symlinkat symlinkat
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 6
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
symlinkat(&(0x7f00000000c0)='./file0\x00', r0, &(0x7f0000000180)='./file0\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080), 0x0, 0x0, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x200, 0x0)
lsetxattr$security_capability(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), 0x0, 0x0, 0x0)
openat(0xffffffffffffff9c, &(0x7f00000001c0)='./file0\x00', 0x2042, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1128
remove dir: /root/cephfs-client/dfs-0-1004
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 12
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1005 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1005
receive_execute: 4, 14
receive_execute: 4, 14
receive_execute: 3, 14
executor 0 before execute_one
receive_execute: 5, 15
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 615, pid 3984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 615, flag collect 0
----- executor 3 signal number : 476
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 273, pid 3984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 273, flag collect 0
----- executor 3 signal number : 160
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 565, pid 3984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 565, flag collect 0
----- executor 3 signal number : 127
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 432, pid 3984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 432, flag collect 0
----- executor 3 signal number : 30
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 392, pid 3984, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 392, flag collect 0
----- executor 3 signal number : 84
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 2, 0
execute_one time: 0, 11
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 20, 12, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 608, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 17120, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 21957, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1025
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 18, 15, 0
before receive testcase: 0 0
time breakdown 1: 18, 15, 0
before receive testcase: 0 0
----- executor 2 signal number : 8234
----- executor 2 executes write_coverage_signal cov->size 3630, flag collect 0
----- executor 2 signal number : 363
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1389
----- executor 2 executes write_coverage_signal cov->size 9498, flag collect 0
----- executor 2 signal number : 2371
executor 2 server cover_cnt 8 output_pos_value 14890
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 31
2023/03/27 22:20:16 ----- PS len: 4
time breakdown 2: 17, 17, 0
2023/03/27 22:20:16 [CLIENT] executor 3 has 6 replies
2023/03/27 22:20:16 fuzzer receive 476 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 160 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:20:16 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1025 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 8234 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 363 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1389 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 2371 signal and 0 cover from userspace component
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2458 open open
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 8
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x24, &(0x7f0000000040)={0x2, 0x4, 0x0, 0x470a})
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file1\x00')
open(&(0x7f0000000500)='./file0\x00', 0x30440, 0x0)
lsetxattr$trusted_overlay_upper(&(0x7f0000000580)='./file0\x00', &(0x7f0000000440), &(0x7f00000005c0)=ANY=[], 0x5c, 0x0)
setxattr$security_smack_transmute(&(0x7f0000000340)='./file0\x00', &(0x7f00000000c0), 0x0, 0x2e, 0x0)
lsetxattr$security_selinux(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), 0x0, 0x0, 0x0)
chmod(&(0x7f0000000000)='./file1\x00', 0x0)
open(&(0x7f0000000080)='./file0\x00', 0x70080, 0x54)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1568
remove dir: /root/cephfs-client/dfs-0-1005
remove dir time 8
-----finish removing dir
receive_execute: 6, 10
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1006 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1006
receive_execute: 8, 10
receive_execute: 3, 11
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 5, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 477, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 158
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 125
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 403, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 403, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 874, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 874, flag collect 0
----- executor 3 signal number : 176
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3987, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 3, 0
execute_one time: 1, 9
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 18, 11, 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1154, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 22051, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1315
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 12, 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 13, 0
----- executor 2 signal number : 6523
----- executor 2 executes write_coverage_signal cov->size 1846, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 311
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 707
executor 2 server cover_cnt 5 output_pos_value 8939
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 26
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 8 replies
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 125 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 176 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
time breakdown 2: 14, 15, 0
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1315 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 6523 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 311 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 707 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 15
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x81, 0xbab0})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x1, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x0, 0x1, 0x81, 0xfffffffffffffffa})
r4 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r4, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2968
remove dir: /root/cephfs-client/dfs-0-1006
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-1007 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1007
receive_execute: 7, 19
receive_execute: 2, 19
receive_execute: 3, 18
receive_execute: 5, 19
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 616, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 3991, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 312, pid 3991, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 312, flag collect 0
----- executor 3 signal number : 5
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 127
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 309, pid 3991, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 309, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 3991, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 347, pid 3991, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 3 signal number : 28
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 16, 1, 1
execute_one time: 0, 18
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 26, 19, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 935, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 12993, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 28366, flag collect 0
----- executor 2 signal number : 1095
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 22, 0
before receive testcase: 0 0
----- executor 2 signal number : 694
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 5299, flag collect 0
----- executor 2 signal number : 288
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 31546, flag collect 0
----- executor 2 signal number : 1686
----- executor 2 executes write_coverage_signal cov->size 14318, flag collect 0
----- executor 2 signal number : 4421
executor 2 server cover_cnt 8 output_pos_value 9676
time breakdown 2: 21, 25, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 46
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [CLIENT] executor 3 has 15 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 24, 27, 0
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1095 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 694 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 288 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1686 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4421 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 28 signal and 0 cover from executor 3
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 3764 symlink symlink
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 6
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x111040, 0x0)
open$dir(&(0x7f00000000c0)='./file0\x00', 0x20000, 0x100)
r0 = open(&(0x7f0000000040)='./file0\x00', 0x40202, 0x0)
fchmod(r0, 0x8707983954862d20)
lchown(&(0x7f0000000200)='./file0\x00', 0x0, 0xffffffffffffffff)
symlink(&(0x7f0000000000)='./file0\x00', &(0x7f0000000080)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 800
remove dir: /root/cephfs-client/dfs-0-1007
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-1008 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1008
receive_execute: 11, 21
receive_execute: 6, 20
receive_execute: 9, 21
receive_execute: 3, 21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 3996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 3996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1037, pid 3996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1037, flag collect 0
----- executor 3 signal number : 221
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 3996, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 68
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 237, pid 3996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 237, flag collect 0
----- executor 3 signal number : 11
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 3996, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 0, 8
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 32, 10, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 12, 0
before receive testcase: 0 0
time breakdown 1: 30, 12, 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 36
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 6 replies
2023/03/27 22:20:16 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 221 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1402 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7721 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 2212 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4209 signal and 0 cover from userspace component
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 644, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17614, flag collect 0
----- executor 2 signal number : 1402
----- executor 2 executes write_coverage_signal cov->size 23279, flag collect 0
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7721
----- executor 2 executes write_coverage_signal cov->size 2472, flag collect 0
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2212
----- executor 2 executes write_coverage_signal cov->size 18293, flag collect 0
----- executor 2 signal number : 4209
executor 2 server cover_cnt 8 output_pos_value 17022
time breakdown 2: 26, 16, 0
before receive testcase: 0 0
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 4
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open(&(0x7f0000000040)='./file1\x00', 0x501000, 0x20)
symlinkat(&(0x7f0000000100)='./file1\x00', r0, &(0x7f0000000140)='./file0\x00')
getdents64(r0, &(0x7f0000000180)=""/164, 0xa4)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 576
remove dir: /root/cephfs-client/dfs-0-1008
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 20
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1009 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1009
receive_execute: 9, 21
receive_execute: 4, 21
receive_execute: 6, 21
receive_execute: 7, 22
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 511, pid 3999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3999, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
time breakdown 3: 30, 5, 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11329, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4689
----- executor 2 executes write_coverage_signal cov->size 10756, flag collect 0
----- executor 2 signal number : 566
executor 2 server cover_cnt 4 output_pos_value 6597
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 27, 7, 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 2: 25, 7, 0
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 29
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:16 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 4 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
time breakdown 0: 29, 8, 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4689 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 566 signal and 0 cover from userspace component
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 4
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x20242, 0x0)
chown(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r1 = dup(r0)
write$binfmt_script(r1, &(0x7f0000000080)=ANY=[@ANYBLOB='#! .1\n'], 0xb)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 512
remove dir: /root/cephfs-client/dfs-0-1009
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1010 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1010
receive_execute: 5, 30
receive_execute: 2, 30
receive_execute: 2, 30
receive_execute: 1, 30
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 625, pid 4002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 625, flag collect 0
----- executor 3 signal number : 481
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 4002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 170
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4002, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 378, pid 4002, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 3 signal number : 265
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 6, 0
execute_one time: 1, 8
cover_reset in execute_call
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 35, 10, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 413, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15227, flag collect 0
----- executor 2 signal number : 1410
----- executor 2 executes write_coverage_signal cov->size 12490, flag collect 0
----- executor 2 signal number : 934
----- executor 2 executes write_coverage_signal cov->size 18219, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 31, 12, 0
----- executor 2 signal number : 6062
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 32, 13, 0
----- executor 2 signal number : 1999
----- executor 2 executes write_coverage_signal cov->size 19149, flag collect 0
----- executor 2 signal number : 4964
executor 2 server cover_cnt 8 output_pos_value 15473
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 47
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1410 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 934 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 6062 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1999 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4964 signal and 0 cover from userspace component
time breakdown 2: 32, 16, 0
before receive testcase: 0 1
2023/03/27 22:20:16 [CLIENT] executor 3 has 4 replies
2023/03/27 22:20:16 fuzzer receive 481 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 170 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 265 signal and 0 cover from executor 3
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2343 link link
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 3
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file0\x00', 0x8040, 0x0)
link(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='./file0\x00')
fdatasync(r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 368
remove dir: /root/cephfs-client/dfs-0-1010
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1011 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1011
receive_execute: 10, 7
receive_execute: 5, 7
receive_execute: 5, 7
receive_execute: 7, 6
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 4005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4005, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 4005, write pid:-2126826171
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 17, 4, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4253, flag collect 0
----- executor 2 signal number : 1262
----- executor 2 executes write_coverage_signal cov->size 11599, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4890
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 6497, flag collect 0
----- executor 2 signal number : 552
executor 2 server cover_cnt 5 output_pos_value 6795
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 12, 6, 0
time breakdown 0: 13, 6, 0
before receive testcase: 0 1
before receive testcase: 0 1
time breakdown 2: 12, 5, 0
before receive testcase: 0 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 14
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 3 replies
2023/03/27 22:20:16 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4890 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 552 signal and 0 cover from userspace component
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 122 chown chown
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 3970 unlink unlink
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 ----- splice()
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 11
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
setxattr$system_posix_acl(&(0x7f0000000280)='./file1\x00', &(0x7f00000002c0)='system.posix_acl_access\x00', &(0x7f0000000140)=ANY=[@ANYRES16], 0x24, 0x0)
open(&(0x7f0000000040)='./file0\x00', 0x242, 0x0)
lsetxattr$system_posix_acl(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='system.posix_acl_access\x00', &(0x7f0000000300)=ANY=[@ANYBLOB="020000000100000000000000040000000000000010000000040000002000000000000000"], 0x24, 0x0)
lsetxattr$security_evm(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580), 0x0, 0x0, 0x3)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000100)='./file1\x00')
llistxattr(&(0x7f0000000080)='./file1\x00', &(0x7f0000000180)=""/155, 0x9b)
chown(&(0x7f0000000240)='\x00', 0xffffffffffffffff, 0xffffffffffffffff)
open$dir(&(0x7f0000000340)='./file1\x00', 0x800, 0x10)
unlink(&(0x7f0000000300)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1912
remove dir: /root/cephfs-client/dfs-0-1011
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1012 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1012
receive_execute: 7, 11
receive_execute: 5, 12
receive_execute: 5, 11
receive_execute: 5, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 511, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 602, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 602, flag collect 0
----- executor 3 signal number : 122
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 294, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 294, flag collect 0
----- executor 3 signal number : 139
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 213, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 213, flag collect 0
----- executor 3 signal number : 22
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 13
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 481, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 481, flag collect 0
----- executor 3 signal number : 30
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 150, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 150, flag collect 0
----- executor 3 signal number : 11
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 118, pid 4008, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 118, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 18, 8, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10602, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1294
----- executor 2 executes write_coverage_signal cov->size 30932, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 9, 0
before receive testcase: 0 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6580
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
time breakdown 1: 16, 10, 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 23138, flag collect 0
----- executor 2 signal number : 677
executor 2 server cover_cnt 5 output_pos_value 8641
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 23
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 11 replies
2023/03/27 22:20:16 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 5 replies
2023/03/27 22:20:16 fuzzer receive 139 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 22 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1294 signal and 0 cover from userspace component
2023/03/27 22:20:16 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 17, 12, 0
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 6580 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 677 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:20:16 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:16 ----- no new client coverage: false, true
2023/03/27 22:20:16 mutate testcase with failures
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2458 open open
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 2814 rmdir rmdir
2023/03/27 22:20:16 ----- insertCall()
2023/03/27 22:20:16 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/27 22:20:16 ----- mutateArg()
2023/03/27 22:20:16 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:16 prog length: 11
2023/03/27 22:20:16 HasCrashFail:false HasNetFail:false
22:20:16 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
rmdir(&(0x7f0000000080)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
setxattr$trusted_overlay_opaque(&(0x7f00000005c0)='./file3\x00', &(0x7f0000000600), 0x0, 0x0, 0x0)
open(&(0x7f0000000040)='./file2\x00', 0x208402, 0x1c2)
open$dir(&(0x7f0000000680)='./file3\x00', 0x0, 0x0)
setxattr$trusted_overlay_origin(&(0x7f00000000c0)='./file1\x00', &(0x7f00000001c0), &(0x7f0000000240), 0x2, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1680
remove dir: /root/cephfs-client/dfs-0-1012
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1013 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1013
receive_execute: 7, 27
receive_execute: 2, 28
receive_execute: 3, 27
receive_execute: 5, 28
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 0, 1
----- executor 3 write_call_output, size 511, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 599, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 599, flag collect 0
----- executor 3 signal number : 147
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 856, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 3 signal number : 168
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 607, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 607, flag collect 0
----- executor 3 signal number : 31
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 438, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 3 signal number : 24
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 611, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 611, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 460, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 460, flag collect 0
----- executor 3 signal number : 88
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 405, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 405, flag collect 0
----- executor 3 signal number : 29
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 20
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 429, pid 4011, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 429, flag collect 0
----- executor 3 signal number : 46
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 11, 14, 0
execute_one time: 1, 25
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2282, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 3: 34, 28, 0
before receive testcase: 0 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1407
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 33, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 1170
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7607
----- executor 2 executes write_coverage_signal cov->size 418, flag collect 0
----- executor 2 signal number : 102
----- executor 2 executes write_coverage_signal cov->size 9242, flag collect 0
time breakdown 1: 30, 29, 0
before receive testcase: 0 0
----- executor 2 signal number : 514
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 783
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6554
executor 2 server cover_cnt 9 output_pos_value 18238
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:16 for select break: 1
2023/03/27 22:20:16 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:20:16 wg wait finish
2023/03/27 22:20:16 ------ all executors finish execution
2023/03/27 22:20:16 exec time: 63
2023/03/27 22:20:16 ----- PS len: 4
2023/03/27 22:20:16 [CLIENT] executor 3 has 11 replies
2023/03/27 22:20:16 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 147 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 168 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 20 signal and 0 cover from executor 3
2023/03/27 22:20:16 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/27 22:20:16 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:16 [SERVER] executor 2 has 9 replies
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1407 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 1170 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 7607 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 102 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 514 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 783 signal and 0 cover from userspace component
2023/03/27 22:20:16 ------- fuzzer executor 2 receive 6554 signal and 0 cover from userspace component
time breakdown 2: 30, 34, 0
before receive testcase: 0 1
2023/03/27 22:20:17 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:17 ----- no new client coverage: false, true
2023/03/27 22:20:17 mutate testcase with failures
2023/03/27 22:20:17 ----- insertCall()
2023/03/27 22:20:17 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/27 22:20:17 ----- mutateArg()
2023/03/27 22:20:17 ----- insertCall()
2023/03/27 22:20:17 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/27 22:20:17 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:17 prog length: 16
2023/03/27 22:20:17 HasCrashFail:false HasNetFail:false
22:20:17 ---executing program 0:
---
---
---
write$binfmt_elf32(0xffffffffffffffff, &(0x7f0000000340)={{0x7f, 0x45, 0x4c, 0x46, 0x9, 0x80, 0x3, 0x7, 0x4, 0x2, 0x3, 0x7, 0x391, 0x38, 0x5, 0x5, 0x5, 0x20, 0x1, 0x6a0, 0x2, 0x8}, [{0x6, 0x81, 0x5, 0x2, 0x1000, 0xe99, 0x9, 0x6}, {0x6, 0x9, 0x9, 0xc2e, 0x20, 0x7, 0x5, 0x8001}], "3140dd2b2490239a678f1d77fdc85ebda742bd1b91cffb938ab99f8adb42119c7eb5ad9e33f4f7c627474a4f84a26dbc88b6f20b27f7d11a34e82bbd5de02a7e81a880d084c54354a61b79bd57197468c1514cd4f6ab5f5496dc615f4199090a140086ba28a85ad221d98624a11d4388261df9fbd9ac7c4c6a61c3397d287b8a5fd65a338213cd11e3e49384d3a1adaf6d6ecf056dc0f94fe3b318a6d747", ['\x00']}, 0x216)
r0 = dup(0xffffffffffffffff)
mkdirat(r0, &(0x7f00000000c0)='./file0\x00', 0x80)
r1 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsync(r1)
fcntl$notify(r1, 0x402, 0x24)
r2 = open(&(0x7f0000000040)='./file0\x00', 0x101240, 0x8)
lgetxattr(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)=@known='trusted.overlay.opaque\x00', 0x0, 0x0)
fcntl$setflags(r2, 0x2, 0x0)
fstat(0xffffffffffffffff, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
fsetxattr$security_capability(r1, &(0x7f0000000180), &(0x7f0000000240)=@v3={0x3000000, [{0x2, 0xffffffff}, {0xfffffffd, 0x9}], r3}, 0x18, 0x2)
r4 = open$dir(&(0x7f0000000080)='./file0\x00', 0x22a00, 0x22)
fcntl$dupfd(r1, 0x406, r4)
r5 = dup2(r2, r2)
fcntl$setpipe(r2, 0x407, 0x5)
fsetxattr$trusted_overlay_redirect(r5, &(0x7f00000002c0), &(0x7f0000000300)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4432
remove dir: /root/cephfs-client/dfs-0-1013
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1014 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1014
receive_execute: 12, 13
receive_execute: 5, 14
receive_execute: 11, 13
receive_execute: 10, 13
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 187, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 187, flag collect 0
----- executor 3 signal number : 91
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 572, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 572, flag collect 0
----- executor 3 signal number : 117
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4015, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 4015, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 128
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 7, 0
execute_one time: 1, 14
2023/03/27 22:20:17 for select break: 1
2023/03/27 22:20:17 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 770, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 21180, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1403
----- executor 2 executes write_coverage_signal cov->size 23766, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1030
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:20:17 for select break: 1
2023/03/27 22:20:17 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:20:17 for select break: 1
2023/03/27 22:20:17 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 19, 0
before receive testcase: 0 0
time breakdown 3: 25, 18, 0
before receive testcase: 0 0
----- executor 2 signal number : 7412
----- executor 2 executes write_coverage_signal cov->size 355, flag collect 0
----- executor 2 signal number : 248
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2178
----- executor 2 executes write_coverage_signal cov->size 21712, flag collect 0
----- executor 2 signal number : 4578
time breakdown 1: 24, 19, 0
before receive testcase: 0 0
executor 2 server cover_cnt 8 output_pos_value 16944
2023/03/27 22:20:17 for select break: 1
2023/03/27 22:20:17 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:20:17 wg wait finish
2023/03/27 22:20:17 ------ all executors finish execution
2023/03/27 22:20:17 exec time: 35
2023/03/27 22:20:17 ----- PS len: 4
2023/03/27 22:20:17 [CLIENT] executor 3 has 16 replies
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 [SERVER] executor 1 has 0 replies
2023/03/27 22:20:17 [SERVER] executor 2 has 8 replies
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 1403 signal and 0 cover from userspace component
2023/03/27 22:20:17 [SERVER] executor 0 has 0 replies
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 1030 signal and 0 cover from userspace component
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 7412 signal and 0 cover from userspace component
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 248 signal and 0 cover from userspace component
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 2178 signal and 0 cover from userspace component
2023/03/27 22:20:17 ------- fuzzer executor 2 receive 4578 signal and 0 cover from userspace component
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 91 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 117 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:20:17 fuzzer receive 128 signal and 0 cover from executor 3
2023/03/27 22:20:17 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:20:17 ----- no new client coverage: false, true
2023/03/27 22:20:17 mutate testcase with failures
2023/03/27 22:20:17 ----- mutateArg()
2023/03/27 22:20:17 ----- insertCall()
2023/03/27 22:20:17 ----- generateCall 171 dup2 dup2
2023/03/27 22:20:17 ----- insertCall()
2023/03/27 22:20:17 ----- generateCall 3970 unlink unlink
2023/03/27 22:20:17 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:20:17 prog length: 10
2023/03/27 22:20:17 HasCrashFail:false HasNetFail:false
22:20:17 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x121040, 0x0)
r1 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r2 = dup(r0)
r3 = fcntl$dupfd(r2, 0x406, r1)
flock(r3, 0x2)
unlink(&(0x7f0000000080)='./file0\x00')
r4 = openat(r0, &(0x7f0000000040)='./file0/../file0\x00', 0x20200, 0x2)
dup2(r4, r0)
flock(r1, 0x1)
flock(r1, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 19, 21, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1192
remove dir: /root/cephfs-client/dfs-0-1014
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 7
-----finish removing dir
receive_execute: 7, 8
receive_execute: 4, 9
receive_execute: 6, 9
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1015 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1015
receive_execute: 8, 8
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 319, pid 4019, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 319, flag collect 0
----- executor 3 signal number : 122
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 491, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 491, flag collect 0
----- executor 3 signal number : 47
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4019, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
execute_one loop: 0, 0, 51
----- executor 3 write_call_output, size 223, pid 4019, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 223, flag collect 0
----- executor 3 signal number : 1
----- completed 9
----- executor 3 write_call_output, size 224, pid 4019, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 224, flag collect 0
----- executor 3 signal number : 0
----- completed 10
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 83335, 2, 0
execute_one time: 1, 83337
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 83340, 0
before receive testcase: 0 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 16, 83339, 0
before receive testcase: 0 0
----- executor 2 signal number : 1391
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1220
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 835
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 15, 83342, 0
before receive testcase: 0 0
----- executor 2 signal number : 8042
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 752
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1581
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4789
----- executor 2 executes write_coverage_signal cov->size 2297, flag collect 0
----- executor 2 signal number : 163
----- executor 2 executes write_coverage_signal cov->size 4236, flag collect 0
----- executor 2 signal number : 384
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2413
----- executor 2 executes write_coverage_signal cov->size 63, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1006
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 936
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3917
----- executor 2 executes write_coverage_signal cov->size 1953, flag collect 0
----- executor 2 signal number : 13
executor 2 server cover_cnt 17 output_pos_value 27621
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 83361
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 10 replies
2023/03/27 22:21:40 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 17 replies
time breakdown 2: 13, 83353, 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1391 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1220 signal and 0 cover from userspace component
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 835 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 8042 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 752 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1581 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4789 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 163 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 384 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 2413 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1006 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 936 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3917 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2458 open open
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 7
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x200c1, 0xc)
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0x0)
chown(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
lsetxattr$security_smack_transmute(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240), 0x4, 0x0)
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x408100, 0x22)
fsetxattr$security_evm(r0, &(0x7f00000000c0), &(0x7f0000000100)=@sha1={0x1, "332d5b19f3d189df8dd01e695906454077607cbf"}, 0x15, 0x3)
open(&(0x7f0000000140)='./file0\x00', 0x408000, 0x101)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1312
remove dir: /root/cephfs-client/dfs-0-1015
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1016 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1016
receive_execute: 22, 10
receive_execute: 19, 10
receive_execute: 7, 11
receive_execute: 21, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 624, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 171
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 8
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 230, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 230, flag collect 0
----- executor 3 signal number : 56
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4089, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 32, 7, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4294, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11860, flag collect 0
----- executor 2 signal number : 5015
----- executor 2 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 2 signal number : 544
executor 2 server cover_cnt 4 output_pos_value 6908
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 7, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 8, 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 19
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 4 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [CLIENT] executor 3 has 7 replies
2023/03/27 22:21:40 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 171 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 8 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
time breakdown 2: 18, 9, 0
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 5015 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 544 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3761 stat stat
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 4
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
open$dir(&(0x7f00000011c0)='./file1\x00', 0x12441, 0x0)
truncate(&(0x7f0000000280)='./file1\x00', 0x5)
stat(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080))
openat(0xffffffffffffff9c, &(0x7f0000000040)='./file1\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 528
remove dir: /root/cephfs-client/dfs-0-1016
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
receive_execute: 2, 13
receive_execute: 0, 12
mkdir time 5
executor 3 create dir /root/cephfs-client/dfs-0-1017 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1017
receive_execute: 5, 13
receive_execute: 4, 13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 616, pid 4092, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 616, flag collect 0
----- executor 3 signal number : 497
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1084, pid 4092, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 1084, flag collect 0
----- executor 3 signal number : 264
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 4092, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 19
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 383, pid 4092, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 383, flag collect 0
----- executor 3 signal number : 89
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
cover_reset in execute_call
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 614, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12, 7, 0
before receive testcase: 0 0
time breakdown 3: 18, 5, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 17, 8, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 23
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 4 replies
2023/03/27 22:21:40 fuzzer receive 497 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 264 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 7 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1392 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 961 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7881 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1177 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 2096 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10971, flag collect 0
----- executor 2 signal number : 1392
----- executor 2 executes write_coverage_signal cov->size 18309, flag collect 0
----- executor 2 signal number : 961
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7881
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28993, flag collect 0
----- executor 2 signal number : 1177
----- executor 2 executes write_coverage_signal cov->size 7852, flag collect 0
----- executor 2 signal number : 2096
executor 2 server cover_cnt 7 output_pos_value 13601
time breakdown 2: 15, 10, 0
before receive testcase: 0 0
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 131 close close
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 6
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
symlinkat(&(0x7f00000000c0)='.\x00', 0xffffffffffffff9c, &(0x7f0000000180)='./file0\x00')
r0 = open(&(0x7f00000001c0)='./file0\x00', 0x2000, 0x0)
setxattr$incfs_size(&(0x7f0000000100)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=0x9, 0x8, 0x0)
read(r0, 0x0, 0x0)
r1 = dup(r0)
close(r1)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 856
remove dir: /root/cephfs-client/dfs-0-1017
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1018 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1018
receive_execute: 8, 10
receive_execute: 7, 10
receive_execute: 5, 10
receive_execute: 3, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 209, pid 4095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 517, pid 4095, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 517, flag collect 0
----- executor 3 signal number : 95
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 4095, write pid:-2127091528
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4095, write pid:-2127091528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4095, write pid:-2127091528
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 2, 5
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 451, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8659, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1279
time breakdown 0: 15, 10, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 20625, flag collect 0
time breakdown 1: 17, 10, 0
before receive testcase: 0 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 5326
----- executor 2 executes write_coverage_signal cov->size 18148, flag collect 0
----- executor 2 signal number : 629
time breakdown 3: 18, 8, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 7314
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 23
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 6 replies
2023/03/27 22:21:40 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 95 signal and 0 cover from executor 3
time breakdown 2: 13, 13, 0
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fuzzer receive 2 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 2 has 4 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1279 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 5326 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 629 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3967 truncate truncate
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2781 readlinkat readlinkat
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 5
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0xa5)
readlinkat(0xffffffffffffffff, &(0x7f0000000040)='./file0/file0\x00', &(0x7f00000000c0)=""/40, 0x28)
fcntl$lock(r0, 0x26, &(0x7f0000000100))
fsync(r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 816
remove dir: /root/cephfs-client/dfs-0-1018
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1019 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1019
receive_execute: 6, 8
receive_execute: 5, 8
receive_execute: 5, 9
receive_execute: 2, 9
executor 0 before execute_one
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 4098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4098, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 315, pid 4098, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 92
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 12, pid 4098, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 3 signal number : 12
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 1, 9
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 14, 11, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 547, flag collect 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10943, flag collect 0
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 14991, flag collect 0
----- executor 2 signal number : 939
----- executor 2 executes write_coverage_signal cov->size 27176, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 12, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 7051
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28539, flag collect 0
----- executor 2 signal number : 1992
----- executor 2 executes write_coverage_signal cov->size 13296, flag collect 0
----- executor 2 signal number : 3002
executor 2 server cover_cnt 7 output_pos_value 14467
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 24
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 5 replies
2023/03/27 22:21:40 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 92 signal and 0 cover from executor 3
time breakdown 2: 11, 15, 0
2023/03/27 22:21:40 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 7 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 939 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7051 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1992 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3002 signal and 0 cover from userspace component
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 6
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
lsetxattr$security_selinux(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180)='system_u:object_r:mnt_t:s0\x00', 0x1b, 0x3)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x0, 0x0)
symlinkat(&(0x7f0000000000)='./file0\x00', r0, &(0x7f0000000040)='./file0\x00')
r1 = fcntl$dupfd(r0, 0x0, r0)
fchmod(r1, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1024
remove dir: /root/cephfs-client/dfs-0-1019
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1020 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1020
receive_execute: 7, 9
receive_execute: 2, 9
receive_execute: 5, 9
receive_execute: 5, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 265, pid 4101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 265, flag collect 0
----- executor 3 signal number : 137
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 48
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4101, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 71, pid 4101, write pid:-2127102741
----- executor 3 executes write_coverage_signal cov->size 71, flag collect 0
----- executor 3 signal number : 56
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 16, 6, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10457, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1280
----- executor 2 executes write_coverage_signal cov->size 25515, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 8, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 13, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 6110
----- executor 2 executes write_coverage_signal cov->size 15995, flag collect 0
----- executor 2 signal number : 647
----- executor 2 executes write_coverage_signal cov->size 13305, flag collect 0
----- executor 2 signal number : 585
executor 2 server cover_cnt 5 output_pos_value 8705
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 20
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 6 replies
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fuzzer receive 401 signal and 0 cover from executor 3
time breakdown 2: 11, 11, 0
2023/03/27 22:21:40 [SERVER] executor 2 has 5 replies
2023/03/27 22:21:40 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1280 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 6110 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 647 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 585 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 2
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
lsetxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='security.SMACK64MMAP\x00', &(0x7f0000000080)={'/+'}, 0x3, 0x0)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 440
remove dir: /root/cephfs-client/dfs-0-1020
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 14
-----finish removing dir
receive_execute: 2, 16
receive_execute: 4, 16
receive_execute: 4, 16
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1021 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1021
receive_execute: 6, 16
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 519, pid 4105, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
time breakdown 3: 22, 3, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4174, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11303, flag collect 0
----- executor 2 signal number : 4696
----- executor 2 executes write_coverage_signal cov->size 3137, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 4, 0
before receive testcase: 0 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 7114, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 524
executor 2 server cover_cnt 5 output_pos_value 6896
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 21
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 2 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 fuzzer receive 382 signal and 0 cover from executor 3
time breakdown 2: 18, 5, 0
2023/03/27 22:21:40 [SERVER] executor 2 has 5 replies
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4696 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 524 signal and 0 cover from userspace component
time breakdown 0: 21, 3, 0
before receive testcase: 0 0
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 131 close close
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3663 setxattr$incfs_id setxattr$incfs_id
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2458 open open
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3970 unlink unlink
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2458 open open
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2462 openat openat
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2343 link link
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2809 rename rename
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2458 open open
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 18
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
open$dir(&(0x7f00000011c0)='./file1\x00', 0x12441, 0x0)
open(&(0x7f0000000040)='./file1\x00', 0x40101, 0x0)
r0 = open$dir(&(0x7f0000000080)='./file1\x00', 0x0, 0x100)
open(&(0x7f00000002c0)='./file1\x00', 0x0, 0x0)
fstat(r0, &(0x7f0000000300))
unlink(&(0x7f0000000240)='./file1\x00')
setxattr$trusted_overlay_redirect(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='./file1\x00', 0x8, 0x1)
r1 = open$dir(&(0x7f0000000380)='./file1\x00', 0x2a840, 0x15)
read(r1, &(0x7f00000003c0)=""/109, 0x6d)
fsetxattr$trusted_overlay_nlink(r1, &(0x7f0000000440), &(0x7f0000000480)={'L+', 0x4f}, 0x16, 0x2)
setxattr$incfs_id(&(0x7f0000000000)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100)={'0000000000000000000000000000000', 0x30}, 0x20, 0x1)
open(&(0x7f0000000280)='./file1\x00', 0x600402, 0x100)
open(&(0x7f0000000600)='./file1\x00', 0x20380, 0x12)
r2 = open(&(0x7f0000000200)='./file1\x00', 0x32482, 0x0)
link(&(0x7f0000000500)='./file1\x00', &(0x7f0000000540)='./file1/file0\x00')
close(r1)
rename(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0)='./file1\x00')
openat(r2, &(0x7f00000004c0)='./file1\x00', 0x400000, 0x22)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2896
remove dir: /root/cephfs-client/dfs-0-1021
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1022 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1022
receive_execute: 7, 16
receive_execute: 6, 16
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 229
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 4107, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 500, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 500, flag collect 0
----- executor 3 signal number : 41
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
----- executor 3 write_call_output, size 640, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 3 signal number : 15
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 4107, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 108
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 149, pid 4107, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 149, flag collect 0
----- executor 3 signal number : 104
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 274, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 274, flag collect 0
----- executor 3 signal number : 41
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 575, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 575, flag collect 0
----- executor 3 signal number : 73
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4107, write pid:-2127101003
receive_execute: 6, 16
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 4107, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 2
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4107, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 10, 0
execute_one time: 1, 18
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1249, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 30126, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 21, 0
----- executor 2 signal number : 1404
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1062
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 23, 20, 0
before receive testcase: 0 0
----- executor 2 signal number : 8366
----- executor 2 executes write_coverage_signal cov->size 665, flag collect 0
----- executor 2 signal number : 256
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1701
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 22, 21, 0
before receive testcase: 0 0
----- executor 2 signal number : 5542
executor 2 server cover_cnt 8 output_pos_value 18428
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 44
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 18 replies
2023/03/27 22:21:40 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
time breakdown 2: 20, 28, 0
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1062 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 108 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 8366 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 256 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 73 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1701 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 5542 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2341 lchown lchown
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3967 truncate truncate
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 9
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x9)
unlink(&(0x7f0000000140)='./file0\x00')
chown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, 0xee00)
setxattr$security_evm(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@md5={0x1, "23b4c96b6f719c143f00148a2b554432"}, 0x11, 0x1)
setxattr$security_smack_transmute(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x4, 0x2)
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
truncate(&(0x7f0000000340)='./file0\x00', 0x0)
lchown(&(0x7f0000000240)='./file0\x00', 0xee00, r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1504
remove dir: /root/cephfs-client/dfs-0-1022
remove dir time 5
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1023 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1023
receive_execute: 13, 7
receive_execute: 12, 7
receive_execute: 5, 7
receive_execute: 12, 7
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 495, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 495, flag collect 0
----- executor 3 signal number : 25
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4111, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 6, 0
execute_one time: 0, 15
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 825, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 16389, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 20, 16, 0
before receive testcase: 0 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 27103, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 18, 0
before receive testcase: 0 0
time breakdown 1: 19, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 7634
----- executor 2 executes write_coverage_signal cov->size 3502, flag collect 0
----- executor 2 signal number : 356
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1816
----- executor 2 executes write_coverage_signal cov->size 23026, flag collect 0
----- executor 2 signal number : 4298
executor 2 server cover_cnt 8 output_pos_value 16637
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 29
2023/03/27 22:21:40 ----- PS len: 4
time breakdown 2: 12, 23, 0
2023/03/27 22:21:40 [CLIENT] executor 3 has 9 replies
2023/03/27 22:21:40 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7634 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 356 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1816 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4298 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2809 rename rename
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 14
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
mkdir(&(0x7f00000002c0)='./file2\x00', 0x0)
rename(&(0x7f0000000000)='./file2\x00', &(0x7f00000003c0)='./file0\x00')
r0 = open(&(0x7f0000000280)='./file2\x00', 0x119041, 0x7d97552564738268)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file3\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file4\x00')
unlink(&(0x7f0000000380)='./file0\x00')
rename(&(0x7f0000000100)='./file4\x00', &(0x7f0000000200)='./file0\x00')
r1 = dup(r0)
fcntl$getownex(r0, 0x10, &(0x7f0000000300)={0x0, <r2=>0x0})
fcntl$lock(r1, 0x25, &(0x7f0000000340)={0x0, 0x4, 0x40, 0x9e, r2})
mkdir(&(0x7f0000000240)='./file4\x00', 0x6)
lsetxattr$security_selinux(&(0x7f0000000080)='./file2\x00', &(0x7f00000000c0), &(0x7f00000001c0)='system_u:object_r:bin_t:s0\x00', 0x1b, 0x1)
open$dir(&(0x7f0000000400)='./file2\x00', 0x410400, 0x81)
listxattr(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2208
remove dir: /root/cephfs-client/dfs-0-1023
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1024 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1024
receive_execute: 9, 10
receive_execute: 8, 10
receive_execute: 3, 9
receive_execute: 8, 9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 603, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 3 signal number : 79
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 602, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 602, flag collect 0
----- executor 3 signal number : 144
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 225, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 225, flag collect 0
----- executor 3 signal number : 17
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 602, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 602, flag collect 0
----- executor 3 signal number : 11
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 140, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 258, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 258, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 170, pid 4114, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 170, flag collect 0
----- executor 3 signal number : 40
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 13, 9, 0
execute_one time: 0, 22
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 24, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1112, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 21463, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 27543, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 25, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 25, 0
before receive testcase: 0 0
----- executor 2 signal number : 968
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7807
----- executor 2 executes write_coverage_signal cov->size 3477, flag collect 0
----- executor 2 signal number : 373
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1111
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 6923
executor 2 server cover_cnt 8 output_pos_value 18678
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 40
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 14 replies
2023/03/27 22:21:40 fuzzer receive 401 signal and 0 cover from executor 3
time breakdown 2: 12, 30, 0
2023/03/27 22:21:40 fuzzer receive 79 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 144 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fuzzer receive 17 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 11 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 40 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 968 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7807 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 373 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1111 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 6923 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3664 setxattr$incfs_metadata setxattr$incfs_metadata
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 6
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
sync()
symlinkat(&(0x7f0000000140)='./file1\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00')
openat(0xffffffffffffff9c, &(0x7f0000000000)='./file1\x00', 0x80, 0x31)
setxattr$incfs_metadata(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)="35ca41040bee69a7da8d91b55d2d1049e9cdefde202870ae5b0dd6281082e348e4b942586e9e366145f9136820488f9518926a7126e88e065cf1085096cfebe69a3db0bd841cff2f2e9219213739cfa0b171b9a7167380a54523e39c147e4bfc17f7d8dcb736d6055136a78cb900e7698e8cfa32c06763b22145ebdfc112662f59a10a0f0c873424b672d67abb49b67e81b82ea154ac2e90b9cc296c411b9bf5a018ad22f83a8f2728", 0xa9, 0x1)
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x60000, 0x48)
mkdirat(r0, &(0x7f0000000080)='./file0\x00', 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1112
remove dir: /root/cephfs-client/dfs-0-1024
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1025 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1025
receive_execute: 10, 13
receive_execute: 9, 13
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
receive_execute: 4, 14
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 9, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 805, pid 4117, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 805, flag collect 0
----- executor 3 signal number : 391
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4117, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 416, pid 4117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 416, flag collect 0
----- executor 3 signal number : 261
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 13
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4117, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 12, 1, 0
execute_one time: 1, 13
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 222, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10538, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 6928, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 842
----- executor 2 executes write_coverage_signal cov->size 10310, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 23, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 3541
----- executor 2 executes write_coverage_signal cov->size 347, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 20089, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1615
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 11026, flag collect 0
time breakdown 1: 22, 17, 0
before receive testcase: 0 0
time breakdown 0: 22, 18, 0
----- executor 2 signal number : 2880
executor 2 server cover_cnt 8 output_pos_value 10605
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 32
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 6 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fuzzer receive 391 signal and 0 cover from executor 3
time breakdown 2: 18, 19, 0
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 842 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3541 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1615 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 2880 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 261 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2374 mkdirat mkdirat
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 6
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open(&(0x7f0000000040)='./file1\x00', 0x0, 0x0)
r1 = open$dir(&(0x7f0000000080)='./file1\x00', 0x101102, 0x40)
mkdirat(r1, &(0x7f00000000c0)='./file0\x00', 0x8)
symlinkat(&(0x7f0000000100)='./file1\x00', r0, &(0x7f0000000140)='./file0\x00')
getdents64(r0, &(0x7f0000000180)=""/164, 0xa4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 872
remove dir: /root/cephfs-client/dfs-0-1025
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1026 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1026
receive_execute: 7, 12
receive_execute: 3, 12
receive_execute: 3, 12
receive_execute: 7, 11
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4120, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4120, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4120, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4120, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4120, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 4120, write pid:-2127060705
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 172
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 6, 0, 0
execute_one time: 1, 6
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 9, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 453, flag collect 0
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10512, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 12241, flag collect 0
----- executor 2 signal number : 901
----- executor 2 executes write_coverage_signal cov->size 27029, flag collect 0
time breakdown 0: 15, 10, 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 11, 0
----- executor 2 signal number : 6684
----- executor 2 executes write_coverage_signal cov->size 2074, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19341, flag collect 0
----- executor 2 signal number : 856
----- executor 2 executes write_coverage_signal cov->size 18128, flag collect 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 3770
executor 2 server cover_cnt 8 output_pos_value 14009
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 25
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 6 replies
2023/03/27 22:21:40 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
time breakdown 2: 15, 13, 0
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 901 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 6684 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 856 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3770 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 258 getdents getdents
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2458 open open
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 9
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
lgetxattr(&(0x7f0000000180)='./file1/file0\x00', &(0x7f00000001c0)=ANY=[@ANYBLOB="50d307bd00"], &(0x7f0000000200)=""/72, 0x48)
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open$dir(&(0x7f00000000c0)='./file1\x00', 0x0, 0x0)
chmod(&(0x7f0000000140)='./file1\x00', 0x1)
open(&(0x7f0000000400)='./file1/file0\x00', 0x200, 0x8)
listxattr(&(0x7f0000000280)='./file1/file0\x00', &(0x7f00000002c0)=""/64, 0x40)
getdents(0xffffffffffffff9c, &(0x7f0000000300)=""/244, 0xf4)
symlinkat(&(0x7f0000000040)='./file1\x00', r0, &(0x7f0000000100)='./file1\x00')
rmdir(&(0x7f0000000080)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1248
remove dir: /root/cephfs-client/dfs-0-1026
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1027 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1027
receive_execute: 7, 14
receive_execute: 3, 14
receive_execute: 5, 14
receive_execute: 5, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 85, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 519, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 64
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 82
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 492, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 492, flag collect 0
----- executor 3 signal number : 97
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 455, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 3 signal number : 33
----- completed 8
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 548, pid 4122, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 548, flag collect 0
----- executor 3 signal number : 26
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 21, 10, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 581, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10512, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 18971, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 963
----- executor 2 executes write_coverage_signal cov->size 32204, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 19, 12, 0
before receive testcase: 0 0
time breakdown 1: 19, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 7184
----- executor 2 executes write_coverage_signal cov->size 2087, flag collect 0
----- executor 2 signal number : 310
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27007, flag collect 0
----- executor 2 signal number : 1812
----- executor 2 executes write_coverage_signal cov->size 18038, flag collect 0
----- executor 2 signal number : 4098
executor 2 server cover_cnt 8 output_pos_value 15853
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 28
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 9 replies
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
time breakdown 2: 17, 14, 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 963 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7184 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 82 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1812 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 26 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4098 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 4
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
open(&(0x7f0000000140)='./file0\x00', 0x218341, 0x2)
truncate(&(0x7f0000000000)='./file0\x00', 0x4)
setxattr$trusted_overlay_nlink(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)={'L-', 0x9}, 0x16, 0x3)
chmod(&(0x7f0000000200)='./file0\x00', 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 688
remove dir: /root/cephfs-client/dfs-0-1027
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 17
-----finish removing dir
receive_execute: 4, 20
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-1028 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1028
receive_execute: 7, 21
receive_execute: 6, 21
receive_execute: 6, 20
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4126, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 28, 3, 0
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 24, 4, 0
before receive testcase: 0 0
time breakdown 1: 27, 4, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 25
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [CLIENT] executor 3 has 4 replies
time breakdown 0: 26, 4, 0
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 2 has 0 replies
2023/03/27 22:21:40 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3967 truncate truncate
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 5
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
write$binfmt_script(r0, &(0x7f0000000040)={'#! ', './file0', [{0x20, '*-['}, {0x20, '](:*-\xd9#'}, {0x20, '&,^'}, {}, {0x20, '/'}, {0x20, '\\,'}], 0xa, "fba2dd8d1148c67589501c8b1f84fc64a8bb7491"}, 0x35)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
truncate(&(0x7f0000000080)='./file0\x00', 0x69e)
lchown(&(0x7f0000000100)='./file0\x00', r1, 0xffffffffffffffff)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/cephfs-client/dfs-0-1028
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 4
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1029 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1029
receive_execute: 1, 6
receive_execute: 0, 5
receive_execute: 0, 6
receive_execute: 1, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 626, pid 4129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 626, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 4129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 148
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 524, pid 4129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 3 signal number : 131
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 465, pid 4129, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 465, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 4, 1, 0
execute_one time: 1, 5
executor 2 write_server_output
time breakdown 3: 7, 7, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 516, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 15188, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1342
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6, 8, 0
----- executor 2 signal number : 6765
----- executor 2 executes write_coverage_signal cov->size 30812, flag collect 0
----- executor 2 signal number : 683
executor 2 server cover_cnt 4 output_pos_value 8870
time breakdown 1: 6, 9, 0
before receive testcase: 0 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 18
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 5 replies
2023/03/27 22:21:40 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 4 replies
2023/03/27 22:21:40 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1342 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 6765 signal and 0 cover from userspace component
time breakdown 2: 7, 11, 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 683 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
before receive testcase: 0 0
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2356 lsetxattr$security_smack_transmute lsetxattr$security_smack_transmute
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 121 chmod chmod
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 5
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
chmod(&(0x7f0000000180)='./file1\x00', 0x100)
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
open$dir(&(0x7f00000001c0)='./file1\x00', 0x8000, 0x0)
setxattr(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=@random={'security.', '\x00'}, 0x0, 0x0, 0x0)
lsetxattr$security_smack_transmute(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f0000000140), 0x4, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 928
remove dir: /root/cephfs-client/dfs-0-1029
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 22
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1030 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1030
receive_execute: 3, 23
receive_execute: 7, 23
receive_execute: 5, 23
receive_execute: 3, 22
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 519, pid 4132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 519, flag collect 0
----- executor 3 signal number : 382
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 64
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 298, pid 4132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 298, flag collect 0
----- executor 3 signal number : 130
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 4132, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 19
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 1, 0
execute_one time: 1, 2
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4172, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 30, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11364, flag collect 0
----- executor 2 signal number : 4699
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 7114, flag collect 0
----- executor 2 signal number : 522
executor 2 server cover_cnt 5 output_pos_value 6574
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 26, 6, 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 28, 7, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 31
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 5 replies
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 2 has 5 replies
2023/03/27 22:21:40 fuzzer receive 382 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4699 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
time breakdown 2: 26, 8, 0
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 522 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 64 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 130 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2782 readv readv
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 17
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r1 = fcntl$dupfd(r0, 0x406, r0)
fcntl$lock(r1, 0x24, &(0x7f0000000040)={0x2, 0x1, 0x1f, 0x2e5})
r2 = dup(r1)
r3 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r4 = open(&(0x7f0000000280)='./file0\x00', 0x121042, 0x0)
fcntl$setown(r2, 0x8, 0x0)
fcntl$lock(r4, 0x25, &(0x7f0000000a00)={0x0, 0x0, 0x3ff, 0x40000})
fcntl$lock(r4, 0x6, &(0x7f0000000080)={0x2, 0x2, 0x7f14, 0x9})
flock(r3, 0x6)
readv(r1, &(0x7f00000002c0)=[{&(0x7f00000001c0)=""/40, 0x28}, {&(0x7f0000000200)=""/84, 0x54}], 0x2)
fstat(r0, &(0x7f00000000c0))
r5 = dup(r4)
fcntl$dupfd(r2, 0x406, r5)
dup2(r0, 0xffffffffffffffff)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0/file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2976
remove dir: /root/cephfs-client/dfs-0-1030
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1031 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1031
receive_execute: 3, 20
receive_execute: 5, 20
receive_execute: 1, 20
receive_execute: 3, 20
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 620, pid 4135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 4135, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 4135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 314, pid 4135, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 314, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 4135, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 7
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 303, pid 4135, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 303, flag collect 0
----- executor 3 signal number : 15
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 203, pid 4135, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 203, flag collect 0
----- executor 3 signal number : 119
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 4135, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4135, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4135, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 3, 2
execute_one time: 1, 20
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 22, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1134, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10307, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 30677, flag collect 0
----- executor 2 signal number : 1091
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 24, 0
2023/03/27 22:21:40 for select break: 1
time breakdown 1: 23, 24, 0
before receive testcase: 0 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 7119
----- executor 2 executes write_coverage_signal cov->size 6058, flag collect 0
----- executor 2 signal number : 419
----- executor 2 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19800, flag collect 0
----- executor 2 signal number : 1697
----- executor 2 executes write_coverage_signal cov->size 11745, flag collect 0
----- executor 2 signal number : 2884
executor 2 server cover_cnt 8 output_pos_value 14698
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 47
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 17 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
time breakdown 2: 21, 28, 0
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:40 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 32 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1091 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7119 signal and 0 cover from userspace component
2023/03/27 22:21:40 fuzzer receive 119 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 419 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1697 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 2884 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2373 mkdir mkdir
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 6
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080), &(0x7f0000000100)='./file0/file1\x00', 0xe, 0x2)
mkdir(&(0x7f00000000c0)='./file0\x00', 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000400)='./file0/file1\x00', 0x0, 0x0, 0x0, 0x0)
stat(&(0x7f0000000180)='./file1\x00', 0x0)
mkdir(&(0x7f0000000140)='./file1\x00', 0x109)
rmdir(&(0x7f0000000240)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 920
remove dir: /root/cephfs-client/dfs-0-1031
remove dir time 8
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1032 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1032
receive_execute: 2, 11
receive_execute: 8, 11
receive_execute: 6, 11
receive_execute: 5, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- executor 3 write_call_output, size 85, pid 4139, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4139, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 356
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 4139, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 30
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4139, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 497, pid 4139, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 497, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 483, pid 4139, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 483, flag collect 0
----- executor 3 signal number : 43
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 1, 0
execute_one time: 1, 6
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 19, 8, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 644, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13000, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1284
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 10, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 10, 0
before receive testcase: 0 0
----- executor 2 signal number : 6530
----- executor 2 executes write_coverage_signal cov->size 1035, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 651
executor 2 server cover_cnt 5 output_pos_value 8838
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 24
2023/03/27 22:21:40 ----- PS len: 4
time breakdown 2: 13, 14, 0
2023/03/27 22:21:40 [CLIENT] executor 3 has 6 replies
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 356 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 43 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 2 has 5 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1284 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 6530 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 651 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2357 lsetxattr$smack_xattr_label lsetxattr$smack_xattr_label
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 4
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lsetxattr$smack_xattr_label(&(0x7f0000000000)='\x00', &(0x7f0000000040)='security.SMACK64EXEC\x00', &(0x7f0000000080), 0x1, 0x3)
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
lsetxattr$trusted_overlay_upper(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f00000002c0)={0x0, 0xfb, 0xcb, 0x1, 0xc0, "7570f7b8664ba2f8dc68e2b25bedd7e9", "f394773dfb7856844ca5df53d5134f6285e137e1bbde41bb9dd2b12ed9c573d66abe366884d77493f80ead0d3127edb1b6c3efd4f55e6d3bd426c95849fd2e6b6d0a7b95d21b2844d400a56b396d3f60c719f29e3cc67a614fbce3399b5c2f37d2f18b30fecb0bcdd61d744f99f49b740764ebc7ed0493dec6a7c828ca31859287d32f6ee6ab7c54686fefa218ca69762474bd4be890b96e39a56c2dfa439c42e87ee300df8b58b8f367f56025da21eb31b4d87a7df3"}, 0xcb, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1280
remove dir: /root/cephfs-client/dfs-0-1032
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1033 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1033
receive_execute: 7, 18
receive_execute: 6, 17
receive_execute: 2, 17
receive_execute: 5, 18
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 477, pid 4143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 235, pid 4143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 3 signal number : 148
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 260, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 8032, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 18291, flag collect 0
----- executor 3 write_call_output, size 530, pid 4143, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 159
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
time breakdown 3: 25, 3, 0
before receive testcase: 0 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 5489
----- executor 2 executes write_coverage_signal cov->size 6186, flag collect 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 23, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 533
executor 2 server cover_cnt 4 output_pos_value 7387
time breakdown 1: 23, 5, 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 24
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 4 replies
2023/03/27 22:21:40 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 159 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 4 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 5489 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
time breakdown 2: 19, 6, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 2
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)='security.SMACK64EXEC\x00', &(0x7f0000000100)={'@'}, 0x2, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 480
remove dir: /root/cephfs-client/dfs-0-1033
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1034 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1034
receive_execute: 5, 12
receive_execute: 2, 12
receive_execute: 3, 12
receive_execute: 1, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 477, pid 4146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 4146, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
executor 2 write_server_output
executor 0 write_server_output
time breakdown 3: 17, 2, 0
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4188, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1269
----- executor 2 executes write_coverage_signal cov->size 10135, flag collect 0
----- executor 2 signal number : 4437
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 6186, flag collect 0
----- executor 2 signal number : 532
executor 2 server cover_cnt 5 output_pos_value 6328
time breakdown 0: 15, 4, 0
before receive testcase: 0 1
time breakdown 1: 14, 4, 0
before receive testcase: 0 1
before receive testcase: 0 1
time breakdown 2: 14, 5, 0
before receive testcase: 0 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 23
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 2 replies
2023/03/27 22:21:40 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 [SERVER] executor 2 has 5 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1269 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 4437 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 532 signal and 0 cover from userspace component
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 4
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
mkdirat(r0, &(0x7f00000000c0)='./file0\x00', 0x0)
chdir(&(0x7f0000000080)='./file0/file0\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000040)='./file0/file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 568
remove dir: /root/cephfs-client/dfs-0-1034
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1035 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1035
receive_execute: 9, 11
receive_execute: 11, 11
receive_execute: 9, 11
receive_execute: 8, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4148, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4148, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4148, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 4148, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 22, 3, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 94, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 68
----- executor 2 executes write_coverage_signal cov->size 4425, flag collect 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 526, flag collect 0
----- executor 2 signal number : 167
----- executor 2 executes write_coverage_signal cov->size 1065, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 11310, flag collect 0
----- executor 2 signal number : 1553
----- executor 2 executes write_coverage_signal cov->size 2679, flag collect 0
----- executor 2 signal number : 1404
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 7 output_pos_value 4880
time breakdown 0: 20, 4, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 4, 0
before receive testcase: 0 0
2023/03/27 22:21:40 for select break: 1
2023/03/27 22:21:40 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:40 wg wait finish
2023/03/27 22:21:40 ------ all executors finish execution
2023/03/27 22:21:40 exec time: 16
2023/03/27 22:21:40 ----- PS len: 4
2023/03/27 22:21:40 [CLIENT] executor 3 has 4 replies
2023/03/27 22:21:40 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:40 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:21:40 [SERVER] executor 2 has 7 replies
2023/03/27 22:21:40 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 68 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 167 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1553 signal and 0 cover from userspace component
2023/03/27 22:21:40 ------- fuzzer executor 2 receive 1404 signal and 0 cover from userspace component
time breakdown 2: 20, 4, 0
before receive testcase: 0 0
2023/03/27 22:21:40 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:21:40 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:40 ----- no new client coverage: false, true
before receive testcase: 0 1
2023/03/27 22:21:40 mutate testcase with failures
2023/03/27 22:21:40 ----- mutateArg()
2023/03/27 22:21:40 ----- insertCall()
2023/03/27 22:21:40 ----- generateCall 2780 readlink readlink
2023/03/27 22:21:40 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:40 prog length: 7
2023/03/27 22:21:40 HasCrashFail:false HasNetFail:false
22:21:40 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file1\x00', 0x2842, 0x80)
r1 = dup2(r0, r0)
fcntl$setflags(r1, 0x2, 0x0)
truncate(&(0x7f0000000040)='./file0\x00', 0x7)
truncate(&(0x7f00000000c0)='./file0\x00', 0x7)
open(&(0x7f0000000080)='./file0\x00', 0x40002, 0x52)
readlink(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140)=""/144, 0x90)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 880
remove dir: /root/cephfs-client/dfs-0-1035
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1036 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1036
receive_execute: 3, 10
receive_execute: 3, 9
receive_execute: 2, 10
receive_execute: 2, 9
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 479
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 15
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4151, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 1, 3
2023/03/27 22:21:41 for select break: 1
time breakdown 3: 13, 5, 0
2023/03/27 22:21:41 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4297, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 12012, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5037
----- executor 2 executes write_coverage_signal cov->size 8459, flag collect 0
----- executor 2 signal number : 585
executor 2 server cover_cnt 4 output_pos_value 6973
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12, 6, 0
before receive testcase: 0 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 8, 0
before receive testcase: 0 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:41 wg wait finish
2023/03/27 22:21:41 ------ all executors finish execution
2023/03/27 22:21:41 exec time: 22
2023/03/27 22:21:41 ----- PS len: 4
2023/03/27 22:21:41 [CLIENT] executor 3 has 7 replies
2023/03/27 22:21:41 fuzzer receive 479 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:21:41 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 2 has 4 replies
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 5037 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 585 signal and 0 cover from userspace component
time breakdown 0: 12, 12, 0
before receive testcase: 0 0
2023/03/27 22:21:41 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:41 ----- no new client coverage: false, true
2023/03/27 22:21:41 mutate testcase with failures
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 2373 mkdir mkdir
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:21:41 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:41 prog length: 9
2023/03/27 22:21:41 HasCrashFail:false HasNetFail:false
22:21:41 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x0)
rename(&(0x7f0000000280)='./file1/../file0\x00', &(0x7f0000000180)='./file1/file0\x00')
rename(&(0x7f0000000240)='./file1/file0\x00', &(0x7f00000004c0)='./file0\x00')
setxattr$user(&(0x7f0000000140)='./file0\x00', &(0x7f00000001c0), 0x0, 0x0, 0x0)
removexattr(&(0x7f0000000400)='./file1/../file0\x00', &(0x7f0000000440)=@known='security.apparmor\x00')
listxattr(&(0x7f00000003c0)='./file0\x00', 0x0, 0x0)
mkdir(&(0x7f0000000000)='./file0\x00', 0xc8)
open$dir(&(0x7f0000000080)='./file1/file0\x00', 0x22340, 0x40)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1376
remove dir: /root/cephfs-client/dfs-0-1036
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1037 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1037
receive_execute: 7, 13
receive_execute: 3, 13
receive_execute: 10, 13
receive_execute: 8, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 489, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 489, flag collect 0
----- executor 3 signal number : 2
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 828, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 828, flag collect 0
----- executor 3 signal number : 105
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 758, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 758, flag collect 0
----- executor 3 signal number : 14
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 469, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 469, flag collect 0
----- executor 3 signal number : 97
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 642, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 3 signal number : 68
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 482, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 482, flag collect 0
----- executor 3 signal number : 65
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 116, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 681, pid 4154, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 681, flag collect 0
----- executor 3 signal number : 114
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 22, 5, 0
execute_one time: 1, 27
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 23, 30, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1359, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 23822, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1405
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 16, 31, 0
before receive testcase: 0 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 31, 0
----- executor 2 signal number : 1058
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7034
----- executor 2 executes write_coverage_signal cov->size 6577, flag collect 0
----- executor 2 signal number : 447
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1593
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 5903
executor 2 server cover_cnt 8 output_pos_value 17535
before receive testcase: 0 1
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:41 wg wait finish
2023/03/27 22:21:41 ------ all executors finish execution
2023/03/27 22:21:41 exec time: 48
2023/03/27 22:21:41 ----- PS len: 4
2023/03/27 22:21:41 [CLIENT] executor 3 has 9 replies
2023/03/27 22:21:41 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:21:41 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:41 fuzzer receive 105 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:41 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 97 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 68 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 65 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1405 signal and 0 cover from userspace component
2023/03/27 22:21:41 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 114 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1058 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 7034 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 447 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1593 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 5903 signal and 0 cover from userspace component
2023/03/27 22:21:41 [SERVER] executor 0 has 0 replies
time breakdown 2: 20, 36, 0
before receive testcase: 0 0
2023/03/27 22:21:41 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:41 ----- no new client coverage: false, true
2023/03/27 22:21:41 mutate testcase with failures
2023/03/27 22:21:41 ----- mutateArg()
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/27 22:21:41 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:41 prog length: 11
2023/03/27 22:21:41 HasCrashFail:false HasNetFail:false
22:21:41 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
fstat(0xffffffffffffffff, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
r2 = open(&(0x7f00000002c0)='./file0/file0\x00', 0x650800, 0x44)
fstat(r2, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0/file0\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000700)=ANY=[@ANYBLOB="02000000010003000000000002000f00", @ANYRES32=0xee01, @ANYBLOB="bea4fc82d9077277eadf1de6c6fdb9f504e778d0f9350c54b4fe21f293388e4a1f42e2d6ff6747c32851a95a5c2a1e6153f9d04506c22f460054bca2403a834235402e81066c0557756c8553a9ec4846b238d8df850c03b1c2f0eeb964bfc4428279db845ee2d33f38a160aa3068e4", @ANYRES32, @ANYBLOB="23ae1c7d", @ANYRES32=0xee00, @ANYBLOB="02000600", @ANYRES32=0xee01, @ANYBLOB="02000000", @ANYRES32=0xee00, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000400", @ANYRES32=0xee01, @ANYBLOB="02000600", @ANYRES32=r0, @ANYBLOB="02008e25a4f2711352896282daa71489b9064bbdff7f54e4bfee006097bdb6f538a4c95718a4ef3bb8c4e9c30fd259519b1626371dd27978190cafd4fbb78dcb0000dba120c1303c0d9ddec67bb7be7d1b9289c6090084e4b283bb89e4a348e1b059d8f4980456e3aa989c6fc06d33f7f2fb99233642abe5b665864a9d1ee641e75abf47e386e70ecf20ef5fffcefc859258b1a88e7cb2516cd8a3124763e77889cad5a13ce5ac5f8a509c57832f8d6f422e0077c36d3db39ab64ff4282d29d044592f2701ee8190b71d1245486b2b4f9db6b9570968a2eeb3e60b289aad5c62ad4bd6974dc7b3702b8dced72505a3c36e04f36fa7748bf080fa5cc06c9d1644d09d20a0f88e2fa709aaade672ab104af463db7f71bba5f5eb8cbed2bb298205a4167052cd246d33ac4b1b8d0e428c79680fc96a4486738295f44f04e2550549e7db", @ANYRES32=r1, @ANYBLOB="02000000", @ANYRES32=0x0, @ANYBLOB="040004000000000008000200", @ANYRES32=r3, @ANYBLOB='(\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=0xee00, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee01, @ANYBLOB="10000100000000002000020000000000"], 0x94, 0x0)
setxattr$trusted_overlay_origin(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340), &(0x7f00000004c0), 0x2, 0x2)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file0/file0\x00')
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000440), &(0x7f0000000480)={'L-', 0x3fffffffc00}, 0x16, 0x3)
r4 = open(&(0x7f0000000380)='./file0/file0\x00', 0x2c1, 0xc0)
read(r4, &(0x7f00000003c0)=""/80, 0x50)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3520
remove dir: /root/cephfs-client/dfs-0-1037
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1038 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1038
receive_execute: 9, 16
receive_execute: 8, 16
receive_execute: 8, 16
receive_execute: 4, 16
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 32
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 161, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 161, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 268, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 268, flag collect 0
----- executor 3 signal number : 111
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 279, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 279, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 729, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 729, flag collect 0
----- executor 3 signal number : 110
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4157, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 5, 0
execute_one time: 1, 10
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 25, 13, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 325, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 11127, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1287
----- executor 2 executes write_coverage_signal cov->size 27764, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 25, 13, 0
before receive testcase: 0 0
----- executor 2 signal number : 6632
----- executor 2 executes write_coverage_signal cov->size 1429, flag collect 0
----- executor 2 signal number : 323
----- executor 2 executes write_coverage_signal cov->size 13354, flag collect 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 24, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 599
executor 2 server cover_cnt 5 output_pos_value 8922
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:41 wg wait finish
2023/03/27 22:21:41 ------ all executors finish execution
2023/03/27 22:21:41 exec time: 32
2023/03/27 22:21:41 ----- PS len: 4
2023/03/27 22:21:41 [CLIENT] executor 3 has 11 replies
time breakdown 2: 20, 15, 0
2023/03/27 22:21:41 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 2 has 5 replies
2023/03/27 22:21:41 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 32 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 111 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 110 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1287 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 6632 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 323 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 599 signal and 0 cover from userspace component
2023/03/27 22:21:41 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:41 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:41 ----- no new client coverage: false, true
2023/03/27 22:21:41 mutate testcase with failures
2023/03/27 22:21:41 ----- mutateArg()
2023/03/27 22:21:41 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:41 prog length: 13
2023/03/27 22:21:41 HasCrashFail:false HasNetFail:false
22:21:41 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
open(&(0x7f00000001c0)='./file1\x00', 0x121041, 0x0)
pwritev(r0, &(0x7f0000000480), 0x0, 0x7, 0x5)
truncate(&(0x7f0000000040)='./file1\x00', 0x0)
r1 = open(&(0x7f00000002c0)='./file0\x00', 0x202000, 0x5)
truncate(&(0x7f0000000500)='./file0\x00', 0x401)
r2 = dup(r0)
fstat(r2, &(0x7f0000000240))
r3 = open(&(0x7f00000001c0)='./file0\x00', 0x442, 0x0)
pwritev(r3, &(0x7f0000000300)=[{&(0x7f0000000200)='7', 0x1}], 0x1, 0x0, 0x0)
fchmod(r1, 0x340)
pwritev(r3, &(0x7f0000000180)=[{&(0x7f0000000000)="0b9518aa8766d35f285925808b700c38866cf1243edb8c81eefdba4772017c95bf3e239b60bc8ddd043ec68e577391c45204351607a0fa62996d4fc79c989f9e3523cb562a7fe34d", 0x48}, {&(0x7f0000000080)="8867310ae50bdb90be2f117a47497c65a3174cec13dd93186f999befb0c6b60b31ff04967b118f99e932ccfa999f75d93f1c3b13ed04bb6ea9b0633315ca9412bbd5bbfd3a7f1c09bc84", 0x4a}, {&(0x7f0000000100)="be50400e3f794605900fd1d2c97b3833f6a4c804cc4ac0aebd2a04a383cf2ea0d69ff85d1fb133520678daf183001e77131a079c62a74885882ef83fa24c7d5f83baf21f0a051b366fd2b54cce51a0bfadb2e8ce2d41862c00c43f27", 0x5c}], 0x3, 0x62a7, 0x9)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2360
remove dir: /root/cephfs-client/dfs-0-1038
remove dir time 12
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1039 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1039
receive_execute: 6, 13
receive_execute: 3, 14
receive_execute: 5, 13
receive_execute: 5, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 605, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 605, flag collect 0
----- executor 3 signal number : 9
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 284, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 284, flag collect 0
----- executor 3 signal number : 24
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 503, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 503, flag collect 0
----- executor 3 signal number : 3
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 4161, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 4161, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 84
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1071, pid 4161, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 1071, flag collect 0
----- executor 3 signal number : 677
----- completed 11
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4161, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 367, pid 4161, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 367, flag collect 0
----- executor 3 signal number : 14
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 13, 6, 0
execute_one time: 1, 19
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 21, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 897, flag collect 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1432
----- executor 2 executes write_coverage_signal cov->size 28744, flag collect 0
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 22, 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 2 signal number : 7325
----- executor 2 executes write_coverage_signal cov->size 5265, flag collect 0
----- executor 2 signal number : 396
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2006
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 7018
executor 2 server cover_cnt 8 output_pos_value 19305
time breakdown 1: 18, 24, 0
before receive testcase: 0 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:41 wg wait finish
2023/03/27 22:21:41 ------ all executors finish execution
2023/03/27 22:21:41 exec time: 41
2023/03/27 22:21:41 ----- PS len: 4
2023/03/27 22:21:41 [CLIENT] executor 3 has 13 replies
2023/03/27 22:21:41 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:41 fuzzer receive 24 signal and 0 cover from executor 3
time breakdown 2: 17, 27, 0
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 677 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:21:41 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1432 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 7325 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 396 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 2006 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 7018 signal and 0 cover from userspace component
2023/03/27 22:21:41 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:41 ----- no new client coverage: false, true
2023/03/27 22:21:41 mutate testcase with failures
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 248 fstat fstat
2023/03/27 22:21:41 ----- mutateArg()
2023/03/27 22:21:41 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:41 prog length: 14
2023/03/27 22:21:41 HasCrashFail:false HasNetFail:false
22:21:41 ---executing program 0:
---
---
---
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
stat(&(0x7f0000000080)='./file0\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
fcntl$getflags(r1, 0xb)
fstat(r1, &(0x7f0000000380))
r2 = openat(r1, &(0x7f00000000c0)='./file0/file0\x00', 0x600800, 0x40)
lsetxattr$security_evm(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000580), &(0x7f00000005c0)=ANY=[@ANYBLOB="d206000000"], 0x5, 0x1)
fstat(r2, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$incfs_id(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680)={'0000000000000000000000000000000', 0x33}, 0x20, 0x2)
lsetxattr$smack_xattr_label(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)='security.SMACK64\x00', &(0x7f0000000480)=ANY=[@ANYBLOB='trusted.overlay.o\x00'], 0x18, 0x1)
lsetxattr$system_posix_acl(&(0x7f0000000000)='.\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000240)=ANY=[@ANYBLOB="02000000010005000000000002000300", @ANYRES32=0xee00, @ANYBLOB="02000600", @ANYRES32, @ANYBLOB="02000400", @ANYRES32=0x0, @ANYBLOB="02000700", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000700", @ANYRES32=r0, @ANYBLOB="040001000000000008000100", @ANYRES32=0xee01, @ANYBLOB="08100600", @ANYRES32=0x0, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=r3, @ANYBLOB="10000600000000002000010000000000"], 0x6c, 0x5)
fstat(r2, &(0x7f00000006c0))
lremovexattr(&(0x7f00000001c0)='.\x00', &(0x7f00000004c0)=@known='trusted.overlay.nlink\x00')
lremovexattr(&(0x7f0000000100)='./file0\x00', &(0x7f0000000200)=@known='trusted.syz\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3328
remove dir: /root/cephfs-client/dfs-0-1039
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 15
-----finish removing dir
receive_execute: 4, 16
receive_execute: 8, 16
receive_execute: 8, 16
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1040 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1040
receive_execute: 11, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 108
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 407, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 407, flag collect 0
----- executor 3 signal number : 1
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 26, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 465, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 465, flag collect 0
----- executor 3 signal number : 76
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 470, pid 4164, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 470, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 9, 0
execute_one time: 0, 16
cover_reset in execute_call
2023/03/27 22:21:41 for select break: 1
executor 2 write_server_output
2023/03/27 22:21:41 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 648, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11823, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 19860, flag collect 0
----- executor 2 signal number : 997
2023/03/27 22:21:41 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:21:41 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 19, 0
before receive testcase: 0 0
time breakdown 1: 24, 19, 0
before receive testcase: 0 0
----- executor 2 signal number : 7291
----- executor 2 executes write_coverage_signal cov->size 4517, flag collect 0
----- executor 2 signal number : 365
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 23895, flag collect 0
----- executor 2 signal number : 984
----- executor 2 executes write_coverage_signal cov->size 16203, flag collect 0
----- executor 2 signal number : 3240
time breakdown 3: 27, 18, 0
before receive testcase: 0 1
executor 2 server cover_cnt 8 output_pos_value 14362
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:21:41 wg wait finish
2023/03/27 22:21:41 ------ all executors finish execution
2023/03/27 22:21:41 exec time: 39
2023/03/27 22:21:41 ----- PS len: 4
2023/03/27 22:21:41 [CLIENT] executor 3 has 14 replies
2023/03/27 22:21:41 fuzzer receive 388 signal and 0 cover from executor 3
time breakdown 2: 20, 23, 0
before receive testcase: 0 0
2023/03/27 22:21:41 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 2 has 8 replies
2023/03/27 22:21:41 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:41 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 76 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 997 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 7291 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 365 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 984 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 3240 signal and 0 cover from userspace component
2023/03/27 22:21:41 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:41 ----- no new client coverage: false, true
2023/03/27 22:21:41 mutate testcase with failures
2023/03/27 22:21:41 ----- mutateArg()
2023/03/27 22:21:41 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:41 prog length: 6
2023/03/27 22:21:41 HasCrashFail:false HasNetFail:false
22:21:41 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r0 = open$dir(&(0x7f0000000200)='./file0\x00', 0x0, 0x0)
r1 = open(&(0x7f0000000480)='./file0\x00', 0x2, 0x0)
r2 = dup2(r1, r1)
r3 = dup2(r2, r0)
pwrite64(r3, &(0x7f0000000140)="fd", 0x1, 0x400000000000000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 840
remove dir: /root/cephfs-client/dfs-0-1040
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1041 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1041
receive_execute: 7, 9
receive_execute: 6, 9
receive_execute: 7, 8
receive_execute: 3, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 4168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 364
----- completed 1
execute_one loop: 0, 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4168, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
executor 2 write_server_output
executor 1 write_server_output
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1953, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4170, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
----- executor 2 executes write_coverage_signal cov->size 1341, flag collect 0
----- executor 2 signal number : 280
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 4 output_pos_value 3531
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 5, 0
before receive testcase: 0 0
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 11, 6, 0
before receive testcase: 0 0
time breakdown 3: 16, 4, 0
before receive testcase: 0 1
2023/03/27 22:21:41 for select break: 1
2023/03/27 22:21:41 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:21:41 wg wait finish
2023/03/27 22:21:41 ------ all executors finish execution
2023/03/27 22:21:41 exec time: 26
2023/03/27 22:21:41 ----- PS len: 4
2023/03/27 22:21:41 [CLIENT] executor 3 has 6 replies
2023/03/27 22:21:41 fuzzer receive 364 signal and 0 cover from executor 3
2023/03/27 22:21:41 [SERVER] executor 1 has 0 replies
2023/03/27 22:21:41 [SERVER] executor 0 has 0 replies
2023/03/27 22:21:41 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 [SERVER] executor 2 has 4 replies
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:21:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
2023/03/27 22:21:41 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
time breakdown 0: 15, 17, 0
2023/03/27 22:21:41 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:21:41 ----- no new client coverage: false, true
2023/03/27 22:21:41 mutate testcase with failures
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 248 fstat fstat
before receive testcase: 0 0
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 3761 stat stat
2023/03/27 22:21:41 ----- mutateArg()
2023/03/27 22:21:41 ----- insertCall()
2023/03/27 22:21:41 ----- generateCall 250 fsync fsync
2023/03/27 22:21:41 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:21:41 prog length: 11
2023/03/27 22:21:41 HasCrashFail:false HasNetFail:false
22:21:41 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x121040, 0x0)
r1 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x2)
r2 = fcntl$dupfd(r0, 0x406, r1)
r3 = dup2(r1, r1)
fsync(r3)
flock(r2, 0x2)
flock(r1, 0x1)
r4 = open$dir(&(0x7f0000000040)='./file0/file0\x00', 0x12800, 0x1)
fstat(r4, &(0x7f0000000080))
flock(r1, 0x2)
stat(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000180))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1264
remove dir: /root/cephfs-client/dfs-0-1041
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1042 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1042
receive_execute: 12, 4
receive_execute: 0, 4
receive_execute: 13, 3
receive_execute: 14, 4
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 624, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 202, pid 4171, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 202, flag collect 0
----- executor 3 signal number : 137
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 4171, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 76
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4171, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 210, pid 4171, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 3 signal number : 1
----- completed 10
----- executor 3 write_call_output, size 217, pid 4171, write pid:-2126974658
----- executor 3 executes write_coverage_signal cov->size 217, flag collect 0
----- executor 3 signal number : 0
----- completed 11
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 83338, 1, 1
execute_one time: 0, 83340
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 23718, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 30379, flag collect 0
----- executor 2 signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1412
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1153
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 856
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 4, 83343, 0
before receive testcase: 0 0
----- executor 2 signal number : 7466
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 18, 83341, 0
before receive testcase: 0 1
----- executor 2 signal number : 758
----- executor 2 executes write_coverage_signal cov->size 30786, flag collect 0
----- executor 2 signal number : 1679
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 16, 83344, 0
before receive testcase: 0 1
----- executor 2 signal number : 3366
----- executor 2 executes write_coverage_signal cov->size 2297, flag collect 0
----- executor 2 signal number : 163
----- executor 2 executes write_coverage_signal cov->size 4447, flag collect 0
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 925
----- executor 2 executes write_coverage_signal cov->size 66, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1700
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1399
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 4318
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 12
executor 2 server cover_cnt 17 output_pos_value 25718
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 83359
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 11 replies
2023/03/27 22:23:04 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 76 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 16, 83355, 0
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 17 replies
before receive testcase: 0 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 54 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1412 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1153 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 856 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 7466 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 758 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1679 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3366 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 163 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 925 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1700 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1399 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4318 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2458 open open
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 171 dup2 dup2
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 170 dup dup
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 516 getxattr getxattr
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 11
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x0)
r1 = dup(r0)
r2 = dup2(r0, r1)
open$dir(&(0x7f0000000080)='./file0\x00', 0x101040, 0x1dc)
open(&(0x7f0000000040)='./file0\x00', 0x22800, 0x84)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lchown(&(0x7f0000000100)='./file0\x00', r3, 0xffffffffffffffff)
r4 = dup2(r2, r1)
fcntl$dupfd(r2, 0x406, r4)
getxattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000180)=@known='trusted.overlay.impure\x00', &(0x7f00000001c0)=""/46, 0x2e)
dup(0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1440
remove dir: /root/cephfs-client/dfs-0-1042
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1043 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1043
receive_execute: 20, 11
receive_execute: 6, 11
receive_execute: 18, 11
receive_execute: 17, 12
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 134
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 422, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 422, flag collect 0
----- executor 3 signal number : 19
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 494, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 494, flag collect 0
----- executor 3 signal number : 125
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 158, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 158, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4178, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 0, 0
execute_one time: 1, 10
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 388, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 9871, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 25785, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 14, 0
before receive testcase: 0 0
time breakdown 1: 29, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 6312
----- executor 2 executes write_coverage_signal cov->size 12274, flag collect 0
----- executor 2 signal number : 568
time breakdown 3: 31, 13, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 8249
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 28
2023/03/27 22:23:04 ----- PS len: 4
time breakdown 2: 17, 16, 0
2023/03/27 22:23:04 [CLIENT] executor 3 has 11 replies
2023/03/27 22:23:04 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:04 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 125 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 6312 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 568 signal and 0 cover from userspace component
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 4
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
r1 = open$dir(&(0x7f00000006c0)='./file1\x00', 0x242, 0x0)
pwritev(r1, &(0x7f0000000780)=[{&(0x7f0000000700)='w', 0x1}], 0x1, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1043
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1044 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1044
receive_execute: 5, 11
receive_execute: 2, 10
receive_execute: 4, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4181, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4181, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 4, 11
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 624, pid 4181, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 624, flag collect 0
----- executor 3 signal number : 480
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 421, pid 4181, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 421, flag collect 0
----- executor 3 signal number : 349
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 5, 0
execute_one time: 1, 7
executor 2 write_server_output
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 348, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10790, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 10813, flag collect 0
----- executor 2 signal number : 909
----- executor 2 executes write_coverage_signal cov->size 18062, flag collect 0
time breakdown 0: 15, 11, 0
before receive testcase: 0 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 11, 0
----- executor 2 signal number : 6075
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 28094, flag collect 0
time breakdown 3: 16, 9, 0
before receive testcase: 0 1
----- executor 2 signal number : 1943
----- executor 2 executes write_coverage_signal cov->size 18914, flag collect 0
----- executor 2 signal number : 4938
executor 2 server cover_cnt 7 output_pos_value 15347
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 27
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 349 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 7 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
time breakdown 2: 12, 16, 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 909 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 6075 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1943 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4938 signal and 0 cover from userspace component
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 4
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
fcntl$lock(r0, 0x24, &(0x7f0000000040)={0x1, 0x3, 0x2000000000000, 0xa})
r1 = fcntl$getown(r0, 0x9)
fcntl$lock(0xffffffffffffffff, 0x25, &(0x7f0000000000)={0xece30c7aaf9e76df, 0x1, 0x1c, 0xfffffffffffffffd, r1})
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 904
remove dir: /root/cephfs-client/dfs-0-1044
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1045 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1045
receive_execute: 10, 9
receive_execute: 4, 9
receive_execute: 8, 9
receive_execute: 9, 8
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 4184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4184, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 4296, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11536, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 4899
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
time breakdown 0: 17, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 527
executor 2 server cover_cnt 4 output_pos_value 6773
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 6, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 15
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:04 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 13, 6, 0
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4899 signal and 0 cover from userspace component
time breakdown 3: 19, 4, 0
before receive testcase: 0 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 527 signal and 0 cover from userspace component
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 14
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f00000002c0)='./file2\x00', 0x8, 0x4)
r0 = open(&(0x7f0000000280)='./file0\x00', 0x139040, 0x0)
r1 = fcntl$dupfd(r0, 0x0, 0xffffffffffffffff)
fcntl$setsig(0xffffffffffffffff, 0xa, 0x0)
setxattr$trusted_overlay_redirect(0x0, 0x0, 0x0, 0x0, 0x2)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file4\x00', &(0x7f0000000040)='./file4\x00')
open$dir(&(0x7f0000000380)='./file3\x00', 0x0, 0x8)
link(&(0x7f0000000080)='./file0\x00', &(0x7f0000000400)='./file1\x00')
unlink(&(0x7f0000000000)='./file0\x00')
r2 = open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
dup2(r2, 0xffffffffffffffff)
readlinkat(r1, 0xfffffffffffffffc, 0x0, 0x0)
rename(&(0x7f0000000700)='./file4\x00', &(0x7f0000000740)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2000
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1045
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1046 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1046
receive_execute: 5, 14
receive_execute: 2, 14
receive_execute: 2, 15
receive_execute: 3, 14
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 659, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 659, flag collect 0
----- executor 3 signal number : 494
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 852, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 852, flag collect 0
----- executor 3 signal number : 150
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 135, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 135, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 427, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 427, flag collect 0
----- executor 3 signal number : 32
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 538, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 538, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 434, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 434, flag collect 0
----- executor 3 signal number : 24
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 143, pid 4187, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 143, flag collect 0
----- executor 3 signal number : 1
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 894, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17889, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 11, 0
----- executor 2 signal number : 1307
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7114
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 786
executor 2 server cover_cnt 4 output_pos_value 9287
time breakdown 3: 19, 10, 0
before receive testcase: 0 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 29
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 14 replies
2023/03/27 22:23:04 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 494 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1307 signal and 0 cover from userspace component
time breakdown 2: 16, 15, 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 7114 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 786 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 150 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2814 rmdir rmdir
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 12
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x0)
r0 = open(&(0x7f0000000040)='./file1\x00', 0x0, 0x0)
r1 = dup2(r0, r0)
r2 = dup(r1)
lseek(r2, 0x1100000000000000, 0x0)
symlinkat(&(0x7f0000000080)='./file1\x00', r1, &(0x7f00000000c0)='./file1\x00')
rmdir(&(0x7f0000000ac0)='./file1\x00')
r3 = open$dir(&(0x7f00000001c0)='./file1/file0\x00', 0x40440, 0x1)
fsetxattr$security_ima(r3, &(0x7f0000000200), &(0x7f0000000240)=@v1={0x2, "903636421b661aea"}, 0x9, 0x3)
r4 = open(&(0x7f0000000100)='./file1\x00', 0x101000, 0x22)
fsetxattr$security_ima(r4, &(0x7f0000000140), &(0x7f0000000180)=@v2={0x5, 0x1, 0x12, 0x4, 0x2, 'tw'}, 0xb, 0x2)
write$binfmt_elf64(r1, &(0x7f0000000280)={{0x7f, 0x45, 0x4c, 0x46, 0x7f, 0x3f, 0x2, 0x8, 0x7, 0x3, 0x3e, 0xffffffff, 0x6, 0x40, 0x300, 0x3ee2, 0x7d49, 0x38, 0x1, 0xfff, 0x5, 0x3}, [{0x6474e551, 0x3f, 0x10000, 0x6, 0x8, 0xffffffffffffe931, 0x0, 0x80}, {0x7, 0x2, 0x0, 0x40, 0x3, 0x1f, 0x400, 0xffffffff}], "097a00193d90f0e2625fb588199004f9d50125a78c85f7b28caeb268bba0b9035083d97a75cf52470acdddc7c44ea85c3327abf1450d97023171d4384f52f3c204680ac3744581d82207a95a3a5b76bfcad0dcfde026ce09882386d4c91eb119c9bf2e0e97b392fde0871e7ffe848fca9e2aa7eeee3f5b5ba1fe2432", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x82c)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5704
remove dir: /root/cephfs-client/dfs-0-1046
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1047 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1047
receive_execute: 6, 17
receive_execute: 1, 17
receive_execute: 4, 17
receive_execute: 5, 17
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 511, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 10, pid 4192, write pid:-2127077786
----- executor 3 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 3 signal number : 10
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 30
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 556, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 556, flag collect 0
----- executor 3 signal number : 87
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 665, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 665, flag collect 0
----- executor 3 signal number : 71
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 146, pid 4192, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 146, flag collect 0
----- executor 3 signal number : 101
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4192, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 478, pid 4192, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 478, flag collect 0
----- executor 3 signal number : 85
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4192, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 4, 0
execute_one time: 1, 7
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 634, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11426, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 20193, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 987
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 22, 12, 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 7418
----- executor 2 executes write_coverage_signal cov->size 3571, flag collect 0
----- executor 2 signal number : 613
----- executor 2 executes write_coverage_signal cov->size 24739, flag collect 0
before receive testcase: 0 0
time breakdown 3: 23, 10, 0
before receive testcase: 0 1
----- executor 2 signal number : 1587
----- executor 2 executes write_coverage_signal cov->size 17149, flag collect 0
----- executor 2 signal number : 3632
executor 2 server cover_cnt 7 output_pos_value 15716
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 31
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 12 replies
2023/03/27 22:23:04 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
time breakdown 2: 18, 15, 0
2023/03/27 22:23:04 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 2 has 7 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 10 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 87 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 71 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 7418 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 613 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1587 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3632 signal and 0 cover from userspace component
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 2
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x42a900, 0xc)
mkdir(&(0x7f0000001600)='./file0\x00', 0x91)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 256
----- executor 0 receive testcase
remove dir: /root/cephfs-client/dfs-0-1047
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1048 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1048
receive_execute: 7, 17
receive_execute: 2, 18
receive_execute: 5, 17
receive_execute: 5, 18
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 4196, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4196, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4069, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11342, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 22, 5, 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 23, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 4697
----- executor 2 executes write_coverage_signal cov->size 7114, flag collect 0
----- executor 2 signal number : 521
executor 2 server cover_cnt 4 output_pos_value 6569
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 24
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 2 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4697 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 521 signal and 0 cover from userspace component
time breakdown 2: 20, 6, 0
before receive testcase: 0 0
time breakdown 3: 25, 3, 0
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2749 pwrite64 pwrite64
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 4
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
pwrite64(0xffffffffffffffff, &(0x7f0000000000)="4a330d01e47a4aefafc37437d9d164b6e31a9fe718aab01bbcf144cad9f7f7184cb8c14bc4f02eeb58534a2b9b866fba13f7b176f77433eac5ed5f7c2c7271e32ab14aecc44fb8bb160948e3fb4bea5667e0d530a6f6a19b267b2bbde11c2c3a6ae02fa195e43ba495325b8453e704c0e4b432825f3179dc5bdeb1c9e6c812bdbe841ae796d33be21c7a42dceefe", 0x8e, 0xa80)
mkdirat(0xffffffffffffff9c, &(0x7f00000000c0)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
openat(r0, &(0x7f0000000100)='./file0\x00', 0x40240, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 760
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1048
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1049 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1049
receive_execute: 5, 11
receive_execute: 3, 12
receive_execute: 3, 11
receive_execute: 2, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 4198, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4198, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4198, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4198, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 75
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 16, 4, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8415, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1272
----- executor 2 executes write_coverage_signal cov->size 23390, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 18
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1272 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 5862 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 563 signal and 0 cover from userspace component
time breakdown 0: 14, 5, 0
before receive testcase: 0 0
time breakdown 1: 15, 5, 0
before receive testcase: 0 0
----- executor 2 signal number : 5862
----- executor 2 executes write_coverage_signal cov->size 13254, flag collect 0
----- executor 2 signal number : 563
executor 2 server cover_cnt 4 output_pos_value 7777
time breakdown 2: 13, 6, 0
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2458 open open
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 248 fstat fstat
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 171 dup2 dup2
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 10
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x80, 0x3a)
r2 = open$dir(&(0x7f0000000100)='./file0\x00', 0x1, 0x0)
write$binfmt_misc(r2, 0x0, 0x8c)
r3 = dup2(r2, r1)
dup2(r3, r0)
r4 = dup(0xffffffffffffffff)
fstat(r4, &(0x7f0000000140))
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0), 0x2, 0x1)
open$dir(&(0x7f00000001c0)='./file0\x00', 0x40, 0x44)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1336
remove dir: /root/cephfs-client/dfs-0-1049
remove dir time 10
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1050 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1050
receive_execute: 4, 12
receive_execute: 4, 13
receive_execute: 3, 13
receive_execute: 5, 12
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
----- executor 3 write_call_output, size 620, pid 4201, write pid:-2127101003
execute_one time: 1, 1
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4201, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 4201, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 98
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 476, pid 4201, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 476, flag collect 0
----- executor 3 signal number : 271
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 4201, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 4201, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4201, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4201, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 4201, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 84
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 4201, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 1, 0
execute_one time: 1, 11
cover_reset in execute_call
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 17, 13, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 256, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 16, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10307, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8357, flag collect 0
----- executor 2 signal number : 896
----- executor 2 executes write_coverage_signal cov->size 14493, flag collect 0
----- executor 2 signal number : 5366
----- executor 2 executes write_coverage_signal cov->size 30713, flag collect 0
----- executor 2 signal number : 1074
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 19800, flag collect 0
----- executor 2 signal number : 1659
----- executor 2 executes write_coverage_signal cov->size 11784, flag collect 0
----- executor 2 signal number : 3148
executor 2 server cover_cnt 8 output_pos_value 13628
time breakdown 0: 17, 13, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 31
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 10 replies
2023/03/27 22:23:04 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 2 has 8 replies
time breakdown 2: 16, 18, 0
before receive testcase: 0 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 896 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 5366 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1074 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 98 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 271 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1659 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3148 signal and 0 cover from userspace component
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 84 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2458 open open
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 3
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
open(&(0x7f0000000340)='./file0\x00', 0x8040, 0x0)
open(&(0x7f0000000000)='./file0\x00', 0x8000, 0x63)
llistxattr(&(0x7f0000000080)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/cephfs-client/dfs-0-1050
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1051 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1051
receive_execute: 9, 9
receive_execute: 8, 9
receive_execute: 4, 8
receive_execute: 8, 9
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 619, pid 4204, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4204, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 148, pid 4204, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 3 signal number : 39
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 18, 6, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4295, flag collect 0
----- executor 2 signal number : 1271
----- executor 2 executes write_coverage_signal cov->size 11608, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 4911
----- executor 2 executes write_coverage_signal cov->size 1064, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 296
----- executor 2 executes write_coverage_signal cov->size 6135, flag collect 0
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 17, 7, 0
before receive testcase: 0 0
----- executor 2 signal number : 532
executor 2 server cover_cnt 5 output_pos_value 7093
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 17, 6, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 17
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 3 replies
2023/03/27 22:23:04 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 5 replies
time breakdown 2: 12, 9, 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1271 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4911 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 296 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 532 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2808 removexattr removexattr
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 3
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x145241, 0x0)
removexattr(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040)=@known='user.incfs.metadata\x00')
writev(r0, &(0x7f0000000080)=[{&(0x7f0000000100)='@', 0x400000}], 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 576
remove dir: /root/cephfs-client/dfs-0-1051
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1052 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1052
receive_execute: 5, 10
receive_execute: 4, 11
receive_execute: 2, 10
receive_execute: 4, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 4207, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 267, pid 4207, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 267, flag collect 0
----- executor 3 signal number : 136
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8727, pid 4207, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 8727, flag collect 0
----- executor 3 signal number : 943
----- completed 3
execute_one loop: 0, 0, 38
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 39, 17, 0
execute_one time: 1, 56
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 715, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 30161, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1430
----- executor 2 executes write_coverage_signal cov->size 18547, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 60, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 61, 0
before receive testcase: 0 0
time breakdown 3: 15, 59, 0
before receive testcase: 0 0
----- executor 2 signal number : 993
----- executor 2 executes write_coverage_signal cov->size 26899, flag collect 0
----- executor 2 signal number : 6960
----- executor 2 executes write_coverage_signal cov->size 2181, flag collect 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2009
----- executor 2 executes write_coverage_signal cov->size 22974, flag collect 0
----- executor 2 signal number : 5364
executor 2 server cover_cnt 8 output_pos_value 17181
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 76
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 3 replies
2023/03/27 22:23:04 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 943 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1430 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 993 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 6960 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 2009 signal and 0 cover from userspace component
time breakdown 2: 12, 66, 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 5364 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2458 open open
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 12
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x139ec2, 0x41)
r1 = dup(r0)
fcntl$dupfd(r0, 0x406, r1)
r2 = open(&(0x7f0000000180)='./file0\x00', 0x101, 0x80)
fcntl$notify(r2, 0x402, 0x0)
lsetxattr$security_evm(&(0x7f0000001400)='./file0\x00', &(0x7f0000001440), &(0x7f0000001480)=@ng={0x4, 0x10, "a007470e9bd9438b"}, 0xa, 0x1)
truncate(&(0x7f0000000040)='./file0\x00', 0x7)
setxattr$security_evm(&(0x7f0000001840)='./file0\x00', &(0x7f0000001880), &(0x7f00000018c0)=@sha1={0x1, "3b31ee4b89b23d07fa2f597592e6f7d29f1c9127"}, 0x15, 0x2)
open$dir(&(0x7f00000002c0)='./file0\x00', 0x20200, 0x2c)
lsetxattr(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=ANY=[@ANYBLOB="6f73322e285d5d2d235cab83"], &(0x7f0000000100)='security.evm\x00', 0xd, 0x1)
open(&(0x7f00000001c0)='./file0\x00', 0x20000, 0x30)
open$dir(&(0x7f0000000140)='./file0\x00', 0x101000, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2096
remove dir: /root/cephfs-client/dfs-0-1052
remove dir time 7
-----finish removing dir
mkdir time 4
executor 3 create dir /root/cephfs-client/dfs-0-1053 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1053
receive_execute: 9, 11
receive_execute: 2, 11
receive_execute: 7, 11
receive_execute: 8, 11
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 622, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 622, flag collect 0
----- executor 3 signal number : 500
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 678, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 678, flag collect 0
----- executor 3 signal number : 229
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 271, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 3 signal number : 127
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 268, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 268, flag collect 0
----- executor 3 signal number : 69
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 240, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 240, flag collect 0
----- executor 3 signal number : 23
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 595, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 595, flag collect 0
----- executor 3 signal number : 39
----- completed 9
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 6
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 4210, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 8, 6, 0
execute_one time: 0, 15
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 20, 17, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 900, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1431
----- executor 2 executes write_coverage_signal cov->size 30547, flag collect 0
----- executor 2 signal number : 1105
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 19, 19, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 18, 20, 0
before receive testcase: 0 0
----- executor 2 signal number : 8203
----- executor 2 executes write_coverage_signal cov->size 5072, flag collect 0
----- executor 2 signal number : 437
----- executor 2 executes write_coverage_signal cov->size 1319, flag collect 0
----- executor 2 signal number : 164
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2258
----- executor 2 executes write_coverage_signal cov->size 26443, flag collect 0
----- executor 2 signal number : 5741
executor 2 server cover_cnt 8 output_pos_value 19431
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 33
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 12 replies
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 fuzzer receive 500 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1431 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1105 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 8203 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 437 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 164 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 2258 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 5741 signal and 0 cover from userspace component
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 229 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 69 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 23 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 39 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 13, 23, 0
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- generateCall 2346 listxattr listxattr
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 3
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
listxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=""/153, 0x99)
open(&(0x7f0000000140)='./file1\x00', 0x8000, 0x0)
open$dir(&(0x7f0000000100)='./file0\x00', 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 416
remove dir: /root/cephfs-client/dfs-0-1053
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1054 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1054
receive_execute: 9, 8
receive_execute: 3, 8
receive_execute: 8, 6
receive_execute: 6, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4213, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 423, pid 4213, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 423, flag collect 0
----- executor 3 signal number : 330
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4213, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 17, 2, 0
----- executor 2 executes write_coverage_signal cov->size 65, flag collect 0
executor 1 write_server_output
before receive testcase: 0 1
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 0
----- executor 2 signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4170, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 2161
executor 2 server cover_cnt 3 output_pos_value 3248
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 15, 3, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 14, 4, 0
before receive testcase: 0 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 14
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 3 replies
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 [SERVER] executor 2 has 3 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1013 signal and 0 cover from userspace component
time breakdown 2: 11, 5, 0
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 2161 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:04 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 330 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 9
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
sync()
symlinkat(&(0x7f0000000140)='./file1\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00')
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file1\x00', 0x80, 0x31)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x0, 0x0)
r2 = fcntl$dupfd(r0, 0x80c, r0)
symlinkat(&(0x7f0000000200)='./file1\x00', r2, &(0x7f0000000240)='./file1\x00')
mkdirat(r1, &(0x7f0000000080)='./file0\x00', 0x9)
r3 = open$dir(&(0x7f00000000c0)='./file2\x00', 0x80, 0x8e)
write$binfmt_misc(r3, &(0x7f0000000280)=ANY=[@ANYBLOB="73797a31a9c2f6950d0f0ffb996b8bb1ceb4ebb7db353a88cfc6bb4c1c718ddc2755eb3d15ec6770a02c52d3c695e2c4c9c00be7e2f73650f3f392722a937313d9e43344df8257f66916884b1e0cd2bf3240cf24aa4eae2f464eddb746c7a14b9a"], 0x5c)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1400
remove dir: /root/cephfs-client/dfs-0-1054
remove dir time 4
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1055 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1055
receive_execute: 4, 5
receive_execute: 1, 5
receive_execute: 3, 5
receive_execute: 2, 5
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 871, pid 4216, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 871, flag collect 0
----- executor 3 signal number : 385
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4216, write pid:-2127191351
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 416, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 416, flag collect 0
----- executor 3 signal number : 261
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 416, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 416, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4216, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 2, 0
execute_one time: 1, 10
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 9, 12, 0
executor 2 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11505, flag collect 0
executor 1 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 8089, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 802
----- executor 2 executes write_coverage_signal cov->size 11354, flag collect 0
time breakdown 0: 7, 14, 0
before receive testcase: 0 1
time breakdown 1: 8, 13, 0
before receive testcase: 0 1
----- executor 2 signal number : 3604
----- executor 2 executes write_coverage_signal cov->size 358, flag collect 0
----- executor 2 signal number : 246
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 17035, flag collect 0
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1596
----- executor 2 executes write_coverage_signal cov->size 15272, flag collect 0
----- executor 2 signal number : 3165
executor 2 server cover_cnt 8 output_pos_value 10899
2023/03/27 22:23:04 for select break: 1
2023/03/27 22:23:04 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:04 wg wait finish
2023/03/27 22:23:04 ------ all executors finish execution
2023/03/27 22:23:04 exec time: 21
2023/03/27 22:23:04 ----- PS len: 4
2023/03/27 22:23:04 [CLIENT] executor 3 has 9 replies
2023/03/27 22:23:04 fuzzer receive 385 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 261 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:04 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:04 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:23:04 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 802 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3604 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 246 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 1596 signal and 0 cover from userspace component
2023/03/27 22:23:04 ------- fuzzer executor 2 receive 3165 signal and 0 cover from userspace component
time breakdown 2: 6, 17, 0
before receive testcase: 0 0
2023/03/27 22:23:04 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:04 ----- no new client coverage: false, true
2023/03/27 22:23:04 mutate testcase with failures
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- insertCall()
2023/03/27 22:23:04 ----- mutateArg()
2023/03/27 22:23:04 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:04 prog length: 20
2023/03/27 22:23:04 HasCrashFail:false HasNetFail:false
22:23:04 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000480)='./file0/file0\x00', 0x202080, 0x48)
r5 = fcntl$getown(0xffffffffffffffff, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r5})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r6=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r6})
r7 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r7, r3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3872
remove dir: /root/cephfs-client/dfs-0-1055
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1056 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1056
receive_execute: 10, 3
receive_execute: 8, 3
receive_execute: 5, 3
receive_execute: 9, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 4219, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 99
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 4219, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 127
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 245, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 245, flag collect 0
----- executor 3 signal number : 88
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 4219, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 12
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4219, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 361, pid 4219, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 361, flag collect 0
----- executor 3 signal number : 29
----- completed 18
----- executor 3 write_call_output, size 315, pid 4219, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 315, flag collect 0
----- executor 3 signal number : 1
----- completed 19
----- executor 3 write_call_output, size 316, pid 4219, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
executor 3, execute_one inner time: 110, 2, 0
execute_one time: 1, 112
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1189, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 13881, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 30131, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1044
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 11, 116, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 12, 116, 0
before receive testcase: 0 1
----- executor 2 signal number : 7356
----- executor 2 executes write_coverage_signal cov->size 2556, flag collect 0
----- executor 2 signal number : 350
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 29441, flag collect 0
time breakdown 3: 13, 114, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
----- executor 2 signal number : 2018
----- executor 2 executes write_coverage_signal cov->size 17007, flag collect 0
----- executor 2 signal number : 4056
executor 2 server cover_cnt 8 output_pos_value 16322
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 123
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 20 replies
2023/03/27 22:23:05 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 32 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 8, 120, 0
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 99 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1044 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7356 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 350 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2018 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4056 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 127 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 88 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 7
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000100)='./file1\x00', 0x40040, 0x0)
unlink(&(0x7f0000000000)='./file0\x00')
stat(&(0x7f0000000180)='./file1\x00', &(0x7f00000001c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='system.posix_acl_access\x00', &(0x7f00000002c0)=ANY=[@ANYBLOB="50020000000100060000000000020001", @ANYRES32=r1, @ANYBLOB="02000000", @ANYRES32=r2, @ANYBLOB="02000600", @ANYRES32=0x0, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000600", @ANYRES32=0x0, @ANYBLOB="040007000000000008000600", @ANYRES32=0xee00, @ANYBLOB="08000400", @ANYRES32, @ANYBLOB="10000000000000002000070000000000"], 0x5c, 0x2)
unlink(&(0x7f0000000040)='./file1\x00')
fsetxattr$security_ima(r0, &(0x7f0000000140), 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1720
remove dir: /root/cephfs-client/dfs-0-1056
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 7
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1057 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1057
receive_execute: 7, 8
receive_execute: 6, 8
receive_execute: 3, 7
receive_execute: 6, 8
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 4224, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4224, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 132, pid 4224, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 132, flag collect 0
----- executor 3 signal number : 48
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 4224, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4224, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 491, pid 4224, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 491, flag collect 0
----- executor 3 signal number : 50
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 310, pid 4224, write pid:-2126737118
----- executor 3 executes write_coverage_signal cov->size 310, flag collect 0
----- executor 3 signal number : 90
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 0, 6
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 803, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15974, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 9, 0
before receive testcase: 0 0
----- executor 2 signal number : 1344
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 14, 9, 0
time breakdown 3: 15, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 7082
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 684
executor 2 server cover_cnt 4 output_pos_value 9192
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 21
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 7 replies
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:05 fuzzer receive 477 signal and 0 cover from executor 3
time breakdown 2: 10, 13, 0
2023/03/27 22:23:05 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 48 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 50 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 90 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1344 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7082 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 684 signal and 0 cover from userspace component
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 6
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
symlink(&(0x7f0000000300)='./file0/file0\x00', &(0x7f0000000340)='./file0\x00')
link(&(0x7f00000000c0)='./file0/file0\x00', &(0x7f0000000100)='./file1\x00')
lsetxattr$security_capability(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v3={0x3000000, [{0x3ff, 0x4}, {0x3, 0x4}]}, 0x18, 0x2)
setxattr$trusted_overlay_opaque(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x1)
lchown(&(0x7f0000000200)='./file0\x00', 0xee01, 0x0)
lsetxattr$trusted_overlay_origin(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f00000002c0), 0x2, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1504
remove dir: /root/cephfs-client/dfs-0-1057
remove dir time 11
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1058 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1058
receive_execute: 7, 12
receive_execute: 2, 12
receive_execute: 6, 12
receive_execute: 3, 12
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 4228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 30
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 528, pid 4228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 528, flag collect 0
----- executor 3 signal number : 184
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 765, pid 4228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 765, flag collect 0
----- executor 3 signal number : 118
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 534, pid 4228, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 534, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 2, 0
execute_one time: 1, 6
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 17425, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1308
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 15, 11, 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 18, 11, 0
before receive testcase: 0 0
----- executor 2 signal number : 6430
----- executor 2 executes write_coverage_signal cov->size 18558, flag collect 0
----- executor 2 signal number : 610
executor 2 server cover_cnt 4 output_pos_value 8428
time breakdown 3: 19, 9, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 25
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 6 replies
2023/03/27 22:23:05 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 30 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 184 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 118 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 4 replies
time breakdown 2: 14, 13, 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1308 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 6430 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 610 signal and 0 cover from userspace component
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 6
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000080)='./file0\x00', 0x12040, 0x0)
llistxattr(&(0x7f0000000040)='./file0\x00', 0x0, 0x4)
r1 = openat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x40, 0x0)
fcntl$dupfd(r0, 0x406, r1)
r2 = fcntl$dupfd(r1, 0x406, r1)
fremovexattr(r2, &(0x7f0000000000)=@known='user.syz\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 872
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1058
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1059 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1059
receive_execute: 8, 11
receive_execute: 6, 11
receive_execute: 6, 11
receive_execute: 5, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 4231, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 498
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 429, pid 4231, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 429, flag collect 0
----- executor 3 signal number : 169
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 479, pid 4231, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 479, flag collect 0
----- executor 3 signal number : 6
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4231, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4231, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 447, pid 4231, write pid:-2127101042
----- executor 3 executes write_coverage_signal cov->size 447, flag collect 0
----- executor 3 signal number : 85
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 6, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 451, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 11621, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1303
----- executor 2 executes write_coverage_signal cov->size 27745, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 17, 8, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 17, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 6416
----- executor 2 executes write_coverage_signal cov->size 7384, flag collect 0
----- executor 2 signal number : 575
executor 2 server cover_cnt 4 output_pos_value 8374
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 20
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:05 [CLIENT] executor 3 has 6 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 498 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 169 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1303 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 6416 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 575 signal and 0 cover from userspace component
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fuzzer receive 85 signal and 0 cover from executor 3
time breakdown 2: 15, 10, 0
before receive testcase: 0 1
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2462 openat openat
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 171 dup2 dup2
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 10
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x400880, 0x0)
r1 = openat(r0, &(0x7f0000000080)='./file0\x00', 0xa300, 0x2)
r2 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
fcntl$lock(r2, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$lock(r3, 0x26, &(0x7f0000000100)={0x1, 0x0, 0x0, 0x40})
fcntl$lock(0xffffffffffffffff, 0x0, 0x0)
r4 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r4, r2)
dup2(r1, r4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1712
remove dir: /root/cephfs-client/dfs-0-1059
remove dir time 15
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1060 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1060
receive_execute: 7, 16
receive_execute: 5, 16
receive_execute: 5, 16
receive_execute: 3, 16
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 4235, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 4235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 131
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4235, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 351, pid 4235, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 351, flag collect 0
----- executor 3 signal number : 31
----- completed 8
----- executor 3 write_call_output, size 321, pid 4235, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 3 signal number : 13
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4235, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 57, 1, 0
execute_one time: 1, 58
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 715, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 10307, flag collect 0
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 19598, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 981
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 21, 62, 0
before receive testcase: 0 0
----- executor 2 signal number : 7306
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19800, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 21, 63, 0
before receive testcase: 0 0
----- executor 2 signal number : 1675
----- executor 2 executes write_coverage_signal cov->size 11869, flag collect 0
----- executor 2 signal number : 2855
executor 2 server cover_cnt 7 output_pos_value 14302
time breakdown 3: 23, 61, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 19, 65, 0
before receive testcase: 0 0
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 82
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 10 replies
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 7 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 981 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7306 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1675 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2855 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 31 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 13
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
setxattr$incfs_size(&(0x7f0000000040)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x8, 0x0)
setxattr$security_selinux(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200), &(0x7f0000000240)='system_u:object_r:dmesg_exec_t:s0\x00', 0x22, 0x1)
lsetxattr(&(0x7f0000000480)='./file1\x00', &(0x7f00000004c0)=@random={'security.', ')//\x00'}, &(0x7f0000000500)='+)#][{\x00', 0x7, 0x0)
fcntl$notify(r0, 0x402, 0x14)
lsetxattr(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)=@random={'os2.', '%@u,+-)\x00'}, &(0x7f0000000300)='user.incfs.size\x00', 0x10, 0x2)
dup(r0)
stat(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, <r1=>0x0, <r2=>0x0})
lchown(&(0x7f0000000380)='./file0\x00', r1, r2)
r3 = open$dir(&(0x7f0000000340)='./file0\x00', 0x422000, 0x22)
open$dir(&(0x7f0000000540)='./file0\x00', 0x42b42, 0xd0)
fstat(r3, &(0x7f00000000c0))
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 2384
remove dir: /root/cephfs-client/dfs-0-1060
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 143
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1061 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1061
receive_execute: 8, 145
receive_execute: 4, 145
receive_execute: 6, 144
receive_execute: 7, 145
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 620, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 530, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 530, flag collect 0
----- executor 3 signal number : 198
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 484, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 484, flag collect 0
----- executor 3 signal number : 56
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 559, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 559, flag collect 0
----- executor 3 signal number : 83
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 14
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 125, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 125, flag collect 0
----- executor 3 signal number : 1
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 426, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 426, flag collect 0
----- executor 3 signal number : 36
----- completed 9
execute_one loop: 0, 0, 56
cover_reset in execute_call
----- executor 3 write_call_output, size 514, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 514, flag collect 0
----- executor 3 signal number : 29
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 811, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 3 signal number : 137
----- completed 12
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4240, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 70, 1, 0
execute_one time: 0, 71
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1056, flag collect 0
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1466
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 150, 74, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1069
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 152, 74, 0
before receive testcase: 0 0
----- executor 2 signal number : 8125
----- executor 2 executes write_coverage_signal cov->size 755, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 1292, flag collect 0
----- executor 2 signal number : 349
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1375
----- executor 2 executes write_coverage_signal cov->size 26627, flag collect 0
----- executor 2 signal number : 5721
executor 2 server cover_cnt 9 output_pos_value 18509
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 222
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 13 replies
2023/03/27 22:23:05 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 198 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 83 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 14 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 2 has 9 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1466 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1069 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 8125 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 349 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1375 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 5721 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 149, 77, 0
before receive testcase: 0 0
time breakdown 3: 153, 72, 0
before receive testcase: 0 0
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- splice()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 20
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x0)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x70001, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000a00))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000380)='./file0\x00', 0x2000, 0xc1)
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
r4 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x100000001, 0xbab0, r4})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r3, 0x6, &(0x7f0000000200)={0x0, 0x3, 0x9164, 0x1000, 0xffffffffffffffff})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x6, &(0x7f00000001c0)={0x2, 0x1, 0x81, 0xfffffffffffffffa})
r5 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r5, r3)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3656
remove dir: /root/cephfs-client/dfs-0-1061
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1062 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1062
receive_execute: 11, 10
receive_execute: 10, 10
receive_execute: 6, 10
receive_execute: 9, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 313, pid 4244, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 313, flag collect 0
----- executor 3 signal number : 113
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 102
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 277, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 277, flag collect 0
----- executor 3 signal number : 129
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 316, pid 4244, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 316, flag collect 0
----- executor 3 signal number : 5
----- completed 13
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 264, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 264, flag collect 0
----- executor 3 signal number : 25
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 233, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 233, flag collect 0
----- executor 3 signal number : 60
----- completed 17
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 4244, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 9
----- completed 18
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4244, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 344, pid 4244, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 344, flag collect 0
----- executor 3 signal number : 24
----- completed 20
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
[ 2046.554702] ==================================================================
[ 2046.555502] BUG: KASAN: use-after-free in ceph_fl_release_lock+0x87/0x160
[ 2046.556227] Write of size 4 at addr ff1100010ff7ad6c by task syz-executor/4244
[ 2046.556994] 
[ 2046.557159] CPU: 1 PID: 4244 Comm: syz-executor Tainted: G        W         5.15.0+ #9
[ 2046.557988] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[ 2046.558938] Call Trace:
[ 2046.559200]  dump_stack_lvl+0x34/0x44
[ 2046.559678]  print_address_description.constprop.0+0x21/0x140
[ 2046.560306]  ? ceph_fl_release_lock+0x87/0x160
[ 2046.560783]  ? ceph_fl_release_lock+0x87/0x160
[ 2046.561287]  kasan_report.cold+0x7f/0x11b
[ 2046.561687]  ? ceph_fl_release_lock+0x87/0x160
[ 2046.562156]  kasan_check_range+0x17c/0x1e0
[ 2046.562599]  ceph_fl_release_lock+0x87/0x160
[ 2046.563047]  locks_release_private+0x5a/0xb0
[ 2046.563502]  locks_dispose_list+0x31/0x50
[ 2046.563935]  posix_lock_inode+0x13e/0x7f0
[ 2046.564365]  locks_lock_inode_wait+0xb4/0x180
[ 2046.564839]  ? file_update_time+0x5d/0x120
[ 2046.565276]  ceph_lock+0x3a1/0x550
[ 2046.565640]  locks_remove_posix+0xc6/0x150
[ 2046.566065]  filp_close+0x4c/0x60
[ 2046.566413]  __x64_sys_close+0x9/0x40
[ 2046.566799]  do_syscall_64+0x38/0x90
[ 2046.567170]  entry_SYSCALL_64_after_hwframe+0x44/0xae
[ 2046.567690] RIP: 0033:0x7ffff732bd5b
[ 2046.568072] Code: 03 00 00 00 0f 05 48 3d 00 f0 ff ff 77 41 c3 48 83 ec 18 89 7c 24 0c e8 63 fc ff ff 8b 7c 24 0c 41 89 c0 b8 03 00 00 00 0f 05 <48> 3d 00 f0 ff ff 77 2f 44 89 c7 89 44 24 0c e8 a1 fc ff ff 8b 44
[ 2046.569949] RSP: 002b:00007fffffffe220 EFLAGS: 00000293 ORIG_RAX: 0000000000000003
[ 2046.570728] RAX: ffffffffffffffda RBX: 0000000000000000 RCX: 00007ffff732bd5b
[ 2046.571423] RDX: 00000187252af6f3 RSI: 0000000000000000 RDI: 0000000000000003
[ 2046.572180] RBP: 00007fffffffe250 R08: 0000000000000000 R09: 000000000039fa20
[ 2046.572923] R10: 0000000064221749 R11: 0000000000000293 R12: 00007ffff732e270
[ 2046.573682] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[ 2046.574438] 
[ 2046.574608] Allocated by task 4246:
[ 2046.575014] 
[ 2046.575185] Freed by task 4246:
[ 2046.575557] 
[ 2046.575733] The buggy address belongs to the object at ff1100010ff7ad50
[ 2046.575733]  which belongs to the cache ceph_file_info of size 32
[ 2046.577072] The buggy address is located 28 bytes inside of
[ 2046.577072]  32-byte region [ff1100010ff7ad50, ff1100010ff7ad70)
[ 2046.578292] The buggy address belongs to the page:
[ 2046.578821] 
[ 2046.578991] Memory state around the buggy address:
[ 2046.579502]  ff1100010ff7ac00: fb fb fb fb fc fc fa fb fb fb fc fc 00 00 00 00
[ 2046.580266]  ff1100010ff7ac80: fc fc fb fb fb fb fc fc fb fb fb fb fc fc fb fb
[ 2046.581020] >ff1100010ff7ad00: fb fb fc fc fb fb fb fb fc fc fa fb fb fb fc fc
[ 2046.581782]                                                           ^
[ 2046.582450]  ff1100010ff7ad80: fb fb fb fb fc fc fb fb fb fb fc fc fa fb fb fb
[ 2046.583153]  ff1100010ff7ae00: fc fc fb fb fb fb fc fc fa fb fb fb fc fc fa fb
[ 2046.583899] ==================================================================
cover_reset in execute_call
executor 3, execute_one inner time: 24, 3, 31
execute_one time: 1, 58
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 21, 61, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 837, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 10891, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 21640, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 993
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 20, 63, 0
before receive testcase: 0 0
----- executor 2 signal number : 7153
----- executor 2 executes write_coverage_signal cov->size 8391, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 551
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23479, flag collect 0
time breakdown 0: 19, 64, 0
before receive testcase: 0 0
----- executor 2 signal number : 1735
----- executor 2 executes write_coverage_signal cov->size 11907, flag collect 0
----- executor 2 signal number : 2904
executor 2 server cover_cnt 8 output_pos_value 14822
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 76
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
time breakdown 2: 16, 65, 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 993 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7153 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 551 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1735 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2904 signal and 0 cover from userspace component
2023/03/27 22:23:05 [CLIENT] executor 3 has 20 replies
2023/03/27 22:23:05 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 113 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 129 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 25 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 60 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 9 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 3761 stat stat
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 3
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
mkdir(&(0x7f0000000000)='./file1\x00', 0x10)
stat(&(0x7f0000000100)='./file1\x00', &(0x7f0000000140))
stat(&(0x7f0000000040)='./file1\x00', &(0x7f0000000080))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 344
remove dir: /root/cephfs-client/dfs-0-1062
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1063 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1063
receive_execute: 6, 9
receive_execute: 3, 8
receive_execute: 4, 9
receive_execute: 4, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 4248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 52
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 136, pid 4248, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 136, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 15, 5, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 191, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4170, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 11937, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 12, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 4728
----- executor 2 executes write_coverage_signal cov->size 10933, flag collect 0
----- executor 2 signal number : 569
executor 2 server cover_cnt 4 output_pos_value 6641
time breakdown 1: 13, 6, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 16
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 3 replies
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
time breakdown 2: 11, 7, 0
2023/03/27 22:23:05 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4728 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 569 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 52 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
before receive testcase: 0 0
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2462 openat openat
2023/03/27 22:23:05 ----- splice()
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 9
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000100)='./file0\x00', 0x8040, 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00', 0x511400, 0x52)
pread64(r0, 0x0, 0x0, 0x0)
r1 = dup(r0)
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9ac0, 0x0)
open$dir(&(0x7f0000000040)='./file0\x00', 0x200, 0x0)
open(&(0x7f0000000000)='./file0\x00', 0x1, 0x138)
dup2(r0, r1)
preadv(r1, &(0x7f0000000240)=[{&(0x7f0000000180)=""/185, 0xb9}, {&(0x7f00000000c0)=""/31, 0x1f}, {&(0x7f0000000000)=""/176, 0xb0}], 0x3, 0xffffffff, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1456
remove dir: /root/cephfs-client/dfs-0-1063
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1064 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1064
receive_execute: 4, 14
receive_execute: 2, 14
receive_execute: 3, 14
receive_execute: 3, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 619, pid 4251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4251, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 150
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4251, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 29
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 601, pid 4251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 601, flag collect 0
----- executor 3 signal number : 158
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 393, pid 4251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 3 signal number : 53
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4251, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 474, pid 4251, write pid:-2127012459
----- executor 3 executes write_coverage_signal cov->size 474, flag collect 0
----- executor 3 signal number : 55
----- completed 9
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 6, 1, 0
execute_one time: 0, 8
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 18, 9, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 449, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 13638, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 17465, flag collect 0
----- executor 2 signal number : 961
----- executor 2 executes write_coverage_signal cov->size 25902, flag collect 0
time breakdown 0: 17, 11, 0
before receive testcase: 0 1
time breakdown 1: 17, 11, 0
before receive testcase: 0 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 6433
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 31155, flag collect 0
----- executor 2 signal number : 2056
----- executor 2 executes write_coverage_signal cov->size 13904, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 3610
executor 2 server cover_cnt 7 output_pos_value 14550
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 28
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 9 replies
2023/03/27 22:23:05 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
time breakdown 2: 16, 15, 0
2023/03/27 22:23:05 [SERVER] executor 2 has 7 replies
2023/03/27 22:23:05 fuzzer receive 150 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 961 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 6433 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 29 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2056 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 158 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 53 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 55 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3610 signal and 0 cover from userspace component
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 3
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
symlink(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0x0, 0xffffffffffffffff)
setxattr$trusted_overlay_opaque(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x1)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 576
remove dir: /root/cephfs-client/dfs-0-1064
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 10
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1065 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1065
receive_execute: 8, 13
receive_execute: 2, 13
receive_execute: 6, 12
receive_execute: 6, 13
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 477, pid 4254, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 477, flag collect 0
----- executor 3 signal number : 388
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 235, pid 4254, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 235, flag collect 0
----- executor 3 signal number : 148
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3774, pid 4254, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 0, 2
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 21, 3, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 0
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1266
----- executor 2 executes write_coverage_signal cov->size 10136, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4452
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 6186, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 18, 5, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 533
time breakdown 0: 19, 5, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 6339
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 19
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 3 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 fuzzer receive 388 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 148 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 2 has 5 replies
time breakdown 2: 15, 6, 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1266 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4452 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 533 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 4
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='\x00', 0x0, 0x1b)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xace02, 0x0)
truncate(&(0x7f00000001c0)='./file1\x00', 0x2f)
read(r0, &(0x7f0000000000)=""/115, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/cephfs-client/dfs-0-1065
remove dir time 15
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1066 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1066
receive_execute: 5, 17
receive_execute: 4, 17
receive_execute: 3, 17
receive_execute: 2, 17
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4257, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 421, pid 4257, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 421, flag collect 0
----- executor 3 signal number : 365
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4257, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4257, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 22, 3, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 157, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 4425, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 3132, flag collect 0
----- executor 2 signal number : 631
----- executor 2 executes write_coverage_signal cov->size 4193, flag collect 0
----- executor 2 signal number : 2123
----- executor 2 executes write_coverage_signal cov->size 1102, flag collect 0
----- executor 2 signal number : 289
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
2023/03/27 22:23:05 for select break: 1
----- executor 2 signal number : 3
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 1759, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 20, 4, 0
time breakdown 1: 21, 4, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 732
----- executor 2 executes write_coverage_signal cov->size 2583, flag collect 0
----- executor 2 signal number : 987
executor 2 server cover_cnt 8 output_pos_value 6245
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 21
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
time breakdown 2: 19, 5, 0
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 631 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2123 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 289 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 732 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 365 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 ----- enqueue testcases with server coveraged
2023/03/27 22:23:05 prog length: 4
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
open(&(0x7f0000000080)='\x00', 0x0, 0x1b)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xace02, 0x0)
truncate(&(0x7f00000001c0)='./file1\x00', 0x2f)
read(r0, &(0x7f0000000000)=""/115, 0x9)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/cephfs-client/dfs-0-1066
remove dir time 3
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1067 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1067
receive_execute: 5, 4
receive_execute: 4, 4
receive_execute: 4, 3
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4260, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 425, pid 4260, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 425, flag collect 1
----- executor 3 cover number : 357, signal number : 366
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
receive_execute: 4, 4
executor 1 before execute_one
----- completed 2
execute_one loop: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4260, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 1
----- executor 3 cover number : 55, signal number : 27
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4260, write pid:-2127102047
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2, 0
execute_one time: 0, 2
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 9, 2, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 130, flag collect 1
----- executor 2 cover number : 63, signal number : 65
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 1954, flag collect 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 cover number : 865, signal number : 1013
----- executor 2 executes write_coverage_signal cov->size 4172, flag collect 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 8, 3, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 8, 4, 0
before receive testcase: 0 0
----- executor 2 cover number : 1968, signal number : 2163
----- executor 2 executes write_coverage_signal cov->size 545, flag collect 1
----- executor 2 cover number : 292, signal number : 215
executor 2 server cover_cnt 4 output_pos_value 6657
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 9
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
time breakdown 2: 7, 6, 0
2023/03/27 22:23:05 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 366 signal and 357 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 27 signal and 55 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 65 signal and 63 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1013 signal and 865 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2163 signal and 1968 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 215 signal and 292 cover from userspace component
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- triage return due to empty signal extra
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2343 link link
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 3967 truncate truncate
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2458 open open
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 258 getdents getdents
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2458 open open
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 13
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
lremovexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='com.apple.FinderInfo\x00')
open(&(0x7f0000001400)='./file0/file0\x00', 0x111701, 0x90)
r0 = open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc0, 0x0)
r1 = open$dir(&(0x7f0000000200)='./file0/file0\x00', 0x2, 0xe)
getdents(r1, &(0x7f0000000240)=""/4096, 0x1000)
open$dir(&(0x7f0000001300)='./file0\x00', 0x40002, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f00000000c0)='./file0/file0\x00')
fcntl$lock(r0, 0x26, &(0x7f0000000100))
lsetxattr(&(0x7f0000001240)='./file0\x00', &(0x7f0000001280)=@known='user.incfs.size\x00', &(0x7f00000012c0)='}%,@)\x00', 0x6, 0x1)
setxattr$smack_xattr_label(&(0x7f0000001340)='./file0\x00', &(0x7f0000001380)='security.SMACK64IPOUT\x00', &(0x7f00000013c0)={'com.apple.FinderInfo\x00'}, 0x16, 0x0)
truncate(&(0x7f0000000180)='./file0/file0\x00', 0x20)
open(&(0x7f00000001c0)='./file0\x00', 0x2, 0x0)
fsync(r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2272
remove dir: /root/cephfs-client/dfs-0-1067
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1068 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1068
receive_execute: 3, 3
receive_execute: 5, 3
receive_execute: 4, 2
receive_execute: 2, 2
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 662, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 662, flag collect 0
----- executor 3 signal number : 448
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 6
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 394, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 394, flag collect 0
----- executor 3 signal number : 101
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 323, pid 4262, write pid:-2126976019
----- executor 3 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 3 signal number : 122
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 299, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 299, flag collect 0
----- executor 3 signal number : 131
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 234, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 234, flag collect 0
----- executor 3 signal number : 17
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 4262, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 3 signal number : 1
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 341, pid 4262, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 341, flag collect 0
----- executor 3 signal number : 133
----- completed 13
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 1, 0
execute_one time: 0, 9
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 8, 10, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 585, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 65
----- executor 2 executes write_coverage_signal cov->size 16614, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1398
----- executor 2 executes write_coverage_signal cov->size 15905, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 6, 11, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 6, 12, 0
before receive testcase: 0 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 25056, flag collect 0
----- executor 2 signal number : 7051
----- executor 2 executes write_coverage_signal cov->size 3556, flag collect 0
----- executor 2 signal number : 370
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 31221, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 2025
----- executor 2 executes write_coverage_signal cov->size 18770, flag collect 0
----- executor 2 signal number : 3449
executor 2 server cover_cnt 8 output_pos_value 15391
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 18
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 13 replies
2023/03/27 22:23:05 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 448 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 4, 16, 0
2023/03/27 22:23:05 fuzzer receive 101 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 122 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 131 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 17 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 133 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 65 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1398 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7051 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 370 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 2025 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3449 signal and 0 cover from userspace component
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 198 fcntl$F_GET_FILE_RW_HINT fcntl$F_GET_FILE_RW_HINT
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 170 dup dup
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 10
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000200))
fcntl$F_GET_RW_HINT(0xffffffffffffffff, 0x40b, &(0x7f0000000080))
mkdirat$binderfs(0xffffffffffffff9c, &(0x7f0000000000)='./binderfs\x00', 0x1ff)
r0 = open$dir(&(0x7f0000000140)='./file1\x00', 0x270400, 0xca)
r1 = dup(r0)
r2 = openat(0xffffffffffffffff, &(0x7f0000000100)='./file1\x00', 0x200, 0x108)
fsetxattr$trusted_overlay_upper(r2, &(0x7f0000000240), &(0x7f0000000280)={0x0, 0xfb, 0xc6, 0x3, 0x1, "09eec132b6eed6fab98fc607186d8bce", "eab047611e769392bf9f467cd04f4aa0453da4810f06c7877afb8e613d447b8f66e28188e3f8143ad8b03ecc6f10014674baaa0179bda6c383146d12dc2c04386fca91665cb483d73303f3b6704b6a5d2527206066d8ce043cefb88ebd0c7e8bec25028a8a8a44a98d45f226eeb34afd86396255ebaf895e48ac456f096c1405c60a389c324483ae06443854d3c0bffa281c0790c4bb2c61b81bbc9bc1d0ef91bd5056967ffdc2b35f0daa89e39836a8f2"}, 0xc6, 0x2)
fcntl$dupfd(r0, 0x0, r1)
mkdirat$cgroup_root(0xffffffffffffff9c, &(0x7f0000000040)='./cgroup/syz0\x00', 0x1ff)
open$dir(&(0x7f00000000c0)='./file1\x00', 0x7ac01, 0x4000000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1824
remove dir: /root/cephfs-client/dfs-0-1068
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 8
-----finish removing dir
mkdir time 2
executor 3 create dir /root/cephfs-client/dfs-0-1069 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1069
receive_execute: 3, 11
receive_execute: 9, 10
receive_execute: 8, 11
receive_execute: 8, 10
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 514, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 514, flag collect 0
----- executor 3 signal number : 404
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4265, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 27
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 19, 5, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 128, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 4164, flag collect 0
----- executor 2 signal number : 1262
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 executes write_coverage_signal cov->size 11408, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 4693
----- executor 2 executes write_coverage_signal cov->size 1055, flag collect 0
----- executor 2 signal number : 295
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 7110, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 19, 5, 0
time breakdown 1: 18, 6, 0
before receive testcase: 0 0
----- executor 2 signal number : 523
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 6856
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 17
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 10 replies
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 404 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
time breakdown 2: 14, 7, 0
2023/03/27 22:23:05 [SERVER] executor 2 has 5 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1262 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4693 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 523 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 27 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 5
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x50)
lsetxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
lsetxattr$security_evm(&(0x7f0000000180)='./file0/file0\x00', 0x0, 0x0, 0x0, 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
fsync(r0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 776
remove dir: /root/cephfs-client/dfs-0-1069
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1070 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1070
receive_execute: 5, 10
receive_execute: 3, 11
receive_execute: 3, 10
receive_execute: 2, 10
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 295, pid 4268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 295, flag collect 0
----- executor 3 signal number : 164
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 153, pid 4268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4268, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 47
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 311, pid 4268, write pid:-2126826085
----- executor 3 executes write_coverage_signal cov->size 311, flag collect 0
----- executor 3 signal number : 187
----- completed 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 0, 0
execute_one time: 1, 14
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 384, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 8881, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 12544, flag collect 0
time breakdown 3: 15, 16, 0
before receive testcase: 0 0
----- executor 2 signal number : 968
----- executor 2 executes write_coverage_signal cov->size 18819, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 13, 18, 0
time breakdown 1: 14, 17, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 5520
----- executor 2 executes write_coverage_signal cov->size 2162, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 24043, flag collect 0
----- executor 2 signal number : 1706
----- executor 2 executes write_coverage_signal cov->size 12745, flag collect 0
----- executor 2 signal number : 3138
executor 2 server cover_cnt 8 output_pos_value 13135
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 32
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 5 replies
2023/03/27 22:23:05 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 164 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 187 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1388 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 968 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 5520 signal and 0 cover from userspace component
time breakdown 2: 12, 21, 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1706 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3138 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 131 close close
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 4
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f00000000c0)='./file1\x00', 0x1456c1, 0x0)
write$binfmt_misc(r0, &(0x7f00000015c0)={'syz1'}, 0x10000000000)
r1 = open(&(0x7f0000000000)='./file1\x00', 0x60880, 0x140)
close(r1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/cephfs-client/dfs-0-1070
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 59
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1071 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1071
receive_execute: 8, 60
receive_execute: 3, 61
receive_execute: 6, 61
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 7, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 4272, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 189, pid 4272, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 189, flag collect 0
----- executor 3 signal number : 35
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 4272, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 3
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 32432, pid 4272, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 32432, flag collect 0
----- executor 3 signal number : 963
----- completed 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 61, 0, 0
execute_one time: 1, 61
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 323, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 14132, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1394
----- executor 2 executes write_coverage_signal cov->size 10660, flag collect 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 908
2023/03/27 22:23:05 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 17373, flag collect 0
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 67, 65, 0
before receive testcase: 0 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 66, 0
before receive testcase: 0 0
----- executor 2 signal number : 5732
----- executor 2 executes write_coverage_signal cov->size 1838, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 27805, flag collect 0
time breakdown 3: 68, 64, 0
before receive testcase: 0 1
----- executor 2 signal number : 1903
----- executor 2 executes write_coverage_signal cov->size 12965, flag collect 0
----- executor 2 signal number : 3171
executor 2 server cover_cnt 8 output_pos_value 13523
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 131
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:05 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fuzzer receive 18 signal and 0 cover from executor 3
time breakdown 2: 64, 70, 0
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 963 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1394 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 908 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 5732 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1903 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3171 signal and 0 cover from userspace component
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 248 fstat fstat
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 12
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000700)='./file0\x00', 0x40, 0x0)
link(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file2\x00')
rename(&(0x7f0000000440)='./file2\x00', &(0x7f0000000480)='./file0\x00')
unlink(&(0x7f0000000000)='./file0\x00')
stat(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f0000000100)='./file0\x00', &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f00000004c0)=ANY=[@ANYBLOB="02000000010000000000000002000000", @ANYRES32=0xee00, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000500", @ANYRES32=0x0, @ANYBLOB="02000100", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000300", @ANYRES32=0xee00, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="02000600", @ANYRES32=0xee01, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=r2, @ANYBLOB="040001000000000008000400", @ANYRES32=0x0, @ANYBLOB="08000400", @ANYRES32=0xee01, @ANYBLOB="08000500", @ANYRES32=r3, @ANYBLOB="08000200", @ANYRES32=r4, @ANYBLOB='\b \x00\x00', @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32, @ANYBLOB="08000500", @ANYRES32=0xee01, @ANYBLOB="08000200", @ANYRES32=0xee00, @ANYBLOB='\b\x00\a\x00', @ANYRES32=0xee01, @ANYBLOB="10000300000000002000020000000000"], 0xbc, 0x1)
fstat(r0, &(0x7f0000000580))
open(&(0x7f00000001c0)='./file2\x00', 0x0, 0x0)
close(r0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3328
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1071
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1072 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1072
receive_execute: 12, 8
receive_execute: 6, 8
receive_execute: 11, 7
receive_execute: 10, 8
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 619, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 619, flag collect 0
----- executor 3 signal number : 477
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 570, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 570, flag collect 0
----- executor 3 signal number : 92
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 466, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 466, flag collect 0
----- executor 3 signal number : 24
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 7
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 332, pid 4275, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 332, flag collect 0
----- executor 3 signal number : 120
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 93, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 4275, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4275, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 27, pid 4275, write pid:-2127004992
----- executor 3 executes write_coverage_signal cov->size 27, flag collect 0
----- executor 3 signal number : 18
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 4, 8, 0
execute_one time: 1, 12
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1128, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 69
----- executor 2 executes write_coverage_signal cov->size 15160, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 31140, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1152
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 18, 16, 0
before receive testcase: 0 0
time breakdown 3: 20, 14, 0
before receive testcase: 0 0
----- executor 2 signal number : 7415
----- executor 2 executes write_coverage_signal cov->size 140, flag collect 0
----- executor 2 signal number : 79
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
2023/03/27 22:23:05 for select break: 1
----- executor 2 signal number : 3
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 809
----- executor 2 executes write_coverage_signal cov->size 24480, flag collect 0
time breakdown 1: 18, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 4811
executor 2 server cover_cnt 8 output_pos_value 15753
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 29
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 12 replies
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
time breakdown 2: 14, 21, 0
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 69 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1390 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1152 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 7415 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 809 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 4811 signal and 0 cover from userspace component
2023/03/27 22:23:05 fuzzer receive 477 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 92 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 120 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2723 pread64 pread64
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2341 lchown lchown
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 9
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x0)
r0 = open(&(0x7f0000000140)='./file0\x00', 0x0, 0x0)
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x240, 0x0)
r2 = open$dir(&(0x7f0000000000)='./file0\x00', 0x802, 0x1)
pread64(r2, &(0x7f0000000300)=""/4096, 0x1000, 0x4)
open(&(0x7f00000002c0)='./file0/file0\x00', 0x103002, 0x0)
fstat(r1, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lchown(&(0x7f0000000040)='./file0/file0\x00', r3, r4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1360
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1072
remove dir time 6
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1073 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1073
receive_execute: 9, 7
receive_execute: 2, 8
receive_execute: 7, 7
receive_execute: 8, 7
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 511, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 511, flag collect 0
----- executor 3 signal number : 401
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 85
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 620, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 75
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 462, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 462, flag collect 0
----- executor 3 signal number : 100
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 38, pid 4280, write pid:-2127100806
----- executor 3 executes write_coverage_signal cov->size 38, flag collect 0
----- executor 3 signal number : 19
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 200, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 200, flag collect 0
----- executor 3 signal number : 1
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 345, pid 4280, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 345, flag collect 0
----- executor 3 signal number : 140
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 3, 1, 0
execute_one time: 1, 4
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 16, 7, 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 321, flag collect 0
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 7955, flag collect 0
----- executor 2 signal number : 1386
----- executor 2 executes write_coverage_signal cov->size 9714, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
executor 0 server cover_cnt 0 output_pos_value 1
time breakdown 0: 15, 8, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 894
----- executor 2 executes write_coverage_signal cov->size 26481, flag collect 0
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 8, 0
before receive testcase: 0 0
----- executor 2 signal number : 6527
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 8
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 27215, flag collect 0
----- executor 2 signal number : 1714
----- executor 2 executes write_coverage_signal cov->size 14641, flag collect 0
----- executor 2 signal number : 3293
executor 2 server cover_cnt 8 output_pos_value 13917
2023/03/27 22:23:05 for select break: 1
2023/03/27 22:23:05 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:05 wg wait finish
2023/03/27 22:23:05 ------ all executors finish execution
2023/03/27 22:23:05 exec time: 20
2023/03/27 22:23:05 ----- PS len: 4
2023/03/27 22:23:05 [CLIENT] executor 3 has 9 replies
2023/03/27 22:23:05 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 85 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 75 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 10, 13, 0
2023/03/27 22:23:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 19 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/27 22:23:05 fuzzer receive 140 signal and 0 cover from executor 3
2023/03/27 22:23:05 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:05 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1386 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 894 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 6527 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 1714 signal and 0 cover from userspace component
2023/03/27 22:23:05 ------- fuzzer executor 2 receive 3293 signal and 0 cover from userspace component
2023/03/27 22:23:05 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:05 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:05 ----- no new client coverage: false, true
2023/03/27 22:23:05 mutate testcase with failures
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 2724 preadv preadv
2023/03/27 22:23:05 ----- mutateArg()
2023/03/27 22:23:05 ----- insertCall()
2023/03/27 22:23:05 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 22:23:05 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:05 prog length: 6
2023/03/27 22:23:05 HasCrashFail:false HasNetFail:false
22:23:05 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000200)='./file0\x00', 0x121041, 0x0)
preadv(r0, &(0x7f0000001500)=[{&(0x7f0000000080)=""/59, 0x3b}, {&(0x7f00000000c0)=""/108, 0x6c}, {&(0x7f0000000140)=""/65, 0x41}, {&(0x7f0000000280)=""/4096, 0x1000}, {&(0x7f0000001280)=""/87, 0x57}, {&(0x7f0000001300)=""/195, 0xc3}, {&(0x7f0000001400)=""/219, 0xdb}], 0x7, 0x100, 0x0)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x40202, 0x0)
write(r1, &(0x7f0000000040)="9e", 0x400000)
write$binfmt_aout(r1, &(0x7f0000000240), 0x20)
fcntl$getown(r1, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1808
remove dir: /root/cephfs-client/dfs-0-1073
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 3
executor 3 create dir /root/cephfs-client/dfs-0-1074 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1074
receive_execute: 3, 15
receive_execute: 9, 14
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 15
receive_execute: 10, 15
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 623, pid 4283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 623, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 386, pid 4283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 3 signal number : 186
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 55940, pid 4283, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 55940, flag collect 0
----- executor 3 signal number : 322
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4283, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 713, pid 4283, write pid:-2127023000
----- executor 3 executes write_coverage_signal cov->size 713, flag collect 0
----- executor 3 signal number : 56
----- completed 6
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 130, 51, 0
execute_one time: 1, 181
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 571, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 67
----- executor 2 executes write_coverage_signal cov->size 22107, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 1400
----- executor 2 executes write_coverage_signal cov->size 26950, flag collect 0
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 24, 185, 0
before receive testcase: 0 0
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 3: 25, 184, 0
before receive testcase: 0 0
----- executor 2 signal number : 966
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 23, 187, 0
before receive testcase: 0 0
----- executor 2 signal number : 6626
----- executor 2 executes write_coverage_signal cov->size 369, flag collect 0
----- executor 2 signal number : 248
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1696
----- executor 2 executes write_coverage_signal cov->size 22516, flag collect 0
----- executor 2 signal number : 5144
executor 2 server cover_cnt 8 output_pos_value 16175
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:06 wg wait finish
2023/03/27 22:23:06 ------ all executors finish execution
2023/03/27 22:23:06 exec time: 204
2023/03/27 22:23:06 ----- PS len: 4
time breakdown 2: 18, 190, 0
2023/03/27 22:23:06 [CLIENT] executor 3 has 6 replies
2023/03/27 22:23:06 fuzzer receive 478 signal and 0 cover from executor 3
2023/03/27 22:23:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:06 [SERVER] executor 0 has 0 replies
before receive testcase: 0 0
2023/03/27 22:23:06 [SERVER] executor 2 has 8 replies
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 67 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 1400 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 966 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 6626 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 248 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 1696 signal and 0 cover from userspace component
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 5144 signal and 0 cover from userspace component
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 186 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 322 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 56 signal and 0 cover from executor 3
2023/03/27 22:23:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:06 ----- no new client coverage: false, true
2023/03/27 22:23:06 mutate testcase with failures
2023/03/27 22:23:06 ----- mutateArg()
2023/03/27 22:23:06 ----- insertCall()
2023/03/27 22:23:06 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/27 22:23:06 ----- insertCall()
2023/03/27 22:23:06 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/27 22:23:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:06 prog length: 4
2023/03/27 22:23:06 HasCrashFail:false HasNetFail:false
22:23:06 ---executing program 0:
---
---
---
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
write$binfmt_elf64(r0, &(0x7f0000000040)=ANY=[@ANYBLOB=""/6763], 0x1a78)
r1 = open(&(0x7f0000000000)='./file1\x00', 0xe4a6c3, 0x0)
fcntl$getown(r1, 0x9)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7256
remove dir: /root/cephfs-client/dfs-0-1074
remove dir time 5
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1075 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1075
receive_execute: 9, 7
receive_execute: 9, 6
receive_execute: 7, 7
receive_execute: 4, 6
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 85, pid 4287, write pid:-2127101003
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 3 signal number : 47
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4287, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 2 server cover_cnt 0 output_pos_value 1
executor 0 write_server_output
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
executor 0 server cover_cnt 0 output_pos_value 1
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 14, 4, 0
before receive testcase: 0 0
time breakdown 2: 10, 6, 0
before receive testcase: 0 1
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 0 receive reply, reply.done 1
2023/03/27 22:23:06 wg wait finish
2023/03/27 22:23:06 ------ all executors finish execution
2023/03/27 22:23:06 exec time: 13
2023/03/27 22:23:06 ----- PS len: 4
2023/03/27 22:23:06 [CLIENT] executor 3 has 4 replies
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 47 signal and 0 cover from executor 3
2023/03/27 22:23:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:06 [SERVER] executor 2 has 0 replies
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 [SERVER] executor 0 has 0 replies
time breakdown 0: 15, 6, 0
before receive testcase: 0 0
2023/03/27 22:23:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:06 ----- no new client coverage: false, true
2023/03/27 22:23:06 mutate testcase with failures
2023/03/27 22:23:06 ----- mutateArg()
2023/03/27 22:23:06 ----- insertCall()
2023/03/27 22:23:06 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/27 22:23:06 ----- insertCall()
2023/03/27 22:23:06 ----- generateCall 2459 open$dir open$dir
2023/03/27 22:23:06 ----- insertCall()
2023/03/27 22:23:06 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/27 22:23:06 ----- insertCall()
2023/03/27 22:23:06 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/27 22:23:06 ----- mutateArg()
2023/03/27 22:23:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:06 prog length: 10
2023/03/27 22:23:06 HasCrashFail:false HasNetFail:false
22:23:06 ---executing program 0:
---
---
---
r0 = dup(0xffffffffffffffff)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f00000001c0)={0x0, <r1=>0x0})
fcntl$lock(r0, 0x21, &(0x7f0000000200)={0x0, 0x0, 0x8001, 0x6, r1})
open$dir(&(0x7f0000000080)='./file0\x00', 0x1c9bc2, 0xa8)
truncate(&(0x7f0000000000)='./file0\x00', 0x6d35)
r2 = dup(r0)
fsetxattr$security_smack_transmute(r2, &(0x7f0000000240), &(0x7f0000000280), 0x4, 0x1)
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x2)
chmod(&(0x7f0000000180)='./file0\x00', 0x0)
open$dir(&(0x7f0000000140)='./file0/file0\x00', 0x60d00, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 16, 4, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1656
remove dir: /root/cephfs-client/dfs-0-1075
remove dir time 2
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1076 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1076
receive_execute: 1, 4
receive_execute: 1, 4
receive_execute: 3, 3
receive_execute: 2, 3
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 628, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 628, flag collect 0
----- executor 3 signal number : 480
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 307, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 307, flag collect 0
----- executor 3 signal number : 177
----- completed 5
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 213, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 213, flag collect 0
----- executor 3 signal number : 59
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 174, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 174, flag collect 0
----- executor 3 signal number : 18
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 94, pid 4290, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 94, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 63
----- executor 2 executes write_coverage_signal cov->size 4421, flag collect 0
----- executor 2 signal number : 1270
----- executor 2 executes write_coverage_signal cov->size 12036, flag collect 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 5015
----- executor 2 executes write_coverage_signal cov->size 6235, flag collect 0
----- executor 2 signal number : 545
executor 2 server cover_cnt 4 output_pos_value 6906
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 1 receive reply, reply.done 1
2023/03/27 22:23:06 for select break: 1
time breakdown 1: 5, 6, 0
2023/03/27 22:23:06 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/27 22:23:06 for select break: 1
2023/03/27 22:23:06 --------- executor 2 receive reply, reply.done 1
2023/03/27 22:23:06 wg wait finish
2023/03/27 22:23:06 ------ all executors finish execution
2023/03/27 22:23:06 exec time: 10
2023/03/27 22:23:06 ----- PS len: 4
time breakdown 2: 5, 6, 0
2023/03/27 22:23:06 [SERVER] executor 0 has 0 replies
2023/03/27 22:23:06 [CLIENT] executor 3 has 10 replies
2023/03/27 22:23:06 [SERVER] executor 1 has 0 replies
2023/03/27 22:23:06 [SERVER] executor 2 has 4 replies
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 63 signal and 0 cover from userspace component
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 1270 signal and 0 cover from userspace component
2023/03/27 22:23:06 fuzzer receive 480 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 177 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 59 signal and 0 cover from executor 3
2023/03/27 22:23:06 fuzzer receive 18 signal and 0 cover from executor 3
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 5015 signal and 0 cover from userspace component
2023/03/27 22:23:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/27 22:23:06 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
time breakdown 3: 6, 5, 0
before receive testcase: 0 0
2023/03/27 22:23:06 fsMds: [map[] map[] map[] map[]]
2023/03/27 22:23:06 ----- no new client coverage: false, true
2023/03/27 22:23:06 mutate testcase with failures
2023/03/27 22:23:06 ----- mutateArg()
2023/03/27 22:23:06 HasCrashFail: false, .HasNetFail: false
2023/03/27 22:23:06 prog length: 20
2023/03/27 22:23:06 HasCrashFail:false HasNetFail:false
22:23:06 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000280)='./file0\x00', 0x121040, 0x8)
r1 = open$dir(&(0x7f0000000240)='./file0\x00', 0x20400, 0x2)
r2 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x40000, 0xc)
symlinkat(&(0x7f00000002c0)='./file0\x00', r2, &(0x7f0000000340)='./file0\x00')
fcntl$dupfd(r0, 0x0, r1)
fcntl$lock(r0, 0x6, &(0x7f0000000440))
r3 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x2, 0x0)
r4 = fcntl$getown(0xffffffffffffffff, 0x9)
openat(r2, &(0x7f0000000480)='./file0/file0\x00', 0x202080, 0x48)
r5 = fcntl$getown(r0, 0x9)
fcntl$lock(r3, 0x6, &(0x7f0000000100)={0x1, 0x0, 0x1, 0xbab0, r5})
truncate(&(0x7f0000000180)='./file0\x00', 0x1ff)
fcntl$lock(r1, 0x6, 0x0)
fcntl$lock(r0, 0x26, &(0x7f0000000200)={0x0, 0x1, 0x9164, 0x100000001, r4})
lsetxattr$trusted_overlay_opaque(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000140), 0x2, 0x0)
fcntl$lock(r0, 0x26, &(0x7f00000001c0)={0x0, 0x1, 0x400})
fcntl$getownex(r1, 0x10, &(0x7f00000003c0)={0x0, <r6=>0x0})
fcntl$lock(r3, 0x7, &(0x7f0000000400)={0x1, 0x1, 0x10000000, 0xc9, r6})
r7 = open(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
dup2(r7, r3)
---

end of program
time breakdown 0: 5, 5, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3896
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir: /root/cephfs-client/dfs-0-1076
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 9
-----finish removing dir
mkdir time 1
executor 3 create dir /root/cephfs-client/dfs-0-1077 successfully
current dir: executor 3: /root/cephfs-client/dfs-0-1077
receive_execute: 3, 11
receive_execute: 2, 10
receive_execute: 2, 11
receive_execute: 3, 10
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- executor 3 write_call_output, size 620, pid 4293, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 620, flag collect 0
----- executor 3 signal number : 478
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 188, pid 4293, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 188, flag collect 0
----- executor 3 signal number : 32
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4293, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4293, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4293, write pid:-2127101003
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal nu
VM DIAGNOSIS:
22:23:05  Registers:
info registers vcpu 0
RAX=ffffffff81d3b3f0 RBX=0000000000000000 RCX=0000000000000000 RDX=ff1100026562e7e0
RSI=ffffffff82607e30 RDI=000000000096a174 RBP=ffffffff82619280 RSP=ffffffff82607ea0
R8 =000000000096a173 R9 =0000000000000002 R10=000000000002d9c0 R11=0000000000000001
R12=ffffffff82619280 R13=ffffffff82619280 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff81d3b3fb RFL=00000206 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265600000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffc88 CR3=0000000104fb2003 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=00000000000000000000ffffffffff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000004260000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=00007ffff71c3083 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032ee RFL=00000203 [------C] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=000000011264e002 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000004260000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
