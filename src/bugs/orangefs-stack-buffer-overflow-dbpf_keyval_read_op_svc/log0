 begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 19737, pid 4567, write pid:4568
----- executor 3 executes write_coverage_signal cov->size 19737, flag collect 0
----- executor 3 signal number : 3083
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
receive_execute: 3, 125
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 27915, pid 4871, write pid:4872
----- executor 4 executes write_coverage_signal cov->size 27915, flag collect 0
----- executor 4 signal number : 2881
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 4, execute_one inner time: 6, 2, 0
execute_one time: 1, 8
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 19, 10, 0
2023/03/01 22:07:26 for select break: 1
execute_one time: 1, 29
time breakdown 4: 128, 9, 0
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32017, flag collect 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 127, 41, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 103, 41, 0
before receive testcase: 0 0
----- executor 0 signal number : 2498
----- executor 0 executes write_coverage_signal cov->size 20997, flag collect 0
----- executor 1 signal number : 2770
----- executor 1 executes write_coverage_signal cov->size 19825, flag collect 0
----- executor 1 signal number : 987
----- executor 1 executes write_coverage_signal cov->size 4165, flag collect 0
----- executor 0 signal number : 1167
----- executor 0 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 1 signal number : 344
----- executor 1 executes write_coverage_signal cov->size 3403, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 3451, flag collect 0
----- executor 0 signal number : 79
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4190
executor 0 server cover_cnt 4 output_pos_value 4043
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:26 wg wait finish
2023/03/01 22:07:26 ------ all executors finish execution
2023/03/01 22:07:26 exec time: 148
2023/03/01 22:07:26 ----- PS len: 5
time breakdown 1: 105, 44, 0
2023/03/01 22:07:26 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:26 fuzzer receive 2881 signal and 0 cover from executor 4
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 2498 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 1167 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
time breakdown 0: 105, 44, 0
before receive testcase: 0 0
2023/03/01 22:07:26 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:26 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:26 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 2770 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 987 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 344 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 187 faccessat faccessat
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 187 faccessat faccessat
2023/03/01 22:07:26 ----- removeCall()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 248 fstat fstat
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3676 setxattr$trusted_overlay_redirect setxattr$trusted_overlay_redirect
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 214 fcntl$setsig fcntl$setsig
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 6
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
faccessat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x8)
r0 = open(&(0x7f0000001500)='./file0\x00', 0x5017a3, 0xc2a19e52f568a5f4)
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x2001, 0x1a2)
setxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f0000000180)='./file0\x00', 0x8, 0x1)
fcntl$setsig(r1, 0xa, 0x3e)
fstat(r1, &(0x7f0000000100))
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 968
remove dir: /root/orangefs-client/dfs-0-2190
----- executor 4 receive testcase
executor 4: prog_data_offset 2304, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 14
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2191 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2191
current dir: executor 4: /root/orangefs-client/dfs-0-2191
receive_execute: 4, 28
receive_execute: 2, 28
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 2, 27
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 29
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4569, write pid:4570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4569, write pid:4570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4569, write pid:4570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6787, pid 4569, write pid:4570
----- executor 3 executes write_coverage_signal cov->size 6787, flag collect 0
----- executor 3 signal number : 2061
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4569, write pid:4570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4569, write pid:4570
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 0, 0
execute_one time: 0, 5
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 34, 7, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 207
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 2: 32, 13, 0
before receive testcase: 0 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
receive_execute: 16, 39
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 4: 55, 1, 0
before receive testcase: 0 1
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 23722, flag collect 0
----- executor 1 signal number : 1919
----- executor 1 executes write_coverage_signal cov->size 10112, flag collect 0
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 2358, flag collect 0
----- executor 1 signal number : 287
----- executor 1 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 1 signal number : 72
executor 1 server cover_cnt 4 output_pos_value 2622
time breakdown 1: 30, 14, 0
before receive testcase: 0 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:26 wg wait finish
2023/03/01 22:07:26 ------ all executors finish execution
2023/03/01 22:07:26 exec time: 45
2023/03/01 22:07:26 ----- PS len: 5
2023/03/01 22:07:26 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:26 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:26 [CLIENT] executor 3 has 6 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 1919 signal and 0 cover from userspace component
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 287 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
time breakdown 0: 29, 18, 0
before receive testcase: 0 0
2023/03/01 22:07:26 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 216 fdatasync fdatasync
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3985 write write
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 8
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
lgetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@random={'os2.', '(?\x00'}, &(0x7f0000000080)=""/164, 0xa4)
lgetxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=@random={'security.', ',/\x13[\\$@@@/\x00'}, &(0x7f00000001c0)=""/135, 0x87)
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000400)=@v3={0x3000000, [{0x80, 0x1}, {0x1, 0x2}], r0}, 0x18, 0x2)
r1 = open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
fdatasync(0xffffffffffffffff)
r2 = dup(r1)
write(r2, &(0x7f0000000280)="0576ada4", 0x4)
---
---

end of program
----- executor 3 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 2904, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1568
remove dir: /root/orangefs-client/dfs-0-2191
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-2192 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2192
receive_execute: 5, 29
receive_execute: 1, 29
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 30
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-2192
receive_execute: 4, 30
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 46
----- executor 3 write_call_output, size 6797, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 6797, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 52, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 6797, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 6797, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6797, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 6797, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 6797, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 6797, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19527, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 19527, flag collect 0
----- executor 3 signal number : 1038
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4572, write pid:4573
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 31, 3, 0
execute_one time: 0, 34
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7300, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 1 signal number : 1723
----- executor 1 executes write_coverage_signal cov->size 12586, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
----- executor 1 signal number : 1073
----- executor 1 executes write_coverage_signal cov->size 1416, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 845, flag collect 0
----- executor 1 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 1963
----- executor 0 executes write_coverage_signal cov->size 21651, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 3170
----- executor 0 signal number : 951
----- executor 0 executes write_coverage_signal cov->size 4926, flag collect 0
----- executor 0 signal number : 358
----- executor 0 executes write_coverage_signal cov->size 4401, flag collect 0
----- executor 0 signal number : 75
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 35, 36, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 3360
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 34, 36, 0
before receive testcase: 0 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 37, 0
2023/03/01 22:07:26 wg wait finish
2023/03/01 22:07:26 ------ all executors finish execution
2023/03/01 22:07:26 exec time: 67
2023/03/01 22:07:26 ----- PS len: 5
before receive testcase: 0 1
2023/03/01 22:07:26 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 1963 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 951 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 358 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 1723 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 1073 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 [CLIENT] executor 3 has 8 replies
2023/03/01 22:07:26 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 1038 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- removeCall()
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 216 fdatasync fdatasync
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 2724 preadv preadv
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 4
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000040)='./file0\x00', 0x101000, 0x0)
preadv(r0, &(0x7f00000000c0)=[{&(0x7f0000000080)=""/44, 0x2c}], 0x1, 0x3b, 0xfffffffd)
r1 = open(&(0x7f0000000000)='./file0\x00', 0x202000, 0x4)
fdatasync(r1)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 40, 34, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/orangefs-client/dfs-0-2192
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1960, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-2193 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2193
receive_execute: 1, 55
current dir: executor 4: /root/orangefs-client/dfs-0-2193
receive_execute: 2, 54
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 55
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4575, write pid:4576
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 1, 55
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 4575, write pid:4576
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6787, pid 4575, write pid:4576
----- executor 3 executes write_coverage_signal cov->size 6787, flag collect 0
----- executor 3 signal number : 2061
----- completed 3
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4575, write pid:4576
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 16, 0
execute_one time: 0, 28
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 58, 28, 0
before receive testcase: 0 0
receive_execute: 20, 98
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20302, flag collect 0
----- executor 1 signal number : 13
time breakdown 4: 118, 2, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 1 signal number : 44
----- executor 2 signal number : 44
----- executor 0 signal number : 1965
----- executor 0 executes write_coverage_signal cov->size 7954, flag collect 0
----- executor 0 signal number : 331
----- executor 0 executes write_coverage_signal cov->size 1772, flag collect 0
----- executor 0 signal number : 283
----- executor 0 executes write_coverage_signal cov->size 1776, flag collect 0
----- executor 0 signal number : 76
executor 1 server cover_cnt 3 output_pos_value 207
executor 0 server cover_cnt 4 output_pos_value 2668
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 56, 47, 0
before receive testcase: 0 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:26 wg wait finish
time breakdown 0: 56, 47, 0
2023/03/01 22:07:26 ------ all executors finish execution
before receive testcase: 0 0
2023/03/01 22:07:26 exec time: 102
2023/03/01 22:07:26 ----- PS len: 5
2023/03/01 22:07:26 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 1965 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3666 setxattr$security_capability setxattr$security_capability
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 2374 mkdirat mkdirat
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 120 chdir chdir
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 7
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
setxattr$trusted_overlay_opaque(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x6)
setxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:logrotate_var_lib_t:s0\x00', 0x29, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)='security.SMACK64IPIN\x00', &(0x7f00000002c0)=ANY=[@ANYBLOB='\a\x00\x00\x00'], 0x4, 0x1)
open(&(0x7f0000001500)='./file0\x00', 0x40940, 0xc2a19e52f568a4d5)
setxattr$security_capability(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=@v2={0x2000000, [{0x6, 0x10000}, {0xffff, 0x7}]}, 0x14, 0x1)
mkdirat(0xffffffffffffff9c, &(0x7f0000000300)='./file0\x00', 0x10)
chdir(&(0x7f0000000340)='./file0\x00')
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 3024, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 56, 47, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1688
remove dir: /root/orangefs-client/dfs-0-2193
remove dir time 50
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2194
mkdir time 81
executor 3 create dir /root/orangefs-client/dfs-0-2194 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2194
receive_execute: 1, 131
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 20, 131
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 131
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
receive_execute: 1, 131
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7278, pid 4578, write pid:4579
----- executor 3 executes write_coverage_signal cov->size 7278, flag collect 0
----- executor 3 signal number : 2078
----- completed 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
receive_execute: 3, 208
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 6794, pid 4578, write pid:4580
----- executor 3 executes write_coverage_signal cov->size 6794, flag collect 0
----- executor 3 signal number : 15
----- completed 2
----- executor 3 write_call_output, size 7762, pid 4578, write pid:4579
----- executor 3 executes write_coverage_signal cov->size 7762, flag collect 0
----- executor 3 signal number : 16
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 6794, pid 4578, write pid:4579
----- executor 3 executes write_coverage_signal cov->size 6794, flag collect 0
----- executor 3 signal number : 16
----- completed 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4578, write pid:4579
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12752, pid 4578, write pid:4579
----- executor 3 executes write_coverage_signal cov->size 12752, flag collect 0
----- executor 3 signal number : 1021
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4578, write pid:4579
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 91, 1, 0
execute_one time: 0, 92
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1890, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 486, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 2061
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2140, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 2073, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 964, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 135, 92, 0
time breakdown 3: 151, 93, 0
before receive testcase: 0 0
time breakdown 1: 132, 95, 0
----- executor 2 signal number : 1216
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 4733, flag collect 0
----- executor 2 signal number : 309
----- executor 2 executes write_coverage_signal cov->size 4617, flag collect 0
----- executor 2 signal number : 81
executor 2 server cover_cnt 4 output_pos_value 3680
before receive testcase: 0 0
time breakdown 4: 211, 2, 0
before receive testcase: 0 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 143, 87, 0
before receive testcase: 0 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:26 wg wait finish
2023/03/01 22:07:26 ------ all executors finish execution
2023/03/01 22:07:26 exec time: 235
2023/03/01 22:07:26 ----- PS len: 5
2023/03/01 22:07:26 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:26 [CLIENT] executor 3 has 7 replies
2023/03/01 22:07:26 fuzzer receive 2078 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/01 22:07:26 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 2061 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 1216 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 309 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 1021 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 250 fsync fsync
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3662 setxattr setxattr
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 4
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x40140, 0x82)
setxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@random={'os2.', '{(.q$\x00'}, &(0x7f0000000080)='\x00', 0x1, 0x2)
r1 = dup(r0)
fsync(r1)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 592
remove dir: /root/orangefs-client/dfs-0-2194
----- executor 4 receive testcase
executor 4: prog_data_offset 1928, prog_size 8
remove dir time 49
-----finish removing dir
receive_execute: 7, 111
receive_execute: 9, 111
receive_execute: 7, 111
mkdir time 62
executor 3 create dir /root/orangefs-client/dfs-0-2195 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2195
current dir: executor 4: /root/orangefs-client/dfs-0-2195
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 10, 112
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 11, 1
----- executor 3 write_call_output, size 19599, pid 4581, write pid:4582
----- executor 3 executes write_coverage_signal cov->size 19599, flag collect 0
----- executor 3 signal number : 3087
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4581, write pid:4582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4581, write pid:4582
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 4581, write pid:4582
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 0
receive_execute: 17, 126
cover_reset in execute_call
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 143, 1, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 14, 10, 0
execute_one time: 0, 24
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 122, 25, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 2788
----- executor 2 executes write_coverage_signal cov->size 30131, flag collect 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 120, 27, 0
before receive testcase: 0 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1242
----- executor 2 executes write_coverage_signal cov->size 3344, flag collect 0
time breakdown 0: 119, 27, 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 3446, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 4411
before receive testcase: 0 0
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:26 wg wait finish
2023/03/01 22:07:26 ------ all executors finish execution
2023/03/01 22:07:26 exec time: 139
2023/03/01 22:07:26 ----- PS len: 5
2023/03/01 22:07:26 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 2788 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 1242 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:26 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:26 fuzzer receive 3087 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:26 fuzzer receive 2 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 2341 lchown lchown
time breakdown 2: 118, 28, 0
before receive testcase: 0 0
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 1
2023/03/01 22:07:26 prog length: 4
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
---
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000040)='./file0\x00', r0, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x2)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000000000))
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-2195
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 688
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2196
receive_execute: 3, 48
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 23
executor 3 create dir /root/orangefs-client/dfs-0-2196 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2196
receive_execute: 2, 56
receive_execute: 4, 56
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 71
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19507, pid 4584, write pid:4585
----- executor 3 executes write_coverage_signal cov->size 19507, flag collect 0
----- executor 3 signal number : 3082
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
execute_one loop: 0, 0, 15
executor 3, execute_one inner time: 17, 15, 0
execute_one time: 0, 32
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 60, 33, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 28447, pid 4878, write pid:4879
----- executor 4 executes write_coverage_signal cov->size 28447, flag collect 0
----- executor 4 signal number : 2892
----- completed 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 4 write_call_output, size 32765, pid 4878, write pid:4879
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 334
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4878, write pid:4879
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4878, write pid:4879
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 28, 7, 0
execute_one time: 1, 35
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 58, 52, 0
2023/03/01 22:07:26 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2267
----- executor 1 executes write_coverage_signal cov->size 31947, flag collect 0
----- executor 1 signal number : 1107
----- executor 1 executes write_coverage_signal cov->size 6132, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 6431, flag collect 0
----- executor 1 signal number : 77
executor 1 server cover_cnt 4 output_pos_value 3750
time breakdown 1: 51, 62, 0
before receive testcase: 0 0
time breakdown 4: 83, 36, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2770
----- executor 0 executes write_coverage_signal cov->size 17555, flag collect 0
----- executor 0 signal number : 987
----- executor 0 executes write_coverage_signal cov->size 3571, flag collect 0
----- executor 0 signal number : 338
----- executor 0 executes write_coverage_signal cov->size 3205, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4184
2023/03/01 22:07:26 for select break: 1
2023/03/01 22:07:26 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:26 wg wait finish
2023/03/01 22:07:26 ------ all executors finish execution
2023/03/01 22:07:26 exec time: 123
2023/03/01 22:07:26 ----- PS len: 5
2023/03/01 22:07:26 [CLIENT] executor 4 has 4 replies
2023/03/01 22:07:26 fuzzer receive 2892 signal and 0 cover from executor 4
2023/03/01 22:07:26 fuzzer receive 334 signal and 0 cover from executor 4
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:26 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:26 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:26 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:26 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:26 fuzzer receive 3082 signal and 0 cover from executor 3
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 2770 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 2267 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 987 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 1107 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 338 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:26 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:26 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:26 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:26 NetFailure, Node crash: false false
2023/03/01 22:07:26 mutate testcase with failures
2023/03/01 22:07:26 ----- mutateArg()
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3765 symlinkat symlinkat
2023/03/01 22:07:26 ----- insertCall()
2023/03/01 22:07:26 ----- generateCall 3761 stat stat
2023/03/01 22:07:26 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:26 prog length: 1
2023/03/01 22:07:26 prog length: 2
2023/03/01 22:07:26 HasCrashFail:false HasNetFail:false
22:07:26 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
---
symlinkat(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, &(0x7f0000000040)='./file0\x00')
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0))
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 296
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 57, 67, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-2196
remove dir time 23
-----finish removing dir
receive_execute: 14, 46
receive_execute: 14, 45
current dir: executor 4: /root/orangefs-client/dfs-0-2197
receive_execute: 0, 46
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 23
executor 3 create dir /root/orangefs-client/dfs-0-2197 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2197
receive_execute: 35, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 17, 58
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4881, write pid:4882
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/01 22:07:27 for select break: 1
----- executor 3 write_call_output, size 19507, pid 4586, write pid:4587
----- executor 3 executes write_coverage_signal cov->size 19507, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 12, 2, 0
execute_one time: 0, 14
time breakdown 3: 81, 16, 0
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 4 write_call_output, size 17736, pid 4881, write pid:4882
----- executor 4 executes write_coverage_signal cov->size 17736, flag collect 0
----- executor 4 signal number : 2833
----- completed 2
execute_one loop: 0, 0, 24
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 24, 0, 0
execute_one time: 0, 24
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4565, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 22547, flag collect 0
----- executor 0 signal number : 1430
----- executor 0 executes write_coverage_signal cov->size 2093, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 749, flag collect 0
----- executor 0 signal number : 77
----- executor 2 signal number : 2220
----- executor 2 executes write_coverage_signal cov->size 17420, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2142
----- executor 1 signal number : 2729
----- executor 1 executes write_coverage_signal cov->size 19987, flag collect 0
----- executor 2 signal number : 1104
----- executor 2 executes write_coverage_signal cov->size 1965, flag collect 0
----- executor 2 signal number : 276
----- executor 2 executes write_coverage_signal cov->size 2243, flag collect 0
----- executor 1 signal number : 970
----- executor 2 signal number : 74
----- executor 1 executes write_coverage_signal cov->size 4350, flag collect 0
----- executor 1 signal number : 345
----- executor 1 executes write_coverage_signal cov->size 3651, flag collect 0
----- executor 1 signal number : 78
time breakdown 0: 46, 39, 0
before receive testcase: 0 1
executor 2 server cover_cnt 4 output_pos_value 3687
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 4135
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 75, 25, 0
before receive testcase: 0 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 59, 41, 0
before receive testcase: 0 0
time breakdown 1: 60, 39, 0
before receive testcase: 0 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 92
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:27 fuzzer receive 2833 signal and 0 cover from executor 4
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1430 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 2220 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 1104 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 74 signal and 0 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:27 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 2729 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 970 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 345 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 NetFailure, Node crash: false false
2023/03/01 22:07:27 mutate testcase with failures
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 122 chown chown
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 2361 lsetxattr$trusted_overlay_origin lsetxattr$trusted_overlay_origin
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 1
2023/03/01 22:07:27 prog length: 4
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
---
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lsetxattr$trusted_overlay_origin(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200), 0x2, 0x2)
chown(&(0x7f0000000000)='./file0\x00', 0xffffffffffffffff, r0)
lremovexattr(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)=@known='trusted.overlay.metacopy\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 768
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-2197
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 41
-----finish removing dir
receive_execute: 9, 50
current dir: executor 4: /root/orangefs-client/dfs-0-2198
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 8, 49
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 8
executor 3 create dir /root/orangefs-client/dfs-0-2198 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2198
receive_execute: 32, 49
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 11, 55
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7655, pid 4883, write pid:4884
----- executor 4 executes write_coverage_signal cov->size 7655, flag collect 0
----- executor 4 signal number : 2086
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 4 write_call_output, size 7413, pid 4883, write pid:4884
----- executor 4 executes write_coverage_signal cov->size 7413, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 7413, pid 4883, write pid:4884
----- executor 4 executes write_coverage_signal cov->size 7413, flag collect 0
----- executor 4 signal number : 16
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 7413, pid 4883, write pid:4884
----- executor 4 executes write_coverage_signal cov->size 7413, flag collect 0
----- executor 4 signal number : 16
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
receive_execute: 9, 49
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 21, 4, 0
execute_one time: 0, 26
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 66, 27, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 20068, pid 4588, write pid:4589
----- executor 3 executes write_coverage_signal cov->size 20068, flag collect 0
----- executor 3 signal number : 3099
----- completed 1
execute_one loop: 0, 0, 36
cover_reset in execute_call
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 36, 14, 0
execute_one time: 1, 50
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7321, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
----- executor 1 signal number : 1729
----- executor 1 executes write_coverage_signal cov->size 12616, flag collect 0
----- executor 1 signal number : 1069
----- executor 1 executes write_coverage_signal cov->size 1416, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 845, flag collect 0
----- executor 1 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2056
----- executor 0 executes write_coverage_signal cov->size 27811, flag collect 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 57, 53, 0
executor 1 server cover_cnt 4 output_pos_value 3172
----- executor 0 signal number : 951
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 6708, flag collect 0
----- executor 0 signal number : 366
----- executor 0 executes write_coverage_signal cov->size 6051, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 3462
before receive testcase: 0 0
time breakdown 3: 81, 52, 0
before receive testcase: 0 0
time breakdown 1: 72, 40, 0
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 104
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 4 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 2056 signal and 0 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:27 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:27 fuzzer receive 3099 signal and 0 cover from executor 3
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 951 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1729 signal and 0 cover from userspace component
time breakdown 0: 59, 54, 0
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1069 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 366 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:27 fuzzer receive 2086 signal and 0 cover from executor 4
2023/03/01 22:07:27 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/01 22:07:27 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/01 22:07:27 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 NetFailure, Node crash: false false
2023/03/01 22:07:27 mutate testcase with failures
2023/03/01 22:07:27 ----- mutateArg()
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 2363 lsetxattr$trusted_overlay_upper lsetxattr$trusted_overlay_upper
2023/03/01 22:07:27 ----- mutateArg()
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 1
2023/03/01 22:07:27 prog length: 1
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
---
lsetxattr$trusted_overlay_upper(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={0x0, 0xfb, 0x6b, 0x0, 0x2, "237df1fa153726b8e0f7b363d4ce7306", "b65f0a8829ef550a002e8ba2d20aeb0a4f901a3e4f83c2b322b87cf45223a494e0ab2fb2c28ab7b6ecf3ff0500dd708d53d580ebb5ddf7e30f0a9d6b0e7d282c731eebe43ce9571ef1a173017e00804cb344a5c1ce39"}, 0x6b, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-2198
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 616
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
receive_execute: 3, 48
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-2199 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2199
receive_execute: 5, 48
receive_execute: 2, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-2199
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19519, pid 4590, write pid:4591
----- executor 3 executes write_coverage_signal cov->size 19519, flag collect 0
----- executor 3 signal number : 3082
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
receive_execute: 24, 57
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 12682, pid 4886, write pid:4887
----- executor 4 executes write_coverage_signal cov->size 12682, flag collect 0
----- executor 4 signal number : 2739
----- completed 1
execute_one loop: 0, 0, 3
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 15, 0
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 7, 11, 0
execute_one time: 0, 18
time breakdown 3: 53, 19, 0
before receive testcase: 0 1
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 4, execute_one inner time: 3, 6, 0
execute_one time: 1, 9
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4595, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 2: 50, 27, 0
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 49, 28, 0
before receive testcase: 0 0
----- executor 1 signal number : 2760
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 81, 17, 0
before receive testcase: 0 0
----- executor 1 signal number : 1242
----- executor 1 executes write_coverage_signal cov->size 4533, flag collect 0
----- executor 1 signal number : 310
----- executor 1 executes write_coverage_signal cov->size 4611, flag collect 0
----- executor 1 signal number : 79
executor 1 server cover_cnt 4 output_pos_value 4404
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 78
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:27 fuzzer receive 2739 signal and 0 cover from executor 4
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 2760 signal and 0 cover from userspace component
time breakdown 1: 51, 30, 0
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1242 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 310 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:27 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:27 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:27 fuzzer receive 3082 signal and 0 cover from executor 3
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 NetFailure, Node crash: false false
2023/03/01 22:07:27 mutate testcase with failures
2023/03/01 22:07:27 ----- mutateArg()
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 1
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x202000, 0xc2a19e52f568a4b5)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-2199
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 44
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2200 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2200
current dir: executor 4: /root/orangefs-client/dfs-0-2200
receive_execute: 2, 53
receive_execute: 5, 53
receive_execute: 12, 54
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 4, 53
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6791, pid 4592, write pid:4593
----- executor 3 executes write_coverage_signal cov->size 6791, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 2, 1, 0
execute_one time: 0, 3
time breakdown 3: 66, 3, 0
before receive testcase: 0 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
receive_execute: 5, 59
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 23694, flag collect 0
time breakdown 4: 64, 4, 0
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4567, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
executor 2 server cover_cnt 2 output_pos_value 63
----- executor 1 signal number : 1917
----- executor 1 executes write_coverage_signal cov->size 10112, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 0 signal number : 275
----- executor 0 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2118
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 58, 11, 0
time breakdown 0: 57, 11, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 2358, flag collect 0
----- executor 1 signal number : 287
----- executor 1 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 1 signal number : 72
executor 1 server cover_cnt 4 output_pos_value 2620
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 66
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 275 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
time breakdown 1: 55, 12, 0
2023/03/01 22:07:27 [SERVER] executor 2 has 2 replies
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1917 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 287 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:27 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 NetFailure, Node crash: false false
2023/03/01 22:07:27 mutate testcase with failures
2023/03/01 22:07:27 ----- mutateArg()
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 2347 llistxattr llistxattr
2023/03/01 22:07:27 ----- mutateArg()
2023/03/01 22:07:27 ----- mutateArg()
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 1
2023/03/01 22:07:27 prog length: 1
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
---
llistxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000100)=""/138, 0x8a)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1480, prog_size 144
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 144
remove dir: /root/orangefs-client/dfs-0-2200
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-2201 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2201
receive_execute: 1, 30
current dir: executor 4: /root/orangefs-client/dfs-0-2201
receive_execute: 3, 29
receive_execute: 2, 30
receive_execute: 10, 30
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 35
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7109, pid 4889, write pid:4890
----- executor 4 executes write_coverage_signal cov->size 7109, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 4, execute_one inner time: 1, 2, 0
execute_one time: 0, 3
time breakdown 4: 39, 3, 0
before receive testcase: 0 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 19531, pid 4594, write pid:4595
----- executor 3 executes write_coverage_signal cov->size 19531, flag collect 0
----- executor 3 signal number : 3082
----- completed 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 21, 4, 0
execute_one time: 0, 25
time breakdown 3: 40, 25, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7365, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 2 signal number : 1729
----- executor 2 executes write_coverage_signal cov->size 12503, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
----- executor 2 signal number : 1065
----- executor 2 executes write_coverage_signal cov->size 1021, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 737, flag collect 0
----- executor 2 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 2479
----- executor 1 executes write_coverage_signal cov->size 21185, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 3168
----- executor 1 signal number : 978
----- executor 1 executes write_coverage_signal cov->size 4533, flag collect 0
----- executor 1 signal number : 347
----- executor 1 executes write_coverage_signal cov->size 3855, flag collect 0
time breakdown 0: 32, 27, 0
before receive testcase: 0 1
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3893
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 31, 28, 0
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 60
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:27 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 1729 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 1065 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 fuzzer receive 3082 signal and 0 cover from executor 3
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:27 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 2479 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 978 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 347 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
time breakdown 2: 40, 20, 0
before receive testcase: 0 1
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 NetFailure, Node crash: false false
2023/03/01 22:07:27 mutate testcase with failures
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 242 fsetxattr$trusted_overlay_redirect fsetxattr$trusted_overlay_redirect
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/01 22:07:27 ----- removeCall()
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 209 fcntl$setflags fcntl$setflags
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 5
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
write$binfmt_elf32(r0, &(0x7f0000000080)={{0x7f, 0x45, 0x4c, 0x46, 0x6, 0x8, 0x2, 0x2, 0x0, 0x3, 0x6, 0x0, 0x9c, 0x38, 0x260, 0x7ff, 0x1, 0x20, 0x2, 0x5, 0x400, 0x1f}, [{0x0, 0x7, 0x0, 0x400, 0x3, 0x5, 0x0, 0x42c}], "ad17f7ba5e0f14c062cc64eb823e68fcd425afb20eaf4216b8e6d1ca37973c103867f696cd0aa54b4654362f5f866494d8cc2f03e3a1f446d9b5e59ab613ca4cf000d2cbd35a239e872b8c053e4a56c39e3ee1e073ac5014b53e8fc0a615e4c3d351791a231c45405666b0cd232fa0224560dee427146812bb6d4eee5e71cc2ffac79a46c62a5c6296885b99745f256214a628488889c72359c92b99aa9a2306dad419b6272895321b10e2ba24a9fcda44922650f4dc70668b1c7678d25c6aa6b5edfbc8d4d7522634f1078b973529a7b5fa49b2c8e56d29b7800aa0993dbf473ed1c2c07b1ffb5460604e493ef11b07ee524e24ac914d0857e4f0d5fdb3", ['\x00', '\x00', '\x00', '\x00', '\x00']}, 0x656)
fcntl$setflags(r0, 0x2, 0x1)
fcntl$getownex(r0, 0x10, &(0x7f0000000700))
fsetxattr$security_capability(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)=@v1={0x1000000, [{0x200, 0x9}]}, 0xc, 0x3)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3752
remove dir: /root/orangefs-client/dfs-0-2201
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 5088, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
receive_execute: 3, 50
receive_execute: 4, 50
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2202 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2202
receive_execute: 3, 50
current dir: executor 4: /root/orangefs-client/dfs-0-2202
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
receive_execute: 6, 50
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19519, pid 4596, write pid:4597
----- executor 3 executes write_coverage_signal cov->size 19519, flag collect 0
----- executor 3 signal number : 3082
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4596, write pid:4597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4596, write pid:4597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4596, write pid:4597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4596, write pid:4597
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 21
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 5, 23, 0
execute_one time: 0, 28
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 57, 29, 0
before receive testcase: 0 0
receive_execute: 23, 79
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
time breakdown 4: 105, 2, 0
before receive testcase: 0 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2748
----- executor 1 executes write_coverage_signal cov->size 30505, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 53, 34, 0
----- executor 1 signal number : 1237
----- executor 1 executes write_coverage_signal cov->size 3537, flag collect 0
2023/03/01 22:07:27 for select break: 1
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 3560, flag collect 0
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 79
time breakdown 0: 54, 35, 0
executor 1 server cover_cnt 4 output_pos_value 4372
before receive testcase: 0 0
time breakdown 1: 53, 37, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 87
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:27 fuzzer receive 3082 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 2748 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1237 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 NetFailure, Node crash: false false
2023/03/01 22:07:27 mutate testcase with failures
2023/03/01 22:07:27 ----- insertCall()
2023/03/01 22:07:27 ----- generateCall 2341 lchown lchown
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 3
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
lchown(&(0x7f0000000000)='./file0\x00', r0, 0x0)
open(&(0x7f0000001500)='./file0\x00', 0x40140, 0xc2a19e52f568a4f5)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1784, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 448
remove dir: /root/orangefs-client/dfs-0-2202
remove dir time 33
-----finish removing dir
receive_execute: 2, 59
receive_execute: 1, 60
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 60
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-2203 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2203
receive_execute: 8, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6791, pid 4599, write pid:4600
----- executor 3 executes write_coverage_signal cov->size 6791, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6791, pid 4599, write pid:4600
----- executor 3 executes write_coverage_signal cov->size 6791, flag collect 0
----- executor 3 signal number : 15
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-2203
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19519, pid 4599, write pid:4600
----- executor 3 executes write_coverage_signal cov->size 19519, flag collect 0
----- executor 3 signal number : 1038
----- completed 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
receive_execute: 4, 84
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 24, 8, 0
execute_one time: 0, 32
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 25380, flag collect 0
----- executor 1 signal number : 2241
----- executor 1 executes write_coverage_signal cov->size 18852, flag collect 0
time breakdown 2: 61, 34, 0
----- executor 1 signal number : 1105
----- executor 1 executes write_coverage_signal cov->size 2568, flag collect 0
time breakdown 3: 68, 33, 0
before receive testcase: 0 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2466, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3721
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 2738
----- executor 0 executes write_coverage_signal cov->size 18616, flag collect 0
----- executor 0 signal number : 979
----- executor 0 executes write_coverage_signal cov->size 3737, flag collect 0
----- executor 0 signal number : 343
----- executor 0 executes write_coverage_signal cov->size 3549, flag collect 0
----- executor 0 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 4145
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 96
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 2738 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 979 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 343 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
time breakdown 0: 63, 36, 0
before receive testcase: 0 0
2023/03/01 22:07:27 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:27 [CLIENT] executor 3 has 3 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 2241 signal and 0 cover from userspace component
2023/03/01 22:07:27 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 15 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 1038 signal and 0 cover from executor 3
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1105 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
time breakdown 1: 61, 35, 0
before receive testcase: 0 0
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 prog length: 5
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f00000000c0))
mkdirat(r0, &(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x1)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 960
remove dir: /root/orangefs-client/dfs-0-2203
remove dir time 23
-----finish removing dir
time breakdown 4: 88, 2, 0
before receive testcase: 0 1
----- executor 4 receive testcase
executor 4: prog_data_offset 2296, prog_size 8
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-2204 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2204
current dir: executor 4: /root/orangefs-client/dfs-0-2204
receive_execute: 2, 43
receive_execute: 1, 43
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 53
receive_execute: 4, 53
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 21, 60
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 4
----- executor 3 write_call_output, size 19743, pid 4602, write pid:4603
----- executor 3 executes write_coverage_signal cov->size 19743, flag collect 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 81, 5, 0
before receive testcase: 0 0
----- executor 3 cover number : 2547, signal number : 3077
----- completed 1
execute_one loop: 0, 1, 23
cover_reset in execute_call
-----executor 0 collect shmids 8
----- directly resend shmid 8
----- executor 3 write_call_output, size 9952, pid 4602, write pid:4603
----- executor 3 executes write_coverage_signal cov->size 9952, flag collect 1
----- executor 3 cover number : 2231, signal number : 956
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4602, write pid:4603
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4602, write pid:4603
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4602, write pid:4603
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 41, 0
execute_one time: 0, 41
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 57, 42, 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27117, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 20374, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 60, flag collect 1
----- executor 0 cover number : 2362, signal number : 2886
----- executor 0 executes write_coverage_signal cov->size 15994, flag collect 1
----- executor 2 cover number : 2178, signal number : 2705
----- executor 2 executes write_coverage_signal cov->size 14036, flag collect 1
----- executor 0 cover number : 1017, signal number : 1186
----- executor 0 executes write_coverage_signal cov->size 2595, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 1
----- executor 1 cover number : 114, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 324, flag collect 1
----- executor 1 cover number : 41, signal number : 44
executor 1 server cover_cnt 3 output_pos_value 374
----- executor 0 cover number : 282, signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2041, flag collect 1
----- executor 0 cover number : 104, signal number : 83
----- executor 0 executes write_coverage_signal cov->size 1961, flag collect 1
----- executor 2 cover number : 847, signal number : 963
----- executor 2 executes write_coverage_signal cov->size 3401, flag collect 1
----- executor 0 cover number : 735, signal number : 131
executor 0 server cover_cnt 5 output_pos_value 9088
----- executor 2 cover number : 315, signal number : 338
----- executor 2 executes write_coverage_signal cov->size 2394, flag collect 1
----- executor 2 cover number : 100, signal number : 75
executor 2 server cover_cnt 4 output_pos_value 7534
time breakdown 0: 44, 60, 0
before receive testcase: 0 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 103
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:27 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:27 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 2886 signal and 2362 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 2705 signal and 2178 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 963 signal and 847 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 140 signal and 114 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 338 signal and 315 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 44 signal and 41 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1186 signal and 1017 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 286 signal and 282 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 83 signal and 104 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 131 signal and 735 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 75 signal and 100 cover from userspace component
2023/03/01 22:07:27 fuzzer receive 3077 signal and 2547 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 956 signal and 2231 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 prog length: 5
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f00000000c0))
mkdirat(r0, &(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x1)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2296, prog_size 8
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 960
remove dir: /root/orangefs-client/dfs-0-2204
time breakdown 2: 56, 50, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 45, 58, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 1, 37
receive_execute: 4, 36
receive_execute: 2, 37
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-2205
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2205 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2205
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
receive_execute: 10, 37
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 30, 45
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 77, 1, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19781, pid 4604, write pid:4605
----- executor 3 executes write_coverage_signal cov->size 19781, flag collect 1
----- executor 3 cover number : 2555, signal number : 3090
----- completed 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
-----executor 2 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 9981, pid 4604, write pid:4605
----- executor 3 executes write_coverage_signal cov->size 9981, flag collect 1
----- executor 3 cover number : 2238, signal number : 961
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4604, write pid:4605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4604, write pid:4605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4604, write pid:4605
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 27, 0
execute_one time: 1, 27
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23489, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 16525, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 1
----- executor 1 cover number : 114, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 1
----- executor 1 cover number : 41, signal number : 44
executor 1 server cover_cnt 3 output_pos_value 374
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 40, 33, 0
before receive testcase: 0 0
----- executor 2 cover number : 2236, signal number : 2714
----- executor 2 executes write_coverage_signal cov->size 14135, flag collect 1
----- executor 0 cover number : 2177, signal number : 2704
----- executor 0 executes write_coverage_signal cov->size 12143, flag collect 1
----- executor 2 cover number : 980, signal number : 1128
----- executor 2 executes write_coverage_signal cov->size 1992, flag collect 1
----- executor 2 cover number : 282, signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1401, flag collect 1
----- executor 2 cover number : 104, signal number : 81
----- executor 0 cover number : 847, signal number : 965
----- executor 0 executes write_coverage_signal cov->size 2778, flag collect 1
----- executor 0 cover number : 315, signal number : 336
----- executor 0 executes write_coverage_signal cov->size 2208, flag collect 1
----- executor 0 cover number : 100, signal number : 76
time breakdown 3: 47, 31, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 7533
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 39, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 1
----- executor 2 cover number : 727, signal number : 122
executor 2 server cover_cnt 5 output_pos_value 8676
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 81
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 2704 signal and 2177 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 965 signal and 847 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 336 signal and 315 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 76 signal and 100 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 140 signal and 114 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 44 signal and 41 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 2714 signal and 2236 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 1128 signal and 980 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 286 signal and 282 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 81 signal and 104 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 122 signal and 727 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:27 fuzzer receive 3090 signal and 2555 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 961 signal and 2238 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 prog length: 5
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f00000000c0))
mkdirat(r0, &(0x7f0000000080)='./file0\x00', 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x1)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 960
----- executor 4 receive testcase
executor 4: prog_data_offset 2296, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/orangefs-client/dfs-0-2205
time breakdown 2: 38, 44, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 50
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2206 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2206
receive_execute: 7, 60
receive_execute: 2, 60
receive_execute: 14, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 15, 60
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2206
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 35, 64
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 99, 1, 0
before receive testcase: 0 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4606, write pid:4608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4606, write pid:4608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4606, write pid:4608
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 11964, pid 4606, write pid:4608
----- executor 3 executes write_coverage_signal cov->size 11964, flag collect 1
----- executor 3 cover number : 2230, signal number : 2678
----- completed 4
----- executor 3 write_call_output, size 20544, pid 4606, write pid:4607
----- executor 3 executes write_coverage_signal cov->size 20544, flag collect 1
----- executor 3 cover number : 2556, signal number : 831
----- completed 5
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 1, 63, 0
execute_one time: 0, 64
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 31187, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1470, flag collect 1
----- executor 1 cover number : 114, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 378, flag collect 1
----- executor 1 cover number : 41, signal number : 44
executor 1 server cover_cnt 3 output_pos_value 374
time breakdown 3: 75, 65, 0
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 74, 66, 0
before receive testcase: 0 0
2023/03/01 22:07:27 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7344, flag collect 1
----- executor 2 cover number : 1461, signal number : 1727
----- executor 2 executes write_coverage_signal cov->size 12436, flag collect 1
----- executor 2 cover number : 957, signal number : 1066
----- executor 2 executes write_coverage_signal cov->size 1231, flag collect 1
----- executor 2 cover number : 282, signal number : 286
----- executor 2 executes write_coverage_signal cov->size 845, flag collect 1
----- executor 2 cover number : 101, signal number : 75
executor 2 server cover_cnt 4 output_pos_value 5968
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
----- executor 0 cover number : 2181, signal number : 2729
----- executor 0 executes write_coverage_signal cov->size 15574, flag collect 1
time breakdown 2: 73, 58, 0
before receive testcase: 0 1
----- executor 0 cover number : 847, signal number : 972
----- executor 0 executes write_coverage_signal cov->size 3984, flag collect 1
----- executor 0 cover number : 315, signal number : 341
----- executor 0 executes write_coverage_signal cov->size 2967, flag collect 1
----- executor 0 cover number : 100, signal number : 76
executor 0 server cover_cnt 4 output_pos_value 7574
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 135
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 2729 signal and 2181 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 972 signal and 847 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 341 signal and 315 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 76 signal and 100 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 2 has 4 replies
time breakdown 0: 67, 74, 0
before receive testcase: 0 1
2023/03/01 22:07:27 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 140 signal and 114 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 44 signal and 41 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 1727 signal and 1461 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 1066 signal and 957 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 286 signal and 282 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 75 signal and 101 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 2678 signal and 2230 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 831 signal and 2556 cover from executor 3
2023/03/01 22:07:27 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:27 -----2 triaging input for call #1 write (new signal=49)
2023/03/01 22:07:27 minimize prog 3
2023/03/01 22:07:27 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:27 prog length: 4
2023/03/01 22:07:27 HasCrashFail:false HasNetFail:false
22:07:27 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f00000000c0))
mkdirat(r0, &(0x7f0000000080)='./file0\x00', 0x0)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2016, prog_size 8
remove dir: /root/orangefs-client/dfs-0-2206
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 46
-----finish removing dir
receive_execute: 14, 81
receive_execute: 22, 82
receive_execute: 20, 82
mkdir time 36
executor 3 create dir /root/orangefs-client/dfs-0-2207 successfully
current dir: executor 4: /root/orangefs-client/dfs-0-2207
current dir: executor 3: /root/orangefs-client/dfs-0-2207
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 23, 83
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 83, 90
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19501, pid 4609, write pid:4610
----- executor 3 executes write_coverage_signal cov->size 19501, flag collect 0
time breakdown 4: 173, 1, 0
before receive testcase: 0 1
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
-----executor 1 collect shmids 8
----- directly resend shmid 8
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 9944, pid 4609, write pid:4610
----- executor 3 executes write_coverage_signal cov->size 9944, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4609, write pid:4610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4609, write pid:4610
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 16, 0
execute_one time: 0, 16
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
time breakdown 3: 106, 17, 0
before receive testcase: 0 1
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 2936
----- executor 1 executes write_coverage_signal cov->size 28360, flag collect 0
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 102, 19, 0
----- executor 1 signal number : 1248
----- executor 1 executes write_coverage_signal cov->size 3537, flag collect 0
----- executor 1 signal number : 298
----- executor 1 executes write_coverage_signal cov->size 3339, flag collect 0
----- executor 1 signal number : 78
----- executor 1 executes write_coverage_signal cov->size 1891, flag collect 0
----- executor 1 signal number : 141
executor 1 server cover_cnt 5 output_pos_value 4717
2023/03/01 22:07:27 for select break: 1
2023/03/01 22:07:27 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:27 wg wait finish
2023/03/01 22:07:27 ------ all executors finish execution
2023/03/01 22:07:27 exec time: 103
2023/03/01 22:07:27 ----- PS len: 5
2023/03/01 22:07:27 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:27 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
time breakdown 1: 104, 21, 0
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:27 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:27 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:27 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:27 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 2936 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 1248 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 298 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 1 receive 141 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:27 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 0: 95, 20, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 3
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f00000000c0))
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1856, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 520
remove dir: /root/orangefs-client/dfs-0-2207
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 52
-----finish removing dir
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-2208 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2208
receive_execute: 3, 76
receive_execute: 5, 76
current dir: executor 4: /root/orangefs-client/dfs-0-2208
receive_execute: 5, 76
receive_execute: 5, 77
executor 2 before execute_one
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19537, pid 4611, write pid:4612
----- executor 3 executes write_coverage_signal cov->size 19537, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
-----executor 2 collect shmids 11
----- directly resend shmid 11
----- executor 3 write_call_output, size 9952, pid 4611, write pid:4612
----- executor 3 executes write_coverage_signal cov->size 9952, flag collect 0
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4611, write pid:4612
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 20, 0
execute_one time: 0, 20
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
receive_execute: 15, 98
time breakdown 3: 82, 21, 0
before receive testcase: 0 0
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 14, 8
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15832, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4570, flag collect 0
----- executor 0 signal number : 1428
----- executor 1 executes write_coverage_signal cov->size 26550, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 2 signal number : 2624
----- executor 2 executes write_coverage_signal cov->size 14143, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 75
----- executor 2 signal number : 1127
----- executor 2 executes write_coverage_signal cov->size 2202, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1460, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 2712
----- executor 1 executes write_coverage_signal cov->size 14441, flag collect 0
----- executor 2 signal number : 122
executor 0 server cover_cnt 4 output_pos_value 2136
executor 2 server cover_cnt 5 output_pos_value 4258
----- executor 1 signal number : 954
----- executor 1 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 1 signal number : 338
----- executor 1 executes write_coverage_signal cov->size 2460, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4093
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
time breakdown 4: 113, 24, 0
before receive testcase: 0 0
time breakdown 0: 81, 47, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 81, 50, 0
before receive testcase: 0 1
time breakdown 1: 79, 52, 0
before receive testcase: 0 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 136
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:28 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 2624 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1127 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:28 [CLIENT] executor 3 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 2712 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 954 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 338 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:28 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1736, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/orangefs-client/dfs-0-2208
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 35
executor 3 create dir /root/orangefs-client/dfs-0-2209 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2209
receive_execute: 13, 62
receive_execute: 9, 62
receive_execute: 39, 62
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-2209
receive_execute: 10, 62
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19588, pid 4613, write pid:4614
----- executor 3 executes write_coverage_signal cov->size 19588, flag collect 0
----- executor 3 signal number : 3083
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
-----executor 2 collect shmids 12
----- directly resend shmid 12
receive_execute: 15, 80
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 95, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 9952, pid 4613, write pid:4614
----- executor 3 executes write_coverage_signal cov->size 9952, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 0, 20, 0
execute_one time: 0, 20
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 1 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 2 signal number : 3351
----- executor 2 executes write_coverage_signal cov->size 28588, flag collect 0
----- executor 0 signal number : 75
time breakdown 3: 101, 21, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 signal number : 1282
----- executor 2 executes write_coverage_signal cov->size 3537, flag collect 0
----- executor 2 signal number : 298
----- executor 2 executes write_coverage_signal cov->size 3639, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 2 signal number : 137
executor 2 server cover_cnt 5 output_pos_value 5162
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 75, 24, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 72, 26, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 93
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 3351 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1282 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 298 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 137 signal and 0 cover from userspace component
time breakdown 1: 71, 31, 0
before receive testcase: 0 0
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 1
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
write(0xffffffffffffffff, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 240
remove dir: /root/orangefs-client/dfs-0-2209
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1576, prog_size 8
remove dir time 46
-----finish removing dir
mkdir time 44
executor 3 create dir /root/orangefs-client/dfs-0-2210 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2210
receive_execute: 7, 90
current dir: executor 4: /root/orangefs-client/dfs-0-2210
receive_execute: 2, 90
receive_execute: 9, 90
receive_execute: 11, 90
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4615, write pid:4616
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
receive_execute: 13, 96
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15706, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 0 signal number : 275
----- executor 0 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 0 signal number : 71
----- executor 2 signal number : 1649
----- executor 2 executes write_coverage_signal cov->size 6946, flag collect 0
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 1572, flag collect 0
time breakdown 4: 109, 1, 0
before receive testcase: 0 0
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 1302, flag collect 0
----- executor 2 signal number : 72
executor 2 server cover_cnt 4 output_pos_value 2349
2023/03/01 22:07:28 for select break: 1
executor 0 server cover_cnt 4 output_pos_value 2118
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
time breakdown 0: 99, 9, 0
before receive testcase: 0 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 100
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 275 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:28 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 [SERVER] executor 1 has 0 replies
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 1
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
write(0xffffffffffffffff, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
time breakdown 2: 97, 9, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 101, 1, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 240
remove dir: /root/orangefs-client/dfs-0-2210
----- executor 4 receive testcase
executor 4: prog_data_offset 1576, prog_size 8
time breakdown 1: 92, 8, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 21
executor 3 create dir /root/orangefs-client/dfs-0-2211 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2211
receive_execute: 2, 43
receive_execute: 2, 42
executor 2 before execute_one
receive_execute: 1, 43
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 9, 43
current dir: executor 4: /root/orangefs-client/dfs-0-2211
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4617, write pid:4618
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 3: 52, 1, 0
before receive testcase: 0 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 67
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 15412, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:28 for select break: 1
----- executor 1 signal number : 1647
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 7060, flag collect 0
----- executor 1 signal number : 329
----- executor 1 executes write_coverage_signal cov->size 1572, flag collect 0
----- executor 1 signal number : 283
----- executor 1 executes write_coverage_signal cov->size 1356, flag collect 0
----- executor 1 signal number : 76
time breakdown 0: 44, 27, 0
before receive testcase: 0 0
executor 1 server cover_cnt 4 output_pos_value 2348
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 45, 28, 0
before receive testcase: 0 0
time breakdown 4: 70, 1, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 84
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 1647 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 329 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:28 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 1
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
write(0xffffffffffffffff, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 240
remove dir: /root/orangefs-client/dfs-0-2211
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1576, prog_size 8
time breakdown 2: 44, 42, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 15, 40
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-2212 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2212
receive_execute: 14, 39
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2212
receive_execute: 40, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4619, write pid:4620
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 81, 1, 0
before receive testcase: 0 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 0, 40
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 16, 57
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 73, 1, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15566, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4594, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 1 signal number : 43
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 75
----- executor 2 signal number : 1649
----- executor 2 executes write_coverage_signal cov->size 6902, flag collect 0
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 1572, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 1356, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2352
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 55, 19, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 42, 18, 0
before receive testcase: 0 0
before receive testcase: 0 0
before receive testcase: 0 1
executor 1 server cover_cnt 3 output_pos_value 205
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 65
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 53, 25, 0
before receive testcase: 0 0
2023/03/01 22:07:28 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:28 [CLIENT] executor 3 has 1 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(0x0, 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 0 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 1696, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/orangefs-client/dfs-0-2212
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 54
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2213 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2213
receive_execute: 1, 66
receive_execute: 5, 67
current dir: executor 4: /root/orangefs-client/dfs-0-2213
receive_execute: 24, 66
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 5, 66
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4621, write pid:4622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4621, write pid:4622
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 90, 1, 0
before receive testcase: 0 0
receive_execute: 8, 71
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 4: 79, 2, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
----- executor 2 executes write_coverage_signal cov->size 15496, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4588, flag collect 0
before receive testcase: 0 0
executor 1 server cover_cnt 3 output_pos_value 205
----- executor 2 signal number : 1649
----- executor 2 executes write_coverage_signal cov->size 6890, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 0 signal number : 275
----- executor 0 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 1572, flag collect 0
----- executor 0 signal number : 71
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 1302, flag collect 0
----- executor 2 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 2118
executor 2 server cover_cnt 4 output_pos_value 2349
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 8, 0
time breakdown 2: 72, 8, 0
before receive testcase: 0 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 76
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 275 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
time breakdown 0: 71, 11, 0
before receive testcase: 0 0
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(0x0, 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1696, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/orangefs-client/dfs-0-2213
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 13
-----finish removing dir
receive_execute: 0, 72
mkdir time 58
executor 3 create dir /root/orangefs-client/dfs-0-2214 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2214
receive_execute: 2, 71
receive_execute: 2, 72
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 11, 72
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
current dir: executor 4: /root/orangefs-client/dfs-0-2214
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4623, write pid:4624
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4623, write pid:4624
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 83, 2, 0
before receive testcase: 0 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
receive_execute: 5, 109
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4609, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
2023/03/01 22:07:28 for select break: 1
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 1 signal number : 44
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15412, flag collect 0
time breakdown 4: 114, 1, 0
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 1649
----- executor 2 executes write_coverage_signal cov->size 6886, flag collect 0
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 1992, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 1410, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 2363
time breakdown 1: 73, 40, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 72, 40, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 112
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1649 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 74, 41, 0
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 1
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(0x0, 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1696, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/orangefs-client/dfs-0-2214
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 33
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2215 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2215
receive_execute: 39, 44
current dir: executor 4: /root/orangefs-client/dfs-0-2215
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4625, write pid:4626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4625, write pid:4626
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 83, 1, 0
before receive testcase: 0 0
receive_execute: 0, 44
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 44
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 44
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 59
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
time breakdown 4: 62, 1, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15426, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
executor 2 server cover_cnt 3 output_pos_value 205
----- executor 1 signal number : 1647
----- executor 1 executes write_coverage_signal cov->size 7060, flag collect 0
----- executor 1 signal number : 329
----- executor 1 executes write_coverage_signal cov->size 1597, flag collect 0
----- executor 1 signal number : 290
----- executor 1 executes write_coverage_signal cov->size 1356, flag collect 0
----- executor 1 signal number : 75
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 74
executor 0 server cover_cnt 4 output_pos_value 2132
executor 1 server cover_cnt 4 output_pos_value 2354
time breakdown 1: 55, 7, 0
time breakdown 0: 49, 13, 0
before receive testcase: 0 1
time breakdown 2: 46, 16, 0
before receive testcase: 0 1
before receive testcase: 0 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 67
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 1647 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 329 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 290 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x0, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1736, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/orangefs-client/dfs-0-2215
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 11
-----finish removing dir
receive_execute: 6, 33
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-2216 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2216
current dir: executor 4: /root/orangefs-client/dfs-0-2216
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 34
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 6, 34
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 6795, pid 4627, write pid:4628
----- executor 3 executes write_coverage_signal cov->size 6795, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4627, write pid:4628
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2, 0
execute_one time: 0, 2
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 57, 3, 0
before receive testcase: 0 0
receive_execute: 6, 33
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 8, 47
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 55, 1, 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 19454, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 1 signal number : 1905
----- executor 1 executes write_coverage_signal cov->size 8559, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 205
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 1965, flag collect 0
----- executor 1 signal number : 285
----- executor 1 executes write_coverage_signal cov->size 1701, flag collect 0
----- executor 1 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 2133
executor 1 server cover_cnt 4 output_pos_value 2606
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 40, 16, 0
before receive testcase: 0 1
before receive testcase: 0 0
time breakdown 0: 44, 12, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 52
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
time breakdown 1: 39, 18, 0
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 1905 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 285 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x0, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1736, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/orangefs-client/dfs-0-2216
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2217 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2217
receive_execute: 4, 40
current dir: executor 4: /root/orangefs-client/dfs-0-2217
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 5, 40
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 17, 41
receive_execute: 2, 41
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6795, pid 4629, write pid:4630
----- executor 3 executes write_coverage_signal cov->size 6795, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4629, write pid:4630
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3, 0
execute_one time: 1, 3
time breakdown 3: 58, 5, 0
receive_execute: 6, 47
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 53, 1, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 0 signal number : 275
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 19331, flag collect 0
----- executor 2 signal number : 1938
----- executor 2 executes write_coverage_signal cov->size 8295, flag collect 0
----- executor 2 signal number : 334
----- executor 2 executes write_coverage_signal cov->size 1965, flag collect 0
----- executor 2 signal number : 285
----- executor 2 executes write_coverage_signal cov->size 1701, flag collect 0
----- executor 2 signal number : 72
----- executor 0 executes write_coverage_signal cov->size 532, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2642
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2118
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 45, 10, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 50
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 275 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 1 has 0 replies
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 1938 signal and 0 cover from userspace component
2023/03/01 22:07:28 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 334 signal and 0 cover from userspace component
time breakdown 0: 44, 11, 0
before receive testcase: 0 0
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 285 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x0, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1736, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 1: 43, 9, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 400
remove dir: /root/orangefs-client/dfs-0-2217
remove dir time 22
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2218 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2218
receive_execute: 1, 32
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
current dir: executor 4: /root/orangefs-client/dfs-0-2218
cover_reset in execute_call
receive_execute: 0, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 32
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 7037, pid 4631, write pid:4632
----- executor 3 executes write_coverage_signal cov->size 7037, flag collect 0
----- executor 3 signal number : 2074
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4631, write pid:4632
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 14, 0
execute_one time: 0, 14
time breakdown 3: 37, 15, 0
before receive testcase: 0 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
receive_execute: 3, 56
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 59, 1, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 19496, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 0 signal number : 1426
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 2 signal number : 140
----- executor 1 signal number : 1909
----- executor 1 executes write_coverage_signal cov->size 8537, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 0 signal number : 333
----- executor 2 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 636, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 76
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 2175, flag collect 0
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 1755, flag collect 0
----- executor 1 signal number : 75
executor 1 server cover_cnt 4 output_pos_value 2623
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 1: 38, 22, 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 35, 25, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 62
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 fuzzer receive 2074 signal and 0 cover from executor 3
2023/03/01 22:07:28 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 1909 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 2: 33, 30, 0
before receive testcase: 0 0
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(0xffffffffffffffff, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1712, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/orangefs-client/dfs-0-2218
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 15
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2219 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2219
receive_execute: 13, 27
executor 3 before execute_one
receive_execute: 3, 27
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 27
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2219
----- executor 3 write_call_output, size 19521, pid 4633, write pid:4634
----- executor 3 executes write_coverage_signal cov->size 19521, flag collect 0
----- executor 3 signal number : 3069
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4633, write pid:4634
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 0, 9
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 40, 10, 0
before receive testcase: 0 1
receive_execute: 5, 39
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 0, 27
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 write_server_output
time breakdown 4: 44, 1, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 25752, flag collect 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 4 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
executor 2 server cover_cnt 3 output_pos_value 205
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
----- executor 0 signal number : 2719
----- executor 0 executes write_coverage_signal cov->size 24492, flag collect 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 3 output_pos_value 205
----- executor 0 signal number : 1252
----- executor 0 executes write_coverage_signal cov->size 2358, flag collect 0
----- executor 0 signal number : 290
----- executor 0 executes write_coverage_signal cov->size 2783, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4351
time breakdown 2: 35, 5, 0
before receive testcase: 0 0
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:28 for select break: 1
2023/03/01 22:07:28 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:28 wg wait finish
2023/03/01 22:07:28 ------ all executors finish execution
2023/03/01 22:07:28 exec time: 43
2023/03/01 22:07:28 ----- PS len: 5
2023/03/01 22:07:28 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:28 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:28 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
time breakdown 0: 30, 15, 0
before receive testcase: 0 0
2023/03/01 22:07:28 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:28 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 2719 signal and 0 cover from userspace component
2023/03/01 22:07:28 fuzzer receive 3069 signal and 0 cover from executor 3
2023/03/01 22:07:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 1252 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 290 signal and 0 cover from userspace component
2023/03/01 22:07:28 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:28 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:28 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:28 prog length: 2
2023/03/01 22:07:28 HasCrashFail:false HasNetFail:false
22:07:28 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(0xffffffffffffffff, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/orangefs-client/dfs-0-2219
time breakdown 1: 31, 15, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1712, prog_size 8
remove dir time 48
-----finish removing dir
receive_execute: 1, 69
mkdir time 21
executor 3 create dir /root/orangefs-client/dfs-0-2220 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2220
receive_execute: 1, 69
current dir: executor 4: /root/orangefs-client/dfs-0-2220
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 70
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 69
executor 3 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4635, write pid:4637
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 20250, pid 4635, write pid:4636
----- executor 3 executes write_coverage_signal cov->size 20250, flag collect 0
----- executor 3 signal number : 3089
----- completed 2
executor 3, execute_one inner time: 0, 53, 3
execute_one time: 1, 56
receive_execute: 3, 128
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 131, 2, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 4595, flag collect 0
time breakdown 3: 75, 59, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7349, flag collect 0
----- executor 2 signal number : 1729
----- executor 2 executes write_coverage_signal cov->size 12392, flag collect 0
----- executor 2 signal number : 1070
----- executor 2 executes write_coverage_signal cov->size 1836, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 899, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 3173
time breakdown 2: 73, 61, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 26853, flag collect 0
----- executor 1 signal number : 2750
----- executor 1 executes write_coverage_signal cov->size 14588, flag collect 0
----- executor 1 signal number : 959
----- executor 1 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 1 signal number : 340
----- executor 1 executes write_coverage_signal cov->size 2402, flag collect 0
----- executor 1 signal number : 78
executor 1 server cover_cnt 4 output_pos_value 4140
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2093, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 1653, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 857, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 146
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 1729 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 1070 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 3089 signal and 0 cover from executor 3
2023/03/01 22:07:29 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 2750 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 959 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(0xffffffffffffffff, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f720bb9fbfeebd91adf8bb31de1fbbf6675cfb5f54e14fa17813d0be81046851599d56fad393d37a7cba0b499417ea3e6758d", 0x63)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 376
remove dir: /root/orangefs-client/dfs-0-2220
----- executor 4 receive testcase
executor 4: prog_data_offset 1712, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 70, 70, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 70, 75, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 56
-----finish removing dir
mkdir time 23
executor 3 create dir /root/orangefs-client/dfs-0-2221 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2221
current dir: executor 4: /root/orangefs-client/dfs-0-2221
receive_execute: 16, 78
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 18, 79
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 78
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 19590, pid 4638, write pid:4639
----- executor 3 executes write_coverage_signal cov->size 19590, flag collect 0
----- executor 3 signal number : 3077
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4638, write pid:4639
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 1, 9
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
receive_execute: 7, 79
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
time breakdown 3: 97, 11, 0
before receive testcase: 0 0
receive_execute: 17, 97
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
time breakdown 4: 114, 2, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
executor 2 write_server_output
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 19641, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 26632, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 205
----- executor 0 signal number : 2534
----- executor 0 executes write_coverage_signal cov->size 17875, flag collect 0
----- executor 2 signal number : 2712
----- executor 2 executes write_coverage_signal cov->size 14165, flag collect 0
----- executor 0 signal number : 1175
----- executor 0 executes write_coverage_signal cov->size 1990, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 1920, flag collect 0
----- executor 0 signal number : 79
----- executor 2 signal number : 954
----- executor 2 executes write_coverage_signal cov->size 2751, flag collect 0
----- executor 2 signal number : 338
executor 0 server cover_cnt 4 output_pos_value 4093
----- executor 2 executes write_coverage_signal cov->size 2352, flag collect 0
----- executor 2 signal number : 72
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 4089
time breakdown 0: 86, 16, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 97, 11, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 102
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2534 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 2712 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1175 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
time breakdown 2: 94, 24, 0
before receive testcase: 0 0
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 954 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 338 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, 0x0, 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2221
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 23
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2222
receive_execute: 2, 38
receive_execute: 3, 37
receive_execute: 1, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2222 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2222
receive_execute: 13, 38
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 43
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 47, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19604, pid 4640, write pid:4641
----- executor 3 executes write_coverage_signal cov->size 19604, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4640, write pid:4641
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 1, 7
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 25380, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
executor 2 server cover_cnt 3 output_pos_value 205
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
executor 1 server cover_cnt 0 output_pos_value 1
----- executor 0 signal number : 2710
----- executor 0 executes write_coverage_signal cov->size 24297, flag collect 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 51, 9, 0
before receive testcase: 0 0
time breakdown 2: 39, 10, 0
before receive testcase: 0 0
time breakdown 1: 40, 10, 0
before receive testcase: 0 0
----- executor 0 signal number : 1255
----- executor 0 executes write_coverage_signal cov->size 2165, flag collect 0
----- executor 0 signal number : 287
----- executor 0 executes write_coverage_signal cov->size 2603, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 4342
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 49
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2710 signal and 0 cover from userspace component
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1255 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 0 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 287 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
time breakdown 0: 40, 11, 0
before receive testcase: 0 0
2023/03/01 22:07:29 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, 0x0, 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2222
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 69
-----finish removing dir
receive_execute: 2, 81
receive_execute: 1, 81
receive_execute: 1, 82
current dir: executor 4: /root/orangefs-client/dfs-0-2223
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2223 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2223
receive_execute: 3, 81
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19549, pid 4642, write pid:4643
----- executor 3 executes write_coverage_signal cov->size 19549, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4642, write pid:4643
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 0, 7
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
receive_execute: 5, 89
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:29 for select break: 1
executor 1 write_server_output
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 26668, flag collect 0
time breakdown 4: 94, 1, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7351, flag collect 0
----- executor 2 signal number : 1729
----- executor 2 executes write_coverage_signal cov->size 12372, flag collect 0
time breakdown 3: 84, 7, 0
before receive testcase: 0 0
----- executor 1 signal number : 2742
----- executor 1 executes write_coverage_signal cov->size 14405, flag collect 0
----- executor 2 signal number : 1069
----- executor 2 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 2 signal number : 276
----- executor 2 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 2 signal number : 71
executor 2 server cover_cnt 4 output_pos_value 3158
----- executor 1 signal number : 955
----- executor 1 executes write_coverage_signal cov->size 2751, flag collect 0
----- executor 1 signal number : 339
----- executor 1 executes write_coverage_signal cov->size 2352, flag collect 0
----- executor 1 signal number : 72
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 4121
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 393, flag collect 0
----- executor 0 signal number : 275
----- executor 0 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 0 signal number : 71
executor 0 server cover_cnt 4 output_pos_value 2118
time breakdown 0: 82, 11, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 83, 11, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 92
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 275 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 71 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 2742 signal and 0 cover from userspace component
time breakdown 1: 83, 12, 0
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 955 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 339 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:29 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 1729 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 1069 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 71 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, 0x0, 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2223
remove dir time 22
-----finish removing dir
receive_execute: 1, 30
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2224 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2224
receive_execute: 1, 31
current dir: executor 4: /root/orangefs-client/dfs-0-2224
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 0, 31
execute_one time: 0, 0
receive_execute: 5, 32
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
cover_reset in execute_call
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 0, 38
----- executor 3 write_call_output, size 19588, pid 4644, write pid:4645
----- executor 3 executes write_coverage_signal cov->size 19588, flag collect 0
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 3083
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4644, write pid:4645
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 0, 7
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 38, 2, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 37, 8, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7328, flag collect 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23497, flag collect 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 1 signal number : 1727
----- executor 1 executes write_coverage_signal cov->size 12878, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
----- executor 1 signal number : 1070
----- executor 1 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 0 signal number : 2702
executor 2 server cover_cnt 3 output_pos_value 205
----- executor 1 signal number : 276
----- executor 1 executes write_coverage_signal cov->size 737, flag collect 0
----- executor 1 signal number : 74
executor 1 server cover_cnt 4 output_pos_value 3160
----- executor 0 executes write_coverage_signal cov->size 12133, flag collect 0
----- executor 0 signal number : 965
----- executor 0 executes write_coverage_signal cov->size 2358, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 0 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 4088
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
time breakdown 2: 32, 11, 0
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 42
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2702 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 965 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
time breakdown 1: 31, 11, 0
2023/03/01 22:07:29 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:29 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 1727 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 1070 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 74 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000), 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2224
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 31, 12, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 0, 35
receive_execute: 1, 34
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-2225 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2225
receive_execute: 1, 35
current dir: executor 4: /root/orangefs-client/dfs-0-2225
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 3, 37
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 42
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 45, 1, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19553, pid 4646, write pid:4647
----- executor 3 executes write_coverage_signal cov->size 19553, flag collect 0
----- executor 3 signal number : 3071
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4646, write pid:4647
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 8, 1
execute_one time: 0, 9
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26700, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
----- executor 0 executes write_coverage_signal cov->size 11851, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 205
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 2046
----- executor 2 signal number : 2685
----- executor 2 executes write_coverage_signal cov->size 14041, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 14376, flag collect 0
----- executor 2 signal number : 965
----- executor 2 executes write_coverage_signal cov->size 2751, flag collect 0
----- executor 2 signal number : 338
----- executor 2 executes write_coverage_signal cov->size 2292, flag collect 0
----- executor 0 signal number : 1158
----- executor 2 signal number : 72
----- executor 0 executes write_coverage_signal cov->size 1179, flag collect 0
----- executor 0 signal number : 276
----- executor 0 executes write_coverage_signal cov->size 1215, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 4073
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 3568
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 35, 15, 0
before receive testcase: 0 0
time breakdown 3: 40, 10, 0
before receive testcase: 0 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 53
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2046 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 3071 signal and 0 cover from executor 3
2023/03/01 22:07:29 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1158 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 2685 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 965 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
time breakdown 0: 35, 18, 0
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 338 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 72 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000), 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2225
time breakdown 1: 36, 12, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2226 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2226
current dir: executor 4: /root/orangefs-client/dfs-0-2226
receive_execute: 5, 49
receive_execute: 1, 49
receive_execute: 6, 49
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
receive_execute: 7, 49
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 20037, pid 4648, write pid:4649
----- executor 3 executes write_coverage_signal cov->size 20037, flag collect 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
----- executor 3 signal number : 3081
----- completed 1
execute_one loop: 0, 0, 39
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4648, write pid:4649
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 39, 0
execute_one time: 0, 39
time breakdown 3: 56, 40, 0
before receive testcase: 0 1
receive_execute: 11, 118
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:29 for select break: 1
time breakdown 4: 129, 2, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26417, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 0
executor 0 write_server_output
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1470, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 1 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 11843, flag collect 0
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 2698
----- executor 2 executes write_coverage_signal cov->size 14040, flag collect 0
----- executor 0 signal number : 2047
----- executor 0 executes write_coverage_signal cov->size 14436, flag collect 0
----- executor 0 signal number : 1140
----- executor 0 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1485, flag collect 0
----- executor 0 signal number : 79
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 55, 73, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 3565
2023/03/01 22:07:29 for select break: 1
----- executor 2 signal number : 958
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 50, 74, 0
----- executor 2 executes write_coverage_signal cov->size 2751, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 2334, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4084
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 125
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:29 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 3081 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2047 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 2698 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 958 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
time breakdown 2: 54, 76, 0
before receive testcase: 0 0
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000), 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2226
remove dir time 64
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2227 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2227
receive_execute: 3, 78
current dir: executor 4: /root/orangefs-client/dfs-0-2227
receive_execute: 0, 78
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 37, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19525, pid 4650, write pid:4651
----- executor 3 executes write_coverage_signal cov->size 19525, flag collect 0
----- executor 3 signal number : 3067
----- completed 1
execute_one loop: 0, 0, 6
receive_execute: 2, 92
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4650, write pid:4651
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 0, 7
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 123, 7, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 94, 2, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 25710, flag collect 0
----- executor 0 signal number : 2769
----- executor 0 executes write_coverage_signal cov->size 24469, flag collect 0
before receive testcase: 0 0
----- executor 0 signal number : 1252
----- executor 0 executes write_coverage_signal cov->size 2383, flag collect 0
----- executor 0 signal number : 296
----- executor 0 executes write_coverage_signal cov->size 2777, flag collect 0
----- executor 0 signal number : 80
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
receive_execute: 4, 86
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
executor 1 server cover_cnt 3 output_pos_value 205
time breakdown 1: 101, 1, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 2 signal number : 43
executor 2 server cover_cnt 3 output_pos_value 205
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 109
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2769 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1252 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 296 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 fuzzer receive 3067 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 78, 32, 0
before receive testcase: 0 1
executor 0 server cover_cnt 4 output_pos_value 4410
time breakdown 0: 81, 18, 0
before receive testcase: 0 0
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2cb109538d17164bc23e4877765c89fb0e25dfe3a6f93fefab9fc3147e7f8989a8fa818d8dfabb0b5290f050a9fd8e67f72", 0x32)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1688, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 352
remove dir: /root/orangefs-client/dfs-0-2227
remove dir time 17
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2228
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-2228 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2228
receive_execute: 13, 50
receive_execute: 16, 49
receive_execute: 2, 50
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
receive_execute: 18, 50
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19545, pid 4652, write pid:4653
----- executor 3 executes write_coverage_signal cov->size 19545, flag collect 0
----- executor 3 signal number : 3071
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
receive_execute: 17, 69
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 4: 86, 1, 0
before receive testcase: 0 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
-----executor 0 collect shmids 9
----- directly resend shmid 9
----- executor 3 write_call_output, size 10210, pid 4652, write pid:4653
----- executor 3 executes write_coverage_signal cov->size 10210, flag collect 0
----- executor 3 signal number : 966
----- completed 2
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 0, 26, 0
execute_one time: 5, 26
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 26107, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2736
----- executor 1 executes write_coverage_signal cov->size 14261, flag collect 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20423, flag collect 0
----- executor 1 signal number : 969
----- executor 1 executes write_coverage_signal cov->size 2575, flag collect 0
time breakdown 2: 52, 32, 0
----- executor 1 signal number : 334
----- executor 1 executes write_coverage_signal cov->size 2160, flag collect 0
----- executor 1 signal number : 76
----- executor 0 signal number : 2886
----- executor 0 executes write_coverage_signal cov->size 16235, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 4128
----- executor 0 signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 2385, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1987, flag collect 0
----- executor 0 signal number : 83
----- executor 0 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 0 signal number : 124
before receive testcase: 0 0
executor 0 server cover_cnt 5 output_pos_value 4582
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 63, 34, 0
time breakdown 3: 68, 31, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 86
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:29 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2886 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1187 signal and 0 cover from userspace component
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 3071 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 4 replies
time breakdown 0: 65, 36, 0
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 2736 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 969 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:29 fuzzer receive 966 signal and 0 cover from executor 3
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2228
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 64
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2229 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2229
receive_execute: 1, 77
current dir: executor 4: /root/orangefs-client/dfs-0-2229
receive_execute: 3, 77
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 77
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 6, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 17, 90
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 107, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19537, pid 4654, write pid:4655
----- executor 3 executes write_coverage_signal cov->size 19537, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 1 collect shmids 9
----- directly resend shmid 9
----- executor 3 write_call_output, size 9968, pid 4654, write pid:4655
----- executor 3 executes write_coverage_signal cov->size 9968, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 22, 0
execute_one time: 12, 22
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 83, 35, 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23418, flag collect 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15747, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2625
----- executor 1 executes write_coverage_signal cov->size 14237, flag collect 0
----- executor 0 signal number : 2708
----- executor 0 executes write_coverage_signal cov->size 12123, flag collect 0
----- executor 0 signal number : 967
----- executor 0 executes write_coverage_signal cov->size 2778, flag collect 0
----- executor 1 signal number : 1128
----- executor 1 executes write_coverage_signal cov->size 1782, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1401, flag collect 0
----- executor 1 signal number : 80
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 122
----- executor 0 signal number : 337
----- executor 0 executes write_coverage_signal cov->size 2148, flag collect 0
----- executor 0 signal number : 76
executor 1 server cover_cnt 5 output_pos_value 4257
executor 0 server cover_cnt 4 output_pos_value 4101
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 80, 37, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 114
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 2708 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 967 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 337 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 2 has 3 replies
time breakdown 0: 78, 37, 0
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 2625 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
time breakdown 2: 80, 38, 0
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000), 0x0)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2229
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 31
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2230
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-2230 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2230
receive_execute: 1, 55
receive_execute: 0, 56
receive_execute: 1, 55
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19525, pid 4656, write pid:4657
----- executor 3 executes write_coverage_signal cov->size 19525, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4656, write pid:4657
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 19, 0
execute_one time: 0, 19
receive_execute: 22, 75
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 3: 59, 20, 0
before receive testcase: 0 1
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 97, 1, 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4574, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26463, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 signal number : 2688
----- executor 2 executes write_coverage_signal cov->size 14097, flag collect 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 968
----- executor 2 executes write_coverage_signal cov->size 2961, flag collect 0
----- executor 2 signal number : 339
----- executor 2 executes write_coverage_signal cov->size 2406, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 4083
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 56, 27, 0
----- executor 1 executes write_coverage_signal cov->size 7307, flag collect 0
----- executor 1 signal number : 1727
----- executor 1 executes write_coverage_signal cov->size 12598, flag collect 0
----- executor 1 signal number : 1066
----- executor 1 executes write_coverage_signal cov->size 1206, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 737, flag collect 0
----- executor 1 signal number : 74
executor 1 server cover_cnt 4 output_pos_value 3166
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 56, 28, 0
before receive testcase: 0 1
time breakdown 0: 57, 22, 0
before receive testcase: 0 0
2023/03/01 22:07:29 for select break: 1
2023/03/01 22:07:29 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:29 wg wait finish
2023/03/01 22:07:29 ------ all executors finish execution
2023/03/01 22:07:29 exec time: 87
2023/03/01 22:07:29 ----- PS len: 5
2023/03/01 22:07:29 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:29 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 2688 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 968 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 339 signal and 0 cover from userspace component
2023/03/01 22:07:29 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:29 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:29 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:29 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:29 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 1727 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 1066 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:29 ------- fuzzer executor 1 receive 74 signal and 0 cover from userspace component
2023/03/01 22:07:29 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:29 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:29 prog length: 2
2023/03/01 22:07:29 HasCrashFail:false HasNetFail:false
22:07:29 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000), 0x0)
---
---

end of program
----- executor 4 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
executor 4: prog_data_offset 1600, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/orangefs-client/dfs-0-2230
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 39
executor 3 create dir /root/orangefs-client/dfs-0-2231 successfully
current dir: executor 4: /root/orangefs-client/dfs-0-2231
receive_execute: 5, 64
receive_execute: 4, 65
current dir: executor 3: /root/orangefs-client/dfs-0-2231
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 10, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 12, 68
receive_execute: 9, 72
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
time breakdown 4: 81, 2, 0
before receive testcase: 0 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19553, pid 4658, write pid:4659
----- executor 3 executes write_coverage_signal cov->size 19553, flag collect 0
----- executor 3 signal number : 3089
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4658, write pid:4659
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 1, 9
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4563, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 29104, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 0 signal number : 1428
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 75
----- executor 1 signal number : 2703
----- executor 1 executes write_coverage_signal cov->size 27124, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 1 signal number : 1239
----- executor 1 executes write_coverage_signal cov->size 2961, flag collect 0
----- executor 1 signal number : 301
----- executor 1 executes write_coverage_signal cov->size 3089, flag collect 0
----- executor 1 signal number : 79
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 4335
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 69, 31, 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 97
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:30 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 69, 32, 0
before receive testcase: 0 0
2023/03/01 22:07:30 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 2703 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 1239 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 301 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 fuzzer receive 3089 signal and 0 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000), 0x0)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1600, prog_size 8
time breakdown 3: 94, 11, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 264
remove dir: /root/orangefs-client/dfs-0-2231
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 75, 31, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 41
executor 3 create dir /root/orangefs-client/dfs-0-2232 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2232
receive_execute: 2, 65
current dir: executor 4: /root/orangefs-client/dfs-0-2232
receive_execute: 2, 65
receive_execute: 1, 65
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 5, 65
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 1
----- executor 3 write_call_output, size 19561, pid 4660, write pid:4661
----- executor 3 executes write_coverage_signal cov->size 19561, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4660, write pid:4661
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 6, 0
execute_one time: 1, 6
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
receive_execute: 23, 76
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
time breakdown 4: 99, 3, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 26505, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 7358, flag collect 0
----- executor 2 signal number : 1729
----- executor 2 executes write_coverage_signal cov->size 12442, flag collect 0
time breakdown 3: 70, 8, 0
before receive testcase: 0 0
----- executor 1 signal number : 2713
----- executor 1 executes write_coverage_signal cov->size 14411, flag collect 0
----- executor 2 signal number : 1069
----- executor 2 executes write_coverage_signal cov->size 996, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 683, flag collect 0
----- executor 2 signal number : 71
----- executor 1 signal number : 954
----- executor 1 executes write_coverage_signal cov->size 2751, flag collect 0
----- executor 1 signal number : 338
----- executor 1 executes write_coverage_signal cov->size 2292, flag collect 0
----- executor 1 signal number : 72
executor 2 server cover_cnt 4 output_pos_value 3168
executor 1 server cover_cnt 4 output_pos_value 4090
time breakdown 2: 66, 15, 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 15, 0
before receive testcase: 0 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4570, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
time breakdown 0: 67, 19, 0
before receive testcase: 0 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 91
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:30 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 2713 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 954 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 338 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 1729 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 1069 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 71 signal and 0 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2232
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 16
-----finish removing dir
mkdir time 26
executor 3 create dir /root/orangefs-client/dfs-0-2233 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2233
current dir: executor 4: /root/orangefs-client/dfs-0-2233
receive_execute: 5, 43
receive_execute: 12, 41
receive_execute: 11, 42
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 18, 42
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19588, pid 4662, write pid:4663
----- executor 3 executes write_coverage_signal cov->size 19588, flag collect 1
----- executor 3 cover number : 2541, signal number : 3074
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
receive_execute: 13, 52
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
time breakdown 4: 65, 2, 0
before receive testcase: 0 1
-----executor 0 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 9976, pid 4662, write pid:4663
----- executor 3 executes write_coverage_signal cov->size 9976, flag collect 1
----- executor 3 cover number : 2231, signal number : 955
----- completed 2
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 19, 0
execute_one time: 1, 19
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20427, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 1
----- executor 1 cover number : 114, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 26807, flag collect 1
----- executor 1 cover number : 41, signal number : 44
executor 1 server cover_cnt 3 output_pos_value 374
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 24, 0
before receive testcase: 0 0
time breakdown 3: 60, 23, 0
before receive testcase: 0 1
----- executor 0 cover number : 2363, signal number : 2889
----- executor 0 executes write_coverage_signal cov->size 16146, flag collect 1
----- executor 2 cover number : 2161, signal number : 2713
----- executor 2 executes write_coverage_signal cov->size 14311, flag collect 1
----- executor 0 cover number : 1014, signal number : 1172
----- executor 0 executes write_coverage_signal cov->size 2175, flag collect 1
----- executor 0 cover number : 282, signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1933, flag collect 1
----- executor 0 cover number : 104, signal number : 83
----- executor 0 executes write_coverage_signal cov->size 1921, flag collect 1
----- executor 0 cover number : 729, signal number : 122
executor 0 server cover_cnt 5 output_pos_value 9060
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
----- executor 2 cover number : 845, signal number : 954
----- executor 2 executes write_coverage_signal cov->size 3171, flag collect 1
time breakdown 0: 48, 29, 0
before receive testcase: 0 0
----- executor 2 cover number : 315, signal number : 338
----- executor 2 executes write_coverage_signal cov->size 2400, flag collect 1
----- executor 2 cover number : 100, signal number : 76
executor 2 server cover_cnt 4 output_pos_value 7515
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 74
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:30 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 140 signal and 114 cover from userspace component
2023/03/01 22:07:30 fuzzer receive 3074 signal and 2541 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 955 signal and 2231 cover from executor 3
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 44 signal and 41 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 2889 signal and 2363 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1172 signal and 1014 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 286 signal and 282 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 83 signal and 104 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 122 signal and 729 cover from userspace component
time breakdown 2: 53, 32, 0
2023/03/01 22:07:30 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 2713 signal and 2161 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 954 signal and 845 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 338 signal and 315 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 76 signal and 100 cover from userspace component
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2233
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 60
-----finish removing dir
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-2234 successfully
receive_execute: 2, 80
current dir: executor 4: /root/orangefs-client/dfs-0-2234
receive_execute: 6, 80
current dir: executor 3: /root/orangefs-client/dfs-0-2234
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 12, 82
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19561, pid 4664, write pid:4665
----- executor 3 executes write_coverage_signal cov->size 19561, flag collect 1
receive_execute: 23, 89
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 4: 112, 1, 0
before receive testcase: 0 1
----- executor 3 cover number : 2544, signal number : 3076
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
receive_execute: 11, 82
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
-----executor 2 collect shmids 13
----- directly resend shmid 13
----- executor 3 write_call_output, size 9968, pid 4664, write pid:4665
----- executor 3 executes write_coverage_signal cov->size 9968, flag collect 1
----- executor 3 cover number : 2231, signal number : 955
----- completed 2
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 0, 24, 1
execute_one time: 0, 26
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4581, flag collect 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
----- executor 0 cover number : 1206, signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 1
----- executor 1 cover number : 114, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 1
----- executor 1 cover number : 41, signal number : 44
executor 1 server cover_cnt 3 output_pos_value 374
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 94, 27, 0
before receive testcase: 0 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 93, 29, 0
before receive testcase: 0 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 126
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:30 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:30 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 2945 signal and 2307 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 140 signal and 114 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 44 signal and 41 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 1246 signal and 1056 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 307 signal and 282 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 78 signal and 103 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 133 signal and 727 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1426 signal and 1206 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 334 signal and 316 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 286 signal and 282 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 75 signal and 99 cover from userspace component
----- executor 0 cover number : 316, signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 1
----- executor 0 cover number : 282, signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 1
----- executor 0 cover number : 99, signal number : 75
executor 0 server cover_cnt 4 output_pos_value 4037
time breakdown 0: 86, 45, 0
before receive testcase: 0 0
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 fuzzer receive 3076 signal and 2544 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 955 signal and 2231 cover from executor 3
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2307, signal number : 2945
----- executor 2 executes write_coverage_signal cov->size 28233, flag collect 1
----- executor 2 cover number : 1056, signal number : 1246
----- executor 2 executes write_coverage_signal cov->size 3957, flag collect 1
----- executor 2 cover number : 282, signal number : 307
----- executor 2 executes write_coverage_signal cov->size 3399, flag collect 1
----- executor 2 cover number : 103, signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 1
----- executor 2 cover number : 727, signal number : 133
executor 2 server cover_cnt 5 output_pos_value 9200
time breakdown 2: 82, 40, 0
before receive testcase: 0 1
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2234
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2235
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-2235 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2235
receive_execute: 2, 43
receive_execute: 8, 42
receive_execute: 26, 33
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 38, 54
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 92, 1, 0
before receive testcase: 0 0
receive_execute: 19, 43
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19551, pid 4666, write pid:4667
----- executor 3 executes write_coverage_signal cov->size 19551, flag collect 1
----- executor 3 cover number : 2540, signal number : 3071
----- completed 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
-----executor 0 collect shmids 11
----- directly resend shmid 11
----- executor 3 write_call_output, size 9976, pid 4666, write pid:4667
----- executor 3 executes write_coverage_signal cov->size 9976, flag collect 1
----- executor 3 cover number : 2231, signal number : 956
----- completed 2
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 0, 31, 0
execute_one time: 0, 31
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 27135, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 1
----- executor 1 cover number : 12, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 1
----- executor 1 cover number : 114, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 1
----- executor 1 cover number : 41, signal number : 44
executor 1 server cover_cnt 3 output_pos_value 374
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20296, flag collect 1
----- executor 2 cover number : 2155, signal number : 2685
----- executor 2 executes write_coverage_signal cov->size 14253, flag collect 1
----- executor 2 cover number : 847, signal number : 965
----- executor 2 executes write_coverage_signal cov->size 3381, flag collect 1
----- executor 0 cover number : 2363, signal number : 2888
----- executor 0 executes write_coverage_signal cov->size 15962, flag collect 1
----- executor 0 cover number : 1017, signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 2595, flag collect 1
----- executor 0 cover number : 282, signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1933, flag collect 1
----- executor 0 cover number : 104, signal number : 83
----- executor 0 executes write_coverage_signal cov->size 1893, flag collect 1
----- executor 0 cover number : 729, signal number : 124
executor 0 server cover_cnt 5 output_pos_value 9079
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
time breakdown 0: 45, 53, 0
----- executor 2 cover number : 315, signal number : 338
----- executor 2 executes write_coverage_signal cov->size 2514, flag collect 1
----- executor 2 cover number : 100, signal number : 76
executor 2 server cover_cnt 4 output_pos_value 7494
before receive testcase: 0 0
time breakdown 2: 50, 55, 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 98
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 2888 signal and 2363 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:30 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 2685 signal and 2155 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 13 signal and 12 cover from userspace component
time breakdown 1: 59, 56, 0
before receive testcase: 0 1
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 965 signal and 847 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 338 signal and 315 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 140 signal and 114 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 76 signal and 100 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 44 signal and 41 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1187 signal and 1017 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 286 signal and 282 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 83 signal and 104 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 124 signal and 729 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 fuzzer receive 3071 signal and 2540 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 956 signal and 2231 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
time breakdown 3: 76, 32, 0
before receive testcase: 0 1
2023/03/01 22:07:30 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/03/01 22:07:30 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2235
remove dir time 59
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2236
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-2236 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2236
receive_execute: 9, 75
receive_execute: 19, 75
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 11, 74
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 74
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 0, pid 4668, write pid:4669
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
receive_execute: 52, 91
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 143, 1, 0
before receive testcase: 0 0
-----executor 1 collect shmids 10
----- directly resend shmid 10
----- executor 3 write_call_output, size 0, pid 4668, write pid:4669
----- completed 2
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 0, 24
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 94, 25, 0
before receive testcase: 0 0
time breakdown 0: 92, 21, 0
before receive testcase: 0 1
time breakdown 1: 93, 18, 0
before receive testcase: 0 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 106
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:30 [SERVER] executor 0 has 0 replies
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:30 [SERVER] executor 2 has 0 replies
2023/03/01 22:07:30 [SERVER] executor 1 has 0 replies
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 ------ executing comparison hint: 0
2023/03/01 22:07:30 NetFailure, Node crash: false false
2023/03/01 22:07:30 mutate testcase with failures
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 2458 open open
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/01 22:07:30 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 prog length: 5
time breakdown 2: 84, 31, 0
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x32aa6be84f06aa49, 0x4)
write$binfmt_script(r0, &(0x7f00000001c0)={'#! ', './file0', [{}, {0x20, 'system.posix_acl_default\x00'}, {0x20, '-'}, {0x20, 'system.posix_acl_default\x00'}], 0xa, "0f28b2428160cb0e250ed9a10ea414f139d7e7b9fb5f49b5df43428c4e5e947e4e899fcd30cb214a6e783891c7828ac14b0d0cddd8d7753d513d538f44c78f7b30b446045fda18cb842450f9640a2dd65a0f5116d3b782403751f4ea12d67b7c0a083dba6f7eb8d12b62fcd7be12f8853dfce90454d11e5b359653f4e8142b79921e103c077b7e561728b75f4d4678a2e0f1962bcb84cdda3ffce11edca18652eea35643be1e4644c2b1afa575353e5ba95393676dce8c46eb88b6bfc43ce5cc663548bd7a9c8eae4450"}, 0x10c)
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$trusted_overlay_nlink(&(0x7f0000000300)='.\x00', &(0x7f0000000340), &(0x7f0000000380)={'L-', 0x4de}, 0x16, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f0000000140)={{}, {0x1, 0x2}, [{0x2, 0x3, 0xee00}, {0x2, 0x6, r1}, {0x2, 0x7, 0xee01}, {0x2, 0x1, 0xee00}, {0x2, 0x7, 0xee00}, {0x2, 0x8}, {0x2, 0x4}], {0x4, 0x3}, [{0x8, 0xa}, {0x8, 0x0, 0xee01}], {0x10, 0x1}, {0x20, 0x4}}, 0x6c, 0x1)
---

end of program
----- executor 4 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2236
executor 4: prog_data_offset 1640, prog_size 3272
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 50
-----finish removing dir
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-2237 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2237
receive_execute: 5, 73
current dir: executor 4: /root/orangefs-client/dfs-0-2237
receive_execute: 0, 72
receive_execute: 4, 73
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 6, 73
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
receive_execute: 15, 80
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19799, pid 4670, write pid:4671
----- executor 3 executes write_coverage_signal cov->size 19799, flag collect 0
----- executor 3 signal number : 3081
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 4 write_call_output, size 25820, pid 4926, write pid:4927
----- executor 4 executes write_coverage_signal cov->size 25820, flag collect 0
----- executor 4 signal number : 2786
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4926, write pid:4927
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4926, write pid:4927
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4926, write pid:4927
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 12
----- directly resend shmid 12
----- executor 3 write_call_output, size 9976, pid 4670, write pid:4671
----- executor 3 executes write_coverage_signal cov->size 9976, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 17877, pid 4926, write pid:4927
----- executor 4 executes write_coverage_signal cov->size 17877, flag collect 0
----- executor 4 signal number : 728
----- completed 5
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 36, 2, 0
execute_one time: 0, 38
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 79, 39, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 0 collect shmids 13
----- directly resend shmid 13
execute_one loop: 0, 0, 4
executor 4, execute_one inner time: 29, 17, 1
execute_one time: 0, 47
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 96, 47, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
before receive testcase: 0 1
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2921
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2934
----- executor 0 executes write_coverage_signal cov->size 25988, flag collect 0
time breakdown 2: 72, 57, 0
----- executor 0 signal number : 1256
----- executor 1 signal number : 1673
----- executor 1 executes write_coverage_signal cov->size 6104, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5136, flag collect 0
----- executor 1 signal number : 355
----- executor 1 executes write_coverage_signal cov->size 5197, flag collect 0
----- executor 1 signal number : 79
----- executor 0 signal number : 309
----- executor 0 executes write_coverage_signal cov->size 4858, flag collect 0
----- executor 0 signal number : 84
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 101
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 5041
----- executor 0 signal number : 4
executor 0 server cover_cnt 6 output_pos_value 4707
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 78, 57, 0
before receive testcase: 0 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
time breakdown 0: 77, 58, 0
before receive testcase: 0 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 152
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [CLIENT] executor 4 has 5 replies
2023/03/01 22:07:30 fuzzer receive 2786 signal and 0 cover from executor 4
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:30 fuzzer receive 728 signal and 0 cover from executor 4
2023/03/01 22:07:30 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:30 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 2921 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 1673 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 355 signal and 0 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:30 fuzzer receive 3081 signal and 0 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/01 22:07:30 [SERVER] executor 0 has 6 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 2934 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1256 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 309 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 101 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 NetFailure, Node crash: false false
2023/03/01 22:07:30 mutate testcase with failures
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 2459 open$dir open$dir
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/01 22:07:30 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
open$dir(&(0x7f0000000000)='./file0\x00', 0x422403, 0x101)
setxattr$security_ima(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080), &(0x7f00000000c0)=@md5={0x1, "043d87b0504de329491a4b55c0549aa4"}, 0x11, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2237
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 464
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2238 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2238
receive_execute: 23, 32
receive_execute: 23, 32
current dir: executor 4: /root/orangefs-client/dfs-0-2238
receive_execute: 23, 33
receive_execute: 41, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 25, 43
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4930, write pid:4931
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 19551, pid 4672, write pid:4673
----- executor 3 executes write_coverage_signal cov->size 19551, flag collect 0
----- executor 3 signal number : 3071
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 4 write_call_output, size 13464, pid 4930, write pid:4931
----- executor 4 executes write_coverage_signal cov->size 13464, flag collect 0
----- executor 4 signal number : 2731
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 13, 0, 0
execute_one time: 0, 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
----- executor 3 write_call_output, size 9976, pid 4672, write pid:4673
----- executor 3 executes write_coverage_signal cov->size 9976, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
time breakdown 4: 68, 14, 0
before receive testcase: 0 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 24, 2, 0
execute_one time: 0, 26
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 74, 27, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2875
----- executor 0 executes write_coverage_signal cov->size 32567, flag collect 0
----- executor 0 signal number : 1270
----- executor 0 executes write_coverage_signal cov->size 4523, flag collect 0
----- executor 0 signal number : 302
----- executor 0 executes write_coverage_signal cov->size 5025, flag collect 0
----- executor 0 signal number : 81
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 134
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 56, 29, 0
before receive testcase: 0 0
executor 0 server cover_cnt 5 output_pos_value 4678
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 55, 30, 0
before receive testcase: 0 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 63
2023/03/01 22:07:30 ----- PS len: 5
2023/03/01 22:07:30 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:30 fuzzer receive 2731 signal and 0 cover from executor 4
2023/03/01 22:07:30 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 2875 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1270 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 302 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 134 signal and 0 cover from userspace component
time breakdown 2: 55, 30, 0
2023/03/01 22:07:30 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 fuzzer receive 3071 signal and 0 cover from executor 3
2023/03/01 22:07:30 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 NetFailure, Node crash: false false
2023/03/01 22:07:30 mutate testcase with failures
2023/03/01 22:07:30 ----- mutateArg()
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 3967 truncate truncate
2023/03/01 22:07:30 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:30 prog length: 2
2023/03/01 22:07:30 prog length: 1
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
truncate(&(0x7f0000000000)='./file0\x00', 0x7fffffff)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2238
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 120
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-2239 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2239
receive_execute: 2, 51
receive_execute: 1, 51
current dir: executor 4: /root/orangefs-client/dfs-0-2239
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 1, 0
receive_execute: 4, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 7, 55
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19549, pid 4674, write pid:4675
----- executor 3 executes write_coverage_signal cov->size 19549, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 6
receive_execute: 0, 52
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
-----executor 1 collect shmids 11
----- directly resend shmid 11
----- executor 3 write_call_output, size 0, pid 4674, write pid:4675
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 26, 0
execute_one time: 0, 46
time breakdown 3: 56, 51, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 32765, pid 4932, write pid:4933
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3095
----- completed 1
execute_one loop: 0, 0, 50
cover_reset in execute_call
execute_one loop: 0, 0, 11
executor 4, execute_one inner time: 50, 11, 0
execute_one time: 0, 62
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12275, flag collect 0
----- executor 2 signal number : 1550
----- executor 2 executes write_coverage_signal cov->size 3821, flag collect 0
----- executor 1 signal number : 2735
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2772
----- executor 0 executes write_coverage_signal cov->size 21396, flag collect 0
----- executor 2 signal number : 881
----- executor 2 executes write_coverage_signal cov->size 2622, flag collect 0
----- executor 2 signal number : 294
----- executor 2 executes write_coverage_signal cov->size 723, flag collect 0
----- executor 2 signal number : 75
executor 2 server cover_cnt 4 output_pos_value 2813
----- executor 0 signal number : 1138
----- executor 0 executes write_coverage_signal cov->size 5529, flag collect 0
----- executor 0 signal number : 352
----- executor 1 signal number : 1490
----- executor 1 executes write_coverage_signal cov->size 7461, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3894, flag collect 0
----- executor 0 signal number : 77
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 58, 62, 0
executor 0 server cover_cnt 4 output_pos_value 4352
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:30 wg wait finish
2023/03/01 22:07:30 ------ all executors finish execution
2023/03/01 22:07:30 exec time: 120
2023/03/01 22:07:30 ----- PS len: 5
----- executor 1 signal number : 334
----- executor 1 executes write_coverage_signal cov->size 6547, flag collect 0
----- executor 1 signal number : 102
----- executor 1 executes write_coverage_signal cov->size 1921, flag collect 0
----- executor 1 signal number : 123
executor 1 server cover_cnt 5 output_pos_value 4800
time breakdown 1: 53, 69, 0
before receive testcase: 0 0
2023/03/01 22:07:30 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:30 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 2735 signal and 0 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 1550 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 1490 signal and 0 cover from userspace component
2023/03/01 22:07:30 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 881 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 294 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 2772 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 1138 signal and 0 cover from userspace component
2023/03/01 22:07:30 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 352 signal and 0 cover from userspace component
2023/03/01 22:07:30 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:30 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:30 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 52, 69, 0
before receive testcase: 0 0
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 102 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 1 receive 123 signal and 0 cover from userspace component
2023/03/01 22:07:30 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:30 fuzzer receive 3095 signal and 0 cover from executor 4
2023/03/01 22:07:30 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:30 NetFailure, Node crash: false false
2023/03/01 22:07:30 mutate testcase with failures
2023/03/01 22:07:30 ----- mutateArg()
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/01 22:07:30 ----- insertCall()
2023/03/01 22:07:30 ----- generateCall 216 fdatasync fdatasync
2023/03/01 22:07:30 ----- mutateArg()
2023/03/01 22:07:30 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:30 prog length: 6
time breakdown 4: 62, 63, 0
before receive testcase: 0 1
2023/03/01 22:07:30 HasCrashFail:false HasNetFail:false
22:07:30 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000440)='./file1\x00', 0x141800, 0x147)
fdatasync(r0)
r1 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x184)
write(r1, &(0x7f0000000000)="c2", 0x1)
r2 = dup2(r1, r1)
write$binfmt_elf64(r2, &(0x7f0000000040)={{0x7f, 0x45, 0x4c, 0x46, 0xff, 0x7, 0x40, 0x5, 0x8, 0x2, 0x3e, 0x41, 0x17a, 0x40, 0x366, 0x9, 0x0, 0x38, 0x2, 0x9, 0x1, 0x5}, [{0x3, 0x2, 0x20, 0x3, 0x2, 0x0, 0xfffffffffffffffc, 0x10001}, {0x5, 0x2, 0x3, 0x10001, 0x6, 0x7ff, 0xffffffffffffffff, 0x4}], "effae1d6228b739d441653d7a6adb86aae34004f7b141f474d8445ad9009d0cba50beb085f2c6ecb2fef655bd0c1243eff83469b65bd", ['\x00', '\x00', '\x00']}, 0x3e6)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3224
remove dir: /root/orangefs-client/dfs-0-2239
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 4560, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 35
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2240
receive_execute: 0, 48
receive_execute: 1, 47
receive_execute: 1, 47
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2240 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2240
receive_execute: 18, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
----- executor 3 write_call_output, size 6799, pid 4676, write pid:4677
----- executor 3 executes write_coverage_signal cov->size 6799, flag collect 0
----- executor 3 signal number : 2059
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4676, write pid:4677
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 10, 1
----- executor 3 write_call_output, size 19556, pid 4676, write pid:4677
----- executor 3 executes write_coverage_signal cov->size 19556, flag collect 0
----- executor 3 signal number : 1032
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
receive_execute: 4, 59
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:30 for select break: 1
2023/03/01 22:07:30 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 63, 2, 0
before receive testcase: 0 0
-----executor 0 collect shmids 15
----- directly resend shmid 15
----- executor 3 write_call_output, size 10485, pid 4676, write pid:4677
----- executor 3 executes write_coverage_signal cov->size 10485, flag collect 0
----- executor 3 signal number : 973
----- completed 4
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4676, write pid:4677
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 16
----- directly resend shmid 16
----- executor 3 write_call_output, size 6433, pid 4676, write pid:4677
----- executor 3 executes write_coverage_signal cov->size 6433, flag collect 0
----- executor 3 signal number : 108
----- completed 6
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 17
----- directly resend shmid 17
executor 3, execute_one inner time: 55, 16, 10
execute_one time: 1, 81
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 27230, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 97, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 1680, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 433, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
----- executor 0 signal number : 2957
----- executor 0 executes write_coverage_signal cov->size 16109, flag collect 0
----- executor 2 signal number : 2717
2023/03/01 22:07:31 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 20658, flag collect 0
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 48, 84, 0
before receive testcase: 0 0
----- executor 0 signal number : 1189
----- executor 0 executes write_coverage_signal cov->size 4011, flag collect 0
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 2359, flag collect 0
----- executor 0 signal number : 83
----- executor 2 signal number : 981
----- executor 2 executes write_coverage_signal cov->size 5390, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1907, flag collect 0
----- executor 0 signal number : 124
----- executor 0 executes write_coverage_signal cov->size 1907, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 795, flag collect 0
----- executor 0 signal number : 1
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 4121, flag collect 0
----- executor 2 signal number : 77
executor 0 server cover_cnt 7 output_pos_value 4679
executor 2 server cover_cnt 4 output_pos_value 4132
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 48, 85, 0
before receive testcase: 0 0
time breakdown 2: 48, 86, 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 133
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:31 [SERVER] executor 0 has 7 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 2957 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1189 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:31 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:31 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:31 [CLIENT] executor 3 has 6 replies
2023/03/01 22:07:31 fuzzer receive 2059 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 1032 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 973 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 2717 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 981 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
time breakdown 3: 65, 83, 0
before receive testcase: 0 0
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3667 setxattr$security_evm setxattr$security_evm
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3970 unlink unlink
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 7
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
unlink(&(0x7f00000001c0)='./file0\x00')
setxattr$trusted_overlay_nlink(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0), &(0x7f0000000500)={'L-', 0x800}, 0x16, 0x2)
setxattr$security_evm(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f00000002c0)=ANY=[@ANYBLOB="030200000095660081fe6c3f9ccd3e8af410455b62642ea440be9e577e480b38c2d747b87402a7fa90cbba2e939d51b858e89ad35992559bd6340d65b8d9a7d4a2ef8f69601de4d24048010b8534bc9a92d3383c41f782426970277cc6114f6e4653cb02d9f041f9d154aa9dfcc0433b3f3f381d4809f0ac6d7a743741ac1df36699174a35696a64c079d97eb937ecec01b1afcb98dfcdb7d83d2e5b0f5c7e73f6c92a0a204c10d4e10c2e0000000000000006c64e747c89a193"], 0x8a, 0x3)
setxattr$security_evm(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f0000000440)=ANY=[@ANYBLOB="fc10f32690d2c76846f04318a07f0d144c31c092b6535e806bcc"], 0x2, 0x1)
setxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='system_u:object_r:su_exec_t:s0\x00', 0x1f, 0x3)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400)='./file0\x00', 0x8, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2240
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 2040
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2241 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2241
receive_execute: 3, 32
receive_execute: 4, 32
receive_execute: 0, 32
current dir: executor 4: /root/orangefs-client/dfs-0-2241
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 5, 32
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 1, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19638, pid 4679, write pid:4680
----- executor 3 executes write_coverage_signal cov->size 19638, flag collect 0
----- executor 3 signal number : 3083
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
receive_execute: 71, 48
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
-----executor 2 collect shmids 14
----- directly resend shmid 14
----- executor 3 write_call_output, size 10013, pid 4679, write pid:4680
----- executor 3 executes write_coverage_signal cov->size 10013, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 22, 2, 1
execute_one time: 3, 25
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
----- executor 4 write_call_output, size 32765, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 4 signal number : 3110
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
time breakdown 3: 37, 28, 0
before receive testcase: 0 1
----- executor 4 write_call_output, size 7980, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 4 signal number : 64
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 7980, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 4 signal number : 29
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7980, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 4 signal number : 29
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 7980, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 4 signal number : 29
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 7980, pid 4935, write pid:4936
----- executor 4 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 4 signal number : 29
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 4, execute_one inner time: 24, 24, 0
execute_one time: 1, 48
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1470, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 3019
----- executor 0 signal number : 2807
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 35, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 25256, flag collect 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 36, 67, 0
----- executor 2 signal number : 1580
----- executor 2 executes write_coverage_signal cov->size 3774, flag collect 0
----- executor 2 signal number : 318
----- executor 2 executes write_coverage_signal cov->size 2894, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 2 signal number : 133
----- executor 0 signal number : 1080
----- executor 0 executes write_coverage_signal cov->size 9039, flag collect 0
----- executor 0 signal number : 371
----- executor 0 executes write_coverage_signal cov->size 9056, flag collect 0
executor 2 server cover_cnt 6 output_pos_value 5163
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4347
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 32, 69, 0
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 4: 119, 50, 0
before receive testcase: 0 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 102
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 7 replies
2023/03/01 22:07:31 fuzzer receive 3110 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 64 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 29 signal and 0 cover from executor 4
2023/03/01 22:07:31 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 2807 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1080 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 371 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 0: 35, 70, 0
before receive testcase: 0 0
2023/03/01 22:07:31 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:31 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 3019 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 1580 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 318 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:31 fuzzer receive 29 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 29 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 29 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3761 stat stat
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3669 setxattr$security_selinux setxattr$security_selinux
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
stat(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040))
setxattr$security_selinux(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)='system_u:object_r:apt_var_cache_t:s0\x00', 0x25, 0x2)
---

end of program
----- executor 4 receive testcase
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2241
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 4: prog_data_offset 1640, prog_size 432
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 22
executor 3 create dir /root/orangefs-client/dfs-0-2242 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2242
receive_execute: 2, 53
current dir: executor 4: /root/orangefs-client/dfs-0-2242
receive_execute: 3, 54
receive_execute: 4, 54
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 42, 55
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6829, pid 4681, write pid:4682
----- executor 3 executes write_coverage_signal cov->size 6829, flag collect 0
----- executor 3 signal number : 2068
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
-----executor 0 collect shmids 18
----- directly resend shmid 18
receive_execute: 5, 72
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9984, pid 4681, write pid:4682
----- executor 3 executes write_coverage_signal cov->size 9984, flag collect 0
----- executor 3 signal number : 1092
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 4, 0
execute_one time: 0, 23
----- executor 4 write_call_output, size 24518, pid 4939, write pid:4940
----- executor 4 executes write_coverage_signal cov->size 24518, flag collect 0
----- executor 4 signal number : 2853
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4939, write pid:4940
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 6, 2, 0
execute_one time: 1, 8
executor 0 write_server_output
time breakdown 4: 77, 9, 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 3348
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1303
----- executor 0 executes write_coverage_signal cov->size 5502, flag collect 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 58, 29, 0
before receive testcase: 0 1
----- executor 0 signal number : 309
----- executor 0 executes write_coverage_signal cov->size 6093, flag collect 0
----- executor 0 signal number : 80
----- executor 0 executes write_coverage_signal cov->size 1907, flag collect 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 137
time breakdown 2: 57, 29, 0
before receive testcase: 0 0
executor 0 server cover_cnt 5 output_pos_value 5193
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 84
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:31 fuzzer receive 2853 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:31 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:31 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:31 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
time breakdown 0: 55, 30, 0
2023/03/01 22:07:31 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:31 fuzzer receive 1092 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 3348 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1303 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 309 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
time breakdown 3: 97, 24, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 187 faccessat faccessat
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 2782 readv readv
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
faccessat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x0)
readv(0xffffffffffffffff, &(0x7f0000000140)=[{&(0x7f0000000040)=""/19, 0x13}, {&(0x7f0000000080)=""/130, 0x82}], 0x2)
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2242
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 400
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2243 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2243
receive_execute: 9, 30
receive_execute: 10, 30
receive_execute: 9, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2243
receive_execute: 12, 33
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 14, 43
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8240, pid 4941, write pid:4942
----- executor 4 executes write_coverage_signal cov->size 8240, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4941, write pid:4942
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 11, 2, 0
execute_one time: 1, 13
2023/03/01 22:07:31 for select break: 1
time breakdown 4: 45, 15, 0
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 3 write_call_output, size 19600, pid 4683, write pid:4684
----- executor 3 executes write_coverage_signal cov->size 19600, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
-----executor 0 collect shmids 19
----- directly resend shmid 19
----- executor 3 write_call_output, size 0, pid 4683, write pid:4684
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 34, 3, 0
execute_one time: 0, 37
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
time breakdown 3: 57, 37, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 60, flag collect 0
before receive testcase: 0 1
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2648
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1265
----- executor 0 executes write_coverage_signal cov->size 5346, flag collect 0
time breakdown 2: 40, 51, 0
before receive testcase: 0 0
----- executor 0 signal number : 311
----- executor 0 executes write_coverage_signal cov->size 5004, flag collect 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 84
----- executor 0 executes write_coverage_signal cov->size 1893, flag collect 0
time breakdown 1: 40, 52, 0
----- executor 0 signal number : 133
before receive testcase: 0 0
executor 0 server cover_cnt 5 output_pos_value 4457
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 83
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:31 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:31 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:31 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:31 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:31 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:31 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 2648 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1265 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 311 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
time breakdown 0: 39, 53, 0
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 2355 lsetxattr$security_selinux lsetxattr$security_selinux
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 2353 lsetxattr$security_evm lsetxattr$security_evm
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3678 setxattr$user setxattr$user
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 3
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
lsetxattr$security_evm(&(0x7f0000000080)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)=ANY=[], 0x15, 0x0)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f00000000c0)='system_u:object_r:initrc_var_run_t:s0\x00', 0x26, 0x1)
setxattr$user(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)='\x00', 0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2243
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 824
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 33
executor 3 create dir /root/orangefs-client/dfs-0-2244 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2244
receive_execute: 2, 64
receive_execute: 1, 64
receive_execute: 3, 64
current dir: executor 4: /root/orangefs-client/dfs-0-2244
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 64
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 36, 71
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 8191, pid 4943, write pid:4944
----- executor 4 executes write_coverage_signal cov->size 8191, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 8191, pid 4943, write pid:4944
----- executor 4 executes write_coverage_signal cov->size 8191, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 8191, pid 4943, write pid:4944
----- executor 4 executes write_coverage_signal cov->size 8191, flag collect 0
----- executor 4 signal number : 16
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 19817, pid 4685, write pid:4686
----- executor 3 executes write_coverage_signal cov->size 19817, flag collect 0
----- executor 3 signal number : 3090
----- completed 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 4, execute_one inner time: 6, 7, 0
execute_one time: 0, 13
time breakdown 4: 107, 14, 0
before receive testcase: 0 1
-----executor 1 collect shmids 12
----- directly resend shmid 12
----- executor 3 write_call_output, size 0, pid 4685, write pid:4686
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 2, 0
execute_one time: 1, 31
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 25695, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
----- executor 1 signal number : 2682
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 executes write_coverage_signal cov->size 17575, flag collect 0
----- executor 0 signal number : 1965
----- executor 0 executes write_coverage_signal cov->size 25209, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 2803, flag collect 0
----- executor 0 signal number : 964
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2465, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5519, flag collect 0
----- executor 0 signal number : 360
----- executor 0 executes write_coverage_signal cov->size 5328, flag collect 0
----- executor 1 signal number : 80
----- executor 1 executes write_coverage_signal cov->size 1907, flag collect 0
----- executor 1 signal number : 122
----- executor 0 signal number : 77
executor 1 server cover_cnt 5 output_pos_value 4311
executor 0 server cover_cnt 4 output_pos_value 3379
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 65, 35, 0
before receive testcase: 0 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 100
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 3 replies
2023/03/01 22:07:31 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 2682 signal and 0 cover from userspace component
2023/03/01 22:07:31 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:31 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:31 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1965 signal and 0 cover from userspace component
2023/03/01 22:07:31 fuzzer receive 3090 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 964 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 360 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
time breakdown 1: 66, 36, 0
before receive testcase: 0 0
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:31 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 171 dup2 dup2
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 4
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0/file0\x00', 0x10982, 0x20)
dup2(r0, 0xffffffffffffffff)
r1 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r1, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1880, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 3: 68, 33, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 544
remove dir: /root/orangefs-client/dfs-0-2244
time breakdown 2: 67, 34, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 28
-----finish removing dir
receive_execute: 2, 43
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2245
receive_execute: 2, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-2245 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2245
receive_execute: 4, 43
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6814, pid 4687, write pid:4688
----- executor 3 executes write_coverage_signal cov->size 6814, flag collect 0
----- executor 3 signal number : 2065
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4687, write pid:4688
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 16, 54
receive_execute: 1, 43
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 70, 1, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19587, pid 4687, write pid:4688
----- executor 3 executes write_coverage_signal cov->size 19587, flag collect 0
----- executor 3 signal number : 1031
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
-----executor 2 collect shmids 15
----- directly resend shmid 15
----- executor 3 write_call_output, size 10218, pid 4687, write pid:4688
----- executor 3 executes write_coverage_signal cov->size 10218, flag collect 0
----- executor 3 signal number : 968
----- completed 4
execute_one loop: 0, 0, 24
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
-----executor 2 collect shmids 16
----- directly resend shmid 16
executor 3, execute_one inner time: 36, 12, 7
execute_one time: 0, 56
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 1 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2104, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 856, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 75
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 44, 57, 0
before receive testcase: 0 0
time breakdown 3: 47, 56, 0
before receive testcase: 0 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2672
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1249
----- executor 2 executes write_coverage_signal cov->size 5319, flag collect 0
----- executor 2 signal number : 314
----- executor 2 executes write_coverage_signal cov->size 4983, flag collect 0
----- executor 2 signal number : 82
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 132
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 2 signal number : 6
executor 2 server cover_cnt 6 output_pos_value 4474
time breakdown 2: 46, 59, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 111
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:31 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:31 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:31 fuzzer receive 2065 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 1031 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 968 signal and 0 cover from executor 3
2023/03/01 22:07:31 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:31 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 2672 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 1249 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 314 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 541 ioctl ioctl
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 4
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
r1 = open(&(0x7f0000000040)='./file0/file0\x00', 0x140, 0x2)
ioctl(r1, 0x6, &(0x7f0000000080)="b4c96d04a534fb077be2edebc12ba8e45d36ab093c144be57ebae048e95015eed9c77b16faad677a6af4e8ea7b8773d92a7e9601b2874aa4f11403f1e8320560e84843cb21083ccffafd1a8b3c07")
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 680
remove dir: /root/orangefs-client/dfs-0-2245
time breakdown 0: 45, 68, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2016, prog_size 8
remove dir time 33
-----finish removing dir
mkdir time 8
executor 3 create dir /root/orangefs-client/dfs-0-2246 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2246
receive_execute: 1, 44
receive_execute: 9, 44
current dir: executor 4: /root/orangefs-client/dfs-0-2246
receive_execute: 12, 44
receive_execute: 13, 44
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- executor 3 write_call_output, size 19632, pid 4690, write pid:4691
----- executor 3 executes write_coverage_signal cov->size 19632, flag collect 0
receive_execute: 57, 50
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 7
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4690, write pid:4691
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4690, write pid:4691
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 108, 2, 0
before receive testcase: 0 0
cover_reset in execute_call
-----executor 1 collect shmids 13
----- directly resend shmid 13
----- executor 3 write_call_output, size 9984, pid 4690, write pid:4691
----- executor 3 executes write_coverage_signal cov->size 9984, flag collect 0
----- executor 3 signal number : 955
----- completed 4
execute_one loop: 0, 0, 20
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 4, 0
execute_one time: 0, 33
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 57, 34, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 16407, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31824, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2712
----- executor 1 executes write_coverage_signal cov->size 14228, flag collect 0
----- executor 0 signal number : 2773
----- executor 0 executes write_coverage_signal cov->size 15759, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 1782, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1455, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 122
----- executor 0 signal number : 955
----- executor 0 executes write_coverage_signal cov->size 3564, flag collect 0
time breakdown 2: 53, 35, 0
----- executor 0 signal number : 340
----- executor 0 executes write_coverage_signal cov->size 2859, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4157
executor 1 server cover_cnt 5 output_pos_value 4342
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 56, 36, 0
before receive testcase: 0 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 80
2023/03/01 22:07:31 ----- PS len: 5
time breakdown 0: 45, 36, 0
2023/03/01 22:07:31 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:31 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 2773 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 955 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:31 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:31 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 2712 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:31 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 236 fsetxattr$security_smack_transmute fsetxattr$security_smack_transmute
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 4127 write$binfmt_aout write$binfmt_aout
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 171 dup2 dup2
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 7
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x80, 0x4)
fcntl$getownex(r0, 0x10, &(0x7f0000000a40))
fsetxattr$security_smack_transmute(r0, &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x2)
r1 = dup2(r0, r0)
r2 = dup2(r0, r1)
write$binfmt_aout(r0, &(0x7f00000000c0)={{0x107, 0x0, 0x8, 0x3a5, 0x292, 0x1, 0x2d3, 0x1aa}, "31c9acc60c93116ce67609d5c423abd28d035cf2f25f328ec81a35d4f9041e7510a6fd61325a7df346edfbca6d2bc68281", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0x951)
fsetxattr$trusted_overlay_upper(r2, &(0x7f0000000a80), &(0x7f0000000ac0)={0x0, 0xfb, 0x65, 0x4, 0x0, "f45c09ed07329751920a4fb078742b2e", "335e8f7294740bd73e749215bb1fb4076e3fbe1b6eb2ddf8198bb11b011132e80a652f54b23b9761739ea2c583d518a80d3443c95cae2c6d7a168bfff542ed05f25b640d32641f3dc28afa4f897a3935"}, 0x65, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2246
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 4560
remove dir time 56
-----finish removing dir
receive_execute: 3, 75
current dir: executor 4: /root/orangefs-client/dfs-0-2247
receive_execute: 2, 74
receive_execute: 1, 75
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-2247 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2247
receive_execute: 3, 75
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 28, 90
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7801, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 7801, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4948, write pid:4949
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 2, 3, 0
execute_one time: 0, 5
time breakdown 4: 118, 6, 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 3 write_call_output, size 20057, pid 4693, write pid:4694
----- executor 3 executes write_coverage_signal cov->size 20057, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 33
cover_reset in execute_call
-----executor 2 collect shmids 17
----- directly resend shmid 17
----- executor 3 write_call_output, size 9976, pid 4693, write pid:4694
----- executor 3 executes write_coverage_signal cov->size 9976, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 36, 3, 0
execute_one time: 1, 39
time breakdown 3: 78, 40, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15958, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 2 signal number : 2623
----- executor 2 executes write_coverage_signal cov->size 14308, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2092, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 1 signal number : 2566
----- executor 1 executes write_coverage_signal cov->size 20949, flag collect 0
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 1782, flag collect 0
----- executor 0 signal number : 286
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1347, flag collect 0
----- executor 2 signal number : 77
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 2 signal number : 122
----- executor 0 signal number : 75
executor 2 server cover_cnt 5 output_pos_value 4249
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 117
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 7 replies
2023/03/01 22:07:31 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 76, 42, 0
2023/03/01 22:07:31 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 2623 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:31 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:31 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/01 22:07:31 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 2566 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 980 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 346 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
before receive testcase: 0 1
----- executor 1 signal number : 980
----- executor 1 executes write_coverage_signal cov->size 4533, flag collect 0
----- executor 1 signal number : 346
----- executor 1 executes write_coverage_signal cov->size 3855, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3981
time breakdown 1: 76, 42, 0
before receive testcase: 0 0
time breakdown 2: 78, 41, 0
before receive testcase: 0 0
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 120 chdir chdir
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 3761 stat stat
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
stat(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080))
chdir(&(0x7f0000000000)='./file0\x00')
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2247
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 208
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 64
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2248 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2248
receive_execute: 2, 74
current dir: executor 4: /root/orangefs-client/dfs-0-2248
receive_execute: 3, 75
receive_execute: 1, 74
receive_execute: 2, 74
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19803, pid 4695, write pid:4696
----- executor 3 executes write_coverage_signal cov->size 19803, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 35
cover_reset in execute_call
-----executor 1 collect shmids 14
----- directly resend shmid 14
----- executor 3 write_call_output, size 9984, pid 4695, write pid:4696
----- executor 3 executes write_coverage_signal cov->size 9984, flag collect 0
receive_execute: 22, 117
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 4
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 32
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 40, 32, 0
execute_one time: 2, 72
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 78, 75, 0
before receive testcase: 0 0
----- executor 4 write_call_output, size 23667, pid 4951, write pid:4952
----- executor 4 executes write_coverage_signal cov->size 23667, flag collect 0
----- executor 4 signal number : 2867
----- completed 1
execute_one loop: 0, 0, 34
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4951, write pid:4952
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 34, 2, 0
execute_one time: 0, 36
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 96, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1470, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4559, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2140, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1863, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 910, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2958
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2136
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 76, 81, 0
before receive testcase: 0 0
----- executor 1 signal number : 1246
----- executor 1 executes write_coverage_signal cov->size 5786, flag collect 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 314
----- executor 1 executes write_coverage_signal cov->size 6093, flag collect 0
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 1949, flag collect 0
----- executor 1 signal number : 133
executor 1 server cover_cnt 5 output_pos_value 4746
time breakdown 0: 76, 81, 0
before receive testcase: 0 0
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:31 wg wait finish
2023/03/01 22:07:31 ------ all executors finish execution
2023/03/01 22:07:31 exec time: 156
2023/03/01 22:07:31 ----- PS len: 5
2023/03/01 22:07:31 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:31 fuzzer receive 2867 signal and 0 cover from executor 4
2023/03/01 22:07:31 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:31 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:31 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
time breakdown 1: 75, 83, 0
2023/03/01 22:07:31 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:31 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 2958 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 1246 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 314 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:31 ------- fuzzer executor 1 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:31 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:31 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:31 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:31 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:31 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:31 NetFailure, Node crash: false false
2023/03/01 22:07:31 mutate testcase with failures
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 203 fcntl$dupfd fcntl$dupfd
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- mutateArg()
2023/03/01 22:07:31 ----- insertCall()
2023/03/01 22:07:31 ----- generateCall 250 fsync fsync
2023/03/01 22:07:31 ----- mutateArg()
before receive testcase: 0 0
2023/03/01 22:07:31 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:31 prog length: 2
2023/03/01 22:07:31 prog length: 6
2023/03/01 22:07:31 HasCrashFail:false HasNetFail:false
22:07:31 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
r1 = dup2(r0, r0)
r2 = fcntl$dupfd(r0, 0x0, r1)
r3 = dup(r2)
fsync(r0)
fcntl$dupfd(r3, 0x0, 0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2248
time breakdown 4: 139, 37, 0
before receive testcase: 0 1
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 608
remove dir time 62
-----finish removing dir
receive_execute: 3, 87
receive_execute: 3, 88
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-2249 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2249
current dir: executor 4: /root/orangefs-client/dfs-0-2249
receive_execute: 9, 87
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 0, 87
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
receive_execute: 5, 90
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4953, write pid:4954
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4953, write pid:4954
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4953, write pid:4954
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4953, write pid:4954
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4953, write pid:4954
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4953, write pid:4954
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
time breakdown 4: 95, 3, 0
before receive testcase: 0 1
2023/03/01 22:07:31 for select break: 1
2023/03/01 22:07:31 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 19557, pid 4697, write pid:4698
----- executor 3 executes write_coverage_signal cov->size 19557, flag collect 0
----- executor 3 signal number : 3069
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 0 collect shmids 20
----- directly resend shmid 20
----- executor 3 write_call_output, size 9976, pid 4697, write pid:4698
----- executor 3 executes write_coverage_signal cov->size 9976, flag collect 0
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 3, 0
execute_one time: 1, 19
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 96, 21, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 3185
----- executor 0 executes write_coverage_signal cov->size 30002, flag collect 0
----- executor 0 signal number : 1279
----- executor 0 executes write_coverage_signal cov->size 3930, flag collect 0
2023/03/01 22:07:32 for select break: 1
----- executor 0 signal number : 301
----- executor 0 executes write_coverage_signal cov->size 4098, flag collect 0
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 91, 22, 0
----- executor 0 signal number : 80
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 134
before receive testcase: 0 1
executor 0 server cover_cnt 5 output_pos_value 4995
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 90, 23, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 114
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 6 replies
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 3185 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1279 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 301 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 134 signal and 0 cover from userspace component
time breakdown 1: 87, 27, 0
before receive testcase: 0 0
2023/03/01 22:07:32 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:32 fuzzer receive 3069 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 2343 link link
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 2462 openat openat
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 4
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x20841, 0x10)
link(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
write(r0, &(0x7f0000000000)="c2", 0x1)
openat(r0, &(0x7f00000000c0)='./file0\x00', 0x2, 0xe2)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1976, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 640
remove dir: /root/orangefs-client/dfs-0-2249
remove dir time 44
-----finish removing dir
receive_execute: 1, 62
receive_execute: 4, 63
current dir: executor 4: /root/orangefs-client/dfs-0-2250
receive_execute: 6, 62
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-2250 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2250
receive_execute: 7, 63
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 22, 69
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 91, 3, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19841, pid 4699, write pid:4700
----- executor 3 executes write_coverage_signal cov->size 19841, flag collect 0
----- executor 3 signal number : 3090
----- completed 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 11996, pid 4699, write pid:4700
----- executor 3 executes write_coverage_signal cov->size 11996, flag collect 0
----- executor 3 signal number : 414
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
-----executor 2 collect shmids 18
----- directly resend shmid 18
----- executor 3 write_call_output, size 10021, pid 4699, write pid:4700
----- executor 3 executes write_coverage_signal cov->size 10021, flag collect 0
----- executor 3 signal number : 830
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4699, write pid:4700
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 2 collect shmids 19
----- directly resend shmid 19
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 38, 13, 0
execute_one time: 5, 51
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24877, flag collect 0
time breakdown 3: 70, 57, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 12406, flag collect 0
----- executor 2 signal number : 2765
----- executor 2 executes write_coverage_signal cov->size 15657, flag collect 0
----- executor 0 signal number : 1923
----- executor 0 executes write_coverage_signal cov->size 5580, flag collect 0
----- executor 0 signal number : 358
----- executor 0 executes write_coverage_signal cov->size 2019, flag collect 0
----- executor 0 signal number : 291
----- executor 2 signal number : 1130
----- executor 2 executes write_coverage_signal cov->size 2803, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1399, flag collect 0
----- executor 2 signal number : 297
----- executor 2 executes write_coverage_signal cov->size 2228, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 0 signal number : 76
----- executor 2 signal number : 122
----- executor 2 executes write_coverage_signal cov->size 788, flag collect 0
----- executor 2 signal number : 1
executor 0 server cover_cnt 4 output_pos_value 2661
executor 2 server cover_cnt 6 output_pos_value 4417
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2714
----- executor 1 executes write_coverage_signal cov->size 17967, flag collect 0
----- executor 1 signal number : 972
----- executor 1 executes write_coverage_signal cov->size 3957, flag collect 0
----- executor 1 signal number : 342
----- executor 1 executes write_coverage_signal cov->size 3165, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4117
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 122
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:32 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:32 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1923 signal and 0 cover from userspace component
2023/03/01 22:07:32 fuzzer receive 3090 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 414 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 830 signal and 0 cover from executor 3
2023/03/01 22:07:32 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 358 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 2765 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 291 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 1130 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 297 signal and 0 cover from userspace component
time breakdown 0: 67, 59, 1
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:32 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 2714 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 342 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 171 dup2 dup2
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 5
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000140)='./file0\x00', 0x60043, 0x0)
write(r0, &(0x7f0000000180)="efa413281a113b6c0009f718d02155c02b6e25368e2b9c1f494e518089fe94417743aa76d964d868eae3db472937d4c0bb1300f7e0f80b63a2915df097a0db54ff4064ca8c2d17690038cf01bd9bb78f91e86569b36849d401e655397cf9fcc98c270eec75833f1d3fec7e3b6b6710c2287ccfbb1e68b72aa7d3e3ce0f8e795284f955827a9f5ad8bba27ede97de7cb9300e5ec3633b0a1ef931ac21af3a6ec7ff555465a8b46eab8279e78898bc12", 0xaf)
r1 = open$dir(&(0x7f0000000000)='./file0\x00', 0x400000, 0x104)
fsetxattr$security_evm(r1, &(0x7f0000000080), &(0x7f00000000c0)=@md5={0x1, "f9a660c7b89218cbd07b6197114ec221"}, 0x11, 0x3)
dup2(r1, r0)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1032
remove dir: /root/orangefs-client/dfs-0-2250
----- executor 4 receive testcase
executor 4: prog_data_offset 2368, prog_size 8
time breakdown 1: 63, 59, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 68, 59, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 54
-----finish removing dir
receive_execute: 2, 80
mkdir time 26
executor 3 create dir /root/orangefs-client/dfs-0-2251 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2251
receive_execute: 2, 80
current dir: executor 4: /root/orangefs-client/dfs-0-2251
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 81
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 80
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 51, 91
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 142, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19573, pid 4702, write pid:4703
----- executor 3 executes write_coverage_signal cov->size 19573, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4702, write pid:4703
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4702, write pid:4703
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4702, write pid:4703
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4702, write pid:4703
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 16, 0
execute_one time: 0, 39
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2092, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 82, 44, 0
before receive testcase: 0 0
time breakdown 0: 82, 43, 0
before receive testcase: 0 0
time breakdown 3: 84, 42, 0
before receive testcase: 0 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 139
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:32 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 2753 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 1250 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 305 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:32 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 2347 llistxattr llistxattr
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 prog length: 1
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
llistxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000140)=""/128, 0x80)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 144
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2251
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2753
----- executor 1 executes write_coverage_signal cov->size 30455, flag collect 0
----- executor 1 signal number : 1250
----- executor 1 executes write_coverage_signal cov->size 3957, flag collect 0
----- executor 1 signal number : 305
----- executor 1 executes write_coverage_signal cov->size 3840, flag collect 0
----- executor 1 signal number : 80
executor 1 server cover_cnt 4 output_pos_value 4401
time breakdown 1: 82, 59, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 40
-----finish removing dir
mkdir time 60
executor 3 create dir /root/orangefs-client/dfs-0-2252 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2252
receive_execute: 1, 104
receive_execute: 15, 104
receive_execute: 16, 103
current dir: executor 4: /root/orangefs-client/dfs-0-2252
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 17, 106
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19561, pid 4706, write pid:4707
----- executor 3 executes write_coverage_signal cov->size 19561, flag collect 0
----- executor 3 signal number : 3067
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
receive_execute: 47, 118
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9992, pid 4706, write pid:4707
----- executor 3 executes write_coverage_signal cov->size 9992, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
-----executor 0 collect shmids 21
----- directly resend shmid 21
----- executor 4 write_call_output, size 17884, pid 4958, write pid:4959
----- executor 4 executes write_coverage_signal cov->size 17884, flag collect 0
----- executor 4 signal number : 2803
----- completed 1
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 3, 0
execute_one time: 0, 22
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 10, 0, 0
execute_one time: 0, 10
time breakdown 3: 123, 23, 0
before receive testcase: 0 1
2023/03/01 22:07:32 for select break: 1
executor 0 write_server_output
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 30670, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2924
----- executor 0 executes write_coverage_signal cov->size 19636, flag collect 0
----- executor 0 signal number : 1188
----- executor 0 executes write_coverage_signal cov->size 2751, flag collect 0
----- executor 0 signal number : 276
----- executor 0 executes write_coverage_signal cov->size 2943, flag collect 0
----- executor 0 signal number : 79
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 124
executor 0 server cover_cnt 5 output_pos_value 4607
time breakdown 0: 119, 28, 0
before receive testcase: 0 1
time breakdown 4: 165, 12, 0
before receive testcase: 0 1
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 120, 30, 0
before receive testcase: 0 0
2023/03/01 22:07:32 for select break: 1
----- executor 1 signal number : 2749
----- executor 1 executes write_coverage_signal cov->size 19905, flag collect 0
----- executor 1 signal number : 990
----- executor 1 executes write_coverage_signal cov->size 3737, flag collect 0
----- executor 1 signal number : 342
----- executor 1 executes write_coverage_signal cov->size 3475, flag collect 0
----- executor 1 signal number : 72
executor 1 server cover_cnt 4 output_pos_value 4166
time breakdown 1: 105, 42, 0
before receive testcase: 0 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 146
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:32 fuzzer receive 2803 signal and 0 cover from executor 4
2023/03/01 22:07:32 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:32 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 2749 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 2924 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 990 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 342 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1188 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:32 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:32 fuzzer receive 3067 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:32 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 2459 open$dir open$dir
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 6
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
open$dir(&(0x7f0000000700)='./file0\x00', 0x501000, 0x16)
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
fsetxattr$trusted_overlay_opaque(r0, &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
r1 = open$dir(&(0x7f00000000c0)='./file0/file0\x00', 0x80, 0xc)
write$binfmt_elf32(r1, &(0x7f0000000100)=ANY=[@ANYBLOB="7f454c46020d090e020000000000000003003e0004000000b50200003800000045020000080000001c0620000100010002000010000000000000007004000000ff0f0000080000000104000008000000dd0d000005000000631b4c08e08ddbd31308d01c9e1c28c4566ad3752b31ffbecdfd2e43d877250bb69726664995c7b8c8b1f1c5bfb90e78f1ef4f43f291279da2b3336b52cd5bab51e18347f2f4d607bb0e6b487d5bfd42e193c4a5fd8f22e2f910d350ce496b79a179a171de84abb8b762761bd86f9d64c00b9be13847212f42bd629f40cd3516b3ecb57d5c4b03ec00"/1504], 0x5e0)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 3840, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2504
remove dir: /root/orangefs-client/dfs-0-2252
remove dir time 27
-----finish removing dir
receive_execute: 13, 55
receive_execute: 15, 55
current dir: executor 4: /root/orangefs-client/dfs-0-2253
receive_execute: 1, 55
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-2253 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2253
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
receive_execute: 33, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4708, write pid:4709
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 19636, pid 4708, write pid:4709
----- executor 3 executes write_coverage_signal cov->size 19636, flag collect 0
----- executor 3 signal number : 3083
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
receive_execute: 17, 75
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 92, 1, 0
before receive testcase: 0 1
-----executor 2 collect shmids 20
----- directly resend shmid 20
----- executor 3 write_call_output, size 9984, pid 4708, write pid:4709
----- executor 3 executes write_coverage_signal cov->size 9984, flag collect 0
----- executor 3 signal number : 956
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4708, write pid:4709
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4708, write pid:4709
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4708, write pid:4709
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 27, 0, 0
execute_one time: 0, 27
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 74, 28, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 0 signal number : 1426
----- executor 1 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 1 server cover_cnt 3 output_pos_value 207
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 56, 30, 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 70, 30, 0
before receive testcase: 0 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 86
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:32 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 2944 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 1250 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:32 [CLIENT] executor 3 has 6 replies
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 120 chdir chdir
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 prog length: 3
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
setxattr$trusted_overlay_origin(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140), &(0x7f0000000180), 0x2, 0x2)
lsetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'system.', '\x00'}, &(0x7f00000000c0)='\\}\xf7!%&\x00', 0x7, 0x2)
chdir(&(0x7f0000000000)='./file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2253
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2944
----- executor 2 executes write_coverage_signal cov->size 28346, flag collect 0
----- executor 2 signal number : 1250
----- executor 2 executes write_coverage_signal cov->size 3151, flag collect 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 3459, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 133
executor 2 server cover_cnt 5 output_pos_value 4714
time breakdown 2: 68, 30, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 680
remove dir time 58
-----finish removing dir
receive_execute: 2, 97
mkdir time 39
executor 3 create dir /root/orangefs-client/dfs-0-2254 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2254
receive_execute: 2, 96
receive_execute: 0, 97
current dir: executor 4: /root/orangefs-client/dfs-0-2254
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 97
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 11, 106
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7840, pid 4961, write pid:4962
----- executor 4 executes write_coverage_signal cov->size 7840, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 7840, pid 4961, write pid:4962
----- executor 4 executes write_coverage_signal cov->size 7840, flag collect 0
----- executor 4 signal number : 15
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 7840, pid 4961, write pid:4962
----- executor 4 executes write_coverage_signal cov->size 7840, flag collect 0
----- executor 4 signal number : 16
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 6833, pid 4712, write pid:4713
----- executor 3 executes write_coverage_signal cov->size 6833, flag collect 0
----- executor 3 signal number : 2068
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
execute_one loop: 0, 0, 4
executor 4, execute_one inner time: 6, 5, 0
execute_one time: 1, 11
-----executor 2 collect shmids 21
----- directly resend shmid 21
----- executor 3 write_call_output, size 0, pid 4712, write pid:4713
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 117, 13, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 21, 4, 0
execute_one time: 1, 25
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 26139, flag collect 0
----- executor 2 signal number : 2661
----- executor 2 executes write_coverage_signal cov->size 17649, flag collect 0
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 2778, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 2519, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 122
executor 2 server cover_cnt 5 output_pos_value 4291
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
time breakdown 3: 100, 27, 0
before receive testcase: 0 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 99, 29, 0
before receive testcase: 0 0
time breakdown 1: 98, 28, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1964
----- executor 0 executes write_coverage_signal cov->size 23869, flag collect 0
----- executor 0 signal number : 964
----- executor 0 executes write_coverage_signal cov->size 5109, flag collect 0
----- executor 0 signal number : 360
----- executor 0 executes write_coverage_signal cov->size 4879, flag collect 0
----- executor 0 signal number : 72
executor 0 server cover_cnt 4 output_pos_value 3373
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 134
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 3 replies
2023/03/01 22:07:32 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 16 signal and 0 cover from executor 4
2023/03/01 22:07:32 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1964 signal and 0 cover from userspace component
time breakdown 0: 99, 38, 0
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 964 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 360 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:32 fuzzer receive 2068 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 2661 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 194 fchmod fchmod
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 251 ftruncate ftruncate
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
fchmod(0xffffffffffffffff, 0x10)
ftruncate(0xffffffffffffffff, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2254
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 152
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-2255 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2255
receive_execute: 0, 52
receive_execute: 9, 53
current dir: executor 4: /root/orangefs-client/dfs-0-2255
receive_execute: 22, 40
receive_execute: 12, 53
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 10, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
----- executor 3 write_call_output, size 19595, pid 4714, write pid:4715
----- executor 3 executes write_coverage_signal cov->size 19595, flag collect 0
----- executor 3 signal number : 3073
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
receive_execute: 17, 74
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4964, write pid:4965
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4964, write pid:4965
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
-----executor 0 collect shmids 22
----- directly resend shmid 22
time breakdown 4: 91, 1, 0
----- executor 3 write_call_output, size 9992, pid 4714, write pid:4715
----- executor 3 executes write_coverage_signal cov->size 9992, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
before receive testcase: 0 0
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 3, 0
cover_reset in execute_call
execute_one time: 0, 26
2023/03/01 22:07:32 for select break: 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 65, 27, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20127, flag collect 0
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 2740
----- executor 1 executes write_coverage_signal cov->size 17933, flag collect 0
----- executor 1 signal number : 957
----- executor 1 executes write_coverage_signal cov->size 3562, flag collect 0
----- executor 1 signal number : 342
----- executor 1 executes write_coverage_signal cov->size 2997, flag collect 0
----- executor 1 signal number : 76
----- executor 0 signal number : 2882
----- executor 0 executes write_coverage_signal cov->size 16398, flag collect 0
----- executor 0 signal number : 1189
----- executor 0 executes write_coverage_signal cov->size 1797, flag collect 0
----- executor 0 signal number : 283
----- executor 0 executes write_coverage_signal cov->size 1933, flag collect 0
----- executor 0 signal number : 82
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 124
executor 0 server cover_cnt 5 output_pos_value 4576
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 4128
time breakdown 1: 62, 29, 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 52, 29, 0
before receive testcase: 0 0
before receive testcase: 0 1
2023/03/01 22:07:32 for select break: 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 88
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:32 [CLIENT] executor 3 has 2 replies
time breakdown 2: 62, 36, 0
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 2882 signal and 0 cover from userspace component
2023/03/01 22:07:32 fuzzer receive 3073 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 1189 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 82 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 2740 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 957 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 342 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 215 fcntl$setstatus fcntl$setstatus
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 213 fcntl$setpipe fcntl$setpipe
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
fcntl$setstatus(0xffffffffffffffff, 0x4, 0x0)
fcntl$setpipe(0xffffffffffffffff, 0x407, 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2255
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 200
remove dir time 38
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2256 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2256
current dir: executor 4: /root/orangefs-client/dfs-0-2256
receive_execute: 9, 49
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
receive_execute: 2, 54
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 55
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 11, 54
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 29, 46
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4966, write pid:4967
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4966, write pid:4967
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 2
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 19573, pid 4716, write pid:4717
----- executor 3 executes write_coverage_signal cov->size 19573, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
time breakdown 4: 75, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 9992, pid 4716, write pid:4717
----- executor 3 executes write_coverage_signal cov->size 9992, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
-----executor 1 collect shmids 15
----- directly resend shmid 15
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 8, 0
execute_one time: 0, 38
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 27325, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15795, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
----- executor 1 signal number : 2623
----- executor 1 executes write_coverage_signal cov->size 14340, flag collect 0
----- executor 0 signal number : 2692
----- executor 0 executes write_coverage_signal cov->size 14364, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 1128
----- executor 1 executes write_coverage_signal cov->size 1782, flag collect 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1509, flag collect 0
time breakdown 2: 56, 41, 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 122
before receive testcase: 0 0
----- executor 0 signal number : 968
----- executor 0 executes write_coverage_signal cov->size 3171, flag collect 0
----- executor 0 signal number : 339
----- executor 0 executes write_coverage_signal cov->size 2460, flag collect 0
----- executor 0 signal number : 76
executor 1 server cover_cnt 5 output_pos_value 4256
executor 0 server cover_cnt 4 output_pos_value 4088
time breakdown 1: 58, 47, 0
before receive testcase: 0 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 96
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:32 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 2692 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 968 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 339 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 0: 64, 41, 0
2023/03/01 22:07:32 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 2623 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
time breakdown 3: 65, 39, 0
before receive testcase: 0 1
2023/03/01 22:07:32 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:32 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 3670 setxattr$security_smack_transmute setxattr$security_smack_transmute
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 4130 write$binfmt_misc write$binfmt_misc
2023/03/01 22:07:32 ----- insertCall()
2023/03/01 22:07:32 ----- generateCall 217 fgetxattr fgetxattr
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 8
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
setxattr$security_smack_transmute(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400), 0x4, 0x1)
r1 = openat(r0, &(0x7f0000000040)='./file0\x00', 0x0, 0x1)
write$binfmt_elf32(r1, &(0x7f0000000080)=ANY=[@ANYBLOB="7f454c4605020706070000000000000002003e00790500000301000038000000220300000500000003002000020000001f000500000000000300000017ed00002d00000004000000ac656a77ff07000003000000236b0000ee3fc3fa4b2abb23752eb8105df47d3d70a30405f803cfa11d26b02d443378d6a6897cdacb54ce2e721bc6d5c6c43264f4b3384d4d165c127d647863ac5a16604a0bce5fed6eaa4da6d82475bc0d6312bf9beb47d2d4eaa3d64ff9c1048f0c1319f573c9750134736589ffe70d9dc700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030a6b200"/711], 0x2c7)
write$binfmt_misc(r0, &(0x7f0000000440)={'syz1', "1216c96fa4f06ba20453fc277c4b5f58b5c5fe7649a0da152378fdb4db5ad46894d6ae2606d78021a6ad6aaf24dba9721b108872cf4e219e68c7c9052b17afe089d3817fbcefd74b3014fe111b8343aeca71f140aa78d225017ca4076562bacde09003f6433aadf821d3538bae16aacab890fa29da0438b8d80c8bc6bb1d8ce4d3d786f5a8643bb11501651a94f34b8f072b42c317d9d2f8f582277f4d9e6aec4e0af07621f9202ddf3a0e4c91999d5da76f"}, 0xb6)
r2 = fcntl$dupfd(r0, 0x406, r0)
fgetxattr(r2, &(0x7f0000000500)=@random={'btrfs.', 'syz1'}, &(0x7f0000000540)=""/158, 0x9e)
---
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2384
remove dir: /root/orangefs-client/dfs-0-2256
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 3720, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-2257 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2257
receive_execute: 2, 50
receive_execute: 4, 50
current dir: executor 4: /root/orangefs-client/dfs-0-2257
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 4, 51
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 50
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 37, 54
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 91, 2, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19573, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 19573, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 12, 0
-----executor 1 collect shmids 16
----- directly resend shmid 16
----- executor 3 write_call_output, size 10234, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 10234, flag collect 0
----- executor 3 signal number : 965
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 17
----- directly resend shmid 17
----- executor 3 write_call_output, size 6425, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 6425, flag collect 0
----- executor 3 signal number : 100
----- completed 6
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4718, write pid:4719
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 1 collect shmids 18
----- directly resend shmid 18
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 19
----- directly resend shmid 19
executor 3, execute_one inner time: 41, 11, 8
execute_one time: 0, 60
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 25977, flag collect 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1260, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 31151, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2703
----- executor 1 executes write_coverage_signal cov->size 14317, flag collect 0
----- executor 0 signal number : 2752
----- executor 0 executes write_coverage_signal cov->size 15548, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 3381, flag collect 0
----- executor 1 signal number : 299
----- executor 1 executes write_coverage_signal cov->size 1905, flag collect 0
----- executor 0 signal number : 970
----- executor 0 executes write_coverage_signal cov->size 3984, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 122
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 2847, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 1 signal number : 1
----- executor 0 signal number : 76
----- executor 1 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 1 signal number : 0
executor 0 server cover_cnt 4 output_pos_value 4152
executor 1 server cover_cnt 8 output_pos_value 4361
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 54, 65, 0
before receive testcase: 0 0
time breakdown 1: 56, 62, 0
before receive testcase: 0 1
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 52, 65, 0
before receive testcase: 0 0
2023/03/01 22:07:32 for select break: 1
2023/03/01 22:07:32 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:32 wg wait finish
2023/03/01 22:07:32 ------ all executors finish execution
2023/03/01 22:07:32 exec time: 123
2023/03/01 22:07:32 ----- PS len: 5
2023/03/01 22:07:32 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:32 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 2752 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 970 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:32 [SERVER] executor 1 has 8 replies
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 2703 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 299 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:32 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/01 22:07:32 [CLIENT] executor 3 has 8 replies
2023/03/01 22:07:32 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 965 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:32 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:32 NetFailure, Node crash: false false
2023/03/01 22:07:32 mutate testcase with failures
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 ----- mutateArg()
2023/03/01 22:07:32 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:32 prog length: 2
2023/03/01 22:07:32 HasCrashFail:false HasNetFail:false
22:07:32 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x210100, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 55, 62, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2257
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
remove dir time 21
-----finish removing dir
receive_execute: 9, 31
current dir: executor 4: /root/orangefs-client/dfs-0-2258
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2258 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2258
receive_execute: 8, 31
receive_execute: 7, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 12, 42
receive_execute: 68, 41
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
executor 4, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 2, 0
cover_reset in execute_call
time breakdown 4: 109, 6, 0
before receive testcase: 0 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 0, pid 4722, write pid:4723
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4722, write pid:4723
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 17, 2, 0
execute_one time: 0, 19
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 54, 20, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 23538, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 1922
----- executor 1 executes write_coverage_signal cov->size 10096, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 2568, flag collect 0
----- executor 1 signal number : 297
----- executor 1 executes write_coverage_signal cov->size 2154, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 2639
time breakdown 0: 39, 34, 0
time breakdown 1: 39, 35, 0
before receive testcase: 0 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 75
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 1922 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 297 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 3677 setxattr$trusted_overlay_upper setxattr$trusted_overlay_upper
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 prog length: 4
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
lremovexattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=@random={'security.', 'y\x00'})
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x200, 0x20)
fsetxattr$trusted_overlay_opaque(r0, &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x2)
setxattr$trusted_overlay_upper(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0)={0x0, 0xfb, 0x43, 0x3, 0x0, "fbc6368aeb12a6a59f774d652655b92c", "3495101c23362e508bbaac7b9c7644740bd46298699e335fb68a64b1f6a2b77d98d994f72b7bfd3f8a32890fcd93"}, 0x43, 0x2)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 1200
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2258
time breakdown 2: 40, 44, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 11
-----finish removing dir
mkdir time 27
executor 3 create dir /root/orangefs-client/dfs-0-2259 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2259
receive_execute: 10, 38
current dir: executor 4: /root/orangefs-client/dfs-0-2259
receive_execute: 0, 39
receive_execute: 9, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 13, 38
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 19839, pid 4724, write pid:4725
----- executor 3 executes write_coverage_signal cov->size 19839, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
receive_execute: 29, 66
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
-----executor 2 collect shmids 22
----- directly resend shmid 22
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9992, pid 4724, write pid:4725
----- executor 3 executes write_coverage_signal cov->size 9992, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 28, 2, 0
execute_one time: 1, 30
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 51, 31, 0
----- executor 4 write_call_output, size 17773, pid 4970, write pid:4971
----- executor 4 executes write_coverage_signal cov->size 17773, flag collect 0
----- executor 4 signal number : 2803
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
before receive testcase: 0 0
----- executor 4 write_call_output, size 26500, pid 4970, write pid:4971
----- executor 4 executes write_coverage_signal cov->size 26500, flag collect 0
----- executor 4 signal number : 301
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4970, write pid:4971
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4970, write pid:4971
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 11, 0, 0
execute_one time: 0, 11
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4569, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1430
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
----- executor 2 signal number : 2775
----- executor 2 executes write_coverage_signal cov->size 23348, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2138
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2764
----- executor 1 executes write_coverage_signal cov->size 19854, flag collect 0
----- executor 2 signal number : 1199
----- executor 2 executes write_coverage_signal cov->size 3957, flag collect 0
----- executor 2 signal number : 303
----- executor 2 executes write_coverage_signal cov->size 3668, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 96
executor 2 server cover_cnt 5 output_pos_value 4472
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 39, 42, 0
before receive testcase: 0 0
----- executor 1 signal number : 971
----- executor 1 executes write_coverage_signal cov->size 4350, flag collect 0
----- executor 1 signal number : 345
----- executor 1 executes write_coverage_signal cov->size 3523, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4169
time breakdown 1: 48, 42, 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 80
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 4 replies
2023/03/01 22:07:33 fuzzer receive 2803 signal and 0 cover from executor 4
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1430 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2764 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 971 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 345 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 47, 43, 0
2023/03/01 22:07:33 fuzzer receive 301 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 2775 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 1199 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 303 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 96 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/01 22:07:33 ----- mutateArg()
before receive testcase: 0 0
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 171 dup2 dup2
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 6
time breakdown 4: 95, 12, 0
before receive testcase: 0 0
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x70043, 0x1)
setxattr$smack_xattr_label(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='security.SMACK64MMAP\x00', &(0x7f0000000240)=ANY=[@ANYBLOB="ec0d7d17b78d1510b123901683a4d0c83ef9b984367852c5983b6ca893ed7928f4af9f4ddc369d646fa9ac1e42870d52cdfe02ffffee63f79e6d60bc033139fddbafd4a969e5ab12813ecb219b1ac2d8be608d1d4604c9e4bfe8ebd1c9a2d96ea16cc3b09ec5b9ce06780300dde7daf9fa36d4d5846b4d9022c02fa8a99ed483e4e172774a6c4a50998f14543736dfb984fc337b2bb7c2ee956fc1642fd1067428d132734e8d400000000000000000109c3986b1e1e55e0000000000003cbba998934c00df4109900e4eb1da4e6a707a9f5eef8eae6a65e9206e7d94fbfedd"], 0xbd, 0x2)
write(r0, &(0x7f0000000000)="c2", 0x1)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000200)={'U-', 0x3}, 0x16, 0x2)
r1 = open(&(0x7f0000000140)='.\x00', 0x100, 0x100)
dup2(r0, r1)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2712, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1376
remove dir: /root/orangefs-client/dfs-0-2259
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 43
executor 3 create dir /root/orangefs-client/dfs-0-2260 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2260
receive_execute: 12, 73
current dir: executor 4: /root/orangefs-client/dfs-0-2260
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 0, 73
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 73
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 1, 73
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19598, pid 4726, write pid:4727
----- executor 3 executes write_coverage_signal cov->size 19598, flag collect 0
----- executor 3 signal number : 3077
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4726, write pid:4727
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4726, write pid:4727
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4726, write pid:4727
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4726, write pid:4727
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4726, write pid:4727
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 13, 1, 0
execute_one time: 1, 14
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 85, 16, 0
before receive testcase: 0 1
receive_execute: 4, 87
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 14, 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5235, flag collect 0
----- executor 0 signal number : 1515
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 4: 91, 15, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 28569, flag collect 0
----- executor 2 signal number : 2772
----- executor 2 executes write_coverage_signal cov->size 26716, flag collect 0
----- executor 2 signal number : 1242
----- executor 2 executes write_coverage_signal cov->size 2575, flag collect 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 297
----- executor 2 executes write_coverage_signal cov->size 3143, flag collect 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 75, 29, 0
before receive testcase: 0 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2223
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 4403
time breakdown 2: 75, 31, 0
before receive testcase: 0 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 108
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1515 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 73, 35, 0
before receive testcase: 0 0
2023/03/01 22:07:33 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 2772 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 1242 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 297 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 6 replies
2023/03/01 22:07:33 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2462 openat openat
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 prog length: 3
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = dup(0xffffffffffffffff)
openat(r0, &(0x7f0000000000)='./file0\x00', 0x290f42, 0x2c)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000040)='./file0/file0\x00', &(0x7f0000000080), &(0x7f00000000c0)='./file0\x00', 0x8, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 536
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2260
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-2261 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2261
current dir: executor 4: /root/orangefs-client/dfs-0-2261
receive_execute: 9, 41
receive_execute: 7, 42
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 23, 41
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 37
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 64
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4974, write pid:4975
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4974, write pid:4975
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7815, pid 4974, write pid:4975
----- executor 4 executes write_coverage_signal cov->size 7815, flag collect 0
----- executor 4 signal number : 2073
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
----- executor 3 write_call_output, size 19827, pid 4729, write pid:4730
----- executor 3 executes write_coverage_signal cov->size 19827, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
execute_one loop: 0, 0, 3
executor 4, execute_one inner time: 9, 3, 0
execute_one time: 0, 12
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 74, 13, 0
before receive testcase: 0 1
-----executor 1 collect shmids 20
----- directly resend shmid 20
----- executor 3 write_call_output, size 0, pid 4729, write pid:4730
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 1, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 42, 3, 0
execute_one time: 0, 45
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2092, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1048, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 285
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2133
----- executor 1 signal number : 2713
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 56, 36, 0
before receive testcase: 0 0
----- executor 1 signal number : 1253
----- executor 1 executes write_coverage_signal cov->size 5309, flag collect 0
----- executor 1 signal number : 303
----- executor 1 executes write_coverage_signal cov->size 5320, flag collect 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 78
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
time breakdown 2: 49, 47, 0
before receive testcase: 0 0
----- executor 1 signal number : 131
executor 1 server cover_cnt 5 output_pos_value 4494
time breakdown 3: 65, 45, 0
before receive testcase: 0 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 90
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 3 replies
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:33 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 285 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2713 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
time breakdown 1: 50, 49, 0
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 1253 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 303 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 131 signal and 0 cover from userspace component
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 220 flock flock
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 200 fcntl$F_SET_FILE_RW_HINT fcntl$F_SET_FILE_RW_HINT
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 4200 writev writev
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 3668 setxattr$security_ima setxattr$security_ima
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 120 chdir chdir
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 12
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
chdir(&(0x7f0000000380)='./file0/file0\x00')
r1 = dup2(r0, r0)
lsetxattr(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000440)=ANY=[@ANYBLOB="7573657a3b76656563740000000000000000000000f9a528abea8749e4bfd064a6af45cf5f3f9e1201697b676c0536b8cc4f20d2cafb2cab306ba3d9cccbb49b2de39113d870d9561ba42c5e5af8cb5d9d9ec3320cd884c8613320aa102ac1b7fa82bd56460ab1485cb4bf8fb7257174"], &(0x7f0000000340)='\x00', 0x1, 0x0)
fcntl$F_SET_FILE_RW_HINT(0xffffffffffffffff, 0x40e, &(0x7f0000000080)=0x3)
setxattr$security_ima(&(0x7f0000000300)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400)=@sha1={0x1, "661b3fa80a35eac30f309fe577269a8f9844b85b"}, 0x15, 0x3)
lsetxattr(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)=@random={'btrfs.', '],[&\x00'}, &(0x7f0000000540)='security.ima\x00', 0xd, 0x0)
r2 = openat(r0, &(0x7f0000000040)='./file0\x00', 0x200800, 0x20)
fcntl$notify(r2, 0x402, 0x14)
flock(r1, 0x5)
writev(r2, &(0x7f0000000280)=[{&(0x7f00000000c0)="ce3d84d47a8cb86d0aad52e97bbad1bd70dcbde6b6431a720f14789a981ac902256ada91ed8f06b18bcd5fcd4d4ed1eedd36f93a94b94a62916275c475f28f57c4263ac93b6f40d8655bf1a9792993f484cdf655a33db8c08b601aa4d6cd4f0426f7481838ba53b7ff7a5c173abce552c18a409c7249b941378ceb28410c5356bd4cfb7d9dcbad9d3282b4e8dadc5d414d54124367abc3f11addf4835a7644511302914d737592eeefc004356065982748c9a2330a0caf5e15ddc20280a21b297f9927865b5e2ebb58df570a55", 0xcd}, {&(0x7f00000001c0)="54286a3184", 0x5}, {&(0x7f0000000200)="b967194ed5178588236387a4ca538aaaace34e64928d5fd35401f8b9b353853403cb20d71ce1ff625670cf927391f5c2444b6494c922ec161f6d389d645318222c45a128c5db5ba5b14fa592ab138f561b61f1c7dc5a222fced906dbbd1c71de7e9ade28b8ec08810fd3", 0x6a}], 0x3)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 4184, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2848
remove dir: /root/orangefs-client/dfs-0-2261
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
receive_execute: 1, 45
receive_execute: 1, 45
receive_execute: 2, 45
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2262
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-2262 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2262
receive_execute: 4, 45
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19829, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 19829, flag collect 0
----- executor 3 signal number : 3081
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
receive_execute: 14, 67
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 4: 81, 4, 0
before receive testcase: 0 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
-----executor 0 collect shmids 23
----- directly resend shmid 23
----- executor 3 write_call_output, size 10263, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 10263, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4731, write pid:4732
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 0 collect shmids 24
----- directly resend shmid 24
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 33, 15, 0
execute_one time: 0, 48
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 49, 49, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23578, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 2917
----- executor 0 executes write_coverage_signal cov->size 15960, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2745
----- executor 1 executes write_coverage_signal cov->size 17937, flag collect 0
----- executor 0 signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 2988, flag collect 0
----- executor 0 signal number : 297
----- executor 0 executes write_coverage_signal cov->size 2173, flag collect 0
----- executor 0 signal number : 83
----- executor 1 signal number : 972
----- executor 1 executes write_coverage_signal cov->size 3957, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 343
----- executor 1 executes write_coverage_signal cov->size 3165, flag collect 0
----- executor 0 signal number : 124
----- executor 1 signal number : 76
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
time breakdown 2: 46, 51, 0
----- executor 0 signal number : 1
before receive testcase: 0 0
executor 1 server cover_cnt 4 output_pos_value 4149
before receive testcase: 0 0
executor 0 server cover_cnt 6 output_pos_value 4628
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 46, 52, 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 47, 52, 0
2023/03/01 22:07:33 wg wait finish
before receive testcase: 0 1
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 97
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:33 [SERVER] executor 0 has 6 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 2917 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1187 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 297 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2745 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 343 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 12 replies
2023/03/01 22:07:33 fuzzer receive 3081 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 prog length: 5
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
fstat(0xffffffffffffffff, &(0x7f0000000080)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_access\x00', &(0x7f0000000380)=ANY=[@ANYBLOB="02000000010003000000000002000200", @ANYRES32=r0, @ANYBLOB="02000600", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32, @ANYBLOB="040002000000000008000400", @ANYRES32=r1, @ANYBLOB="08000400", @ANYRES32=0x0, @ANYBLOB="ea9cac402dad3a3023a363d6478145f808000400", @ANYRES32=r2, @ANYBLOB="08000500", @ANYRES32=0xee00, @ANYBLOB="08000600", @ANYRES32=0xee01, @ANYBLOB="08000200", @ANYRES32=r3, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0xee01, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="10000200000000002000020000000000"], 0x84, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2262
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 1840
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-2263 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2263
receive_execute: 3, 45
receive_execute: 4, 47
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 2, 45
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2263
receive_execute: 2, 45
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 27, 71
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4978, write pid:4979
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4978, write pid:4979
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4978, write pid:4979
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7895, pid 4978, write pid:4979
----- executor 4 executes write_coverage_signal cov->size 7895, flag collect 0
----- executor 4 signal number : 2073
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 20069, pid 4735, write pid:4736
----- executor 3 executes write_coverage_signal cov->size 20069, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 38
cover_reset in execute_call
----- executor 4 write_call_output, size 18187, pid 4978, write pid:4979
----- executor 4 executes write_coverage_signal cov->size 18187, flag collect 0
----- executor 4 signal number : 792
----- completed 5
execute_one loop: 0, 0, 28
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 29, 4, 0
execute_one time: 1, 33
-----executor 1 collect shmids 21
----- directly resend shmid 21
----- executor 3 write_call_output, size 10484, pid 4735, write pid:4736
----- executor 3 executes write_coverage_signal cov->size 10484, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
time breakdown 4: 98, 43, 0
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
before receive testcase: 0 1
executor 3, execute_one inner time: 67, 3, 0
execute_one time: 0, 70
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 30421, flag collect 0
executor 2 write_server_output
time breakdown 3: 51, 71, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1470, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 2737
----- executor 0 executes write_coverage_signal cov->size 19067, flag collect 0
----- executor 1 signal number : 2723
----- executor 1 executes write_coverage_signal cov->size 19139, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 994
----- executor 0 executes write_coverage_signal cov->size 5190, flag collect 0
----- executor 0 signal number : 345
----- executor 0 executes write_coverage_signal cov->size 3832, flag collect 0
----- executor 0 signal number : 76
----- executor 1 signal number : 1129
----- executor 1 executes write_coverage_signal cov->size 3230, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2973, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 122
executor 1 server cover_cnt 5 output_pos_value 4357
executor 0 server cover_cnt 4 output_pos_value 4165
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 47, 74, 0
before receive testcase: 0 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
time breakdown 0: 56, 67, 0
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 122
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 5 replies
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 792 signal and 0 cover from executor 4
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 2737 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 994 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 345 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2723 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 1129 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2808 removexattr removexattr
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2374 mkdirat mkdirat
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2810 renameat renameat
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 prog length: 6
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
mkdirat(0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00', 0x4)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.upper\x00')
r0 = dup(0xffffffffffffffff)
r1 = open(&(0x7f00000001c0)='./file0\x00', 0x2200, 0x10)
renameat(r0, &(0x7f0000000180)='./file0\x00', r1, &(0x7f0000000200)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)='security.SMACK64EXEC\x00', &(0x7f0000000140)={'{%$'}, 0x4, 0x1)
---

end of program
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2263
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 1064
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 48, 74, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 47
executor 3 create dir /root/orangefs-client/dfs-0-2264 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2264
receive_execute: 3, 70
current dir: executor 4: /root/orangefs-client/dfs-0-2264
receive_execute: 4, 70
receive_execute: 2, 70
executor 0 before execute_one
receive_execute: 5, 71
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 write_call_output, size 19619, pid 4737, write pid:4738
----- executor 3 executes write_coverage_signal cov->size 19619, flag collect 0
receive_execute: 9, 78
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 3082
----- completed 1
execute_one loop: 0, 0, 7
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
-----executor 1 collect shmids 22
----- directly resend shmid 22
----- executor 3 write_call_output, size 10000, pid 4737, write pid:4738
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 3, 0
execute_one time: 0, 21
----- executor 4 write_call_output, size 18069, pid 4981, write pid:4982
----- executor 4 executes write_coverage_signal cov->size 18069, flag collect 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
----- executor 4 signal number : 2801
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4981, write pid:4982
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4981, write pid:4982
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 3: 76, 21, 0
before receive testcase: 0 0
----- executor 4 write_call_output, size 27328, pid 4981, write pid:4982
----- executor 4 executes write_coverage_signal cov->size 27328, flag collect 0
----- executor 4 signal number : 300
----- completed 4
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4981, write pid:4982
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4981, write pid:4982
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 23, 2, 0
execute_one time: 0, 25
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2726
----- executor 1 executes write_coverage_signal cov->size 29256, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 72, 39, 0
before receive testcase: 0 0
----- executor 1 signal number : 1199
----- executor 1 executes write_coverage_signal cov->size 5319, flag collect 0
----- executor 1 signal number : 311
----- executor 1 executes write_coverage_signal cov->size 5337, flag collect 0
----- executor 1 signal number : 78
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 98
executor 1 server cover_cnt 5 output_pos_value 4428
time breakdown 4: 87, 31, 0
before receive testcase: 0 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 113
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 6 replies
2023/03/01 22:07:33 fuzzer receive 2801 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 300 signal and 0 cover from executor 4
2023/03/01 22:07:33 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:33 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2726 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 2787 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 3082 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 1199 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 311 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 98 signal and 0 cover from userspace component
time breakdown 1: 74, 42, 0
before receive testcase: 0 0
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 990 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 345 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- splice()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 4
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x120)
fcntl$notify(r1, 0x402, 0x80000000)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1896, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/orangefs-client/dfs-0-2264
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 signal number : 2787
----- executor 2 executes write_coverage_signal cov->size 19661, flag collect 0
----- executor 2 signal number : 990
----- executor 2 executes write_coverage_signal cov->size 4350, flag collect 0
----- executor 2 signal number : 345
----- executor 2 executes write_coverage_signal cov->size 3523, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4211
time breakdown 2: 73, 41, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 36
-----finish removing dir
mkdir time 18
executor 3 create dir /root/orangefs-client/dfs-0-2265 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2265
receive_execute: 5, 54
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 0, 1
receive_execute: 23, 54
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-2265
receive_execute: 3, 54
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 2, 54
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 83
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 89, 1, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19815, pid 4739, write pid:4740
----- executor 3 executes write_coverage_signal cov->size 19815, flag collect 0
----- executor 3 signal number : 3077
----- completed 1
execute_one loop: 0, 0, 32
cover_reset in execute_call
-----executor 0 collect shmids 25
----- directly resend shmid 25
----- executor 3 write_call_output, size 10000, pid 4739, write pid:4740
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 10726, pid 4739, write pid:4740
----- executor 3 executes write_coverage_signal cov->size 10726, flag collect 0
----- executor 3 signal number : 290
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4739, write pid:4740
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 0 collect shmids 26
----- directly resend shmid 26
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 46, 8, 0
execute_one time: 1, 54
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 23667, flag collect 0
time breakdown 3: 77, 57, 0
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1050, flag collect 0
executor 1 write_server_output
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 2 signal number : 44
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2919
----- executor 0 executes write_coverage_signal cov->size 16075, flag collect 0
----- executor 1 signal number : 2754
----- executor 1 executes write_coverage_signal cov->size 17779, flag collect 0
----- executor 0 signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 3198, flag collect 0
----- executor 1 signal number : 972
----- executor 1 executes write_coverage_signal cov->size 3974, flag collect 0
----- executor 0 signal number : 297
----- executor 0 executes write_coverage_signal cov->size 2227, flag collect 0
----- executor 0 signal number : 83
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 124
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 1
executor 0 server cover_cnt 6 output_pos_value 4630
----- executor 1 signal number : 341
----- executor 1 executes write_coverage_signal cov->size 2919, flag collect 0
----- executor 1 signal number : 76
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 4 output_pos_value 4156
2023/03/01 22:07:33 for select break: 1
time breakdown 2: 57, 59, 0
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 1: 61, 54, 0
before receive testcase: 0 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 113
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2754 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:33 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 0 has 6 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 2919 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1187 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 297 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 341 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:33 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 290 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = openat(0xffffffffffffffff, &(0x7f0000000000)='./file0\x00', 0x40080, 0x14)
fcntl$getownex(r0, 0x10, &(0x7f0000000040))
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2265
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 288
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 59, 59, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 44
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2266 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2266
receive_execute: 1, 53
receive_execute: 2, 53
receive_execute: 1, 54
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2266
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 54
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 29, 57
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4985, write pid:4986
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4985, write pid:4986
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 86, 2, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19585, pid 4742, write pid:4743
----- executor 3 executes write_coverage_signal cov->size 19585, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
-----executor 1 collect shmids 23
----- directly resend shmid 23
----- executor 3 write_call_output, size 10000, pid 4742, write pid:4743
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 2, 0
execute_one time: 0, 11
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15704, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31415, flag collect 0
executor 2 write_server_output
time breakdown 3: 57, 11, 0
before receive testcase: 0 1
----- executor 1 signal number : 2617
----- executor 1 executes write_coverage_signal cov->size 14211, flag collect 0
----- executor 0 signal number : 2727
----- executor 0 executes write_coverage_signal cov->size 15652, flag collect 0
----- executor 1 signal number : 1128
----- executor 1 executes write_coverage_signal cov->size 1572, flag collect 0
----- executor 1 signal number : 276
----- executor 1 executes write_coverage_signal cov->size 1401, flag collect 0
----- executor 1 signal number : 80
----- executor 0 signal number : 972
----- executor 0 executes write_coverage_signal cov->size 3144, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 122
----- executor 0 signal number : 340
----- executor 0 executes write_coverage_signal cov->size 2751, flag collect 0
----- executor 0 signal number : 72
executor 1 server cover_cnt 5 output_pos_value 4239
executor 0 server cover_cnt 4 output_pos_value 4124
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 55, 13, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
2023/03/01 22:07:33 for select break: 1
time breakdown 1: 54, 14, 0
before receive testcase: 0 1
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 68
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2617 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 2727 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x68041, 0x10)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2266
time breakdown 2: 55, 15, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2267 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2267
current dir: executor 4: /root/orangefs-client/dfs-0-2267
receive_execute: 3, 34
receive_execute: 5, 34
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 34
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 35
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 6832, pid 4744, write pid:4745
----- executor 3 executes write_coverage_signal cov->size 6832, flag collect 0
----- executor 3 signal number : 2067
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
receive_execute: 11, 53
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 64, 2, 0
before receive testcase: 0 0
-----executor 2 collect shmids 23
----- directly resend shmid 23
----- executor 3 write_call_output, size 0, pid 4744, write pid:4745
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 30, 3, 0
execute_one time: 1, 33
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31114, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15939, flag collect 0
----- executor 2 signal number : 2629
----- executor 2 executes write_coverage_signal cov->size 14245, flag collect 0
----- executor 0 signal number : 2764
----- executor 0 executes write_coverage_signal cov->size 15387, flag collect 0
----- executor 2 signal number : 1128
----- executor 2 executes write_coverage_signal cov->size 2202, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1455, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 2 signal number : 122
----- executor 0 signal number : 959
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 2801, flag collect 0
----- executor 0 signal number : 77
executor 2 server cover_cnt 5 output_pos_value 4262
executor 0 server cover_cnt 4 output_pos_value 4154
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 36, 35, 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 37, 36, 0
time breakdown 3: 39, 34, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 71
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:33 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 2629 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 2067 signal and 0 cover from executor 3
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
time breakdown 1: 37, 37, 0
before receive testcase: 0 0
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 2764 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 959 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- splice()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2362 lsetxattr$trusted_overlay_redirect lsetxattr$trusted_overlay_redirect
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 187 faccessat faccessat
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 2
2023/03/01 22:07:33 prog length: 3
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
lsetxattr$trusted_overlay_redirect(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='./file0\x00', 0x8, 0x3)
r0 = dup(0xffffffffffffffff)
faccessat(r0, &(0x7f00000000c0)='./file0\x00', 0x4)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 504
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2267
remove dir time 28
-----finish removing dir
mkdir time 7
executor 3 create dir /root/orangefs-client/dfs-0-2268 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2268
receive_execute: 1, 37
current dir: executor 4: /root/orangefs-client/dfs-0-2268
receive_execute: 3, 37
receive_execute: 2, 38
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 6, 36
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 17, 41
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7626, pid 4988, write pid:4989
----- executor 4 executes write_coverage_signal cov->size 7626, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4988, write pid:4989
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4988, write pid:4989
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19587, pid 4746, write pid:4747
----- executor 3 executes write_coverage_signal cov->size 19587, flag collect 0
----- executor 3 signal number : 3078
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 5, 3, 0
execute_one time: 0, 8
-----executor 1 collect shmids 24
----- directly resend shmid 24
----- executor 3 write_call_output, size 9992, pid 4746, write pid:4747
----- executor 3 executes write_coverage_signal cov->size 9992, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 58, 9, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 13, 4, 0
execute_one time: 0, 17
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 25806, flag collect 0
time breakdown 3: 42, 18, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 2678
----- executor 1 executes write_coverage_signal cov->size 17700, flag collect 0
----- executor 0 signal number : 2760
----- executor 0 executes write_coverage_signal cov->size 19148, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 2358, flag collect 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 992
----- executor 0 executes write_coverage_signal cov->size 3930, flag collect 0
----- executor 1 signal number : 276
----- executor 1 executes write_coverage_signal cov->size 2291, flag collect 0
----- executor 0 signal number : 344
----- executor 0 executes write_coverage_signal cov->size 3682, flag collect 0
time breakdown 2: 40, 20, 0
before receive testcase: 0 0
----- executor 1 signal number : 77
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 72
----- executor 1 signal number : 122
executor 0 server cover_cnt 4 output_pos_value 4181
executor 1 server cover_cnt 5 output_pos_value 4294
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 38, 21, 0
before receive testcase: 0 0
2023/03/01 22:07:33 for select break: 1
2023/03/01 22:07:33 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:33 wg wait finish
2023/03/01 22:07:33 ------ all executors finish execution
2023/03/01 22:07:33 exec time: 59
2023/03/01 22:07:33 ----- PS len: 5
2023/03/01 22:07:33 [CLIENT] executor 4 has 3 replies
2023/03/01 22:07:33 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:33 fuzzer receive 0 signal and 0 cover from executor 4
time breakdown 0: 40, 21, 0
2023/03/01 22:07:33 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 2678 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:33 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:33 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:33 fuzzer receive 3078 signal and 0 cover from executor 3
2023/03/01 22:07:33 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:33 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 2760 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 992 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 344 signal and 0 cover from userspace component
2023/03/01 22:07:33 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:33 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:33 NetFailure, Node crash: false false
2023/03/01 22:07:33 mutate testcase with failures
2023/03/01 22:07:33 ----- mutateArg()
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 248 fstat fstat
2023/03/01 22:07:33 ----- insertCall()
2023/03/01 22:07:33 ----- generateCall 2781 readlinkat readlinkat
2023/03/01 22:07:33 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:33 prog length: 5
2023/03/01 22:07:33 HasCrashFail:false HasNetFail:false
22:07:33 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x68041, 0x100)
r1 = dup2(r0, r0)
fstat(r1, &(0x7f0000000080))
write(r0, &(0x7f0000000000)="c2", 0x1)
readlinkat(r0, &(0x7f0000000100)='./file0\x00', &(0x7f0000000140)=""/118, 0x76)
---
---

end of program
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 704
remove dir: /root/orangefs-client/dfs-0-2268
----- executor 4 receive testcase
executor 4: prog_data_offset 2040, prog_size 8
remove dir time 24
-----finish removing dir
receive_execute: 2, 56
receive_execute: 3, 56
current dir: executor 4: /root/orangefs-client/dfs-0-2269
mkdir time 32
executor 3 create dir /root/orangefs-client/dfs-0-2269 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2269
receive_execute: 5, 56
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 4, 56
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 0
receive_execute: 11, 76
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 87, 2, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19828, pid 4748, write pid:4749
----- executor 3 executes write_coverage_signal cov->size 19828, flag collect 0
----- executor 3 signal number : 3087
----- completed 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4748, write pid:4749
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 12012, pid 4748, write pid:4749
----- executor 3 executes write_coverage_signal cov->size 12012, flag collect 0
----- executor 3 signal number : 430
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
-----executor 2 collect shmids 24
----- directly resend shmid 24
----- executor 3 write_call_output, size 10000, pid 4748, write pid:4749
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 825
----- completed 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4748, write pid:4749
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
-----executor 2 collect shmids 25
----- directly resend shmid 25
executor 3, execute_one inner time: 33, 1, 7
execute_one time: 1, 41
executor 2 write_server_output
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 61, 43, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2096, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 698, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
----- executor 1 signal number : 2738
----- executor 1 executes write_coverage_signal cov->size 17871, flag collect 0
----- executor 1 signal number : 970
----- executor 1 executes write_coverage_signal cov->size 3554, flag collect 0
----- executor 1 signal number : 340
----- executor 1 executes write_coverage_signal cov->size 3045, flag collect 0
----- executor 1 signal number : 76
----- executor 2 executes write_coverage_signal cov->size 19197, flag collect 0
----- executor 2 signal number : 2656
----- executor 2 executes write_coverage_signal cov->size 14054, flag collect 0
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 2385, flag collect 0
----- executor 2 signal number : 295
----- executor 2 executes write_coverage_signal cov->size 1587, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 2 signal number : 122
----- executor 2 executes write_coverage_signal cov->size 781, flag collect 0
----- executor 2 signal number : 1
executor 2 server cover_cnt 6 output_pos_value 4299
2023/03/01 22:07:34 for select break: 1
executor 1 server cover_cnt 4 output_pos_value 4137
time breakdown 2: 60, 44, 0
before receive testcase: 0 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 59, 46, 0
2023/03/01 22:07:34 wg wait finish
before receive testcase: 0 0
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 102
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:34 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:34 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:34 fuzzer receive 3087 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 2738 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 2656 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 970 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 430 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:34 fuzzer receive 825 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 295 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
time breakdown 0: 58, 45, 0
before receive testcase: 0 1
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- splice()
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 2458 open open
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 prog length: 1
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
open(&(0x7f0000000000)='./file0\x00', 0x210483, 0x1a2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2269
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 144
remove dir time 28
-----finish removing dir
receive_execute: 3, 38
current dir: executor 4: /root/orangefs-client/dfs-0-2270
receive_execute: 1, 39
receive_execute: 3, 38
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2270 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2270
receive_execute: 4, 39
receive_execute: 25, 45
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7762, pid 4992, write pid:4993
----- executor 4 executes write_coverage_signal cov->size 7762, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 7, 1, 0
execute_one time: 1, 8
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
time breakdown 4: 70, 10, 0
before receive testcase: 0 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7061, pid 4751, write pid:4752
----- executor 3 executes write_coverage_signal cov->size 7061, flag collect 0
----- executor 3 signal number : 2074
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
-----executor 1 collect shmids 25
----- directly resend shmid 25
----- executor 3 write_call_output, size 10008, pid 4751, write pid:4752
----- executor 3 executes write_coverage_signal cov->size 10008, flag collect 0
----- executor 3 signal number : 1089
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 22, 2, 0
execute_one time: 19, 24
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 43, 44, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15781, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4563, flag collect 0
----- executor 1 signal number : 2623
----- executor 1 executes write_coverage_signal cov->size 14314, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 2 signal number : 2457
----- executor 2 executes write_coverage_signal cov->size 20724, flag collect 0
----- executor 1 signal number : 1128
----- executor 1 executes write_coverage_signal cov->size 1992, flag collect 0
----- executor 2 signal number : 979
----- executor 2 executes write_coverage_signal cov->size 4323, flag collect 0
----- executor 2 signal number : 346
----- executor 2 executes write_coverage_signal cov->size 3855, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1455, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 1 signal number : 122
executor 1 server cover_cnt 5 output_pos_value 4256
----- executor 2 signal number : 76
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 3871
2023/03/01 22:07:34 for select break: 1
time breakdown 1: 40, 45, 0
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 41, 46, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 85
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:34 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 41, 47, 0
before receive testcase: 0 0
2023/03/01 22:07:34 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 2457 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 979 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 346 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 2623 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:34 fuzzer receive 2074 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 fuzzer receive 1089 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 2462 openat openat
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 259 getdents64 getdents64
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 258 getdents getdents
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 220 flock flock
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 prog length: 12
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x0, 0x0)
r1 = openat(0xffffffffffffff9c, &(0x7f00000010c0)='./file0\x00', 0x400000, 0x110)
fcntl$setownex(r0, 0xf, &(0x7f0000000040))
getdents64(r1, &(0x7f0000000080)=""/186, 0xba)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000003340)=ANY=[@ANYBLOB=""], 0x1014)
r2 = fcntl$dupfd(r1, 0x0, 0xffffffffffffffff)
r3 = open(&(0x7f0000000140)='./file0\x00', 0x40000, 0x2)
getdents(r3, &(0x7f0000000180)=""/210, 0xd2)
fsetxattr$security_selinux(r2, &(0x7f0000001100), &(0x7f0000001140)='system_u:object_r:apm_bios_t:s0\x00', 0x20, 0x2)
flock(r2, 0x4)
r4 = openat(0xffffffffffffffff, &(0x7f0000000280)='./file0\x00', 0x20000, 0x10)
write$binfmt_elf32(r4, &(0x7f00000021c0)={{0x7f, 0x45, 0x4c, 0x46, 0xa0, 0x80, 0x3, 0x73, 0x3, 0x3, 0x3, 0x40, 0x32d, 0x38, 0x24c, 0x4, 0x862d, 0x20, 0x2, 0x3, 0x400, 0xb62d}, [{0x6474e551, 0x400, 0x9, 0x7fffffff, 0x8, 0x3, 0x3589, 0xffff7fff}, {0x7, 0x6, 0xfffffffb, 0x1, 0x1f, 0x200, 0x1f8000, 0x1}], "", ['\x00']}, 0x1178)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2270
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 11888
remove dir time 57
-----finish removing dir
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-2271 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2271
current dir: executor 4: /root/orangefs-client/dfs-0-2271
receive_execute: 4, 83
receive_execute: 4, 82
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 83
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 34, 88
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7859, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 7859, flag collect 0
----- executor 4 signal number : 2073
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 7859, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 7859, flag collect 0
----- executor 4 signal number : 15
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 4 signal number : 0
----- completed 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 4994, write pid:4995
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
receive_execute: 6, 93
cover_reset in execute_call
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 4, 3, 0
execute_one time: 1, 7
time breakdown 4: 122, 9, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19585, pid 4753, write pid:4754
----- executor 3 executes write_coverage_signal cov->size 19585, flag collect 0
----- executor 3 signal number : 3067
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
-----executor 0 collect shmids 27
----- directly resend shmid 27
----- executor 3 write_call_output, size 10008, pid 4753, write pid:4754
----- executor 3 executes write_coverage_signal cov->size 10008, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 2, 0
execute_one time: 0, 20
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20304, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 2886
----- executor 0 executes write_coverage_signal cov->size 16046, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 1 signal number : 1966
----- executor 1 executes write_coverage_signal cov->size 24077, flag collect 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 2385, flag collect 0
time breakdown 2: 86, 33, 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1933, flag collect 0
----- executor 0 signal number : 83
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 124
----- executor 1 signal number : 952
----- executor 1 executes write_coverage_signal cov->size 5529, flag collect 0
time breakdown 3: 99, 22, 0
before receive testcase: 0 0
----- executor 1 signal number : 360
----- executor 1 executes write_coverage_signal cov->size 4593, flag collect 0
executor 0 server cover_cnt 5 output_pos_value 4582
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3367
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 117
2023/03/01 22:07:34 ----- PS len: 5
time breakdown 1: 88, 34, 0
before receive testcase: 0 1
2023/03/01 22:07:34 [CLIENT] executor 4 has 12 replies
2023/03/01 22:07:34 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:34 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 2886 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1187 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
time breakdown 0: 87, 34, 0
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:34 fuzzer receive 3067 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 954 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:34 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 1966 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 952 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 360 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
before receive testcase: 0 0
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 15 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 2358 lsetxattr$system_posix_acl lsetxattr$system_posix_acl
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 233 fsetxattr$security_evm fsetxattr$security_evm
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 8
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
fstat(0xffffffffffffffff, &(0x7f0000000100)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
r1 = open(&(0x7f0000000180)='./file0\x00', 0x400440, 0x4)
r2 = dup(r1)
fstat(r2, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='system.posix_acl_default\x00', &(0x7f0000000200)={{}, {0x1, 0x1}, [{0x2, 0x4, r0}], {0x4, 0x4}, [{0x8, 0x5, r3}, {0x8, 0x0, 0xee00}, {0x8, 0x0, 0xee00}], {0x10, 0x1}, {0x20, 0x7}}, 0x44, 0x1)
fsetxattr$security_evm(r2, &(0x7f00000001c0), &(0x7f0000000280)=@v2={0x6, 0x3, 0xe, 0xfffff46a, 0x1f, "1ee6c43691cb314841ec12c8fa4cfd64973b800ce9e2fee42ecbf8956ca9ec"}, 0x28, 0x2)
r4 = open(&(0x7f0000000040)='./file0\x00', 0x6a141, 0x10)
write(r4, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 3856, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2520
remove dir: /root/orangefs-client/dfs-0-2271
remove dir time 35
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2272 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2272
receive_execute: 4, 48
receive_execute: 4, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2272
receive_execute: 6, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 5, 48
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 7061, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 7061, flag collect 0
----- executor 3 signal number : 2074
----- completed 5
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 24, 68
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 92, 5, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19585, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 19585, flag collect 0
----- executor 3 signal number : 1019
----- completed 7
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 0 collect shmids 28
----- directly resend shmid 28
----- executor 3 write_call_output, size 10008, pid 4755, write pid:4756
----- executor 3 executes write_coverage_signal cov->size 10008, flag collect 0
----- executor 3 signal number : 956
----- completed 8
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 44, 2, 0
execute_one time: 0, 46
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 54, 47, 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 20408, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 2888
----- executor 0 executes write_coverage_signal cov->size 16240, flag collect 0
----- executor 1 signal number : 2722
----- executor 1 executes write_coverage_signal cov->size 19398, flag collect 0
----- executor 0 signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 2620, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1987, flag collect 0
----- executor 0 signal number : 83
----- executor 1 signal number : 976
----- executor 1 executes write_coverage_signal cov->size 4157, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 124
----- executor 1 signal number : 343
----- executor 1 executes write_coverage_signal cov->size 3270, flag collect 0
executor 0 server cover_cnt 5 output_pos_value 4584
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4130
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 52, 50, 0
before receive testcase: 0 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 98
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:34 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:34 [CLIENT] executor 3 has 8 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
time breakdown 1: 52, 50, 0
before receive testcase: 0 0
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 2888 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1187 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
2023/03/01 22:07:34 [SERVER] executor 1 has 4 replies
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 2722 signal and 0 cover from userspace component
time breakdown 2: 65, 37, 0
before receive testcase: 0 0
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 2074 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 1019 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 976 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 343 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x169043, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2272
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 24
executor 3 create dir /root/orangefs-client/dfs-0-2273 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2273
receive_execute: 12, 56
receive_execute: 12, 57
executor 1 before execute_one
receive_execute: 15, 57
executor 0 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
cover_reset in execute_call
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 19619, pid 4758, write pid:4759
----- executor 3 executes write_coverage_signal cov->size 19619, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4758, write pid:4759
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 14, 56
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 2, 0
execute_one time: 0, 10
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 72, 10, 0
before receive testcase: 0 1
current dir: executor 4: /root/orangefs-client/dfs-0-2273
receive_execute: 37, 78
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 4: 115, 5, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 11837, flag collect 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
----- executor 0 signal number : 2044
----- executor 0 executes write_coverage_signal cov->size 14269, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 1140
----- executor 1 signal number : 2728
----- executor 1 executes write_coverage_signal cov->size 17995, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1389, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 1269, flag collect 0
----- executor 0 signal number : 79
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 956
----- executor 1 executes write_coverage_signal cov->size 3537, flag collect 0
time breakdown 2: 79, 19, 0
executor 0 server cover_cnt 4 output_pos_value 3562
----- executor 1 signal number : 343
----- executor 1 executes write_coverage_signal cov->size 3003, flag collect 0
----- executor 1 signal number : 72
executor 1 server cover_cnt 4 output_pos_value 4112
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 69, 29, 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 86
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 2044 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:34 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 2728 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 956 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 343 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:34 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 4
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000040)="e3ceb56f213f18940ece715116dcb557b43f121c50d33d2ce80e944df08821899e993a6f5b1987d2432595cef8fb3eb1542c6c40e2c1f366f8cf0795ee55534ca84242638370b88cb1feea6a06000000b6f8eafe3c0ff5ae", 0x58)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000000000), &(0x7f00000000c0)={0x0, 0xfb, 0x94, 0x0, 0x40, "d88f84fbbf00419edbc0e8d5959aa8e6", "bc12f46d0d3f87f37e471c6f44ce8532b6c20092e9e94b83e9627171f273f91eab9d187774bdeb25899fa0b798a171b1cbcf6370eb4458f0bc60320c41c69779f82c22d5db0f0124af1b38db71a1f37ebf68d22d8d7fccb57e38756360c01009fab240c8330142971cbfa2454f9da0e57cb4cc0995b05e207f2dbe139ae18e"}, 0x94, 0x1)
fcntl$getown(r0, 0x9)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1112
remove dir: /root/orangefs-client/dfs-0-2273
----- executor 4 receive testcase
executor 4: prog_data_offset 2448, prog_size 8
time breakdown 1: 68, 30, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 27
-----finish removing dir
receive_execute: 4, 47
mkdir time 20
executor 3 create dir /root/orangefs-client/dfs-0-2274 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2274
receive_execute: 2, 48
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 21, 48
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 47
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2274
----- executor 3 write_call_output, size 19637, pid 4760, write pid:4761
----- executor 3 executes write_coverage_signal cov->size 19637, flag collect 0
----- executor 3 signal number : 3083
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
-----executor 2 collect shmids 26
----- directly resend shmid 26
----- executor 3 write_call_output, size 10279, pid 4760, write pid:4761
----- executor 3 executes write_coverage_signal cov->size 10279, flag collect 0
----- executor 3 signal number : 972
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4760, write pid:4761
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4760, write pid:4761
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
receive_execute: 5, 69
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 4: 77, 1, 0
before receive testcase: 0 0
cover_reset in execute_call
-----executor 2 collect shmids 27
----- directly resend shmid 27
execute_one loop: 0, 0, 7
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 10, 0
execute_one time: 0, 33
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 69, 34, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 3353
----- executor 2 executes write_coverage_signal cov->size 32164, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 49, 36, 0
before receive testcase: 0 0
time breakdown 0: 50, 36, 0
before receive testcase: 0 0
----- executor 2 signal number : 1286
----- executor 2 executes write_coverage_signal cov->size 4716, flag collect 0
----- executor 2 signal number : 304
----- executor 2 executes write_coverage_signal cov->size 4422, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 2 signal number : 137
----- executor 2 executes write_coverage_signal cov->size 781, flag collect 0
----- executor 2 signal number : 8
executor 2 server cover_cnt 6 output_pos_value 5185
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 85
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 3353 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 1286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 304 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 137 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:34 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 972 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 9
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x171041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
fstat(r0, &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000280)='./file0\x00', &(0x7f00000002c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
stat(&(0x7f0000000340)='./file0\x00', &(0x7f0000000380)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
stat(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f0000000080)='system.posix_acl_default\x00', &(0x7f00000004c0)={{}, {0x1, 0x4}, [{}, {0x2, 0x0, 0xee00}, {0x2, 0x1, r1}, {0x2, 0x1, r2}, {0x2, 0x6, r3}, {0x2, 0x4, 0xee01}, {0x2, 0x7, 0xee00}, {0x2, 0x4, r4}, {0x2, 0x7, 0xffffffffffffffff}], {0x4, 0x4}, [{0x8, 0x4, r5}, {0x8, 0x1, r6}, {0x8, 0x4, 0xffffffffffffffff}], {0x10, 0x1}, {0x20, 0x5}}, 0x84, 0x2)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3472
remove dir: /root/orangefs-client/dfs-0-2274
time breakdown 2: 51, 37, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 4808, prog_size 8
remove dir time 39
-----finish removing dir
receive_execute: 1, 65
receive_execute: 3, 65
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-2275 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2275
current dir: executor 4: /root/orangefs-client/dfs-0-2275
receive_execute: 4, 65
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 13, 77
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 90, 1, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19623, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 19623, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4824, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 4824, flag collect 0
----- executor 3 signal number : 46
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4824, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 4824, flag collect 0
----- executor 3 signal number : 34
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4824, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 4824, flag collect 0
----- executor 3 signal number : 34
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4763, write pid:4764
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 21, 2, 0
execute_one time: 0, 23
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2737
----- executor 2 executes write_coverage_signal cov->size 30267, flag collect 0
----- executor 2 signal number : 1242
----- executor 2 executes write_coverage_signal cov->size 3554, flag collect 0
----- executor 2 signal number : 303
----- executor 2 executes write_coverage_signal cov->size 3560, flag collect 0
----- executor 2 signal number : 79
executor 2 server cover_cnt 4 output_pos_value 4374
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 0: 67, 32, 0
----- executor 1 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 420, flag collect 0
time breakdown 3: 69, 30, 0
before receive testcase: 0 1
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 66, 33, 0
before receive testcase: 0 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 98
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:34 [CLIENT] executor 3 has 9 replies
2023/03/01 22:07:34 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:34 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:34 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 2737 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 1242 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 303 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 79 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 46 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 243 fsetxattr$trusted_overlay_upper fsetxattr$trusted_overlay_upper
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = open(&(0x7f0000000000)='./file0\x00', 0x400000, 0x130)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000000040), &(0x7f0000000080)=ANY=[@ANYBLOB="00fb810480c4316892ac52ccd7981bf6f20cab9fc18f069e8a95e6a8b9cae6a0ccce4a9b5291b56600acc9f989f3606a9c8a4b20db2d97481d0500db14faf4029553e14c8a721e9454130fb709c4b1c81afdeee1bf019bd1f8012b57c78a8010bf8789f8a2a37648d95cff0ee055702eb4b079b922f700732d1476b8d4cd0605cb"], 0x81, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2275
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 68, 33, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 536
remove dir time 69
-----finish removing dir
mkdir time 11
executor 3 create dir /root/orangefs-client/dfs-0-2276 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2276
receive_execute: 3, 80
receive_execute: 1, 81
current dir: executor 4: /root/orangefs-client/dfs-0-2276
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 20, 84
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5001, write pid:5002
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5001, write pid:5002
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 104, 1, 0
receive_execute: 2, 80
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
before receive testcase: 0 0
receive_execute: 4, 87
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19629, pid 4766, write pid:4767
----- executor 3 executes write_coverage_signal cov->size 19629, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
-----executor 2 collect shmids 28
----- directly resend shmid 28
----- executor 3 write_call_output, size 10000, pid 4766, write pid:4767
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 19, 10, 0
execute_one time: 1, 29
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31907, flag collect 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 15832, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
----- executor 2 signal number : 2621
----- executor 2 executes write_coverage_signal cov->size 14138, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2732
----- executor 0 executes write_coverage_signal cov->size 15818, flag collect 0
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 2202, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1509, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 122
----- executor 0 signal number : 972
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 2805, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 4251
----- executor 0 signal number : 76
time breakdown 3: 91, 30, 0
before receive testcase: 0 1
executor 0 server cover_cnt 4 output_pos_value 4134
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
time breakdown 1: 82, 38, 0
before receive testcase: 0 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 86, 35, 0
before receive testcase: 0 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 120
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 2732 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:34 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 2621 signal and 0 cover from userspace component
time breakdown 0: 83, 40, 0
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2276
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 17
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-2277 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2277
receive_execute: 4, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2277
receive_execute: 2, 32
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 3, 31
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19597, pid 4768, write pid:4769
----- executor 3 executes write_coverage_signal cov->size 19597, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
receive_execute: 36, 48
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
time breakdown 4: 84, 3, 0
before receive testcase: 0 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
-----executor 1 collect shmids 26
----- directly resend shmid 26
----- executor 3 write_call_output, size 10250, pid 4768, write pid:4769
----- executor 3 executes write_coverage_signal cov->size 10250, flag collect 0
----- executor 3 signal number : 965
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 27, 4, 0
execute_one time: 0, 31
time breakdown 3: 37, 32, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4567, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 2917
----- executor 1 executes write_coverage_signal cov->size 32280, flag collect 0
time breakdown 0: 33, 33, 0
----- executor 1 signal number : 1253
----- executor 1 executes write_coverage_signal cov->size 4533, flag collect 0
----- executor 1 signal number : 312
----- executor 1 executes write_coverage_signal cov->size 4104, flag collect 0
----- executor 1 signal number : 82
----- executor 1 executes write_coverage_signal cov->size 1921, flag collect 0
----- executor 1 signal number : 133
executor 1 server cover_cnt 5 output_pos_value 4713
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
time breakdown 2: 34, 34, 0
before receive testcase: 0 1
time breakdown 1: 36, 34, 0
before receive testcase: 0 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 69
2023/03/01 22:07:34 ----- PS len: 5
2023/03/01 22:07:34 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:34 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 2917 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 1253 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 312 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 82 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:34 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:34 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 965 signal and 0 cover from executor 3
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 2354 lsetxattr$security_ima lsetxattr$security_ima
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 prog length: 1
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
lsetxattr$security_ima(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=@v2={0x3, 0x0, 0x0, 0x9, 0x3f, "9620b343409437691f1856e2f91d7c318c0fca33a9a8bc067208cfaa6c04715c5f992f65427111ef5858822b79ded95fb4b9ccd04957b3769e141151cf40c0"}, 0x48, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2277
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 536
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 48
-----finish removing dir
mkdir time 29
executor 3 create dir /root/orangefs-client/dfs-0-2278 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2278
current dir: executor 4: /root/orangefs-client/dfs-0-2278
receive_execute: 5, 77
receive_execute: 5, 76
receive_execute: 3, 77
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
receive_execute: 6, 77
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 4, 1
receive_execute: 20, 88
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 13041, pid 5004, write pid:5005
----- executor 4 executes write_coverage_signal cov->size 13041, flag collect 0
----- executor 4 signal number : 2731
----- completed 1
execute_one loop: 0, 0, 3
----- executor 3 write_call_output, size 19911, pid 4770, write pid:4771
----- executor 3 executes write_coverage_signal cov->size 19911, flag collect 0
----- executor 3 signal number : 3139
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 4, execute_one inner time: 4, 5, 0
execute_one time: 1, 9
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 108, 10, 0
before receive testcase: 0 0
-----executor 0 collect shmids 29
----- directly resend shmid 29
----- executor 3 write_call_output, size 10000, pid 4770, write pid:4771
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 23, 3, 0
execute_one time: 0, 26
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 83, 26, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 33, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2850
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1267
----- executor 0 executes write_coverage_signal cov->size 4716, flag collect 0
----- executor 0 signal number : 302
----- executor 0 executes write_coverage_signal cov->size 4849, flag collect 0
----- executor 0 signal number : 80
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 135
executor 0 server cover_cnt 5 output_pos_value 4650
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:34 for select break: 1
2023/03/01 22:07:34 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:34 wg wait finish
2023/03/01 22:07:34 ------ all executors finish execution
2023/03/01 22:07:34 exec time: 106
2023/03/01 22:07:34 ----- PS len: 5
time breakdown 1: 80, 28, 0
before receive testcase: 0 1
2023/03/01 22:07:34 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:34 fuzzer receive 2731 signal and 0 cover from executor 4
2023/03/01 22:07:34 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:34 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:34 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
time breakdown 0: 82, 29, 0
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 2850 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 1267 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 302 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 0 receive 135 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:34 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:34 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:34 fuzzer receive 3139 signal and 0 cover from executor 3
2023/03/01 22:07:34 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:34 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:34 NetFailure, Node crash: false false
2023/03/01 22:07:34 mutate testcase with failures
2023/03/01 22:07:34 ----- insertCall()
2023/03/01 22:07:34 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/01 22:07:34 ----- mutateArg()
2023/03/01 22:07:34 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:34 prog length: 2
2023/03/01 22:07:34 prog length: 1
2023/03/01 22:07:34 HasCrashFail:false HasNetFail:false
22:07:34 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
setxattr$smack_xattr_label(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='security.SMACK64IPIN\x00', &(0x7f00000004c0)=ANY=[@ANYRESDEC], 0x4, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2278
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 81, 29, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 288
remove dir time 34
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2279 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2279
receive_execute: 1, 44
receive_execute: 2, 43
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 0
receive_execute: 4, 44
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19597, pid 4772, write pid:4773
----- executor 3 executes write_coverage_signal cov->size 19597, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
-----executor 2 collect shmids 29
----- directly resend shmid 29
----- executor 3 write_call_output, size 0, pid 4772, write pid:4773
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-2279
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 9, 2, 0
execute_one time: 0, 11
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 48, 12, 0
before receive testcase: 0 0
receive_execute: 2, 44
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 9, 64
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 12873, pid 5006, write pid:5007
----- executor 4 executes write_coverage_signal cov->size 12873, flag collect 0
----- executor 4 signal number : 2743
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 6, 1, 0
execute_one time: 2, 7
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 73, 9, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 37, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2072, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 644, flag collect 0
----- executor 0 signal number : 77
----- executor 2 signal number : 3364
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1286
----- executor 2 executes write_coverage_signal cov->size 5109, flag collect 0
----- executor 2 signal number : 306
----- executor 2 executes write_coverage_signal cov->size 5281, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 2 signal number : 137
executor 2 server cover_cnt 5 output_pos_value 5187
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 76
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:35 fuzzer receive 2743 signal and 0 cover from executor 4
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 3364 signal and 0 cover from userspace component
time breakdown 2: 45, 33, 0
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 1286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 137 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
time breakdown 1: 49, 27, 0
before receive testcase: 0 0
executor 0 server cover_cnt 4 output_pos_value 2138
time breakdown 0: 45, 31, 0
before receive testcase: 0 0
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3764 symlink symlink
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 3
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
symlink(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)='./file0\x00')
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 456
remove dir: /root/orangefs-client/dfs-0-2279
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1792, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 27
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2280
receive_execute: 1, 59
receive_execute: 2, 60
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 32
executor 3 create dir /root/orangefs-client/dfs-0-2280 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2280
receive_execute: 21, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19611, pid 4774, write pid:4775
----- executor 3 executes write_coverage_signal cov->size 19611, flag collect 0
receive_execute: 4, 70
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 signal number : 3071
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
time breakdown 4: 74, 2, 0
before receive testcase: 0 1
2023/03/01 22:07:35 for select break: 1
----- executor 3 write_call_output, size 12015, pid 4774, write pid:4775
----- executor 3 executes write_coverage_signal cov->size 12015, flag collect 0
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
----- executor 3 signal number : 416
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
-----executor 0 collect shmids 30
----- directly resend shmid 30
----- executor 3 write_call_output, size 10016, pid 4774, write pid:4775
----- executor 3 executes write_coverage_signal cov->size 10016, flag collect 0
----- executor 3 signal number : 825
----- completed 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_one loop: 0, 0, 13
executor 3, execute_one inner time: 22, 14, 0
execute_one time: 0, 37
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
2023/03/01 22:07:35 for select break: 1
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 2855
----- executor 2 executes write_coverage_signal cov->size 17461, flag collect 0
----- executor 2 signal number : 970
----- executor 2 executes write_coverage_signal cov->size 3764, flag collect 0
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 2931, flag collect 0
----- executor 2 signal number : 76
executor 2 server cover_cnt 4 output_pos_value 4254
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 60, 46, 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3228
----- executor 0 executes write_coverage_signal cov->size 21308, flag collect 0
----- executor 0 signal number : 1213
----- executor 0 executes write_coverage_signal cov->size 3772, flag collect 0
----- executor 0 signal number : 305
----- executor 0 executes write_coverage_signal cov->size 3194, flag collect 0
----- executor 0 signal number : 80
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 128
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 6 output_pos_value 4977
time breakdown 0: 62, 43, 0
before receive testcase: 0 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 109
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:35 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2855 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 970 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 3071 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 416 signal and 0 cover from executor 3
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 0 has 6 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 3228 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1213 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 128 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
time breakdown 1: 63, 49, 0
before receive testcase: 0 0
2023/03/01 22:07:35 fuzzer receive 825 signal and 0 cover from executor 3
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 214 fcntl$setsig fcntl$setsig
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
fcntl$setsig(0xffffffffffffffff, 0xa, 0x19)
lgetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.redirect\x00', &(0x7f0000000080)=""/4096, 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 328
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 84, 37, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2280
remove dir time 61
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-2281 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2281
receive_execute: 1, 80
receive_execute: 5, 79
receive_execute: 7, 80
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
receive_execute: 13, 77
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2281
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 38, 86
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5009, write pid:5010
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7885, pid 5009, write pid:5010
----- executor 4 executes write_coverage_signal cov->size 7885, flag collect 0
----- executor 4 signal number : 2073
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 3, 0, 0
execute_one time: 0, 3
2023/03/01 22:07:35 for select break: 1
time breakdown 4: 125, 5, 0
before receive testcase: 0 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 19635, pid 4777, write pid:4778
----- executor 3 executes write_coverage_signal cov->size 19635, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 2 collect shmids 30
----- directly resend shmid 30
----- executor 3 write_call_output, size 10045, pid 4777, write pid:4778
----- executor 3 executes write_coverage_signal cov->size 10045, flag collect 0
----- executor 3 signal number : 960
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 18, 4, 0
execute_one time: 0, 22
cover_reset in execute_call
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 90, 22, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15832, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
----- executor 2 signal number : 2621
----- executor 2 executes write_coverage_signal cov->size 14135, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 signal number : 1128
----- executor 2 executes write_coverage_signal cov->size 1782, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1401, flag collect 0
----- executor 2 signal number : 80
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 122
----- executor 1 signal number : 2591
----- executor 1 executes write_coverage_signal cov->size 20937, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 4253
time breakdown 0: 87, 24, 0
before receive testcase: 0 1
----- executor 1 signal number : 980
----- executor 1 executes write_coverage_signal cov->size 4323, flag collect 0
----- executor 1 signal number : 346
----- executor 1 executes write_coverage_signal cov->size 3801, flag collect 0
----- executor 1 signal number : 72
executor 1 server cover_cnt 4 output_pos_value 4002
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 81, 26, 0
before receive testcase: 0 0
time breakdown 2: 84, 25, 0
before receive testcase: 0 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 107
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2621 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 2591 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 980 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 346 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 960 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:35 fuzzer receive 2073 signal and 0 cover from executor 4
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 prog length: 1
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
setxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)={'L-', 0x4}, 0xffffffffffffff09, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2281
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 328
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 23
-----finish removing dir
receive_execute: 2, 32
current dir: executor 4: /root/orangefs-client/dfs-0-2282
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2282 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2282
receive_execute: 6, 32
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 3 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
receive_execute: 4, 32
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 4, 32
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19669, pid 4779, write pid:4780
----- executor 3 executes write_coverage_signal cov->size 19669, flag collect 0
----- executor 3 signal number : 3085
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
receive_execute: 16, 39
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
-----executor 2 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 10045, pid 4779, write pid:4780
----- executor 3 executes write_coverage_signal cov->size 10045, flag collect 0
----- executor 3 signal number : 961
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 26
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 15, 26, 0
execute_one time: 1, 41
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 38, 42, 0
before receive testcase: 0 0
----- executor 4 write_call_output, size 13910, pid 5011, write pid:5012
----- executor 4 executes write_coverage_signal cov->size 13910, flag collect 0
----- executor 4 signal number : 2745
----- completed 1
execute_one loop: 0, 0, 36
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 4, execute_one inner time: 36, 5, 0
execute_one time: 1, 41
time breakdown 4: 55, 43, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 60, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 signal number : 140
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2092, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
time breakdown 0: 36, 52, 0
before receive testcase: 0 1
time breakdown 1: 34, 52, 0
before receive testcase: 0 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 85
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 fuzzer receive 3085 signal and 0 cover from executor 3
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2938 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 961 signal and 0 cover from executor 3
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 1248 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:35 fuzzer receive 2745 signal and 0 cover from executor 4
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x221c1, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2282
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 signal number : 2938
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1248
----- executor 2 executes write_coverage_signal cov->size 5546, flag collect 0
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 5215, flag collect 0
----- executor 2 signal number : 82
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 133
executor 2 server cover_cnt 5 output_pos_value 4730
time breakdown 2: 36, 52, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 1, 31
current dir: executor 4: /root/orangefs-client/dfs-0-2283
mkdir time 8
executor 3 create dir /root/orangefs-client/dfs-0-2283 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2283
receive_execute: 2, 31
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 11, 31
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 31
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19621, pid 4781, write pid:4782
----- executor 3 executes write_coverage_signal cov->size 19621, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
receive_execute: 4, 51
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
time breakdown 4: 55, 1, 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 1
-----executor 2 collect shmids 32
----- directly resend shmid 32
----- executor 3 write_call_output, size 10014, pid 4781, write pid:4782
----- executor 3 executes write_coverage_signal cov->size 10014, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 4, 0
execute_one time: 0, 33
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 42, 34, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4595, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 signal number : 2924
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1251
----- executor 2 executes write_coverage_signal cov->size 4540, flag collect 0
----- executor 2 signal number : 310
----- executor 2 executes write_coverage_signal cov->size 4522, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 2 signal number : 133
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 4712
time breakdown 0: 33, 36, 0
before receive testcase: 0 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 32, 37, 0
before receive testcase: 0 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 85
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2924 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 1251 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 310 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 2753 read read
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 4
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x800, 0x82)
read(r0, &(0x7f0000000080)=""/228, 0xe4)
r1 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r1, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 560
remove dir: /root/orangefs-client/dfs-0-2283
----- executor 4 receive testcase
executor 4: prog_data_offset 1896, prog_size 8
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 33, 54, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 25
-----finish removing dir
mkdir time 15
executor 3 create dir /root/orangefs-client/dfs-0-2284 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2284
receive_execute: 18, 41
receive_execute: 19, 40
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2284
receive_execute: 1, 40
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 40
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6823, pid 4783, write pid:4784
----- executor 3 executes write_coverage_signal cov->size 6823, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4783, write pid:4784
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 34, 45
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 79, 1, 0
----- executor 3 write_call_output, size 19597, pid 4783, write pid:4784
----- executor 3 executes write_coverage_signal cov->size 19597, flag collect 0
----- executor 3 signal number : 1022
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
before receive testcase: 0 0
-----executor 0 collect shmids 32
----- directly resend shmid 32
----- executor 3 write_call_output, size 10016, pid 4783, write pid:4784
----- executor 3 executes write_coverage_signal cov->size 10016, flag collect 0
----- executor 3 signal number : 954
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 0 collect shmids 33
----- directly resend shmid 33
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 10, 6, 0
execute_one time: 0, 16
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 61, 21, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 2865
----- executor 0 executes write_coverage_signal cov->size 30972, flag collect 0
time breakdown 2: 59, 22, 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1268
----- executor 0 executes write_coverage_signal cov->size 4716, flag collect 0
----- executor 0 signal number : 304
----- executor 0 executes write_coverage_signal cov->size 4628, flag collect 0
----- executor 0 signal number : 81
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 134
----- executor 0 executes write_coverage_signal cov->size 367, flag collect 0
----- executor 0 signal number : 4
before receive testcase: 0 0
executor 0 server cover_cnt 6 output_pos_value 4675
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 64
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:35 [SERVER] executor 0 has 6 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 2865 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1268 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 304 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 134 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:35 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:35 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 1022 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 12
----- executor 1 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 54, flag collect 0
----- executor 1 signal number : 43
executor 1 server cover_cnt 3 output_pos_value 205
time breakdown 1: 41, 22, 0
before receive testcase: 0 0
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000140)={{}, {0x1, 0x2}, [{0x2, 0x5}, {0x2, 0x6}, {0x2, 0x6, 0xee00}], {0x4, 0x2}, [{0x8, 0x3, 0xffffffffffffffff}, {}, {0x8, 0x4, 0xffffffffffffffff}, {0x8, 0x1}, {0x8, 0x4, 0xee01}, {0x8, 0x1, 0xee00}, {0x8, 0x5, r0}, {0x8, 0x1, 0xee00}, {0x8, 0x1, 0xee00}], {0x10, 0x2}, {0x20, 0x5}}, 0x84, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2284
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 2384
time breakdown 0: 59, 24, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 18
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2285 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2285
receive_execute: 3, 28
current dir: executor 4: /root/orangefs-client/dfs-0-2285
receive_execute: 3, 28
receive_execute: 4, 29
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 1, 29
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19668, pid 4786, write pid:4787
----- executor 3 executes write_coverage_signal cov->size 19668, flag collect 0
----- executor 3 signal number : 3077
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
receive_execute: 19, 35
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 10016, pid 4786, write pid:4787
----- executor 3 executes write_coverage_signal cov->size 10016, flag collect 0
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 14, 3, 0
execute_one time: 0, 17
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 33, 17, 0
before receive testcase: 0 0
-----executor 0 collect shmids 34
----- directly resend shmid 34
----- executor 4 write_call_output, size 18033, pid 5015, write pid:5016
----- executor 4 executes write_coverage_signal cov->size 18033, flag collect 0
----- executor 4 signal number : 2814
----- completed 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5015, write pid:5016
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 26, 8, 0
execute_one time: 7, 34
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 54, 41, 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2933
----- executor 0 executes write_coverage_signal cov->size 22926, flag collect 0
----- executor 2 signal number : 2732
----- executor 2 executes write_coverage_signal cov->size 19686, flag collect 0
----- executor 0 signal number : 1187
----- executor 0 executes write_coverage_signal cov->size 3537, flag collect 0
----- executor 2 signal number : 988
----- executor 2 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 276
----- executor 0 executes write_coverage_signal cov->size 4061, flag collect 0
----- executor 0 signal number : 83
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 3697, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 0 signal number : 124
----- executor 2 signal number : 76
executor 0 server cover_cnt 5 output_pos_value 4619
executor 2 server cover_cnt 4 output_pos_value 4153
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 30, 51, 0
before receive testcase: 0 0
time breakdown 1: 31, 53, 0
before receive testcase: 0 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 83
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:35 fuzzer receive 2814 signal and 0 cover from executor 4
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:35 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2732 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 fuzzer receive 3077 signal and 0 cover from executor 3
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 2933 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1187 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 124 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 988 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
time breakdown 2: 31, 53, 0
before receive testcase: 0 1
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3765 symlinkat symlinkat
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 250 fsync fsync
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3765 symlinkat symlinkat
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 212 fcntl$setownex fcntl$setownex
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 8
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
r1 = dup2(r0, r0)
fsync(r0)
symlinkat(&(0x7f0000000040)='./file0\x00', r1, &(0x7f0000000080)='./file0\x00')
symlinkat(&(0x7f00000000c0)='./file0/file0\x00', r1, &(0x7f0000000100)='./file0\x00')
write(r0, &(0x7f0000000000)="c2", 0x1)
r2 = openat(r1, &(0x7f0000000140)='./file0/file0\x00', 0x202002, 0x8)
fcntl$setownex(r2, 0xf, &(0x7f0000000180)={0x1})
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2632, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1296
remove dir: /root/orangefs-client/dfs-0-2285
remove dir time 25
-----finish removing dir
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-2286 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2286
receive_execute: 4, 45
receive_execute: 6, 44
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
current dir: executor 4: /root/orangefs-client/dfs-0-2286
receive_execute: 4, 45
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 39, 46
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19609, pid 4788, write pid:4789
----- executor 3 executes write_coverage_signal cov->size 19609, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4788, write pid:4789
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 4788, write pid:4789
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4788, write pid:4789
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4788, write pid:4789
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 27
----- directly resend shmid 27
receive_execute: 9, 67
----- executor 3 write_call_output, size 10258, pid 4788, write pid:4789
----- executor 3 executes write_coverage_signal cov->size 10258, flag collect 0
----- executor 3 signal number : 965
----- completed 6
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4788, write pid:4789
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4788, write pid:4789
execute_one time: 1, 0
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
time breakdown 4: 76, 1, 0
before receive testcase: 0 1
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
-----executor 1 collect shmids 28
----- directly resend shmid 28
cover_reset in execute_call
executor 3, execute_one inner time: 22, 4, 1
execute_one time: 0, 27
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
time breakdown 2: 49, 29, 0
before receive testcase: 0 0
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 50, 31, 0
before receive testcase: 0 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 80
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 1 has 6 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 2947 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 1250 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 314 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 82 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 8 replies
2023/03/01 22:07:35 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 965 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 201 fcntl$F_SET_RW_HINT fcntl$F_SET_RW_HINT
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 2359 lsetxattr$trusted_overlay_nlink lsetxattr$trusted_overlay_nlink
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 5
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100), &(0x7f0000000140)={'L-', 0x6}, 0x16, 0x1)
fcntl$F_SET_RW_HINT(r0, 0x40c, &(0x7f0000000040)=0x4)
fcntl$F_SET_RW_HINT(r0, 0x40c, &(0x7f0000000080)=0x1)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 85, 28, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/orangefs-client/dfs-0-2286
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2947
----- executor 1 executes write_coverage_signal cov->size 32209, flag collect 0
----- executor 1 signal number : 1250
----- executor 1 executes write_coverage_signal cov->size 4926, flag collect 0
----- executor 1 signal number : 314
----- executor 1 executes write_coverage_signal cov->size 4236, flag collect 0
----- executor 1 signal number : 82
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 133
----- executor 1 executes write_coverage_signal cov->size 788, flag collect 0
----- executor 1 signal number : 7
executor 1 server cover_cnt 6 output_pos_value 4752
time breakdown 1: 49, 35, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2280, prog_size 8
remove dir time 29
-----finish removing dir
receive_execute: 7, 39
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2287 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2287
receive_execute: 7, 39
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 6, 38
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2287
receive_execute: 2, 38
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19660, pid 4791, write pid:4792
----- executor 3 executes write_coverage_signal cov->size 19660, flag collect 0
----- executor 3 signal number : 3083
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 1 collect shmids 29
----- directly resend shmid 29
----- executor 3 write_call_output, size 10016, pid 4791, write pid:4792
----- executor 3 executes write_coverage_signal cov->size 10016, flag collect 0
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4791, write pid:4792
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4791, write pid:4792
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4791, write pid:4792
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 14, 58
cover_reset in execute_call
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
-----executor 1 collect shmids 30
----- directly resend shmid 30
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
time breakdown 4: 75, 1, 0
before receive testcase: 0 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 11, 0
execute_one time: 0, 31
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 46, 31, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 30850, flag collect 0
----- executor 0 signal number : 2739
----- executor 0 executes write_coverage_signal cov->size 15599, flag collect 0
----- executor 0 signal number : 954
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 340
----- executor 0 executes write_coverage_signal cov->size 2805, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4122
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 46, 32, 0
before receive testcase: 0 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 73
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 2739 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 954 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
time breakdown 0: 44, 34, 0
before receive testcase: 0 0
2023/03/01 22:07:35 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 3083 signal and 0 cover from executor 3
2023/03/01 22:07:35 [SERVER] executor 1 has 6 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 2658 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3665 setxattr$incfs_size setxattr$incfs_size
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 238 fsetxattr$system_posix_acl fsetxattr$system_posix_acl
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 prog length: 5
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = dup(0xffffffffffffffff)
stat(&(0x7f0000000100)='./file0\x00', &(0x7f0000000140)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
stat(&(0x7f00000001c0)='./file0\x00', &(0x7f0000000200)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fsetxattr$system_posix_acl(r0, &(0x7f00000000c0)='system.posix_acl_access\x00', &(0x7f0000000280)={{}, {0x1, 0x2}, [{0x2, 0x4, 0xee01}, {0x2, 0x3, 0xee01}, {0x2, 0x1, r1}, {}, {0x2, 0x1, 0xee00}, {0x2, 0x6}, {0x2, 0x2, 0xee01}], {}, [{0x8, 0x5, r2}, {0x8, 0x1, 0xee01}, {0x8, 0x1, 0xee00}, {0x8, 0x4}], {0x10, 0x2}, {0x20, 0x2}}, 0x7c, 0x2)
setxattr$incfs_size(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)=0x5, 0x8, 0x1)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 2728
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2287
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 19269, flag collect 0
----- executor 1 signal number : 2658
----- executor 1 executes write_coverage_signal cov->size 14398, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 2385, flag collect 0
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 1533, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 122
----- executor 1 executes write_coverage_signal cov->size 788, flag collect 0
----- executor 1 signal number : 1
executor 1 server cover_cnt 6 output_pos_value 4301
time breakdown 1: 40, 33, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2288 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2288
current dir: executor 4: /root/orangefs-client/dfs-0-2288
receive_execute: 3, 38
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 38
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 2, 39
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 38
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 9, 47
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5019, write pid:5020
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 19635, pid 4794, write pid:4795
----- executor 3 executes write_coverage_signal cov->size 19635, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
-----executor 2 collect shmids 33
----- directly resend shmid 33
----- executor 3 write_call_output, size 10045, pid 4794, write pid:4795
----- executor 3 executes write_coverage_signal cov->size 10045, flag collect 0
----- executor 3 signal number : 960
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 22452, pid 5019, write pid:5020
----- executor 4 executes write_coverage_signal cov->size 22452, flag collect 0
----- executor 4 signal number : 2851
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_one loop: 0, 0, 10
execute_one loop: 0, 1, 0
executor 3, execute_one inner time: 12, 11, 0
execute_one time: 1, 23
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 43, 24, 0
before receive testcase: 0 0
----- executor 4 write_call_output, size 9850, pid 5019, write pid:5020
----- executor 4 executes write_coverage_signal cov->size 9850, flag collect 0
----- executor 4 signal number : 66
----- completed 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5019, write pid:5020
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5019, write pid:5020
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 19, 3, 0
execute_one time: 0, 22
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
time breakdown 4: 56, 23, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4497, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2133
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 40, 34, 0
before receive testcase: 0 0
executor 1 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 73
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 5 replies
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:35 fuzzer receive 2851 signal and 0 cover from executor 4
2023/03/01 22:07:35 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2763 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 1250 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 311 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 960 signal and 0 cover from executor 3
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 131 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 fuzzer receive 66 signal and 0 cover from executor 4
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1425 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:35 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 41, 33, 0
before receive testcase: 0 0
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
----- executor 2 signal number : 2763
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1250
----- executor 2 executes write_coverage_signal cov->size 6681, flag collect 0
----- executor 2 signal number : 311
----- executor 2 executes write_coverage_signal cov->size 7349, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 2 signal number : 131
executor 2 server cover_cnt 5 output_pos_value 4549
time breakdown 2: 41, 34, 0
before receive testcase: 0 0
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3673 setxattr$trusted_overlay_nlink setxattr$trusted_overlay_nlink
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 2
2023/03/01 22:07:35 prog length: 1
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
setxattr$trusted_overlay_nlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000080)={'U+', 0x1}, 0x16, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 328
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2288
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2289 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2289
receive_execute: 3, 50
receive_execute: 2, 49
receive_execute: 3, 49
current dir: executor 4: /root/orangefs-client/dfs-0-2289
receive_execute: 12, 50
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
cover_reset in execute_call
receive_execute: 4, 68
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 7264, pid 5022, write pid:5023
----- executor 4 executes write_coverage_signal cov->size 7264, flag collect 0
----- executor 4 signal number : 2071
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 5
executor 4, execute_one inner time: 2, 5, 0
execute_one time: 0, 7
----- executor 3 write_call_output, size 20105, pid 4796, write pid:4797
----- executor 3 executes write_coverage_signal cov->size 20105, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 27
time breakdown 4: 72, 8, 0
before receive testcase: 0 1
cover_reset in execute_call
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 4 receive reply, reply.done 1
-----executor 2 collect shmids 34
----- directly resend shmid 34
----- executor 3 write_call_output, size 10008, pid 4796, write pid:4797
----- executor 3 executes write_coverage_signal cov->size 10008, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 33, 4, 0
execute_one time: 0, 37
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 62, 38, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15874, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 2 signal number : 2625
----- executor 0 signal number : 75
----- executor 2 executes write_coverage_signal cov->size 14140, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 2534
----- executor 1 executes write_coverage_signal cov->size 21133, flag collect 0
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 1597, flag collect 0
----- executor 2 signal number : 283
----- executor 2 executes write_coverage_signal cov->size 1455, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 977
----- executor 1 executes write_coverage_signal cov->size 4533, flag collect 0
----- executor 2 signal number : 122
----- executor 1 signal number : 346
----- executor 1 executes write_coverage_signal cov->size 3735, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 4252
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 3946
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 52, 40, 0
before receive testcase: 0 0
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 53, 40, 0
before receive testcase: 0 0
time breakdown 2: 51, 41, 0
before receive testcase: 0 1
2023/03/01 22:07:35 for select break: 1
2023/03/01 22:07:35 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:35 wg wait finish
2023/03/01 22:07:35 ------ all executors finish execution
2023/03/01 22:07:35 exec time: 103
2023/03/01 22:07:35 ----- PS len: 5
2023/03/01 22:07:35 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:35 fuzzer receive 2071 signal and 0 cover from executor 4
2023/03/01 22:07:35 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:35 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:35 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 2534 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 977 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 346 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 2625 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 283 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:35 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:35 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:35 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:35 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:35 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:35 NetFailure, Node crash: false false
2023/03/01 22:07:35 mutate testcase with failures
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3674 setxattr$trusted_overlay_opaque setxattr$trusted_overlay_opaque
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 2458 open open
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3967 truncate truncate
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 2858 sendfile sendfile
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/01 22:07:35 ----- insertCall()
2023/03/01 22:07:35 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 ----- mutateArg()
2023/03/01 22:07:35 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:35 prog length: 20
2023/03/01 22:07:35 HasCrashFail:false HasNetFail:false
22:07:35 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000040)='./file0\x00', 0x68041, 0x81)
setxattr$trusted_overlay_origin(&(0x7f0000000980)='./file0\x00', &(0x7f00000009c0), &(0x7f0000000a00), 0x2, 0x0)
r1 = open(&(0x7f0000000140)='./file0/file0\x00', 0x204000, 0x0)
setxattr$trusted_overlay_opaque(&(0x7f0000000080)='./file0/file0\x00', &(0x7f00000000c0), &(0x7f0000000100), 0x2, 0x1)
fstat(r1, &(0x7f0000000280)={0x0, 0x0, 0x0, 0x0, <r2=>0x0})
lremovexattr(&(0x7f0000000a40)='./file0\x00', &(0x7f0000000ac0)=ANY=[@ANYBLOB="000078e1cbad36b35e242fd9931fec4100aa6ad1c0eacd5ec016"])
fstat(0xffffffffffffffff, &(0x7f0000000300)={0x0, 0x0, 0x0, 0x0, <r3=>0x0})
stat(&(0x7f0000000380)='./file0/file0\x00', &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r1, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, <r5=>0x0})
stat(&(0x7f00000004c0)='./file0\x00', &(0x7f0000000500)={0x0, 0x0, 0x0, 0x0, <r6=>0x0})
fstat(r0, &(0x7f0000000580)={0x0, 0x0, 0x0, 0x0, 0x0, <r7=>0x0})
stat(&(0x7f0000000600)='./file0/file0\x00', &(0x7f0000000640)={0x0, 0x0, 0x0, 0x0, 0x0, <r8=>0x0})
stat(&(0x7f00000006c0)='./file0/file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r9=>0x0, <r10=>0x0})
stat(&(0x7f0000000780)='./file0/file0\x00', &(0x7f00000007c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r11=>0x0})
fstat(r0, &(0x7f0000000840)={0x0, 0x0, 0x0, 0x0, 0x0, <r12=>0x0})
setxattr$system_posix_acl(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240)='system.posix_acl_access\x00', &(0x7f00000008c0)={{}, {0x1, 0x5}, [{0x2, 0x5, 0xffffffffffffffff}, {0x2, 0x2, r2}, {0x2, 0x6, r3}, {0x2, 0x1}, {0x2, 0x6}, {0x2, 0x4, r4}, {0x2, 0x6, r9}, {0x2, 0x4, r5}, {0x2, 0x1, r6}], {}, [{0x8, 0x4, r7}, {0x8, 0x0, r8}, {0x8, 0x3, r10}, {0x8, 0x2, 0xee00}, {0x8, 0x4, r11}, {0x8, 0x0, r12}, {0x8, 0x4, 0xee01}, {0x8, 0x1, 0xee00}, {0x8, 0x1}], {0x10, 0x2}, {0x20, 0xa}}, 0xb4, 0x3)
sendfile(r0, r0, &(0x7f00000001c0)=0x3, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
truncate(&(0x7f0000000180)='./file0\x00', 0x7ff)
fcntl$getown(r0, 0x9)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 6192
remove dir: /root/orangefs-client/dfs-0-2289
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 7528, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 58
executor 3 create dir /root/orangefs-client/dfs-0-2290 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2290
current dir: executor 4: /root/orangefs-client/dfs-0-2290
receive_execute: 14, 93
receive_execute: 16, 93
receive_execute: 14, 93
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
receive_execute: 15, 92
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 19611, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 19611, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
receive_execute: 27, 100
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 4: 127, 2, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 12000, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 12000, flag collect 0
----- executor 3 signal number : 414
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4812, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 4812, flag collect 0
----- executor 3 signal number : 41
----- completed 11
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4812, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 4812, flag collect 0
----- executor 3 signal number : 36
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 35
----- directly resend shmid 35
----- executor 3 write_call_output, size 10000, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 10000, flag collect 0
----- executor 3 signal number : 826
----- completed 18
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4798, write pid:4799
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 2 collect shmids 36
----- directly resend shmid 36
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 22, 0
execute_one time: 1, 43
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 271, flag collect 0
----- executor 1 signal number : 46
executor 1 server cover_cnt 3 output_pos_value 211
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2105, flag collect 0
----- executor 0 signal number : 336
----- executor 0 executes write_coverage_signal cov->size 1443, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 803, flag collect 0
----- executor 0 signal number : 77
executor 0 server cover_cnt 4 output_pos_value 2138
----- executor 2 signal number : 2772
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1248
----- executor 2 executes write_coverage_signal cov->size 8253, flag collect 0
time breakdown 1: 107, 46, 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 8472, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1935, flag collect 0
----- executor 2 signal number : 131
----- executor 2 executes write_coverage_signal cov->size 809, flag collect 0
----- executor 2 signal number : 6
executor 2 server cover_cnt 6 output_pos_value 4573
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 141
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 20 replies
2023/03/01 22:07:36 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 2772 signal and 0 cover from userspace component
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 1248 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 131 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
time breakdown 2: 107, 47, 0
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 336 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 77 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:36 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 414 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 41 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 36 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 826 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 ----- splice()
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 216 fdatasync fdatasync
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 2
2023/03/01 22:07:36 prog length: 2
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fdatasync(r0)
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 152
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 3: 109, 44, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2290
time breakdown 0: 107, 46, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 54
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2291 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2291
receive_execute: 3, 68
receive_execute: 2, 68
receive_execute: 2, 67
current dir: executor 4: /root/orangefs-client/dfs-0-2291
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 5, 68
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19653, pid 4801, write pid:4802
----- executor 3 executes write_coverage_signal cov->size 19653, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
receive_execute: 40, 81
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5025, write pid:5026
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5025, write pid:5026
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 121, 1, 0
before receive testcase: 0 0
-----executor 2 collect shmids 37
----- directly resend shmid 37
----- executor 3 write_call_output, size 10016, pid 4801, write pid:4802
----- executor 3 executes write_coverage_signal cov->size 10016, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 19, 11, 0
execute_one time: 0, 30
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4570, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 1 signal number : 2758
----- executor 1 executes write_coverage_signal cov->size 17981, flag collect 0
----- executor 1 signal number : 972
----- executor 1 executes write_coverage_signal cov->size 3957, flag collect 0
----- executor 1 signal number : 343
----- executor 1 executes write_coverage_signal cov->size 3111, flag collect 0
----- executor 1 signal number : 76
executor 1 server cover_cnt 4 output_pos_value 4162
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 71, 33, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15867, flag collect 0
----- executor 2 signal number : 2623
----- executor 2 executes write_coverage_signal cov->size 14063, flag collect 0
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 1782, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1347, flag collect 0
----- executor 2 signal number : 77
----- executor 2 executes write_coverage_signal cov->size 1921, flag collect 0
----- executor 2 signal number : 122
executor 2 server cover_cnt 5 output_pos_value 4249
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 70, 33, 0
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 102
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 2 replies
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 2623 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:36 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 77 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2758 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 343 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 2
2023/03/01 22:07:36 prog length: 1
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000000000)={{0x7f, 0x45, 0x4c, 0x46, 0xe0, 0x40, 0x14, 0x3, 0x9, 0x3, 0x3, 0x3f, 0x29c, 0x40, 0x317, 0x2, 0x0, 0x38, 0x1, 0x7fff, 0xf0b9, 0x7ff}, [{0x6, 0x630, 0x1, 0x3, 0xedf8, 0x5, 0x0, 0x10001}], "2cf8ce2bf0d9975947ff0c6bac0662260c950d388ba508237b1cb0f5472c3a639de6dba40fca77861c89af74f9fa7048e664072fdb03877c0491d582e012761d5e21bcb9a74f0f66aea762bda68f934ea57565cf4efe0534fe6ca3592e2ad427d9578ba70e484531444bca5f4ab79da6d3d766f160329762e6", ['\x00']}, 0x1f1)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 1752
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 3: 73, 31, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2291
time breakdown 1: 70, 33, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 27
-----finish removing dir
mkdir time 25
executor 3 create dir /root/orangefs-client/dfs-0-2292 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2292
receive_execute: 1, 53
receive_execute: 2, 53
current dir: executor 4: /root/orangefs-client/dfs-0-2292
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 21, 61
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 4, 62
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5027, write pid:5028
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 82, 10, 0
before receive testcase: 0 0
receive_execute: 2, 53
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19863, pid 4803, write pid:4804
----- executor 3 executes write_coverage_signal cov->size 19863, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 26
cover_reset in execute_call
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 4803, write pid:4804
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 37, 8, 0
execute_one time: 0, 45
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 15772, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4567, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2116, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1258, flag collect 0
----- executor 0 signal number : 285
----- executor 0 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2629
----- executor 1 executes write_coverage_signal cov->size 14249, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2133
----- executor 2 signal number : 2716
----- executor 2 executes write_coverage_signal cov->size 17566, flag collect 0
----- executor 1 signal number : 1128
----- executor 1 executes write_coverage_signal cov->size 2202, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 1509, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 122
----- executor 2 signal number : 972
----- executor 2 executes write_coverage_signal cov->size 4167, flag collect 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 3165, flag collect 0
----- executor 2 signal number : 76
time breakdown 0: 55, 56, 0
before receive testcase: 0 0
executor 1 server cover_cnt 5 output_pos_value 4262
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 4119
time breakdown 1: 68, 43, 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 109
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:36 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2629 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:36 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 2716 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 285 signal and 0 cover from userspace component
time breakdown 2: 54, 57, 0
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 2724 preadv preadv
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 240 fsetxattr$trusted_overlay_opaque fsetxattr$trusted_overlay_opaque
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 3765 symlinkat symlinkat
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 6
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000000200)='./file0/file0\x00', 0x169443, 0x109)
fsetxattr$trusted_overlay_opaque(r0, &(0x7f0000000100), &(0x7f0000000140), 0x2, 0x2)
symlinkat(&(0x7f0000000180)='./file0/file0\x00', r0, &(0x7f00000001c0)='./file0/file0\x00')
write(r0, &(0x7f0000000000)='S', 0x1)
r1 = fcntl$dupfd(r0, 0x406, r0)
preadv(r1, &(0x7f00000000c0)=[{&(0x7f0000000080)=""/64, 0x40}], 0x1, 0x1, 0x6)
---
---

end of program
time breakdown 3: 66, 45, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/orangefs-client/dfs-0-2292
----- executor 4 receive testcase
executor 4: prog_data_offset 2520, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
receive_execute: 1, 45
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2293 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2293
receive_execute: 3, 43
receive_execute: 1, 45
current dir: executor 4: /root/orangefs-client/dfs-0-2293
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 3, 45
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6827, pid 4805, write pid:4806
----- executor 3 executes write_coverage_signal cov->size 6827, flag collect 0
----- executor 3 signal number : 2061
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4805, write pid:4806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4805, write pid:4806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4805, write pid:4806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4805, write pid:4806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4805, write pid:4806
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 39, 55
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
time breakdown 4: 94, 1, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 9, 1, 0
execute_one time: 1, 10
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 23674, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 210, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 54, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 2 signal number : 43
----- executor 1 signal number : 1923
----- executor 1 executes write_coverage_signal cov->size 10084, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 205
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 2358, flag collect 0
----- executor 1 signal number : 287
----- executor 1 executes write_coverage_signal cov->size 2100, flag collect 0
----- executor 1 signal number : 72
executor 1 server cover_cnt 4 output_pos_value 2626
before receive testcase: 0 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 46, 13, 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
time breakdown 3: 48, 12, 0
before receive testcase: 0 0
before receive testcase: 0 0
time breakdown 2: 46, 13, 0
before receive testcase: 0 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2056, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 586, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 0: 46, 19, 0
before receive testcase: 0 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 80
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [CLIENT] executor 3 has 6 replies
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:36 fuzzer receive 2061 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1923 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 287 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 4
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
r1 = open$dir(&(0x7f00000000c0)='./file0\x00', 0x402, 0x140)
fsetxattr$user(r1, &(0x7f0000000040), &(0x7f0000000100)='\x0e\'/\xc2mw\xc3\xbf\xd3\xb9\x02\x00', 0xc, 0x3)
---
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2040, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 704
remove dir: /root/orangefs-client/dfs-0-2293
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 40
-----finish removing dir
receive_execute: 22, 52
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2294 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2294
receive_execute: 16, 51
receive_execute: 21, 51
current dir: executor 4: /root/orangefs-client/dfs-0-2294
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 23, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19653, pid 4808, write pid:4809
----- executor 3 executes write_coverage_signal cov->size 19653, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 9
receive_execute: 24, 63
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
cover_reset in execute_call
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 87, 1, 0
before receive testcase: 0 1
-----executor 2 collect shmids 38
----- directly resend shmid 38
----- executor 3 write_call_output, size 10258, pid 4808, write pid:4809
----- executor 3 executes write_coverage_signal cov->size 10258, flag collect 0
----- executor 3 signal number : 967
----- completed 2
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 10760, pid 4808, write pid:4809
----- executor 3 executes write_coverage_signal cov->size 10760, flag collect 0
----- executor 3 signal number : 288
----- completed 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4808, write pid:4809
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 2 collect shmids 39
----- directly resend shmid 39
executor 3, execute_one inner time: 42, 2, 8
execute_one time: 1, 52
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1050, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 270, flag collect 0
----- executor 1 signal number : 44
----- executor 2 signal number : 2948
----- executor 2 executes write_coverage_signal cov->size 31776, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 207
time breakdown 1: 72, 56, 0
----- executor 2 signal number : 1250
----- executor 2 executes write_coverage_signal cov->size 4523, flag collect 0
time breakdown 3: 75, 54, 0
before receive testcase: 0 1
----- executor 2 signal number : 301
----- executor 2 executes write_coverage_signal cov->size 4582, flag collect 0
----- executor 2 signal number : 83
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 2 signal number : 133
----- executor 2 executes write_coverage_signal cov->size 781, flag collect 0
----- executor 2 signal number : 7
executor 2 server cover_cnt 6 output_pos_value 4741
before receive testcase: 0 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 74, 57, 0
before receive testcase: 0 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 116
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 2 has 6 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 2948 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 1250 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 301 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:36 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 967 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 288 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- splice()
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 4128 write$binfmt_elf32 write$binfmt_elf32
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 5
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
openat(0xffffffffffffff9c, &(0x7f0000000380)='./file0\x00', 0x341, 0xa4)
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68147, 0x89)
r1 = open$dir(&(0x7f0000000040)='./file0\x00', 0x0, 0x30)
write$binfmt_elf32(r1, &(0x7f0000000080)=ANY=[@ANYBLOB="7f454c463f030509ff0000000000000003000600010000801f030000380000001e0300000010000007002000020020000800050000000000070000000100000001000100e200000034000000020000000500000004000000040000000100000007000000f9ffffffe90c000000800000000000800100000059515e102b712a7db5806c9126cc18a1dd40996ff1fc25917ef52e6ce32d8770414c5ca4931cb386f507a2371438c9f77c43d1da2f8da07b00395651f5ebe7de9ff931a193e33f4d715275513284214f8ad2247456634d4b563ef253ed5e90210575efc40f81f37b6d08f3dbe9a6ea204c52df457979a845bf6ad7b5d9785e5dc65da9"], 0xfb)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2344, prog_size 8
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2116, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 0: 67, 64, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/orangefs-client/dfs-0-2294
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 38
-----finish removing dir
receive_execute: 2, 51
receive_execute: 8, 52
current dir: executor 4: /root/orangefs-client/dfs-0-2295
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2295 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2295
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 11, 53
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 8, 52
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 53, 68
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 121, 1, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19854, pid 4811, write pid:4812
----- executor 3 executes write_coverage_signal cov->size 19854, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 10768, pid 4811, write pid:4812
----- executor 3 executes write_coverage_signal cov->size 10768, flag collect 0
----- executor 3 signal number : 400
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 3564, pid 4811, write pid:4812
----- executor 3 executes write_coverage_signal cov->size 3564, flag collect 0
----- executor 3 signal number : 27
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4811, write pid:4812
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4811, write pid:4812
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 13, 0
execute_one time: 0, 42
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 24477, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2511
----- executor 0 executes write_coverage_signal cov->size 19570, flag collect 0
----- executor 1 signal number : 2735
----- executor 1 executes write_coverage_signal cov->size 17831, flag collect 0
----- executor 0 signal number : 1260
----- executor 0 executes write_coverage_signal cov->size 2568, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 2466, flag collect 0
----- executor 0 signal number : 80
----- executor 1 signal number : 970
----- executor 1 executes write_coverage_signal cov->size 3361, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 4150
----- executor 1 signal number : 338
----- executor 1 executes write_coverage_signal cov->size 2871, flag collect 0
----- executor 1 signal number : 76
time breakdown 3: 64, 43, 0
before receive testcase: 0 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 60, 45, 0
executor 1 server cover_cnt 4 output_pos_value 4132
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 54, 45, 0
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 99
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2735 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 970 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 338 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
time breakdown 1: 60, 47, 0
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 5 replies
2023/03/01 22:07:36 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 400 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 27 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 2511 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1260 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 2373 mkdir mkdir
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 3671 setxattr$smack_xattr_label setxattr$smack_xattr_label
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 4
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
mkdir(&(0x7f0000000040)='./file1\x00', 0x4)
setxattr$smack_xattr_label(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)='security.SMACK64\x00', &(0x7f0000000100), 0x1, 0x2)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2032, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 696
remove dir: /root/orangefs-client/dfs-0-2295
remove dir time 24
-----finish removing dir
receive_execute: 2, 33
receive_execute: 3, 33
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2296 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2296
current dir: executor 4: /root/orangefs-client/dfs-0-2296
receive_execute: 3, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
receive_execute: 4, 39
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 31, 40
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
time breakdown 4: 71, 1, 0
before receive testcase: 0 1
----- executor 3 write_call_output, size 19621, pid 4815, write pid:4816
----- executor 3 executes write_coverage_signal cov->size 19621, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 14, 0
----- executor 3 write_call_output, size 32765, pid 4815, write pid:4816
----- executor 3 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 3 signal number : 747
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4815, write pid:4816
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 1 collect shmids 32
----- directly resend shmid 32
----- executor 3 write_call_output, size 10024, pid 4815, write pid:4816
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 840
----- completed 4
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 30, 1, 0
execute_one time: 0, 31
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2092, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1233, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 75
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 2 signal number : 44
----- executor 1 signal number : 2720
executor 2 server cover_cnt 3 output_pos_value 207
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 36, 44, 0
before receive testcase: 0 0
time breakdown 3: 43, 38, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
time breakdown 2: 36, 46, 0
before receive testcase: 0 1
----- executor 1 signal number : 1265
----- executor 1 executes write_coverage_signal cov->size 8070, flag collect 0
----- executor 1 signal number : 326
----- executor 1 executes write_coverage_signal cov->size 8356, flag collect 0
----- executor 1 signal number : 82
----- executor 1 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 1 signal number : 134
executor 1 server cover_cnt 5 output_pos_value 4543
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 81
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 1: 35, 47, 0
before receive testcase: 0 0
2023/03/01 22:07:36 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2720 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1265 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 326 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 82 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 134 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:36 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 747 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 840 signal and 0 cover from executor 3
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 250 fsync fsync
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 4131 write$binfmt_script write$binfmt_script
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 206 fcntl$getownex fcntl$getownex
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 7
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
fcntl$getownex(r0, 0x10, &(0x7f0000000200))
r1 = dup2(r0, r0)
r2 = open(&(0x7f0000000040)='./file0\x00', 0x10000, 0x2)
write$binfmt_script(r2, &(0x7f0000000080)={'#! ', './file0', [{}, {0x20, '&$:-@[--^\x89(>&-*-$'}], 0xa, "909c9208ba5dc2e2033de7a2c1da39b6af93a4a9eee904e4ece65f12aa791ee7e10c219159fae66424806db68a8c6ec4977dec1c65b247cdc223df1aeacacc0c30461b480cf7d55dcd615433e0c140c47450c9ad690955187df9e085719d628153c110f875eee9b5cc318bf4d5a5b567a029a565e6e1b736ac7010ca628e71c1eccf94fa195dfe49ae0d4d11cfff94ea274c21a7bb21a5a440cca200b172fb1a0a22b2e6e16d5cd5ddcc317cee25240df3072773e27836b1d336c890bcb5178d2dd60b519db0d52d068df9378462fc5d9e005145f28c8de49674196547f1b92035901b995e5ffb40a5961f759c9ef77a05d1c4e7d9c5062bb05e78"}, 0x119)
fsync(r1)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1416
remove dir: /root/orangefs-client/dfs-0-2296
----- executor 4 receive testcase
executor 4: prog_data_offset 2752, prog_size 8
remove dir time 46
-----finish removing dir
receive_execute: 5, 66
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
mkdir time 19
executor 3 create dir /root/orangefs-client/dfs-0-2297 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2297
receive_execute: 6, 66
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 3, 66
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2297
receive_execute: 2, 66
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 19657, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 19657, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 1 collect shmids 33
----- directly resend shmid 33
receive_execute: 41, 83
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 10060, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 10060, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2, pid 4818, write pid:4819
----- executor 3 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 124, 2, 0
before receive testcase: 0 0
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 1 collect shmids 34
----- directly resend shmid 34
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 18, 6, 0
execute_one time: 0, 24
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 36, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 72, 25, 0
before receive testcase: 0 1
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4586, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 2 server cover_cnt 3 output_pos_value 207
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 1 signal number : 2936
----- executor 1 executes write_coverage_signal cov->size 32598, flag collect 0
----- executor 1 signal number : 1244
----- executor 1 executes write_coverage_signal cov->size 4926, flag collect 0
----- executor 1 signal number : 313
----- executor 1 executes write_coverage_signal cov->size 4296, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 1 signal number : 133
----- executor 1 executes write_coverage_signal cov->size 788, flag collect 0
----- executor 1 signal number : 7
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 6 output_pos_value 4733
time breakdown 0: 71, 27, 0
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 94
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 1 has 6 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
time breakdown 1: 69, 27, 0
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 7 replies
before receive testcase: 0 0
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2936 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1244 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 313 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 133 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/01 22:07:36 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 2459 open$dir open$dir
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 3
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
open$dir(&(0x7f0000000040)='./file0\x00', 0x80800, 0x100)
---
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1776, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 440
remove dir: /root/orangefs-client/dfs-0-2297
time breakdown 2: 70, 26, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 40
-----finish removing dir
receive_execute: 2, 49
receive_execute: 1, 49
current dir: executor 4: /root/orangefs-client/dfs-0-2298
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2298 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2298
receive_execute: 3, 48
receive_execute: 4, 49
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 10, 53
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 63, 4, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19621, pid 4822, write pid:4823
----- executor 3 executes write_coverage_signal cov->size 19621, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
-----executor 1 collect shmids 35
----- directly resend shmid 35
----- executor 3 write_call_output, size 10024, pid 4822, write pid:4823
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 10750, pid 4822, write pid:4823
----- executor 3 executes write_coverage_signal cov->size 10750, flag collect 0
----- executor 3 signal number : 287
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 29, 9, 0
execute_one time: 6, 38
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 53, 45, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31399, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 2730
----- executor 0 executes write_coverage_signal cov->size 15648, flag collect 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 972
----- executor 0 executes write_coverage_signal cov->size 3564, flag collect 0
time breakdown 2: 51, 46, 0
before receive testcase: 0 0
----- executor 0 signal number : 340
----- executor 0 executes write_coverage_signal cov->size 2859, flag collect 0
----- executor 0 signal number : 76
executor 0 server cover_cnt 4 output_pos_value 4131
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 51, 47, 0
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 101
2023/03/01 22:07:36 ----- PS len: 5
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 18599, flag collect 0
2023/03/01 22:07:36 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:36 [CLIENT] executor 3 has 3 replies
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
----- executor 1 signal number : 2659
----- executor 1 executes write_coverage_signal cov->size 14403, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 2175, flag collect 0
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 1641, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 1 signal number : 122
----- executor 1 executes write_coverage_signal cov->size 744, flag collect 0
----- executor 1 signal number : 1
executor 1 server cover_cnt 6 output_pos_value 4302
-----executor 1 collect shmids 36
----- directly resend shmid 36
2023/03/01 22:07:36 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 1 has 6 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2659 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 2730 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 340 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:36 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 287 signal and 0 cover from executor 3
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
time breakdown 1: 50, 52, 0
before receive testcase: 0 0
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 2458 open open
2023/03/01 22:07:36 ----- mutateArg()
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 2
2023/03/01 22:07:36 prog length: 1
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
open(&(0x7f0000000000)='./file0\x00', 0x10400, 0x12)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2298
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 144
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 19
-----finish removing dir
receive_execute: 6, 32
current dir: executor 4: /root/orangefs-client/dfs-0-2299
receive_execute: 1, 32
receive_execute: 7, 33
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-2299 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2299
receive_execute: 8, 33
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19621, pid 4825, write pid:4826
----- executor 3 executes write_coverage_signal cov->size 19621, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
receive_execute: 45, 48
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
-----executor 1 collect shmids 37
----- directly resend shmid 37
----- executor 3 write_call_output, size 10024, pid 4825, write pid:4826
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 21, 15, 0
execute_one time: 0, 36
time breakdown 3: 41, 37, 0
----- executor 4 write_call_output, size 12806, pid 5035, write pid:5036
----- executor 4 executes write_coverage_signal cov->size 12806, flag collect 0
----- executor 4 signal number : 2745
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 23, 0, 0
execute_one time: 0, 23
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 4 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 4: 93, 24, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 48, flag collect 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
before receive testcase: 0 1
----- executor 1 signal number : 2974
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 1247
----- executor 1 executes write_coverage_signal cov->size 4916, flag collect 0
----- executor 1 signal number : 303
----- executor 1 executes write_coverage_signal cov->size 5271, flag collect 0
----- executor 1 signal number : 83
----- executor 1 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 1 signal number : 134
executor 1 server cover_cnt 5 output_pos_value 4757
time breakdown 2: 40, 41, 0
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 33, 43, 0
before receive testcase: 0 0
2023/03/01 22:07:36 for select break: 1
2023/03/01 22:07:36 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:36 wg wait finish
2023/03/01 22:07:36 ------ all executors finish execution
2023/03/01 22:07:36 exec time: 87
2023/03/01 22:07:36 ----- PS len: 5
2023/03/01 22:07:36 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:36 fuzzer receive 2745 signal and 0 cover from executor 4
2023/03/01 22:07:36 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 2974 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 1247 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 303 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 1 receive 134 signal and 0 cover from userspace component
2023/03/01 22:07:36 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:36 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:36 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:36 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:36 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:36 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:36 NetFailure, Node crash: false false
2023/03/01 22:07:36 mutate testcase with failures
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 2780 readlink readlink
2023/03/01 22:07:36 ----- insertCall()
2023/03/01 22:07:36 ----- generateCall 204 fcntl$getflags fcntl$getflags
2023/03/01 22:07:36 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:36 prog length: 6
2023/03/01 22:07:36 HasCrashFail:false HasNetFail:false
22:07:36 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
r1 = open(&(0x7f0000000040)='./file0\x00', 0x18000, 0x20)
fcntl$getflags(r0, 0x408)
fcntl$notify(r1, 0x402, 0x32)
readlink(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)=""/14, 0xe)
---
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 792
remove dir: /root/orangefs-client/dfs-0-2299
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2128, prog_size 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4567, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 0: 39, 54, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 44
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2300 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2300
receive_execute: 15, 53
receive_execute: 13, 54
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 17, 54
current dir: executor 4: /root/orangefs-client/dfs-0-2300
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19609, pid 4827, write pid:4828
----- executor 3 executes write_coverage_signal cov->size 19609, flag collect 0
----- executor 3 signal number : 3074
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
receive_execute: 1, 54
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
-----executor 1 collect shmids 38
----- directly resend shmid 38
----- executor 3 write_call_output, size 10256, pid 4827, write pid:4828
----- executor 3 executes write_coverage_signal cov->size 10256, flag collect 0
----- executor 3 signal number : 965
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4827, write pid:4828
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4827, write pid:4828
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4827, write pid:4828
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4827, write pid:4828
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 16, 80
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 96, 1, 0
before receive testcase: 0 0
-----executor 1 collect shmids 39
----- directly resend shmid 39
executor 3, execute_one inner time: 22, 2, 8
execute_one time: 0, 32
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 19307, flag collect 0
executor 2 write_server_output
time breakdown 3: 71, 32, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4560, flag collect 0
before receive testcase: 0 1
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2656
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 executes write_coverage_signal cov->size 14340, flag collect 0
----- executor 2 signal number : 2724
----- executor 2 executes write_coverage_signal cov->size 17744, flag collect 0
----- executor 1 signal number : 1125
----- executor 1 executes write_coverage_signal cov->size 2175, flag collect 0
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 1642, flag collect 0
----- executor 1 signal number : 83
----- executor 1 executes write_coverage_signal cov->size 1935, flag collect 0
----- executor 1 signal number : 122
----- executor 1 executes write_coverage_signal cov->size 809, flag collect 0
----- executor 1 signal number : 1
----- executor 2 signal number : 956
----- executor 2 executes write_coverage_signal cov->size 3747, flag collect 0
----- executor 2 signal number : 342
----- executor 2 executes write_coverage_signal cov->size 3057, flag collect 0
executor 1 server cover_cnt 6 output_pos_value 4301
----- executor 2 signal number : 76
2023/03/01 22:07:37 for select break: 1
executor 2 server cover_cnt 4 output_pos_value 4111
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 68, 35, 0
before receive testcase: 0 1
time breakdown 1: 67, 35, 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 89
2023/03/01 22:07:37 ----- PS len: 5
before receive testcase: 0 1
2023/03/01 22:07:37 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 [SERVER] executor 1 has 6 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2724 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 956 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 2656 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 3 has 6 replies
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:37 fuzzer receive 3074 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/01 22:07:37 fuzzer receive 965 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 83 signal and 0 cover from userspace component
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 342 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 4 has 0 replies
time breakdown 0: 59, 30, 0
before receive testcase: 0 1
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 2351 lsetxattr lsetxattr
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 1
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
lsetxattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)=@known='trusted.overlay.redirect\x00', &(0x7f0000000080)='\x00', 0x1, 0x7)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2300
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 296
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 21
-----finish removing dir
mkdir time 14
executor 3 create dir /root/orangefs-client/dfs-0-2301 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2301
receive_execute: 2, 36
current dir: executor 4: /root/orangefs-client/dfs-0-2301
receive_execute: 3, 36
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
receive_execute: 5, 36
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 2, 35
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- executor 3 write_call_output, size 20117, pid 4831, write pid:4832
----- executor 3 executes write_coverage_signal cov->size 20117, flag collect 0
receive_execute: 9, 66
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 29
output_pos: 1, output_pos_value 1
cover_reset in execute_call
-----executor 1 collect shmids 40
----- directly resend shmid 40
----- executor 3 write_call_output, size 10032, pid 4831, write pid:4832
----- executor 3 executes write_coverage_signal cov->size 10032, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3, execute_one inner time: 37, 3, 0
execute_one time: 0, 40
time breakdown 3: 41, 40, 0
before receive testcase: 0 1
cover_reset in execute_call
----- executor 4 write_call_output, size 17390, pid 5038, write pid:5039
----- executor 4 executes write_coverage_signal cov->size 17390, flag collect 0
----- executor 4 signal number : 2803
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 15, 0, 0
execute_one time: 0, 15
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4570, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 26375, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2104, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1443, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 802, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 1 signal number : 2664
----- executor 1 executes write_coverage_signal cov->size 17953, flag collect 0
----- executor 1 signal number : 1126
----- executor 1 executes write_coverage_signal cov->size 2988, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2519, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 1949, flag collect 0
----- executor 1 signal number : 122
executor 1 server cover_cnt 5 output_pos_value 4295
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 39, 48, 0
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
time breakdown 4: 75, 17, 0
before receive testcase: 0 0
----- executor 2 signal number : 2753
----- executor 2 executes write_coverage_signal cov->size 19579, flag collect 0
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 4140, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 3530, flag collect 0
----- executor 2 signal number : 78
executor 2 server cover_cnt 4 output_pos_value 4179
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 86
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:37 fuzzer receive 2803 signal and 0 cover from executor 4
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2753 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 956 signal and 0 cover from executor 3
2023/03/01 22:07:37 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 2664 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 1126 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
time breakdown 2: 38, 51, 0
before receive testcase: 0 0
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
time breakdown 1: 49, 37, 0
before receive testcase: 0 0
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 194 fchmod fchmod
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 222 fremovexattr fremovexattr
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 541 ioctl ioctl
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 211 fcntl$setown fcntl$setown
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 8
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = fcntl$getown(0xffffffffffffffff, 0x9)
fchmod(0xffffffffffffffff, 0x82)
r1 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r2 = dup(r1)
ioctl(r2, 0x7, &(0x7f0000000040)="d52379faeb2566413899ee5cb7d1c75802f346fa2337b1c9933654e1d41f9eed0557e4696d379b313bb9651e03788e9448d8839221f6c04053841ae82f9482366d48bfec8c35067e60161f1c2b5a4f4e223409f42a02d470c4ca24b46a07dd6433b322de5531e9576183ccec0fee6545786e11d21ac0f6ae46a88c294cf8be58f667cdf6cea6f53eb37e91afdaf908bdc187b34ce1b73456890fa372c031619414d6505f48eff5161d3e148ea67a441f85246e3497370cfe4f75cdb8ad7bf7317e6e3c178986e32c698b624665b79fd7f7")
fcntl$notify(r1, 0x402, 0x3)
fcntl$setown(r2, 0x8, r0)
fremovexattr(r1, &(0x7f0000000000)=@random={'btrfs.', '\x00'})
---

end of program
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 1128
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2301
remove dir time 25
-----finish removing dir
mkdir time 58
executor 3 create dir /root/orangefs-client/dfs-0-2302 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2302
receive_execute: 5, 83
current dir: executor 4: /root/orangefs-client/dfs-0-2302
receive_execute: 5, 83
receive_execute: 2, 83
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 0, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
receive_execute: 12, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 6, 91
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5040, write pid:5041
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
2023/03/01 22:07:37 for select break: 1
time breakdown 4: 97, 3, 0
before receive testcase: 0 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
----- executor 3 write_call_output, size 19659, pid 4833, write pid:4834
----- executor 3 executes write_coverage_signal cov->size 19659, flag collect 0
----- executor 3 signal number : 3080
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
-----executor 2 collect shmids 40
----- directly resend shmid 40
----- executor 3 write_call_output, size 10024, pid 4833, write pid:4834
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 28, 2, 0
execute_one time: 0, 30
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 31493, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 15881, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 630, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 162, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 2 signal number : 2621
----- executor 2 executes write_coverage_signal cov->size 14238, flag collect 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 88, 33, 0
before receive testcase: 0 0
----- executor 2 signal number : 1128
----- executor 2 executes write_coverage_signal cov->size 1992, flag collect 0
----- executor 2 signal number : 286
----- executor 2 executes write_coverage_signal cov->size 1455, flag collect 0
----- executor 0 signal number : 2729
----- executor 0 executes write_coverage_signal cov->size 15692, flag collect 0
----- executor 0 signal number : 972
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 122
----- executor 0 signal number : 341
----- executor 0 executes write_coverage_signal cov->size 2805, flag collect 0
----- executor 0 signal number : 76
executor 2 server cover_cnt 5 output_pos_value 4254
executor 0 server cover_cnt 4 output_pos_value 4131
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 85, 35, 0
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 118
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 8 replies
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:37 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 2729 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3080 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 341 signal and 0 cover from userspace component
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2621 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 1128 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
time breakdown 0: 88, 35, 0
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- mutateArg()
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 2749 pwrite64 pwrite64
2023/03/01 22:07:37 ----- mutateArg()
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 3765 symlinkat symlinkat
2023/03/01 22:07:37 ----- mutateArg()
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 3
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = openat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', 0x303b00, 0x130)
pwrite64(r0, &(0x7f0000000040)="361d15331a20", 0x6, 0x9)
symlinkat(&(0x7f0000000080)='./file0\x00', r0, &(0x7f00000000c0)='./file0\x00')
---

end of program
time breakdown 3: 98, 30, 0
before receive testcase: 0 1
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 552
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2302
remove dir time 36
-----finish removing dir
mkdir time 9
executor 3 create dir /root/orangefs-client/dfs-0-2303 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2303
receive_execute: 2, 46
receive_execute: 3, 47
current dir: executor 4: /root/orangefs-client/dfs-0-2303
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 50
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 0, 47
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19887, pid 4835, write pid:4836
----- executor 3 executes write_coverage_signal cov->size 19887, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 23
cover_reset in execute_call
receive_execute: 26, 75
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
-----executor 2 collect shmids 41
----- directly resend shmid 41
----- executor 3 write_call_output, size 10024, pid 4835, write pid:4836
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 12945, pid 5043, write pid:5044
----- executor 4 executes write_coverage_signal cov->size 12945, flag collect 0
----- executor 4 signal number : 2733
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5043, write pid:5044
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5043, write pid:5044
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 10, 0, 0
execute_one time: 0, 11
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 32, 2, 0
execute_one time: 0, 34
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 101, 12, 0
before receive testcase: 0 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 48, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 1 signal number : 44
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 1 server cover_cnt 3 output_pos_value 207
executor 0 server cover_cnt 4 output_pos_value 2134
time breakdown 3: 56, 35, 0
before receive testcase: 0 0
----- executor 2 signal number : 2891
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 50, 41, 0
before receive testcase: 0 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1248
----- executor 2 executes write_coverage_signal cov->size 5109, flag collect 0
----- executor 2 signal number : 306
----- executor 2 executes write_coverage_signal cov->size 5335, flag collect 0
----- executor 2 signal number : 81
----- executor 2 executes write_coverage_signal cov->size 1893, flag collect 0
----- executor 2 signal number : 133
executor 2 server cover_cnt 5 output_pos_value 4675
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 90
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 3 replies
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 2: 48, 44, 0
before receive testcase: 0 0
2023/03/01 22:07:37 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2891 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 1248 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 306 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 81 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 133 signal and 0 cover from userspace component
time breakdown 0: 60, 29, 0
before receive testcase: 0 1
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 2733 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- mutateArg()
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 2814 rmdir rmdir
2023/03/01 22:07:37 ----- mutateArg()
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 235 fsetxattr$security_selinux fsetxattr$security_selinux
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 3
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
r0 = open$dir(&(0x7f0000000040)='./file0\x00', 0x10002, 0x50)
fsetxattr$security_selinux(r0, &(0x7f0000000080), &(0x7f00000000c0)='system_u:object_r:xserver_misc_device_t:s0\x00', 0x2b, 0x3)
rmdir(&(0x7f0000000000)='./file0\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 536
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2303
remove dir time 60
-----finish removing dir
receive_execute: 1, 70
current dir: executor 4: /root/orangefs-client/dfs-0-2304
receive_execute: 4, 70
mkdir time 10
executor 3 create dir /root/orangefs-client/dfs-0-2304 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2304
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 70
receive_execute: 3, 70
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2, execute_one inner time: 0, 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
cover_reset in execute_call
receive_execute: 5, 77
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 13057, pid 5046, write pid:5047
----- executor 4 executes write_coverage_signal cov->size 13057, flag collect 0
----- executor 4 signal number : 2733
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5046, write pid:5047
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5046, write pid:5047
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 4, 0, 0
execute_one time: 1, 4
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 82, 5, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19645, pid 4837, write pid:4838
----- executor 3 executes write_coverage_signal cov->size 19645, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
-----executor 2 collect shmids 42
----- directly resend shmid 42
----- executor 3 write_call_output, size 10024, pid 4837, write pid:4838
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 955
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 26, 6, 0
execute_one time: 0, 32
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2826
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 840, flag collect 0
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 216, flag collect 0
----- executor 1 signal number : 44
executor 1 server cover_cnt 3 output_pos_value 207
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2080, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 694, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1246
----- executor 2 executes write_coverage_signal cov->size 5319, flag collect 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 74, 34, 0
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 105
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 3 replies
2023/03/01 22:07:37 fuzzer receive 2733 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 955 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2826 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 1246 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 313 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 131 signal and 0 cover from userspace component
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 2350 lseek lseek
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 1
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
lseek(0xffffffffffffffff, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 104
time breakdown 3: 75, 33, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2304
time breakdown 0: 73, 34, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 signal number : 313
----- executor 2 executes write_coverage_signal cov->size 4981, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 0
----- executor 2 signal number : 131
executor 2 server cover_cnt 5 output_pos_value 4610
time breakdown 2: 71, 36, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 13
executor 3 create dir /root/orangefs-client/dfs-0-2305 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2305
receive_execute: 3, 44
current dir: executor 4: /root/orangefs-client/dfs-0-2305
receive_execute: 2, 43
receive_execute: 3, 44
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 4, 44
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
receive_execute: 25, 49
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5049, write pid:5050
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 0, 1, 0
execute_one time: 0, 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 74, 1, 0
before receive testcase: 0 0
----- executor 3 write_call_output, size 19887, pid 4839, write pid:4840
----- executor 3 executes write_coverage_signal cov->size 19887, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
-----executor 2 collect shmids 43
----- directly resend shmid 43
----- executor 3 write_call_output, size 10024, pid 4839, write pid:4840
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 957
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 20, 2, 0
execute_one time: 0, 22
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 15804, flag collect 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4574, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 2 signal number : 2623
----- executor 2 executes write_coverage_signal cov->size 14030, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2724
----- executor 2 signal number : 1125
----- executor 2 executes write_coverage_signal cov->size 1572, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 executes write_coverage_signal cov->size 17983, flag collect 0
----- executor 2 signal number : 276
----- executor 2 executes write_coverage_signal cov->size 1401, flag collect 0
----- executor 2 signal number : 80
----- executor 1 signal number : 972
----- executor 1 executes write_coverage_signal cov->size 3747, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 1 signal number : 342
----- executor 1 executes write_coverage_signal cov->size 3057, flag collect 0
----- executor 2 signal number : 122
----- executor 1 signal number : 76
executor 2 server cover_cnt 5 output_pos_value 4242
executor 1 server cover_cnt 4 output_pos_value 4127
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 47, 26, 0
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 45, 27, 0
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 71
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 [SERVER] executor 2 has 5 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2623 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 1 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 1125 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 276 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
time breakdown 0: 47, 27, 0
before receive testcase: 0 0
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3086 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 957 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 2724 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 972 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 342 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 76 signal and 0 cover from userspace component
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 232 fsetxattr$security_capability fsetxattr$security_capability
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 4
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
r1 = dup(r0)
fsetxattr$security_capability(r1, &(0x7f0000000040), &(0x7f0000000080)=@v1={0x1000000, [{0x4, 0x5}]}, 0xc, 0x1)
---
---

end of program
time breakdown 3: 48, 23, 0
before receive testcase: 0 0
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 720
remove dir: /root/orangefs-client/dfs-0-2305
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 2056, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 52
-----finish removing dir
mkdir time 48
executor 3 create dir /root/orangefs-client/dfs-0-2306 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2306
receive_execute: 2, 100
current dir: executor 4: /root/orangefs-client/dfs-0-2306
receive_execute: 4, 100
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19633, pid 4841, write pid:4842
----- executor 3 executes write_coverage_signal cov->size 19633, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
receive_execute: 2, 99
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
receive_execute: 1, 100
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 13, 0
-----executor 1 collect shmids 41
----- directly resend shmid 41
----- executor 3 write_call_output, size 10032, pid 4841, write pid:4842
----- executor 3 executes write_coverage_signal cov->size 10032, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4841, write pid:4842
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 4841, write pid:4842
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
receive_execute: 21, 121
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 0, 0, 0
execute_one time: 0, 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
time breakdown 4: 142, 1, 0
before receive testcase: 0 0
-----executor 1 collect shmids 42
----- directly resend shmid 42
executor 3, execute_one inner time: 18, 2, 6
execute_one time: 0, 26
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 104, 27, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 24, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 420, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 108, flag collect 0
----- executor 2 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4553, flag collect 0
----- executor 0 signal number : 1426
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 603, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
executor 0 server cover_cnt 4 output_pos_value 2134
----- executor 1 signal number : 3365
----- executor 1 executes write_coverage_signal cov->size 32445, flag collect 0
----- executor 1 signal number : 1286
----- executor 1 executes write_coverage_signal cov->size 4716, flag collect 0
----- executor 1 signal number : 305
----- executor 1 executes write_coverage_signal cov->size 4482, flag collect 0
2023/03/01 22:07:37 for select break: 1
----- executor 1 signal number : 78
----- executor 1 executes write_coverage_signal cov->size 1907, flag collect 0
----- executor 1 signal number : 137
----- executor 1 executes write_coverage_signal cov->size 795, flag collect 0
----- executor 1 signal number : 8
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 101, 29, 0
before receive testcase: 0 1
executor 1 server cover_cnt 6 output_pos_value 5198
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 129
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 0 replies
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1426 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 1 has 6 replies
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 3365 signal and 0 cover from userspace component
time breakdown 1: 102, 29, 0
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 1286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 305 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 78 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 137 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 3 has 4 replies
2023/03/01 22:07:37 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 3675 setxattr$trusted_overlay_origin setxattr$trusted_overlay_origin
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 1
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
setxattr$trusted_overlay_origin(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x2, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2306
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 4 receive testcase
executor 4: prog_data_offset 1640, prog_size 288
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 101, 28, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 21
-----finish removing dir
receive_execute: 3, 57
receive_execute: 2, 57
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 2, 58
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
current dir: executor 4: /root/orangefs-client/dfs-0-2307
mkdir time 37
executor 3 create dir /root/orangefs-client/dfs-0-2307 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2307
receive_execute: 3, 58
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 19633, pid 4844, write pid:4845
----- executor 3 executes write_coverage_signal cov->size 19633, flag collect 0
----- executor 3 signal number : 3076
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
-----executor 1 collect shmids 43
----- directly resend shmid 43
----- executor 3 write_call_output, size 10032, pid 4844, write pid:4845
----- executor 3 executes write_coverage_signal cov->size 10032, flag collect 0
----- executor 3 signal number : 954
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 8, 2, 0
execute_one time: 1, 10
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 61, 13, 0
before receive testcase: 0 0
receive_execute: 7, 74
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 4 write_call_output, size 18000, pid 5052, write pid:5053
----- executor 4 executes write_coverage_signal cov->size 18000, flag collect 0
----- executor 4 signal number : 2803
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
executor 4, execute_one inner time: 4, 0, 0
execute_one time: 0, 4
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 26057, flag collect 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 4587, flag collect 0
----- executor 0 signal number : 1428
----- executor 0 executes write_coverage_signal cov->size 2068, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 813, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 640, flag collect 0
----- executor 0 signal number : 75
----- executor 1 signal number : 2666
----- executor 1 executes write_coverage_signal cov->size 17701, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2136
----- executor 1 signal number : 1126
----- executor 1 executes write_coverage_signal cov->size 2568, flag collect 0
----- executor 1 signal number : 286
----- executor 1 executes write_coverage_signal cov->size 2465, flag collect 0
----- executor 1 signal number : 80
----- executor 1 executes write_coverage_signal cov->size 1921, flag collect 0
----- executor 1 signal number : 122
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 60, 23, 0
executor 1 server cover_cnt 5 output_pos_value 4296
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2734
----- executor 2 executes write_coverage_signal cov->size 19761, flag collect 0
----- executor 2 signal number : 965
----- executor 2 executes write_coverage_signal cov->size 3930, flag collect 0
----- executor 2 signal number : 344
----- executor 2 executes write_coverage_signal cov->size 3535, flag collect 0
----- executor 2 signal number : 72
executor 2 server cover_cnt 4 output_pos_value 4128
time breakdown 1: 59, 23, 0
before receive testcase: 0 1
time breakdown 4: 81, 5, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 60, 25, 0
before receive testcase: 0 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 91
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 1 replies
2023/03/01 22:07:37 fuzzer receive 2803 signal and 0 cover from executor 4
2023/03/01 22:07:37 [SERVER] executor 2 has 4 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 2734 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 0 has 4 replies
2023/03/01 22:07:37 [SERVER] executor 1 has 5 replies
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3076 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 954 signal and 0 cover from executor 3
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 2666 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 1126 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 122 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 965 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 344 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 72 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1428 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 75 signal and 0 cover from userspace component
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 3672 setxattr$system_posix_acl setxattr$system_posix_acl
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 3967 truncate truncate
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 2342 lgetxattr lgetxattr
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 2
2023/03/01 22:07:37 prog length: 5
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
---
stat(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
truncate(&(0x7f0000000200)='./file0\x00', 0x200)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
setxattr$system_posix_acl(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040)='system.posix_acl_default\x00', &(0x7f0000000380)=ANY=[@ANYBLOB="02000000010000000000000002000300eab928e640b8a96b8e77e2f59586859a4be479da9c5c198ebdf20481b7f13a4c663fb0bab313f8add838f0a67f4763ce772617c765057a6b9b25f0c9dbcb17524de5b32460290cf445ea495a171b4f6c2114ae61647864959aef675d729f0cdc67ce818a3587c22d4dd3386de7ac31e39ae4191f2ec184c053a4fec0faecc346cbac6aada18a97f715f46b158b7b4f7a19460c210fb054df332791ccf16e25974ea287c8d219d0b11605e8b6e4987e5b335c84e3ccf15516c89c44e9463c3b4cb21b46dd245e92ef73cfb00c3c468bf1e1f04b4b0775429171f5d95db176f15a0582dae71d7f142dda5fe749bdbb532d48d6d8906403ebb15e2c7de1d843bf9e60fc60bdfa9dace21763c59f066740fb1b9b2e9a293bab785e82e13568c1e2fec8b9e0454a441494", @ANYRES32=0xee01, @ANYBLOB="02000900", @ANYRES32=r0, @ANYBLOB="04000c000000000008000200", @ANYRES32=r1, @ANYBLOB="10000100000000002000040000000000"], 0x3c, 0x0)
lgetxattr(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280)=@known='trusted.overlay.impure\x00', &(0x7f00000002c0), 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 4 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 4: prog_data_offset 1640, prog_size 1520
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 304
remove dir: /root/orangefs-client/dfs-0-2307
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 49
-----finish removing dir
current dir: executor 4: /root/orangefs-client/dfs-0-2308
receive_execute: 9, 65
mkdir time 16
executor 3 create dir /root/orangefs-client/dfs-0-2308 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2308
receive_execute: 10, 65
executor 2 before execute_one
receive_execute: 22, 65
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 12, 65
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 0, 0
----- executor 3 write_call_output, size 19649, pid 4846, write pid:4847
----- executor 3 executes write_coverage_signal cov->size 19649, flag collect 0
----- executor 3 signal number : 3071
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
-----executor 0 collect shmids 35
----- directly resend shmid 35
----- executor 3 write_call_output, size 10106, pid 4846, write pid:4847
----- executor 3 executes write_coverage_signal cov->size 10106, flag collect 0
----- executor 3 signal number : 959
----- completed 2
execute_one loop: 0, 0, 11
receive_execute: 14, 85
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
cover_reset in execute_call
----- executor 4 write_call_output, size 23648, pid 5054, write pid:5055
----- executor 4 executes write_coverage_signal cov->size 23648, flag collect 0
----- executor 4 signal number : 2851
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5054, write pid:5055
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 4 write_call_output, size 10198, pid 5054, write pid:5055
----- executor 4 executes write_coverage_signal cov->size 10198, flag collect 0
----- executor 4 signal number : 53
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5054, write pid:5055
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 4 write_call_output, size 0, pid 5054, write pid:5055
----- executor 4 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 4 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 25
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 16, 25, 0
execute_one time: 0, 41
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 87, 46, 0
before receive testcase: 0 1
execute_one loop: 0, 0, 30
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 4, execute_one inner time: 17, 33, 0
execute_one time: 1, 50
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 72, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 1260, flag collect 0
----- executor 1 signal number : 140
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 84, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 1470, flag collect 0
----- executor 2 signal number : 140
----- executor 2 executes write_coverage_signal cov->size 378, flag collect 0
----- executor 2 signal number : 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 324, flag collect 0
----- executor 1 signal number : 44
executor 2 server cover_cnt 3 output_pos_value 207
executor 1 server cover_cnt 3 output_pos_value 207
----- executor 0 signal number : 3345
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 74, 75, 0
----- executor 0 signal number : 1303
----- executor 0 executes write_coverage_signal cov->size 9066, flag collect 0
----- executor 0 signal number : 334
----- executor 0 executes write_coverage_signal cov->size 9605, flag collect 0
----- executor 0 signal number : 84
----- executor 0 executes write_coverage_signal cov->size 1865, flag collect 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
----- executor 0 signal number : 137
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 1 receive reply, reply.done 1
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 5 output_pos_value 5219
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 0 receive reply, reply.done 1
2023/03/01 22:07:37 wg wait finish
2023/03/01 22:07:37 ------ all executors finish execution
2023/03/01 22:07:37 exec time: 140
2023/03/01 22:07:37 ----- PS len: 5
2023/03/01 22:07:37 [CLIENT] executor 4 has 5 replies
2023/03/01 22:07:37 fuzzer receive 2851 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 53 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 fuzzer receive 0 signal and 0 cover from executor 4
2023/03/01 22:07:37 [SERVER] executor 0 has 5 replies
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 3345 signal and 0 cover from userspace component
2023/03/01 22:07:37 [CLIENT] executor 3 has 2 replies
2023/03/01 22:07:37 fuzzer receive 3071 signal and 0 cover from executor 3
2023/03/01 22:07:37 fuzzer receive 959 signal and 0 cover from executor 3
2023/03/01 22:07:37 [SERVER] executor 1 has 3 replies
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:37 [SERVER] executor 2 has 3 replies
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 140 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 2 receive 44 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 1303 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 334 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 84 signal and 0 cover from userspace component
2023/03/01 22:07:37 ------- fuzzer executor 0 receive 137 signal and 0 cover from userspace component
time breakdown 4: 99, 52, 0
before receive testcase: 0 1
2023/03/01 22:07:37 fsMds: [map[] map[] map[] map[] map[]]
2023/03/01 22:07:37 NetFailure, Node crash: false false
2023/03/01 22:07:37 mutate testcase with failures
2023/03/01 22:07:37 ----- insertCall()
2023/03/01 22:07:37 ----- generateCall 2750 pwritev pwritev
2023/03/01 22:07:37 ----- splice()
2023/03/01 22:07:37 HasCrashFail: false, .HasNetFail: false
2023/03/01 22:07:37 prog length: 5
2023/03/01 22:07:37 HasCrashFail:false HasNetFail:false
22:07:37 ---executing program 0:
---
---
---
r0 = open(&(0x7f0000001500)='./file0\x00', 0x68041, 0x0)
write(r0, &(0x7f0000000000)="c2", 0x1)
symlink(&(0x7f0000000000)='./file1\x00', &(0x7f0000000080)='./file0\x00')
lchown(&(0x7f0000000040)='./file0\x00', 0x0, 0x0)
pwritev(r0, &(0x7f0000001240)=[{&(0x7f0000000040)="", 0x1000}, {&(0x7f0000001040)="aca9bfa7445364a164cfa8d381637a6784f5", 0x12}, {&(0x7f0000001080)="aefe2c810afd2d0c9a5baaecd7046917e199f2a3f4c51f89dda126336ac0263e42953e1307db72fca8cb2a4f9114dee10fa91038b7b661af827b33ea2486ab1f101c031a0f20543fd4a8db2c57857a82aafda69ae2392f13f47e20ecfce5d15e25bfde811f5c5095726478039a", 0x6d}, {&(0x7f0000001100)="28bc4b33b736b81008dccc34fea3dd2c0b6d4e427cc85c725eb43435f124756aa5ad65785a5163d52ce843", 0x2b}, {&(0x7f0000001140)="6e33be89162af509c27410bdfa9c06033134b31fe03be2f4a3245b88d8d625195665ca3435cbfdba1d875609603971542977837b522b7abddd09f6dbe52c609db00fe215047cc1539abe4da437ff48fac2ccec6f071f9bea352971a3", 0x5c}, {&(0x7f00000011c0)}, {&(0x7f0000001200)="1ef032cb27fa9a2535106f2bfce05a026ae313385bb1ce239d8711dc304742aea985bfb4de4068c74aa1cf863df7f0010c", 0x31}], 0x7, 0x1a24, 0x3)
---
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5944
remove dir: /root/orangefs-client/dfs-0-2308
----- executor 4 receive testcase
executor 4: prog_data_offset 7280, prog_size 8
time breakdown 0: 75, 75, 0
before receive testcase: 0 1
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 78, 74, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
receive_execute: 1, 52
receive_execute: 0, 51
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
mkdir time 12
executor 3 create dir /root/orangefs-client/dfs-0-2309 successfully
current dir: executor 3: /root/orangefs-client/dfs-0-2309
receive_execute: 30, 52
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
current dir: executor 4: /root/orangefs-client/dfs-0-2309
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 1, 51
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 6, 59
executor 4 before execute_one
----- execute_one begin, executor 4 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 4, execute_one inner time: 1, 0, 0
execute_one time: 0, 1
time breakdown 4: 65, 1, 0
2023/03/01 22:07:37 for select break: 1
2023/03/01 22:07:37 --------- executor 4 receive reply, reply.done 1
before receive testcase: 0 0
----- executor 3 write_call_output, size 19716, pid 4848, write pid:4849
----- executor 3 executes write_coverage_signal cov->size 19716, flag collect 0
----- executor 3 signal number : 3086
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
-----executor 2 collect shmids 44
----- directly resend shmid 44
----- executor 3 write_call_output, size 10024, pid 4848, write pid:4849
----- executor 3 executes write_coverage_signal cov->size 10024, flag collect 0
----- executor 3 signal number : 956
----- completed 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 16287, pid 4848, write pid:4849
----- executor 3 executes write_coverage_signal cov->size 16287, flag collect 0
----- executor 3 signal number : 372
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 9060, pid 4848, write pid:4849
----- executor 3 executes write_coverage_signal cov->size 9060, flag collect 0
-----executor 2 collect shmids 45
----- directly resend shmid 45
----- executor 3 signal number : 79
----- completed 4
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 21287, pid 4848, write pid:4849
----- executor 3 executes write_coverage_signal cov->size 21287, flag collect 0
----- executor 3 signal number : 301
----- completed 5
execute_one loop: 0, 0, 6
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
-----executor 2 collect shmids 46
----- directly resend shmid 46
execute_one loop: 0, 0, 10
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
Node-0:/root/daemon-log.372
=================================================================
==372==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffff20ffca0 at pc 0x7ffff762e57d bp 0x7ffff20ffad0 sp 0x7ffff20ff278
WRITE of size 713 at 0x7ffff20ffca0 thread T2
execute_one loop: 0, 0, 51

VM DIAGNOSIS:
22:07:37  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032f2 RFL=00000202 [-------] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7ff3004 CR3=0000000114f08004 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000009050000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=ff110001182e1d80 RBX=ff110001182e1b00 RCX=000000008020000b RDX=000000008020000c
RSI=000000008020000b RDI=ff11000100033640 RBP=ff11000115607d38 RSP=ff11000115607ca0
R8 =0000000000000001 R9 =ffffffff93be6700 R10=ff110001182e1b00 R11=0000000000000001
R12=ffd400000460b840 R13=ff110001182e1d80 R14=0000000000000000 R15=ff11000100033640
RIP=ffffffff93be1f0f RFL=00000242 [---Z---] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff70c2700 ffffffff 00c00000
GS =0000 ff11000265700000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fff8e636588 CR3=000000010d61c001 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=0000000000000000ffffffffff00ff00 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffffffffffffffff0000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
