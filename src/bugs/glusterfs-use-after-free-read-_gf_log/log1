 executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 1952, signal number : 2304
----- executor 0 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 13253, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 409, signal number : 228
----- executor 1 executes write_coverage_signal cov->size 15131, flag collect 1
----- executor 0 cover number : 1721, signal number : 2306
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1828, signal number : 2111
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18086, flag collect 1
----- executor 1 cover number : 575, signal number : 71
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 509
----- executor 2 executes write_coverage_signal cov->size 11647, flag collect 1
----- executor 2 cover number : 575, signal number : 232
----- executor 2 executes write_coverage_signal cov->size 25991, flag collect 1
----- executor 0 cover number : 2065, signal number : 1515
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2494, signal number : 3086
----- executor 1 executes write_coverage_signal cov->size 760, flag collect 1
----- executor 1 cover number : 269, signal number : 225
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 169
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 412, flag collect 1
----- executor 1 cover number : 228, signal number : 137
----- executor 1 executes write_coverage_signal cov->size 5128, flag collect 1
----- executor 1 cover number : 920, signal number : 442
----- executor 1 executes write_coverage_signal cov->size 27825, flag collect 1
----- executor 2 cover number : 2055, signal number : 2653
----- executor 2 executes write_coverage_signal cov->size 23, flag collect 1
----- executor 2 cover number : 19, signal number : 21
----- executor 2 executes write_coverage_signal cov->size 746, flag collect 1
----- executor 0 cover number : 142, signal number : 55
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 8
----- executor 2 cover number : 269, signal number : 195
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 0 cover number : 498, signal number : 150
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 2219, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 2 cover number : 622, signal number : 428
----- executor 2 executes write_coverage_signal cov->size 3284, flag collect 1
----- executor 0 cover number : 615, signal number : 203
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 885, signal number : 375
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1225, signal number : 1504
----- executor 1 executes write_coverage_signal cov->size 24438, flag collect 1
----- executor 0 cover number : 894, signal number : 546
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
executor 0 server cover_cnt 56 output_pos_value 22921
----- executor 1 cover number : 1109, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1349, signal number : 1820
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 265
----- executor 2 executes write_coverage_signal cov->size 18284, flag collect 1
time breakdown 0: 248, 2962, 0
before receive testcase: 0 1
2023/03/31 02:40:21 for select break: 1
2023/03/31 02:40:21 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1272, signal number : 628
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2577, signal number : 2129
----- executor 1 executes write_coverage_signal cov->size 30806, flag collect 1
----- executor 2 cover number : 2360, signal number : 2036
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1789, signal number : 999
----- executor 1 executes write_coverage_signal cov->size 24433, flag collect 1
----- executor 1 cover number : 1620, signal number : 1038
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
executor 1 server cover_cnt 20 output_pos_value 29877
----- executor 2 cover number : 1719, signal number : 1321
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:40:21 for select break: 1
2023/03/31 02:40:21 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 225, 2980, 0
before receive testcase: 0 0
----- executor 2 cover number : 2536, signal number : 1759
executor 2 server cover_cnt 23 output_pos_value 32224
2023/03/31 02:40:21 for select break: 1
2023/03/31 02:40:21 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:21 wg wait finish
2023/03/31 02:40:21 ------ all executors finish execution
2023/03/31 02:40:21 exec time: 3088
2023/03/31 02:40:21 ----- PS len: 4
2023/03/31 02:40:21 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:21 fuzzer receive 1585 signal and 1273 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:21 [SERVER] executor 0 has 56 replies
2023/03/31 02:40:21 [SERVER] executor 2 has 23 replies
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 76 signal and 65 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 665 signal and 539 cover from userspace component
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:40:21 [SERVER] executor 1 has 20 replies
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 658 signal and 516 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 2304 signal and 1952 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
time breakdown 2: 207, 2987, 0
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 228 signal and 409 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 71 signal and 575 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 468 signal and 421 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 3086 signal and 2494 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 225 signal and 269 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 169 signal and 526 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 137 signal and 228 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1771 signal and 1528 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 441 signal and 530 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 2111 signal and 1828 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 77 signal and 142 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 509 signal and 410 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 232 signal and 575 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 2653 signal and 2055 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 21 signal and 19 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 195 signal and 269 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:21 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 424 signal and 1320 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 293 signal and 615 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 442 signal and 920 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 198 signal and 573 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 47 signal and 501 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 5 signal and 126 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 206 signal and 293 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 54 signal and 67 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 333 signal and 426 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 428 signal and 622 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 375 signal and 885 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 1820 signal and 1349 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 265 signal and 526 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 628 signal and 1272 cover from userspace component
2023/03/31 02:40:21 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 2036 signal and 2360 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 1504 signal and 1225 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 591 signal and 1109 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 1321 signal and 1719 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 2129 signal and 2577 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 999 signal and 1789 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 1038 signal and 1620 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 2 receive 1759 signal and 2536 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1 signal and 8 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 2306 signal and 1721 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1515 signal and 2065 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 55 signal and 142 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 8 signal and 10 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 150 signal and 498 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 203 signal and 615 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 546 signal and 894 cover from userspace component
2023/03/31 02:40:21 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/03/31 02:40:21 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:21 disable threaded and collide
2023/03/31 02:40:21 prog length: 6
2023/03/31 02:40:21 prog length: 19
2023/03/31 02:40:21 HasCrashFail:true HasNetFail:false
02:40:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
syz_failure_sync(0x1, 0x3)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1424
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 72
-----finish removing dir
receive_execute: 36, 105
receive_execute: 61, 105
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1425 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1425
receive_execute: 44, 105
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 8
receive_execute: 98, 114
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8977, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 8977, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 15, 0, 7
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
Node-0:/root/daemon-log.13892
----- executor 3 write_call_output, size 8499, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 8499, flag collect 1
----- executor 3 cover number : 1139, signal number : 129
----- completed 5
execute_call 0, 18, 0, 4
execute_one loop: 0, 0, 22
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2783, flag collect 1
----- executor 0 cover number : 417, signal number : 498
----- executor 0 executes write_coverage_signal cov->size 70, flag collect 1
----- executor 0 cover number : 57, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 21412, flag collect 1
----- executor 0 cover number : 1677, signal number : 1968
executor 0 server cover_cnt 3 output_pos_value 4653
execute_call 0, 81, 0, 0
execute_one loop: 0, 0, 81
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 81, 0, 0
execute_one loop: 0, 0, 81
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 222
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 290
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 11, 0, 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
==13892==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
execute_call 0, 2838, 0, 0
execute_one loop: 0, 0, 2838
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 3000, 0
execute_one time: 2, 3001
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 2838, 0, 0
execute_one loop: 0, 0, 2838
cover_reset in execute_call
----- executor 3 write_call_output, size 12625, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 12625, flag collect 1
----- executor 3 cover number : 1320, signal number : 481
----- completed 15
execute_call 0, 31, 0, 9
execute_one loop: 0, 0, 40
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 15
----- completed 16
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2922, write pid:2922
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3056, 0
execute_one time: 2, 3056
2023/03/31 02:40:24 for select break: 1
2023/03/31 02:40:24 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2557, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 853, flag collect 1
----- executor 1 cover number : 289, signal number : 332
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 860, flag collect 1
time breakdown 3: 212, 3060, 0
before receive testcase: 0 0
----- executor 0 cover number : 792, signal number : 558
----- executor 0 executes write_coverage_signal cov->size 1249, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 383, signal number : 82
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 390
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 65
----- executor 0 executes write_coverage_signal cov->size 721, flag collect 1
----- executor 0 cover number : 294, signal number : 78
----- executor 0 executes write_coverage_signal cov->size 2785, flag collect 1
----- executor 0 cover number : 419, signal number : 339
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 57, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 2197, signal number : 2630
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 26347, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2163, signal number : 2583
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 11879, flag collect 1
----- executor 1 cover number : 576, signal number : 374
----- executor 1 executes write_coverage_signal cov->size 1353, flag collect 1
----- executor 2 cover number : 410, signal number : 504
----- executor 2 executes write_coverage_signal cov->size 17869, flag collect 1
----- executor 1 cover number : 401, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1787, signal number : 2694
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 302
----- executor 2 executes write_coverage_signal cov->size 27486, flag collect 1
----- executor 1 cover number : 2462, signal number : 3090
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1045, flag collect 1
----- executor 1 cover number : 280, signal number : 147
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 145
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2534, flag collect 1
----- executor 1 cover number : 809, signal number : 349
----- executor 1 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 1 cover number : 641, signal number : 188
----- executor 1 executes write_coverage_signal cov->size 3834, flag collect 1
----- executor 1 cover number : 713, signal number : 535
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 2049, signal number : 1092
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1864, signal number : 2443
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1040, flag collect 1
----- executor 2 cover number : 280, signal number : 157
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 2 cover number : 774, signal number : 590
----- executor 2 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 2 cover number : 657, signal number : 162
----- executor 2 executes write_coverage_signal cov->size 20474, flag collect 1
----- executor 2 cover number : 1074, signal number : 1298
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 265
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
executor 0 server cover_cnt 45 output_pos_value 19395
----- executor 1 cover number : 1227, signal number : 1114
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:40:24 for select break: 1
2023/03/31 02:40:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1328, signal number : 1080
----- executor 2 executes write_coverage_signal cov->size 25739, flag collect 1
----- executor 1 cover number : 2670, signal number : 2209
----- executor 1 executes write_coverage_signal cov->size 28864, flag collect 1
time breakdown 0: 166, 3104, 0
before receive testcase: 0 0
----- executor 2 cover number : 2052, signal number : 1826
----- executor 2 executes write_coverage_signal cov->size 29836, flag collect 1
----- executor 1 cover number : 1989, signal number : 1360
----- executor 1 executes write_coverage_signal cov->size 27411, flag collect 1
----- executor 1 cover number : 1304, signal number : 837
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 2 cover number : 2358, signal number : 1877
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 server cover_cnt 23 output_pos_value 30703
2023/03/31 02:40:24 for select break: 1
2023/03/31 02:40:24 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 149, 3120, 0
before receive testcase: 0 0
----- executor 2 cover number : 2081, signal number : 1684
executor 2 server cover_cnt 24 output_pos_value 32917
2023/03/31 02:40:24 for select break: 1
2023/03/31 02:40:24 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:24 wg wait finish
2023/03/31 02:40:24 ------ all executors finish execution
2023/03/31 02:40:24 exec time: 3230
2023/03/31 02:40:24 ----- PS len: 4
2023/03/31 02:40:24 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:24 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:24 [SERVER] executor 1 has 23 replies
2023/03/31 02:40:24 [SERVER] executor 2 has 24 replies
time breakdown 2: 141, 3125, 0
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 332 signal and 289 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:24 [SERVER] executor 0 has 45 replies
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 498 signal and 417 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 26 signal and 57 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 2630 signal and 2197 cover from userspace component
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 1968 signal and 1677 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 2583 signal and 2163 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 558 signal and 792 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 82 signal and 383 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 504 signal and 410 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 390 signal and 501 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 65 signal and 126 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 78 signal and 294 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 339 signal and 419 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 23 signal and 57 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 25 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 fuzzer receive 129 signal and 1139 cover from executor 3
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 302 signal and 576 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 2443 signal and 1864 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 157 signal and 280 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 590 signal and 774 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 162 signal and 657 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1298 signal and 1074 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 265 signal and 526 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1080 signal and 1328 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1826 signal and 2052 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1877 signal and 2358 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 2 receive 1684 signal and 2081 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 2694 signal and 1787 cover from userspace component
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 1092 signal and 2049 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 17 signal and 142 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 4 signal and 10 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 1 signal and 2 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/03/31 02:40:24 fuzzer receive 222 signal and 630 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 290 signal and 515 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 16 signal and 128 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 481 signal and 1320 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 1 signal and 66 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 374 signal and 576 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 5 signal and 401 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 3090 signal and 2462 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 147 signal and 280 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 145 signal and 526 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 349 signal and 809 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 188 signal and 641 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 535 signal and 713 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 1114 signal and 1227 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 2209 signal and 2670 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 1360 signal and 1989 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 837 signal and 1304 cover from userspace component
2023/03/31 02:40:24 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:40:24 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:24 failure smash: true false
2023/03/31 02:40:24 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:24 disable threaded and collide
2023/03/31 02:40:24 prog length: 6
2023/03/31 02:40:24 send to channel: true, false
2023/03/31 02:40:24 prog length: 19
2023/03/31 02:40:24 HasCrashFail:true HasNetFail:false
02:40:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1425
Node-0:/root/daemon-log.13945
remove dir time 71
-----finish removing dir
receive_execute: 30, 103
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1426 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1426
receive_execute: 34, 103
receive_execute: 51, 103
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 86, 110
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8973, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 8973, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 22, 0, 6
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 12, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 31785, flag collect 1
----- executor 0 cover number : 1729, signal number : 2218
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 433
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 107
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 450, flag collect 1
----- executor 0 cover number : 154, signal number : 5
executor 0 server cover_cnt 10 output_pos_value 5401
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
execute_call 0, 64, 0, 0
execute_one loop: 0, 0, 64
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 64, 0, 1
execute_one loop: 0, 0, 65
cover_reset in execute_call
-----executor 0 collect shmids 37
----- directly resend shmid 37
----- executor 3 write_call_output, size 1649, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
-----executor 0 collect shmids 38
----- directly resend shmid 38
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
-----executor 0 collect shmids 39
----- directly resend shmid 39
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
-----executor 0 collect shmids 40
----- directly resend shmid 40
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
----- executor 3 write_call_output, size 2776, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 336
----- completed 11
execute_call 0, 10, 0, 5
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 16
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 934, signal number : 141
----- completed 14
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 43, 0, 0
execute_one loop: 0, 0, 43
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==13945==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 2668, 0, 0
execute_one loop: 0, 0, 2668
cover_reset in execute_call
execute_call 0, 2668, 0, 0
execute_one loop: 0, 0, 2668
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2833, 0
execute_one time: 1, 2833
----- executor 3 write_call_output, size 12810, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 12810, flag collect 1
----- executor 3 cover number : 1367, signal number : 335
----- completed 16
execute_call 0, 24, 0, 3
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 149
----- completed 17
execute_call 0, 12, 0, 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2923, write pid:2923
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2868, 0
execute_one time: 2, 2868
2023/03/31 02:40:27 for select break: 1
2023/03/31 02:40:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19671, flag collect 1
time breakdown 3: 196, 2874, 0
before receive testcase: 0 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1767, signal number : 2210
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 98, flag collect 1
----- executor 2 cover number : 84, signal number : 91
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 20000, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 709, flag collect 1
----- executor 0 cover number : 289, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 687
----- executor 2 executes write_coverage_signal cov->size 9753, flag collect 1
----- executor 1 cover number : 1667, signal number : 2102
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 100
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 409, signal number : 30
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 66, signal number : 47
----- executor 1 executes write_coverage_signal cov->size 14601, flag collect 1
----- executor 1 cover number : 409, signal number : 235
----- executor 1 executes write_coverage_signal cov->size 13777, flag collect 1
----- executor 1 cover number : 576, signal number : 71
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1820, signal number : 1139
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2497, signal number : 3154
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 791, flag collect 1
----- executor 2 cover number : 270, signal number : 192
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2151, flag collect 1
----- executor 2 cover number : 585, signal number : 459
----- executor 2 executes write_coverage_signal cov->size 2516, flag collect 1
----- executor 2 cover number : 723, signal number : 277
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2402, signal number : 2953
----- executor 1 executes write_coverage_signal cov->size 789, flag collect 1
----- executor 1 cover number : 270, signal number : 200
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4274, flag collect 1
----- executor 1 cover number : 720, signal number : 407
----- executor 1 executes write_coverage_signal cov->size 416, flag collect 1
----- executor 1 cover number : 227, signal number : 126
----- executor 1 executes write_coverage_signal cov->size 23005, flag collect 1
----- executor 2 cover number : 1381, signal number : 1955
----- executor 2 executes write_coverage_signal cov->size 19028, flag collect 1
----- executor 0 cover number : 1876, signal number : 2016
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 1 cover number : 1232, signal number : 1404
----- executor 1 executes write_coverage_signal cov->size 29806, flag collect 1
----- executor 2 cover number : 1016, signal number : 404
----- executor 2 executes write_coverage_signal cov->size 28110, flag collect 1
----- executor 0 cover number : 530, signal number : 219
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1260, signal number : 560
----- executor 1 executes write_coverage_signal cov->size 24851, flag collect 1
----- executor 2 cover number : 2203, signal number : 1425
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 60
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 0 cover number : 498, signal number : 197
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1773, signal number : 1378
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 531
----- executor 0 executes write_coverage_signal cov->size 1131, flag collect 1
----- executor 0 cover number : 477, signal number : 79
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 2 cover number : 2255, signal number : 1606
----- executor 2 executes write_coverage_signal cov->size 31285, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
executor 0 server cover_cnt 56 output_pos_value 20064
2023/03/31 02:40:27 for select break: 1
2023/03/31 02:40:27 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 154, 2921, 0
before receive testcase: 0 0
----- executor 1 cover number : 2359, signal number : 1498
----- executor 1 executes write_coverage_signal cov->size 27614, flag collect 1
----- executor 2 cover number : 2056, signal number : 1406
executor 2 server cover_cnt 19 output_pos_value 29980
2023/03/31 02:40:27 for select break: 1
2023/03/31 02:40:27 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 1291, signal number : 681
executor 1 server cover_cnt 18 output_pos_value 26339
2023/03/31 02:40:27 for select break: 1
2023/03/31 02:40:27 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:40:27 wg wait finish
2023/03/31 02:40:27 ------ all executors finish execution
2023/03/31 02:40:27 exec time: 3035
2023/03/31 02:40:27 ----- PS len: 4
2023/03/31 02:40:27 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:27 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 [SERVER] executor 1 has 18 replies
2023/03/31 02:40:27 [SERVER] executor 2 has 19 replies
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 2210 signal and 1767 cover from userspace component
time breakdown 1: 137, 2932, 0
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 91 signal and 84 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 2102 signal and 1667 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 687 signal and 576 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 100 signal and 116 cover from userspace component
2023/03/31 02:40:27 [SERVER] executor 0 has 56 replies
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 30 signal and 409 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 3154 signal and 2497 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 192 signal and 270 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 2218 signal and 1729 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 459 signal and 585 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 433 signal and 530 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 107 signal and 142 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 277 signal and 723 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 1955 signal and 1381 cover from userspace component
2023/03/31 02:40:27 fuzzer receive 336 signal and 830 cover from executor 3
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 16 signal and 128 cover from executor 3
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 5 signal and 154 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 44 signal and 501 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 47 signal and 66 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 235 signal and 409 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 404 signal and 1016 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 207 signal and 289 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 71 signal and 576 cover from userspace component
2023/03/31 02:40:27 fuzzer receive 141 signal and 934 cover from executor 3
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 1425 signal and 2203 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 1606 signal and 2255 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 2953 signal and 2402 cover from userspace component
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 200 signal and 270 cover from userspace component
2023/03/31 02:40:27 fuzzer receive 335 signal and 1367 cover from executor 3
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:27 fuzzer receive 149 signal and 749 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 407 signal and 720 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 126 signal and 227 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 2 signal and 109 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 1404 signal and 1232 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 2 receive 1406 signal and 2056 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 560 signal and 1260 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 1378 signal and 1773 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 1498 signal and 2359 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 1 receive 681 signal and 1291 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 1139 signal and 1820 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 2016 signal and 1876 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 219 signal and 530 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 60 signal and 142 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 5 signal and 10 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 197 signal and 498 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 531 signal and 1002 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 79 signal and 477 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/03/31 02:40:27 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
time breakdown 2: 133, 2927, 0
before receive testcase: 0 1
before receive testcase: 0 0
2023/03/31 02:40:27 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:27 disable threaded and collide
2023/03/31 02:40:27 prog length: 6
2023/03/31 02:40:27 prog length: 19
2023/03/31 02:40:27 HasCrashFail:true HasNetFail:false
02:40:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1426
remove dir time 71
-----finish removing dir
receive_execute: 36, 109
mkdir time 37
executor 3 create dir /root/glusterfs-client/dfs-0-1427 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1427
receive_execute: 46, 109
receive_execute: 40, 109
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 0
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 1
receive_execute: 85, 116
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8997, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 8997, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 16, 0, 5
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 21, 0, 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Node-0:/root/daemon-log.14000
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
execute_call 0, 91, 0, 0
execute_one loop: 0, 0, 91
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 91, 0, 0
execute_one loop: 0, 0, 91
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3993, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 3993, flag collect 1
----- executor 3 cover number : 1131, signal number : 327
----- completed 11
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2226, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 2226, flag collect 1
----- executor 3 cover number : 651, signal number : 139
----- completed 14
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 31, 0, 0
execute_one loop: 0, 0, 31
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
==14000==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
execute_call 0, 2854, 0, 0
execute_one loop: 0, 0, 2854
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3034, 0
execute_one time: 2, 3034
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 2854, 0, 0
execute_one loop: 0, 0, 2854
cover_reset in execute_call
----- executor 3 write_call_output, size 12806, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 12806, flag collect 1
----- executor 3 cover number : 1365, signal number : 313
----- completed 16
execute_call 0, 29, 0, 9
execute_one loop: 0, 0, 38
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 151
----- completed 17
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2924, write pid:2924
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3072, 0
execute_one time: 4, 3073
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 783, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 279, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 767, flag collect 1
----- executor 1 cover number : 279, signal number : 316
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:40:30 for select break: 1
2023/03/31 02:40:30 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 201, 3081, 0
before receive testcase: 0 1
----- executor 0 cover number : 142, signal number : 157
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 709, flag collect 1
----- executor 0 cover number : 289, signal number : 277
----- executor 0 executes write_coverage_signal cov->size 119, flag collect 1
----- executor 0 cover number : 63, signal number : 62
----- executor 0 executes write_coverage_signal cov->size 2766, flag collect 1
----- executor 0 cover number : 410, signal number : 381
----- executor 0 executes write_coverage_signal cov->size 2593, flag collect 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 792, signal number : 606
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 381
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32589, flag collect 1
----- executor 1 cover number : 2564, signal number : 3143
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 19990, flag collect 1
----- executor 2 cover number : 2186, signal number : 2611
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 20692, flag collect 1
----- executor 1 cover number : 576, signal number : 401
----- executor 1 executes write_coverage_signal cov->size 9749, flag collect 1
----- executor 0 cover number : 1914, signal number : 1990
----- executor 0 executes write_coverage_signal cov->size 5992, flag collect 1
----- executor 1 cover number : 410, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 29816, flag collect 1
----- executor 0 cover number : 548, signal number : 99
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 718
----- executor 2 executes write_coverage_signal cov->size 7693, flag collect 1
----- executor 2 cover number : 409, signal number : 23
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2089, signal number : 2620
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 787, flag collect 1
----- executor 1 cover number : 269, signal number : 144
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 160
----- executor 0 cover number : 1819, signal number : 925
executor 0 server cover_cnt 42 output_pos_value 14313
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1942, flag collect 1
----- executor 1 cover number : 702, signal number : 265
----- executor 1 executes write_coverage_signal cov->size 3532, flag collect 1
----- executor 1 cover number : 790, signal number : 231
----- executor 1 executes write_coverage_signal cov->size 19000, flag collect 1
2023/03/31 02:40:30 for select break: 1
2023/03/31 02:40:30 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 2691, signal number : 3761
----- executor 2 executes write_coverage_signal cov->size 787, flag collect 1
----- executor 2 cover number : 269, signal number : 158
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1934, flag collect 1
----- executor 2 cover number : 552, signal number : 432
----- executor 2 executes write_coverage_signal cov->size 3511, flag collect 1
----- executor 1 cover number : 1016, signal number : 1171
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 812, signal number : 373
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 155, 3115, 0
before receive testcase: 0 0
----- executor 1 cover number : 1406, signal number : 1121
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1236, signal number : 1791
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 304
----- executor 2 executes write_coverage_signal cov->size 12497, flag collect 1
----- executor 2 cover number : 948, signal number : 403
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2287, signal number : 2054
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2150, signal number : 1692
----- executor 2 executes write_coverage_signal cov->size 27271, flag collect 1
----- executor 1 cover number : 2330, signal number : 1586
----- executor 1 executes write_coverage_signal cov->size 30171, flag collect 1
----- executor 2 cover number : 1786, signal number : 1299
----- executor 2 executes write_coverage_signal cov->size 30247, flag collect 1
----- executor 1 cover number : 2501, signal number : 1907
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 22 output_pos_value 34155
2023/03/31 02:40:30 for select break: 1
2023/03/31 02:40:30 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 145, 3142, 0
before receive testcase: 0 0
----- executor 2 cover number : 1789, signal number : 909
executor 2 server cover_cnt 22 output_pos_value 32208
2023/03/31 02:40:30 for select break: 1
2023/03/31 02:40:30 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:30 wg wait finish
2023/03/31 02:40:30 ------ all executors finish execution
2023/03/31 02:40:30 exec time: 3255
2023/03/31 02:40:30 ----- PS len: 4
2023/03/31 02:40:30 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:30 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 [SERVER] executor 1 has 22 replies
2023/03/31 02:40:30 [SERVER] executor 2 has 22 replies
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 316 signal and 279 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 3143 signal and 2564 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 401 signal and 576 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 57 signal and 410 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 316 signal and 279 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 2620 signal and 2089 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 144 signal and 269 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 160 signal and 526 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:30 [SERVER] executor 0 has 42 replies
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:40:30 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 149, 3146, 0
2023/03/31 02:40:30 fuzzer receive 327 signal and 1131 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 139 signal and 651 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 313 signal and 1365 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 151 signal and 749 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 157 signal and 142 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 277 signal and 289 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 62 signal and 63 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 381 signal and 410 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 265 signal and 702 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 606 signal and 792 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 11 signal and 165 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 381 signal and 501 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 2 signal and 126 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 23 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 231 signal and 790 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 1990 signal and 1914 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 99 signal and 548 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 1171 signal and 1016 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 1121 signal and 1406 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 2054 signal and 2287 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 1586 signal and 2330 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 1907 signal and 2501 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 0 receive 925 signal and 1819 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 2611 signal and 2186 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 718 signal and 576 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 23 signal and 409 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 3761 signal and 2691 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 158 signal and 269 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 432 signal and 552 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 373 signal and 812 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 1791 signal and 1236 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 304 signal and 526 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 403 signal and 948 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 1692 signal and 2150 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 1299 signal and 1786 cover from userspace component
2023/03/31 02:40:30 ------- fuzzer executor 2 receive 909 signal and 1789 cover from userspace component
2023/03/31 02:40:30 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:30 failure smash: true false
2023/03/31 02:40:30 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:30 disable threaded and collide
2023/03/31 02:40:30 prog length: 6
2023/03/31 02:40:30 prog length: 19
2023/03/31 02:40:30 send to channel: true, false
2023/03/31 02:40:30 HasCrashFail:true HasNetFail:false
02:40:30 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
syz_failure_sync(0x1, 0x3)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1427
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
Node-0:/root/daemon-log.14053
remove dir time 59
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-1428 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1428
receive_execute: 59, 91
receive_execute: 28, 91
receive_execute: 32, 90
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
receive_execute: 86, 95
execute_one time: 4, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8969, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 8969, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 15, 0, 6
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 0, 0, 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8486, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 8486, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
execute_call 0, 48, 0, 0
execute_one loop: 0, 0, 48
executor 0 write_server_output
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 5339, flag collect 1
----- executor 0 cover number : 1132, signal number : 1371
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 13, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 1388, flag collect 1
----- executor 0 cover number : 491, signal number : 323
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 686
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
executor 0 server cover_cnt 7 output_pos_value 4977
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
execute_call 0, 56, 0, 0
execute_one loop: 0, 0, 56
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 42
----- directly resend shmid 42
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 56, 0, 0
execute_one loop: 0, 0, 56
cover_reset in execute_call
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
----- executor 3 write_call_output, size 1649, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 52
----- directly resend shmid 52
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 54
----- directly resend shmid 54
----- executor 3 write_call_output, size 2776, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
-----executor 0 collect shmids 55
----- directly resend shmid 55
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
-----executor 0 collect shmids 56
----- directly resend shmid 56
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 2409, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 2409, flag collect 1
----- executor 3 cover number : 671, signal number : 154
----- completed 14
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
execute_call 0, 55, 0, 0
execute_one loop: 0, 0, 55
----- executor 3 cover number : 818, signal number : 14
----- completed 15
execute_call 0, 15, 0, 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
==14053==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 2962, 0, 1
execute_one loop: 0, 0, 2963
cover_reset in execute_call
execute_call 0, 2962, 0, 0
execute_one loop: 0, 0, 2962
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3121, 0
execute_one time: 2, 3121
----- executor 3 write_call_output, size 12593, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 12593, flag collect 1
----- executor 3 cover number : 1335, signal number : 448
----- completed 17
execute_call 0, 26, 0, 3
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2925, write pid:2925
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3149, 0
execute_one time: 1, 3149
2023/03/31 02:40:34 for select break: 1
2023/03/31 02:40:34 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 846, flag collect 1
----- executor 1 cover number : 289, signal number : 332
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 948, flag collect 1
----- executor 2 cover number : 289, signal number : 332
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28681, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 21765, flag collect 1
----- executor 0 cover number : 501, signal number : 410
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 181, 3152, 0
before receive testcase: 0 0
----- executor 2 cover number : 2281, signal number : 2821
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28388, flag collect 1
----- executor 1 cover number : 1962, signal number : 2358
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4865, flag collect 1
----- executor 1 cover number : 408, signal number : 224
----- executor 1 executes write_coverage_signal cov->size 24871, flag collect 1
----- executor 0 cover number : 126, signal number : 50
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 2 cover number : 575, signal number : 794
----- executor 2 executes write_coverage_signal cov->size 27271, flag collect 1
----- executor 0 cover number : 106, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 0 cover number : 387, signal number : 206
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 575, signal number : 67
----- executor 1 executes write_coverage_signal cov->size 32520, flag collect 1
----- executor 2 cover number : 1787, signal number : 2223
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1074, flag collect 1
----- executor 2 cover number : 280, signal number : 143
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3535, flag collect 1
Node-0:/root/daemon-log.14113
----- executor 2 cover number : 682, signal number : 509
----- executor 2 executes write_coverage_signal cov->size 1155, flag collect 1
----- executor 2 cover number : 523, signal number : 138
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2178, signal number : 2706
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1063, flag collect 1
----- executor 1 cover number : 278, signal number : 136
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4688, flag collect 1
----- executor 1 cover number : 829, signal number : 461
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1320, signal number : 1556
----- executor 1 executes write_coverage_signal cov->size 9451, flag collect 1
----- executor 1 cover number : 898, signal number : 225
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1819, signal number : 1272
----- executor 0 executes write_coverage_signal cov->size 5339, flag collect 1
----- executor 1 cover number : 1851, signal number : 1464
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1132, signal number : 1000
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 13, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 1103, flag collect 1
----- executor 0 cover number : 497, signal number : 114
----- executor 0 executes write_coverage_signal cov->size 1388, flag collect 1
----- executor 2 cover number : 1236, signal number : 1601
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 491, signal number : 155
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2442, signal number : 2064
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2415, signal number : 1545
----- executor 1 executes write_coverage_signal cov->size 30167, flag collect 1
----- executor 2 cover number : 2074, signal number : 1519
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2900, signal number : 1692
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
executor 1 server cover_cnt 18 output_pos_value 28843
----- executor 0 cover number : 894, signal number : 388
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 20
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 2 cover number : 2156, signal number : 959
executor 2 server cover_cnt 16 output_pos_value 27668
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 52 output_pos_value 17305
2023/03/31 02:40:34 for select break: 1
2023/03/31 02:40:34 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:34 for select break: 1
2023/03/31 02:40:34 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:40:34 for select break: 1
2023/03/31 02:40:34 --------- executor 0 receive reply, reply.done 1
2023/03/31 02:40:34 wg wait finish
2023/03/31 02:40:34 ------ all executors finish execution
2023/03/31 02:40:34 exec time: 3307
2023/03/31 02:40:34 ----- PS len: 4
2023/03/31 02:40:34 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:34 [SERVER] executor 0 has 52 replies
2023/03/31 02:40:34 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 1371 signal and 1132 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 13 signal and 13 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 323 signal and 491 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 [SERVER] executor 1 has 18 replies
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 332 signal and 289 cover from userspace component
2023/03/31 02:40:34 [SERVER] executor 2 has 16 replies
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 332 signal and 289 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 2358 signal and 1962 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 0 signal and 66 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 2821 signal and 2281 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 224 signal and 408 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 67 signal and 575 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 2706 signal and 2178 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 794 signal and 575 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 2223 signal and 1787 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 154 signal and 671 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 143 signal and 280 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 686 signal and 894 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 14 signal and 818 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 509 signal and 682 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 410 signal and 501 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 50 signal and 126 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 23 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 206 signal and 387 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 1 signal and 109 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 138 signal and 523 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 1601 signal and 1236 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 2064 signal and 2442 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 448 signal and 1335 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 1519 signal and 2074 cover from userspace component
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:34 ------- fuzzer executor 2 receive 959 signal and 2156 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 136 signal and 278 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 461 signal and 829 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 1556 signal and 1320 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 225 signal and 898 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 1272 signal and 1819 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 1464 signal and 1851 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 1000 signal and 1132 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 6 signal and 13 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 1545 signal and 2415 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 1692 signal and 2900 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 114 signal and 497 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 155 signal and 491 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 388 signal and 894 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 20 signal and 27 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:40:34 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
time breakdown 2: 119, 3213, 0
before receive testcase: 0 0
time breakdown 0: 150, 3216, 0
before receive testcase: 0 0
time breakdown 1: 122, 3214, 0
before receive testcase: 0 0
2023/03/31 02:40:34 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:34 disable threaded and collide
2023/03/31 02:40:34 prog length: 6
2023/03/31 02:40:34 prog length: 19
2023/03/31 02:40:34 HasCrashFail:true HasNetFail:false
02:40:34 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
syz_failure_sync(0x1, 0x3)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1428
remove dir time 55
-----finish removing dir
receive_execute: 48, 80
receive_execute: 46, 81
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-1429 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1429
receive_execute: 45, 80
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 105, 88
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8978, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 8978, flag collect 1
----- executor 3 cover number : 1274, signal number : 1586
----- completed 1
execute_call 0, 22, 0, 6
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8488, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 8488, flag collect 1
----- executor 3 cover number : 1139, signal number : 129
----- completed 5
execute_call 0, 15, 0, 4
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 882, flag collect 1
----- executor 0 cover number : 154, signal number : 183
----- executor 0 executes write_coverage_signal cov->size 1411, flag collect 1
----- executor 0 cover number : 604, signal number : 650
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 18917, flag collect 1
----- executor 0 cover number : 851, signal number : 900
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 205
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 10 output_pos_value 4027
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 54, 0, 0
execute_one loop: 0, 0, 54
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 54, 0, 0
execute_one loop: 0, 0, 54
cover_reset in execute_call
----- executor 3 write_call_output, size 1646, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 1646, flag collect 1
----- executor 3 cover number : 630, signal number : 222
----- completed 7
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 1231, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 1231, flag collect 1
----- executor 3 cover number : 515, signal number : 290
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1231, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 1231, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2773, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 2773, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 16
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3488, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 3488, flag collect 1
----- executor 3 cover number : 934, signal number : 245
----- completed 14
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
execute_call 0, 48, 0, 0
----- executor 3 write_call_output, size 2753, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 2753, flag collect 1
execute_one loop: 0, 0, 48
----- executor 3 cover number : 818, signal number : 12
----- completed 15
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==14113==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 2741, 0, 0
execute_one loop: 0, 0, 2741
cover_reset in execute_call
execute_call 0, 2740, 0, 0
execute_one loop: 0, 0, 2740
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 2901, 0
execute_one time: 2, 2902
----- executor 3 write_call_output, size 12580, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 12580, flag collect 1
----- executor 3 cover number : 1337, signal number : 449
----- completed 17
execute_call 0, 25, 0, 6
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2927, write pid:2927
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 2923, 0
execute_one time: 3, 2924
2023/03/31 02:40:37 for select break: 1
2023/03/31 02:40:37 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 193, 2930, 0
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 93, flag collect 1
----- executor 1 cover number : 65, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18768, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 18992, flag collect 1
----- executor 0 cover number : 501, signal number : 545
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1697, signal number : 2068
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 105
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 22822, flag collect 1
----- executor 2 cover number : 1731, signal number : 2151
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 17304, flag collect 1
----- executor 0 cover number : 126, signal number : 88
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 220
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 292
----- executor 1 executes write_coverage_signal cov->size 6920, flag collect 1
----- executor 1 cover number : 410, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 28498, flag collect 1
----- executor 2 cover number : 576, signal number : 704
----- executor 2 executes write_coverage_signal cov->size 11077, flag collect 1
----- executor 2 cover number : 410, signal number : 34
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1202
----- executor 0 executes write_coverage_signal cov->size 43, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 28
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1885, signal number : 2230
----- executor 1 executes write_coverage_signal cov->size 40, flag collect 1
----- executor 1 cover number : 35, signal number : 35
----- executor 1 executes write_coverage_signal cov->size 816, flag collect 1
----- executor 1 cover number : 270, signal number : 176
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1216, flag collect 1
----- executor 1 cover number : 390, signal number : 198
----- executor 1 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 1 cover number : 774, signal number : 337
----- executor 1 executes write_coverage_signal cov->size 14905, flag collect 1
----- executor 2 cover number : 2186, signal number : 2828
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 818, flag collect 1
----- executor 2 cover number : 270, signal number : 186
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1632, flag collect 1
----- executor 2 cover number : 518, signal number : 363
----- executor 2 executes write_coverage_signal cov->size 3058, flag collect 1
----- executor 2 cover number : 665, signal number : 393
----- executor 2 executes write_coverage_signal cov->size 27427, flag collect 1
----- executor 1 cover number : 945, signal number : 881
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1858, signal number : 1698
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 1
----- executor 0 cover number : 497, signal number : 120
----- executor 0 executes write_coverage_signal cov->size 19088, flag collect 1
----- executor 0 cover number : 953, signal number : 769
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 124
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
executor 0 server cover_cnt 53 output_pos_value 17505
----- executor 2 cover number : 1189, signal number : 1469
----- executor 2 executes write_coverage_signal cov->size 25409, flag collect 1
----- executor 1 cover number : 1398, signal number : 981
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:40:37 for select break: 1
2023/03/31 02:40:37 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1165, signal number : 611
----- executor 2 executes write_coverage_signal cov->size 31816, flag collect 1
time breakdown 0: 125, 2966, 0
before receive testcase: 0 0
----- executor 1 cover number : 1840, signal number : 1449
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1792, signal number : 936
----- executor 2 executes write_coverage_signal cov->size 23686, flag collect 1
----- executor 1 cover number : 2606, signal number : 1829
----- executor 1 executes write_coverage_signal cov->size 31014, flag collect 1
----- executor 2 cover number : 2048, signal number : 1541
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2311, signal number : 1428
executor 1 server cover_cnt 19 output_pos_value 27600
2023/03/31 02:40:37 for select break: 1
2023/03/31 02:40:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 127, 2985, 0
before receive testcase: 0 0
----- executor 2 cover number : 2135, signal number : 1123
executor 2 server cover_cnt 17 output_pos_value 27141
2023/03/31 02:40:37 for select break: 1
2023/03/31 02:40:37 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:37 wg wait finish
2023/03/31 02:40:37 ------ all executors finish execution
2023/03/31 02:40:37 exec time: 3072
2023/03/31 02:40:37 ----- PS len: 4
2023/03/31 02:40:37 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:37 fuzzer receive 1586 signal and 1274 cover from executor 3
2023/03/31 02:40:37 [SERVER] executor 1 has 19 replies
2023/03/31 02:40:37 [SERVER] executor 2 has 17 replies
2023/03/31 02:40:37 [SERVER] executor 0 has 53 replies
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 183 signal and 154 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 650 signal and 604 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 900 signal and 851 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 205 signal and 349 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 545 signal and 501 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 88 signal and 126 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 220 signal and 286 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 75 signal and 65 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 2068 signal and 1697 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 105 signal and 116 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 57 signal and 66 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 292 signal and 576 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 1 signal and 410 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 2151 signal and 1731 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 2230 signal and 1885 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 35 signal and 35 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 176 signal and 270 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 704 signal and 576 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 34 signal and 410 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 198 signal and 390 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 337 signal and 774 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 2828 signal and 2186 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 186 signal and 270 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 881 signal and 945 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 981 signal and 1398 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 363 signal and 518 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 393 signal and 665 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 1449 signal and 1840 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 1829 signal and 2606 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 1 receive 1428 signal and 2311 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 1469 signal and 1189 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 611 signal and 1165 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 936 signal and 1792 cover from userspace component
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 1541 signal and 2048 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 2 receive 1123 signal and 2135 cover from userspace component
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 129 signal and 1139 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 222 signal and 630 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 290 signal and 515 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 16 signal and 128 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 245 signal and 934 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 449 signal and 1337 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 1202 signal and 1141 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 28 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 1698 signal and 1858 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 120 signal and 497 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 769 signal and 953 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 124 signal and 349 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:40:37 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
time breakdown 2: 128, 2992, 0
before receive testcase: 0 0
2023/03/31 02:40:37 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:37 failure smash: true false
2023/03/31 02:40:37 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:37 disable threaded and collide
2023/03/31 02:40:37 prog length: 6
2023/03/31 02:40:37 prog length: 19
2023/03/31 02:40:37 send to channel: true, false
2023/03/31 02:40:37 HasCrashFail:true HasNetFail:false
02:40:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
syz_failure_sync(0x1, 0x3)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-1429
remove dir time 57
-----finish removing dir
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1430 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1430
receive_execute: 24, 98
receive_execute: 17, 98
receive_execute: 42, 98
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 70, 106
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8997, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 8997, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8506, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 8506, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 22, 0, 2
execute_one loop: 0, 0, 24
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 46
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8767, flag collect 1
----- executor 0 cover number : 1332, signal number : 1611
executor 0 server cover_cnt 1 output_pos_value 2947
Node-0:/root/daemon-log.14172
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 44, 0, 0
execute_one loop: 0, 0, 44
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 336
----- completed 11
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 16
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2226, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 2226, flag collect 1
----- executor 3 cover number : 651, signal number : 146
----- completed 14
execute_call 0, 17, 0, 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 14
----- completed 15
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 147
----- completed 16
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 57, 0, 0
execute_one loop: 0, 0, 57
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14172==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2680, 0, 0
execute_one loop: 0, 0, 2680
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2827, 0
execute_one time: 2, 2827
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 2680, 0, 0
execute_one loop: 0, 0, 2680
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2928, write pid:2928
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 1, 0
executor 3, execute_one inner time: 0, 2821, 0
execute_one time: 1, 2821
2023/03/31 02:40:40 for select break: 1
2023/03/31 02:40:40 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 783, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 767, flag collect 1
----- executor 1 cover number : 279, signal number : 316
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 471
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 279, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 176, 2823, 0
before receive testcase: 0 0
----- executor 0 cover number : 126, signal number : 97
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 208
----- executor 0 executes write_coverage_signal cov->size 2788, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 0 cover number : 422, signal number : 368
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 57, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 27390, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 539, signal number : 617
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 29679, flag collect 1
----- executor 2 cover number : 2425, signal number : 2900
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 127
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 17535, flag collect 1
----- executor 0 cover number : 1965, signal number : 2291
----- executor 0 executes write_coverage_signal cov->size 4448, flag collect 1
----- executor 0 cover number : 242, signal number : 43
executor 0 server cover_cnt 36 output_pos_value 12866
----- executor 1 cover number : 2433, signal number : 2937
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 24461, flag collect 1
----- executor 2 cover number : 410, signal number : 480
----- executor 2 executes write_coverage_signal cov->size 8295, flag collect 1
2023/03/31 02:40:40 for select break: 1
2023/03/31 02:40:40 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 409, signal number : 26
----- executor 2 executes write_coverage_signal cov->size 22777, flag collect 1
----- executor 1 cover number : 410, signal number : 365
----- executor 1 executes write_coverage_signal cov->size 2053, flag collect 1
time breakdown 0: 140, 2847, 0
before receive testcase: 0 0
----- executor 1 cover number : 409, signal number : 13
----- executor 1 executes write_coverage_signal cov->size 27482, flag collect 1
----- executor 2 cover number : 2319, signal number : 3240
----- executor 2 executes write_coverage_signal cov->size 814, flag collect 1
----- executor 2 cover number : 269, signal number : 160
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 4733, flag collect 1
----- executor 2 cover number : 956, signal number : 676
----- executor 2 executes write_coverage_signal cov->size 739, flag collect 1
----- executor 2 cover number : 377, signal number : 61
----- executor 2 executes write_coverage_signal cov->size 27856, flag collect 1
----- executor 1 cover number : 1863, signal number : 2237
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 814, flag collect 1
----- executor 1 cover number : 269, signal number : 145
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 129
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4060, flag collect 1
----- executor 1 cover number : 930, signal number : 388
----- executor 1 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 1 cover number : 540, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 5446, flag collect 1
----- executor 2 cover number : 1120, signal number : 1474
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 272
----- executor 2 executes write_coverage_signal cov->size 21441, flag collect 1
----- executor 1 cover number : 730, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1009, signal number : 690
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1381, signal number : 1346
----- executor 1 executes write_coverage_signal cov->size 29968, flag collect 1
----- executor 1 cover number : 2033, signal number : 1658
----- executor 1 executes write_coverage_signal cov->size 23148, flag collect 1
----- executor 2 cover number : 2054, signal number : 2143
----- executor 2 executes write_coverage_signal cov->size 28331, flag collect 1
----- executor 1 cover number : 2359, signal number : 1828
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1660, signal number : 1035
----- executor 2 executes write_coverage_signal cov->size 28339, flag collect 1
----- executor 1 cover number : 2256, signal number : 1717
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 22 output_pos_value 31448
2023/03/31 02:40:40 for select break: 1
2023/03/31 02:40:40 --------- executor 1 receive reply, reply.done 1
----- executor 2 cover number : 1973, signal number : 1236
time breakdown 1: 122, 2883, 0
before receive testcase: 0 0
executor 2 server cover_cnt 24 output_pos_value 32089
2023/03/31 02:40:40 for select break: 1
2023/03/31 02:40:40 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:40 wg wait finish
2023/03/31 02:40:40 ------ all executors finish execution
2023/03/31 02:40:40 exec time: 2985
2023/03/31 02:40:40 ----- PS len: 4
2023/03/31 02:40:40 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:40 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 [SERVER] executor 1 has 22 replies
2023/03/31 02:40:40 [SERVER] executor 2 has 24 replies
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 316 signal and 279 cover from userspace component
2023/03/31 02:40:40 [SERVER] executor 0 has 36 replies
2023/03/31 02:40:40 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 1611 signal and 1332 cover from userspace component
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 336 signal and 830 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 471 signal and 501 cover from userspace component
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 97 signal and 126 cover from userspace component
2023/03/31 02:40:40 fuzzer receive 16 signal and 128 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 316 signal and 279 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 2900 signal and 2425 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 127 signal and 116 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 617 signal and 539 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:40:40 fuzzer receive 146 signal and 651 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 14 signal and 818 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 147 signal and 749 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 2937 signal and 2433 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 365 signal and 410 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 13 signal and 409 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 208 signal and 286 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 480 signal and 410 cover from userspace component
time breakdown 2: 115, 2886, 0
before receive testcase: 0 0
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 26 signal and 409 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 2237 signal and 1863 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 145 signal and 269 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 129 signal and 526 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 388 signal and 930 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 368 signal and 422 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 23 signal and 57 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 23 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 3240 signal and 2319 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 160 signal and 269 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 2291 signal and 1965 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 75 signal and 540 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 0 receive 43 signal and 242 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 591 signal and 730 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 676 signal and 956 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 61 signal and 377 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 1474 signal and 1120 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 272 signal and 526 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 1346 signal and 1381 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 690 signal and 1009 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 2143 signal and 2054 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 1658 signal and 2033 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 1035 signal and 1660 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 2 receive 1236 signal and 1973 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 1828 signal and 2359 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 1717 signal and 2256 cover from userspace component
2023/03/31 02:40:40 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:40 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:40 disable threaded and collide
2023/03/31 02:40:40 prog length: 6
2023/03/31 02:40:40 prog length: 19
2023/03/31 02:40:40 HasCrashFail:true HasNetFail:false
02:40:40 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
syz_failure_sync(0x1, 0x3)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1430
remove dir time 82
-----finish removing dir
receive_execute: 35, 105
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-1431 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1431
receive_execute: 39, 104
receive_execute: 75, 105
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 1
receive_execute: 91, 112
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8956, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 8956, flag collect 1
----- executor 3 cover number : 1274, signal number : 1586
----- completed 1
execute_call 0, 21, 0, 2
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 922, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 922, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8478, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 8478, flag collect 1
execute_call 0, 53, 0, 0
execute_one loop: 0, 0, 53
executor 0 write_server_output
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 45
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 cover number : 0, signal number : 0
----- completed 6
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 46, 0, 0
execute_one loop: 0, 0, 46
cover_reset in execute_call
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 1646, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 1646, flag collect 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1231, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 1231, flag collect 1
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 cover number : 515, signal number : 164
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
-----executor 0 collect shmids 5
----- directly resend shmid 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
----- executor 3 write_call_output, size 2773, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 2773, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2220, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 2220, flag collect 1
----- executor 3 cover number : 651, signal number : 139
----- completed 14
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 2753, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 2753, flag collect 1
----- executor 3 cover number : 818, signal number : 14
----- completed 15
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 2532, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 2532, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 16
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 72, 1, 0
execute_one loop: 0, 0, 73
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 2784, 0, 0
execute_one loop: 0, 0, 2784
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2929, write pid:2929
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 2946, 0
execute_one time: 2, 2947
2023/03/31 02:40:43 for select break: 1
2023/03/31 02:40:43 --------- executor 3 receive reply, reply.done 1
execute_call 0, 2783, 0, 0
execute_one loop: 0, 0, 2783
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2954, 0
execute_one time: 1, 2954
executor 1 write_server_output
time breakdown 3: 203, 2950, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 844, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 940, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 47, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 38, signal number : 42
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 595
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
before receive testcase: 0 0
----- executor 1 cover number : 509, signal number : 576
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 25013, flag collect 1
----- executor 0 cover number : 126, signal number : 104
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 224
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 539, signal number : 617
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 2 cover number : 3, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 2331, signal number : 2775
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 6908, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 410, signal number : 252
----- executor 1 executes write_coverage_signal cov->size 18921, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2587, signal number : 3159
----- executor 2 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 2 cover number : 64, signal number : 72
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6920, flag collect 1
----- executor 1 cover number : 410, signal number : 54
----- executor 1 executes write_coverage_signal cov->size 27295, flag collect 1
----- executor 2 cover number : 410, signal number : 494
----- executor 2 executes write_coverage_signal cov->size 19592, flag collect 1
----- executor 2 cover number : 410, signal number : 168
----- executor 2 executes write_coverage_signal cov->size 32646, flag collect 1
----- executor 0 cover number : 1606, signal number : 1901
executor 0 server cover_cnt 34 output_pos_value 8171
----- executor 1 cover number : 2444, signal number : 3147
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 983, flag collect 1
----- executor 1 cover number : 278, signal number : 153
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 195
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1519, flag collect 1
----- executor 1 cover number : 564, signal number : 180
----- executor 1 executes write_coverage_signal cov->size 3939, flag collect 1
----- executor 1 cover number : 904, signal number : 312
----- executor 1 executes write_coverage_signal cov->size 31393, flag collect 1
2023/03/31 02:40:43 for select break: 1
2023/03/31 02:40:43 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 180, 2983, 0
before receive testcase: 0 0
----- executor 2 cover number : 2071, signal number : 2983
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1095, flag collect 1
----- executor 2 cover number : 280, signal number : 163
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3248, flag collect 1
----- executor 2 cover number : 908, signal number : 587
----- executor 2 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 2 cover number : 596, signal number : 139
----- executor 2 executes write_coverage_signal cov->size 15986, flag collect 1
----- executor 1 cover number : 1308, signal number : 1713
----- executor 1 executes write_coverage_signal cov->size 18015, flag collect 1
----- executor 2 cover number : 1001, signal number : 1150
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 230
----- executor 2 executes write_coverage_signal cov->size 32186, flag collect 1
----- executor 1 cover number : 1009, signal number : 347
----- executor 1 executes write_coverage_signal cov->size 29616, flag collect 1
----- executor 2 cover number : 1392, signal number : 1209
----- executor 2 executes write_coverage_signal cov->size 29607, flag collect 1
----- executor 1 cover number : 2264, signal number : 1707
----- executor 1 executes write_coverage_signal cov->size 27457, flag collect 1
----- executor 1 cover number : 1662, signal number : 928
----- executor 1 executes write_coverage_signal cov->size 28879, flag collect 1
----- executor 2 cover number : 2492, signal number : 2146
----- executor 2 executes write_coverage_signal cov->size 25897, flag collect 1
----- executor 2 cover number : 2339, signal number : 1545
----- executor 2 executes write_coverage_signal cov->size 30258, flag collect 1
----- executor 1 cover number : 2141, signal number : 1447
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 23 output_pos_value 31439
2023/03/31 02:40:43 for select break: 1
2023/03/31 02:40:43 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 143, 3010, 0
----- executor 2 cover number : 1749, signal number : 1303
executor 2 server cover_cnt 24 output_pos_value 34084
before receive testcase: 0 0
2023/03/31 02:40:43 for select break: 1
2023/03/31 02:40:43 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:43 wg wait finish
2023/03/31 02:40:43 ------ all executors finish execution
2023/03/31 02:40:43 exec time: 3120
2023/03/31 02:40:43 ----- PS len: 4
2023/03/31 02:40:43 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:43 fuzzer receive 1586 signal and 1274 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 139 signal and 651 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 14 signal and 818 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:43 [SERVER] executor 0 has 34 replies
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 595 signal and 501 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 104 signal and 126 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
time breakdown 2: 140, 3015, 0
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 224 signal and 286 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 22 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 [SERVER] executor 1 has 23 replies
2023/03/31 02:40:43 [SERVER] executor 2 has 24 replies
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 617 signal and 539 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 42 signal and 38 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 576 signal and 509 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 3159 signal and 2587 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 72 signal and 64 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 0 receive 1901 signal and 1606 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 2775 signal and 2331 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 5 signal and 66 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 252 signal and 410 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 54 signal and 410 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 3147 signal and 2444 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 153 signal and 278 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 195 signal and 526 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 180 signal and 564 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 312 signal and 904 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 1713 signal and 1308 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 494 signal and 410 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 168 signal and 410 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 2983 signal and 2071 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 347 signal and 1009 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 1707 signal and 2264 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 928 signal and 1662 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 163 signal and 280 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 1447 signal and 2141 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 587 signal and 908 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 139 signal and 596 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 1150 signal and 1001 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 230 signal and 526 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 1209 signal and 1392 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 2146 signal and 2492 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 1545 signal and 2339 cover from userspace component
2023/03/31 02:40:43 ------- fuzzer executor 2 receive 1303 signal and 1749 cover from userspace component
2023/03/31 02:40:43 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:43 failure smash: true false
2023/03/31 02:40:43 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:43 disable threaded and collide
2023/03/31 02:40:43 prog length: 6
2023/03/31 02:40:43 prog length: 19
2023/03/31 02:40:43 send to channel: true, false
2023/03/31 02:40:43 HasCrashFail:true HasNetFail:false
02:40:43 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
syz_failure_sync(0x1, 0x3)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1431
remove dir time 83
-----finish removing dir
Node-0:/root/daemon-log.14261
receive_execute: 27, 138
mkdir time 55
executor 3 create dir /root/glusterfs-client/dfs-0-1432 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1432
receive_execute: 59, 138
receive_execute: 31, 138
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 84, 143
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9003, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 9003, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 13, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8478, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 8478, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 21, 0, 8
execute_one loop: 0, 0, 29
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 54, 0, 0
execute_one loop: 0, 0, 54
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1729, signal number : 2206
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 426, signal number : 326
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 107
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 569
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 12
executor 0 server cover_cnt 10 output_pos_value 6760
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 55, 0, 0
execute_one loop: 0, 0, 55
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
execute_call 0, 55, 0, 0
execute_one loop: 0, 0, 55
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
----- executor 3 write_call_output, size 1649, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 37
----- directly resend shmid 37
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 38
----- directly resend shmid 38
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
----- executor 3 write_call_output, size 4010, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 4010, flag collect 1
----- executor 3 cover number : 1131, signal number : 491
----- completed 11
execute_call 0, 10, 0, 4
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3494, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 3494, flag collect 1
----- executor 3 cover number : 934, signal number : 133
----- completed 14
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 15
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
execute_call 0, 62, 0, 0
execute_one loop: 0, 0, 62
----- executor 3 cover number : 749, signal number : 148
----- completed 16
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14261==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
execute_call 0, 2702, 0, 0
execute_one loop: 0, 0, 2702
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2873, 0
execute_one time: 4, 2873
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2702, 0, 0
execute_one loop: 0, 0, 2702
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2930, write pid:2930
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2870, 0
execute_one time: 2, 2871
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 2 cover number : 7, signal number : 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 6542, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:40:46 for select break: 1
2023/03/31 02:40:46 --------- executor 3 receive reply, reply.done 1
----- executor 1 cover number : 630, signal number : 740
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 152
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 227, 2874, 0
before receive testcase: 0 1
----- executor 2 cover number : 49, signal number : 66
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1573, signal number : 1579
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 25172, flag collect 1
----- executor 0 cover number : 126, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 1571, signal number : 1997
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 25847, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 327
----- executor 1 executes write_coverage_signal cov->size 1352, flag collect 1
----- executor 1 cover number : 401, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 23944, flag collect 1
----- executor 2 cover number : 410, signal number : 530
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1729, signal number : 2096
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 0 cover number : 426, signal number : 186
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2117, signal number : 2552
----- executor 1 executes write_coverage_signal cov->size 1001, flag collect 1
----- executor 1 cover number : 280, signal number : 239
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 170
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 2 cover number : 2472, signal number : 3350
----- executor 2 executes write_coverage_signal cov->size 935, flag collect 1
----- executor 2 cover number : 270, signal number : 219
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 641, signal number : 244
----- executor 1 executes write_coverage_signal cov->size 2534, flag collect 1
----- executor 0 cover number : 142, signal number : 59
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 0 cover number : 498, signal number : 123
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 2532, flag collect 1
----- executor 2 cover number : 809, signal number : 699
----- executor 2 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 1 cover number : 809, signal number : 313
----- executor 1 executes write_coverage_signal cov->size 3829, flag collect 1
----- executor 2 cover number : 641, signal number : 213
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 713, signal number : 536
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 240
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1002, signal number : 393
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 7
executor 0 server cover_cnt 54 output_pos_value 17759
2023/03/31 02:40:46 for select break: 1
2023/03/31 02:40:46 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 197, 2909, 0
before receive testcase: 0 0
----- executor 2 cover number : 1219, signal number : 1645
----- executor 2 executes write_coverage_signal cov->size 28582, flag collect 1
----- executor 1 cover number : 1381, signal number : 1238
----- executor 1 executes write_coverage_signal cov->size 27482, flag collect 1
----- executor 2 cover number : 1659, signal number : 1256
----- executor 2 executes write_coverage_signal cov->size 29296, flag collect 1
----- executor 1 cover number : 1862, signal number : 1285
----- executor 1 executes write_coverage_signal cov->size 31058, flag collect 1
----- executor 2 cover number : 1971, signal number : 1003
----- executor 2 executes write_coverage_signal cov->size 24472, flag collect 1
----- executor 1 cover number : 2370, signal number : 1744
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2100, signal number : 1205
executor 2 server cover_cnt 19 output_pos_value 26221
2023/03/31 02:40:46 for select break: 1
2023/03/31 02:40:46 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 165, 2928, 0
----- executor 1 cover number : 2178, signal number : 1264
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 20 output_pos_value 28222
before receive testcase: 0 0
2023/03/31 02:40:46 for select break: 1
2023/03/31 02:40:46 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:40:46 wg wait finish
2023/03/31 02:40:46 ------ all executors finish execution
2023/03/31 02:40:46 exec time: 3074
2023/03/31 02:40:46 ----- PS len: 4
2023/03/31 02:40:46 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:46 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 491 signal and 1131 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 133 signal and 934 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:46 [SERVER] executor 0 has 54 replies
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 2206 signal and 1729 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 326 signal and 426 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 107 signal and 142 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:40:46 [SERVER] executor 1 has 20 replies
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 569 signal and 1002 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 12 signal and 165 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 152 signal and 501 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 5 signal and 126 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 740 signal and 630 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 207 signal and 286 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:46 [SERVER] executor 2 has 19 replies
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 66 signal and 49 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 1997 signal and 1571 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 530 signal and 410 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 3350 signal and 2472 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 219 signal and 270 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 699 signal and 809 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 213 signal and 641 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 240 signal and 526 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 1645 signal and 1219 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 2096 signal and 1729 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 186 signal and 426 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 59 signal and 142 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 3 signal and 9 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1579 signal and 1573 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 1256 signal and 1659 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 1003 signal and 1971 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 2 receive 1205 signal and 2100 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 327 signal and 410 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1 signal and 401 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 2552 signal and 2117 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 239 signal and 280 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 170 signal and 526 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 244 signal and 641 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 123 signal and 498 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 313 signal and 809 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 536 signal and 713 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 393 signal and 1002 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 17 signal and 165 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 0 receive 7 signal and 8 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1238 signal and 1381 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1285 signal and 1862 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1744 signal and 2370 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 1264 signal and 2178 cover from userspace component
2023/03/31 02:40:46 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
time breakdown 1: 169, 2936, 0
before receive testcase: 0 0
2023/03/31 02:40:46 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:46 disable threaded and collide
2023/03/31 02:40:46 prog length: 6
2023/03/31 02:40:46 prog length: 19
2023/03/31 02:40:46 HasCrashFail:true HasNetFail:false
02:40:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
syz_failure_sync(0x1, 0x3)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1432
remove dir time 63
-----finish removing dir
receive_execute: 29, 86
receive_execute: 56, 86
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-1433 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1433
receive_execute: 37, 85
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 86, 90
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8960, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 8960, flag collect 1
----- executor 3 cover number : 1273, signal number : 1585
----- completed 1
execute_call 0, 15, 0, 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8498, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 8498, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 18, 0, 3
execute_one loop: 0, 0, 21
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 48, 0, 0
execute_one loop: 0, 0, 48
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
cover_reset in execute_call
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 1649, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 13, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3488, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 3488, flag collect 1
----- executor 3 cover number : 934, signal number : 134
----- completed 14
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 15
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 16
execute_call 0, 5, 0, 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_call 0, 70, 0, 0
execute_one loop: 0, 0, 70
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 2869, 0, 0
execute_one loop: 0, 0, 2869
cover_reset in execute_call
execute_call 0, 2869, 0, 0
execute_one loop: 0, 0, 2869
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3028, 0
execute_one time: 1, 3028
----- executor 3 write_call_output, size 0, pid 2931, write pid:2931
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3024, 0
execute_one time: 1, 3025
2023/03/31 02:40:49 for select break: 1
2023/03/31 02:40:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 655, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1060, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 330, signal number : 383
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 595
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 176, 3028, 0
before receive testcase: 0 0
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 23124, flag collect 1
----- executor 0 cover number : 126, signal number : 104
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 224
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 512, signal number : 586
----- executor 1 executes write_coverage_signal cov->size 47, flag collect 1
----- executor 1 cover number : 38, signal number : 35
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2273, signal number : 2632
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 127
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 2059, flag collect 1
----- executor 2 cover number : 409, signal number : 435
----- executor 2 executes write_coverage_signal cov->size 23778, flag collect 1
----- executor 1 cover number : 2425, signal number : 2899
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 86
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 1377, flag collect 1
----- executor 0 cover number : 1820, signal number : 2175
executor 0 server cover_cnt 34 output_pos_value 8659
----- executor 1 cover number : 409, signal number : 234
----- executor 1 executes write_coverage_signal cov->size 25139, flag collect 1
2023/03/31 02:40:49 for select break: 1
2023/03/31 02:40:49 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 410, signal number : 70
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 146
----- executor 1 executes write_coverage_signal cov->size 26928, flag collect 1
time breakdown 0: 142, 3048, 0
before receive testcase: 0 0
----- executor 2 cover number : 2480, signal number : 3424
----- executor 2 executes write_coverage_signal cov->size 713, flag collect 1
----- executor 2 cover number : 268, signal number : 152
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 1864, signal number : 2202
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 1 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 726, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2524, flag collect 1
----- executor 1 cover number : 270, signal number : 149
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 98
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1944, flag collect 1
----- executor 2 cover number : 809, signal number : 544
----- executor 2 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 1 cover number : 701, signal number : 262
----- executor 1 executes write_coverage_signal cov->size 3532, flag collect 1
----- executor 2 cover number : 641, signal number : 226
----- executor 2 executes write_coverage_signal cov->size 5032, flag collect 1
----- executor 1 cover number : 790, signal number : 229
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 863, signal number : 803
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 276
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1406, signal number : 1812
----- executor 1 executes write_coverage_signal cov->size 3990, flag collect 1
----- executor 1 cover number : 658, signal number : 50
----- executor 1 executes write_coverage_signal cov->size 27219, flag collect 1
----- executor 2 cover number : 1300, signal number : 1213
----- executor 2 executes write_coverage_signal cov->size 24626, flag collect 1
----- executor 2 cover number : 1660, signal number : 1290
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2457, signal number : 2304
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2449, signal number : 1762
----- executor 2 executes write_coverage_signal cov->size 20851, flag collect 1
----- executor 1 cover number : 2621, signal number : 2050
----- executor 1 executes write_coverage_signal cov->size 29467, flag collect 1
----- executor 2 cover number : 1627, signal number : 867
executor 2 server cover_cnt 24 output_pos_value 31716
----- executor 1 cover number : 1931, signal number : 1053
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
2023/03/31 02:40:49 for select break: 1
2023/03/31 02:40:49 --------- executor 2 receive reply, reply.done 1
executor 1 server cover_cnt 24 output_pos_value 32145
time breakdown 2: 122, 3083, 0
2023/03/31 02:40:49 for select break: 1
2023/03/31 02:40:49 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:40:49 wg wait finish
2023/03/31 02:40:49 ------ all executors finish execution
2023/03/31 02:40:49 exec time: 3171
2023/03/31 02:40:49 ----- PS len: 4
2023/03/31 02:40:49 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:49 fuzzer receive 1585 signal and 1273 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 134 signal and 934 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:49 [SERVER] executor 2 has 24 replies
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 383 signal and 330 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:49 [SERVER] executor 1 has 24 replies
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 2632 signal and 2273 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 127 signal and 116 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:40:49 [SERVER] executor 0 has 34 replies
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 595 signal and 501 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 586 signal and 512 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 104 signal and 126 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 35 signal and 38 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 435 signal and 409 cover from userspace component
time breakdown 1: 115, 3085, 0
before receive testcase: 0 0
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 70 signal and 410 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 224 signal and 286 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 3424 signal and 2480 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 152 signal and 268 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 22 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 544 signal and 809 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 226 signal and 641 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 803 signal and 863 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 276 signal and 526 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 1213 signal and 1300 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 1290 signal and 1660 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 1762 signal and 2449 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 0 receive 2175 signal and 1820 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 2 receive 867 signal and 1627 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 2899 signal and 2425 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 86 signal and 116 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 5 signal and 66 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 234 signal and 409 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 146 signal and 410 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 2202 signal and 1864 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 149 signal and 270 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 98 signal and 526 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 262 signal and 701 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 229 signal and 790 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 1812 signal and 1406 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 50 signal and 658 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 2304 signal and 2457 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 2050 signal and 2621 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 1053 signal and 1931 cover from userspace component
2023/03/31 02:40:49 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:40:49 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:49 failure smash: true false
2023/03/31 02:40:49 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:49 disable threaded and collide
2023/03/31 02:40:49 prog length: 6
2023/03/31 02:40:49 prog length: 19
2023/03/31 02:40:49 send to channel: true, false
2023/03/31 02:40:49 HasCrashFail:true HasNetFail:false
02:40:49 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="c2e6c9a28a5419a64397a4b135b3f2f5cc742518625e6d224dfb99bb97f588d90a8fbc38613a02a29f275f3a10e2dc43f9dd1d8cb52b9d2fb1144ba5f2eb02d1089b9ddbd58c061eca1f92d8d228e658805be14496800a97cd51d5de414e732cafb1d34aa7cbc86408cf9c3e31c8cf82f10327aa1946a6e1ce7e2816464909f3b6af59ffaac63b6b76912e216eb462aa58a86f4013e9818243c5c53b97423c56a55702376feccc2887e25274197bf4f4899434dc6f7b38df74f32dcdaabb268476543ddd18e45cda07d0282506539801a126eb439b0a9c4ba092d5bdc5cfac37521afdebcecb1b15209aaec372448dcf16ab5f32ac0726297200651dfa70be682395d7696a2be237337684227ce57a3eedc706a3814c55eda93de77f3a9ed079c8e4ec0aac4c7df9d860372fb70a0216c22945a31efafb75328f34b4fb18a9d557e6b559b0d06254fb2ccdf9fcb3946eef0c5512d6430a30efc29ee480fc6c0a05a73ec02bf278745fb24af2c4a3e2939bdc5faab81d1b5dcb9ef55350036134f727929e2e1ca098eb3aac0e2e5d9ac94df169265d69a0b0643f2f759b84c5bd7b1a995a8247f596447ac686715274cddabe59194726d8c09603bf71c580e98ec48a1636325c022428861596b3bed470ad21fb798f0bbf64a8f355eec53351d6bfe567d2400c7be88266fa6f708e83d2e45b34b9f5018dda7fe6819d0642bd0bd41c76e67ad903393b382a7b6da26c9e8c47218243f51ea3a57d113ac5b995272f622727d971b860cc5da0a5481f742228e89d40690536a8aa97810007b5f5cccb0c01a066ebf0768e17ed428563363104530800a84dfa22137debcca397c75655b9aee067efe94ec89373d49773f2387f2bbfa01e9914c570f86ee1e84d7cec235815c1e5bac0ba842ad806352d465a1115b448c9cc4b52ad37df9ff9302ea364ebcc3eb364876ad0f717019e81dc46195c5e30da8ddfc3e7195907d5e47f247ead0900e5108be1903242f1399502db91eb342f7dd93ed0a3509d5bdfbdb28a200721a640ca7736f5d615c4a227ddaa7e2e257bbcc28fbead47a192b2ade5282ae793a3a6c22915bdd15a9a19fa36479f08f8e661b2b9782c6906d5379427e2f2c92539669fd02674cea2188e5dba374d1aa5c33175bd58f3a21a6574f556c63d25d46c0c851b5743595af34595850c772b3eaea78c146376f434e7b344cb5ac6dcbd722b8b842d99979f68b21ed6b51d5c5c2f2cbcdd928baf12ae7367edba1d6b356ced9b92ed26a82826eceb633f1668fc33bbe030f249b8dfd31edf029e40c76e65182c20477f7a31dc528e9f1eafb9fda281bd95762c6edb98fe0a8ce2ee571c892352023e76310c1eabb8781b00dd58c11e006d567f858693f49bc9fa032489634c1d712a0a4f5eccb97a86007c892d7f0fe07adb75244cb14868e558c41888a8c3b158d33974ce12e5267ac0e78301dbca7e82bf197c43201a0289fad1b53f2b4263d7e1fe41ffb9940b05d504ee43b4452603781acabc684be0347a1cb5ede6cfad5d3fbeee118bf4f7c83b2271dfc96d9a609a3dc4f7603603a05928ed11b987abc54f9ca170a1891fe258a1e85e0068492f2aabaad1652147450517448335a1e41caaef2c545bcee78a16a3bbac9f7223443d84a8a82fdbe1b72f4c1709621fac57bf0936fb6436551006f249c716b2124f33c46b47d5741ae4f4d75d9a64926b0b5d0aa043720cf0420b0daef83b2238187236e413f46b28a59b73159e3d7cdebbf181578cbbc03bf5db0fb76d532f98701e62e9ee58fce81debeb48c8e1e3974b4ad28d26ea3325afffb423496335a2753fec937ca4f7644bf86df184e6eb555f12f25b6e7cb51dde1be606e5bc0480337a319c9ddf77479625dc2595837fbc5cf94f2f8e5f8f288ab3a84230aaa85f6b0b876080c438da20f223b615858b96af1d6c985f105b6c4a406221d3726b4123f2b9a277a735b002d522c622c5a0386fa3f84ec360c3db7f9320bd07b5aa5f3d104c0a91c95125aec73b7727b8248d7b8796df9beec561ee2e5a8bc5b0ef330fceb33e1eaea901afd7e3afbcf2a23740e8cb64d3faf44acf0150338dc62170fe970d1c4eb7dafaab6077421be6d7b5253f1a5f0bffdfcf68bb0470495a1eadd104aa612baa9ac2d936a37d1d858050dfef9993c640e69c06cca5e9eb4a9e790e78b9ae2624f4bf079d57d1ac6cb537e0eb70f9b1275c70804bd6c5b3a2e758acde9878ee63187f17e13f6f6932da75ab3ec98f68575afe4712af0aa4a564fa98d21e9be0d7c775814ecb31eaf35c0132a57f557366ebb39a08762491df040e56c89aafb87913e4671bf6a24c16d642222234b85c0bb33a8606c4657b67eba3b0896db4b60e40f8569b490ea4d763089efcfe5e9586c01960d0391b4194528527b94c8d40d2f165ba161c6b444d5bb483ab6f24e0a7ce8c5950bf42b0243cd161ec939ccaf4413a50e746d4692fab3e1aeec362771d9e65104f1b24e18d0a1bf2a9e7c38fe6e196feb5d30dd26807756cda3ba5c661ffabc9cb7f6a94cf98cf84a45ae1693a5aca91dd2a3f4d7eb6aad61818fd20321537cb154b4f0dcfa5ceaa17d083ed1d50010bf46175032f81a2492e362434af9e0d5a2799adc398ca4a940d28b7e8653f77ea325b78eb883caf446b60448613fc7775367215941f95d1401f38fbfa6acb36ac08f9fa0b7c3563214923082c6e97f1004d21dc5e50970abd54bed198d3524a60622c59e9fa24489dffb8fc134637caabfedd79b84d36ce14255c7f22cd61e10b84864fa0cd2b02a29351ab9d9c3e3ba61d37f0deb08f7fa73c4ee6cc1558d1617c17e207505dab745a3a56fd8ed0c0cd70a54e8a138ee84e66f8552bc8424c2d4bc643dd061b85a3888983b25448cfc5584099bec19c164320195a546f63ae82ad7b3b5d3607d8b84f082edb5d842acce111b8056feeb442e43567b4fb2cc19843576736e585ca0ec576db83ccedb8bd1064abd021dd52a7f38f61cfcf727843fea5b63244e9a93a2ea0eef8ce0145448f1b46c389014b27fe1986697bd30314cc071f824a5775bcb118ea2356db4b8282cead9df2d4e242b9c1126b44edafd340bd8b0e39c6424886e42729f2d2995d106cd1ff4df4bd1abb9b99d3dbbcb8197730c86c144e6974937bd0e50d81fbe982a8172ea4db82ca3c430925b081a6579cbf8407b4f2b1a1dbf5aaf28050dfd826e1934af2f40d34e20ef1653d86265c167f4926ed1c2de54cc58ddcece1a31d666607d8308b433eef16c955a3ba02e5e1c485e71a761fc2b344f90223fbbdff42ef2b5f990768c44becd3221d97d51112b67ae7b0ad09a20546ac8453603c10b46739f440007774f58906c26463ec6d901d3613d796492de39956c3ce7a3c43c3683a86cb136d4d950f0928539992226fce69c57934d86440fb3ab87fb39f18601c15ee2719018d8c3505087358e73fe4f8d1dd1f951e1079def5c1095248d66ced8123d8845b50713ecc8c686abcccb989575a3cfd39287b0021adcf5231ee8b8cc5e802e58e88ad8f763bb0442d04e37db4946408fccbee446f78bca281f479791ed59ebfb00660ad8e7e45cab1410480ca8d6e3a920dedde22379c0731253a9037975dbc305342cce75b3dcded27a4b607d404322ed7909bb46693df60201dd2a23576991d5c109a100f5bf45d391724f67cbc457cc2ffa2e961f3dd6546b661408e7699fb709a5b7175c69f8e88d7f7444010c5a400fd783b5b0a342944ae2adbf8b0eeda69463deec5277dfde9bffec6718da3cbbd56c3ea67ad7d65743427d4d8b32d76bd99a8af36e5414be370c752fa74f127c70468b8d2f62c15f7a38fc8f2ba723c12a0dbadc5348296467c2220c50d82be89f05f379b8eadae4ce8ff4ce15b87253742016a9c81d367fdf6aa0e0f3f78a240a098b3cc16fbc7b0d2911aa768464bb68d01b0b3656c75c1b20487579be10836ea87d68050df28c2aed67f18822b554ea987b1fef45521a85603fd4be5c630c4cf12b1f5dc39b76fd0bce5acb086fc6a1a9ac065e73a36fddfa1d95728283bf952ba8d90603acc831baa6ee971ca7a5ed1f10726e71a3a7cc500872eaaa37f483527375d576abdf4eedecf75cb53049417c7cdde150c1a0a093311f66fcfb08ead403f11c1e57d3fd9eb5e6079f66817a929e607fe828f782aae0f8586bdcf7c03452c02972152ff4aaabc92fbec651c500a2a1d35e299a615daa3a089039f1facf69f7b3f70c559afb6a9ebd97ad05399fa888b3420d01e1b52c5c61634eb65337dbaea4f20ebc8190b99352941052f75a6a02624fd3baba8a46e3a3c8757c49483c2ba05ae42e1ae332860dbf7317975b6133eea0dabe14b0630bb15bc54d04eca3480502543ad341bebff31744ede53454d623a0a3d9bec845049b4ac52ebaf89127d07682eaf77fd777716d82e9ba6e038d25b117bd103e638dd2303d8683cf329a32e1840750cfc97e4eadbf6c1151c83752b449161aaf6b3d3a7f92b942fcb2d61be762c38dcab69878f8c2cc129be4f9a051e1f9464cf671aa6f5b868b9938ad9e563c946d96b3d851f812d6ad775bbf3a225a929f78feacd589fed63948b6534515e2748d0f1d2538e646de65d9abcc6f93c5985577627368ea4372616836136099a950445ef2a79f38cf1850de2b39f2b9a035c906b060d27500809972d7897523af5de3a719728ac7899f8a04148f63c9bf5bf04cff935e29a8122d8ad51a1ec995994e198e78c433af397d1b967b653b8233a58432a2b77d4b4ef760711645e01ba102c072bb9900062dfec5f3c78e97c2ae0b4fe5413591f0f18227d6189b184d429a782feba09795181efedf21df950c0967809487daa1b9fc5d4c61260aee2b4611d90a2635aa464452ff030159bf4740cdab60391b0ca867f7cb64fafd4d1a13a3fd3b9d8e520548a59c0b971f41fdf8e46619ae8289eca62920fd3125d601a9808c604b6215c34042b626a7b416c69307be2e741233ef31b279dab7dac767c3270b5d7a12cf7bce14ffd8b60b99813c0b35475b136c308f4ca3ae54ac17e9a4e064dfe01f98d6d5813c14aae79ece00ab9de11212c4c9846ef3fbd886702f5a575aebad2b0b2ed1a1d613886c2bcb774e6a65ffec02fa026148ca4b6d63f813c45f178546d7c032995172d366299ac63b59a426740e8c5f762af1942272c5ed914dc5e300a8b9884cf36bb4c965d65202fd83e14765e49a04c246e43423cfdf5b163087af2f9faf30b22294c6aec7da1e66ed95710ac8f13ce416d387ecaa4eb09512d1a6ade652d5fb489abc150a2a52177b0dcdbbe88907d8264e88a3495ec8bde4584c31f60df7f1584fe57efc1c58fbb9aacb04cf163d059c328f16da446dce46a76ce4f001cd97637b19ccb0be002d8d07d96e55f7574dad670c482dfec2cf0d99433632ee06a852e886f6ba791def11a56a1e7f002e479f59c0da034b1fb8c319f859933f6e0ab06b6c4c0874c1b9de44977e7d8049e7f97412057c1fd64111f538ab1b4ae09c72bcf51da9b11a84cffa0a575859b570eae80705778e7d44cc3efe0dae06538aba655de1ceb63a80d1141ca8bad713220d7a7e5f0f147b81764814e6af51b59b3dac1fb65765638dc8f7f4ea6e970fa1d86874e24fda9a911276a57728b7b730bb957b5a8ab58e95e64873979f688aac03e3b2f957a4a281f32ba552d3f787e709f5d394bca0df5d35cf0a063e535a6927632e10c51df55311ef45014912053006e5f1c657a7efc", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-1433
Node-0:/root/daemon-log.14360
remove dir time 98
-----finish removing dir
receive_execute: 33, 131
receive_execute: 35, 132
receive_execute: 69, 132
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-1434 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1434
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 85, 138
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 5
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8991, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 8991, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 18, 0, 4
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8505, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 8505, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 14, 0, 4
execute_one loop: 0, 0, 18
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3768, flag collect 1
----- executor 0 cover number : 1176, signal number : 1400
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 107
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 403
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 597
executor 0 server cover_cnt 9 output_pos_value 5407
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
----- executor 3 write_call_output, size 1649, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
-----executor 0 collect shmids 5
----- directly resend shmid 5
----- executor 3 cover number : 630, signal number : 194
----- completed 7
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
----- executor 3 write_call_output, size 5472, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 5472, flag collect 1
----- executor 3 cover number : 910, signal number : 68
----- completed 8
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 139
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4477, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 4477, flag collect 1
----- executor 3 cover number : 909, signal number : 332
----- completed 11
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2226, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 2226, flag collect 1
----- executor 3 cover number : 651, signal number : 146
----- completed 14
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 91
----- completed 15
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 2515, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 2515, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 16
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 65, 0, 0
execute_one loop: 0, 0, 65
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==14360==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2932, write pid:2932
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 2805, 0, 0
execute_one loop: 0, 0, 2805
executor 3, execute_one inner time: 0, 2973, 0
execute_one time: 2, 2973
2023/03/31 02:40:52 for select break: 1
2023/03/31 02:40:52 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
time breakdown 3: 223, 2977, 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 172, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 65, signal number : 75
----- executor 1 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2810, flag collect 1
----- executor 2 cover number : 3, signal number : 4
execute_call 0, 2805, 0, 0
execute_one loop: 0, 0, 2805
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2979, 0
execute_one time: 2, 2979
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 2711, flag collect 1
----- executor 0 cover number : 501, signal number : 402
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 802, signal number : 931
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 800, signal number : 925
----- executor 1 cover number : 66, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 494, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1352, flag collect 1
----- executor 2 cover number : 99, signal number : 121
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 1 cover number : 401, signal number : 376
----- executor 2 executes write_coverage_signal cov->size 25847, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 26522, flag collect 1
----- executor 0 cover number : 126, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 206
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 410, signal number : 428
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1352, flag collect 1
----- executor 1 cover number : 410, signal number : 13
----- executor 0 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 2 cover number : 401, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 28615, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 16847, flag collect 1
----- executor 0 cover number : 1689, signal number : 1416
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2551, signal number : 3397
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 23, flag collect 1
----- executor 2 cover number : 19, signal number : 21
----- executor 2 executes write_coverage_signal cov->size 1506, flag collect 1
----- executor 2 cover number : 336, signal number : 238
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3278, flag collect 1
----- executor 1 cover number : 2718, signal number : 3506
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 816, flag collect 1
----- executor 1 cover number : 269, signal number : 173
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4266, flag collect 1
----- executor 2 cover number : 767, signal number : 759
----- executor 2 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 2 cover number : 540, signal number : 101
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 718, signal number : 498
----- executor 1 executes write_coverage_signal cov->size 412, flag collect 1
----- executor 1 cover number : 228, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 55
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 0 cover number : 498, signal number : 105
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2506, flag collect 1
----- executor 0 cover number : 796, signal number : 255
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1227, signal number : 1640
----- executor 2 executes write_coverage_signal cov->size 3833, flag collect 1
----- executor 2 cover number : 713, signal number : 45
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1311, signal number : 1645
----- executor 1 executes write_coverage_signal cov->size 3829, flag collect 1
----- executor 1 cover number : 713, signal number : 36
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 330
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
executor 0 server cover_cnt 53 output_pos_value 16006
2023/03/31 02:40:52 for select break: 1
2023/03/31 02:40:52 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 2093, signal number : 1273
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2533, signal number : 1537
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 201, 3019, 0
before receive testcase: 0 0
----- executor 2 cover number : 2575, signal number : 1362
----- executor 2 executes write_coverage_signal cov->size 28403, flag collect 1
----- executor 1 cover number : 2291, signal number : 794
----- executor 1 executes write_coverage_signal cov->size 26650, flag collect 1
----- executor 2 cover number : 1966, signal number : 866
executor 2 server cover_cnt 19 output_pos_value 25922
2023/03/31 02:40:52 for select break: 1
2023/03/31 02:40:52 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 167, 3035, 0
----- executor 1 cover number : 1851, signal number : 1120
executor 1 server cover_cnt 18 output_pos_value 25259
before receive testcase: 0 0
2023/03/31 02:40:52 for select break: 1
2023/03/31 02:40:52 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:40:52 wg wait finish
time breakdown 1: 164, 3040, 0
2023/03/31 02:40:52 ------ all executors finish execution
2023/03/31 02:40:52 exec time: 3172
2023/03/31 02:40:52 ----- PS len: 4
2023/03/31 02:40:52 [SERVER] executor 1 has 18 replies
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 931 signal and 802 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 3 signal and 66 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:52 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:52 [SERVER] executor 0 has 53 replies
2023/03/31 02:40:52 [SERVER] executor 2 has 19 replies
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 376 signal and 401 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:40:52 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 13 signal and 410 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 3506 signal and 2718 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 173 signal and 269 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 498 signal and 718 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 75 signal and 228 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 1400 signal and 1176 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 1645 signal and 1311 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 36 signal and 713 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 1537 signal and 2533 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 794 signal and 2291 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 107 signal and 142 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 75 signal and 65 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 1 receive 1120 signal and 1851 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 925 signal and 800 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 121 signal and 99 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 403 signal and 615 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 597 signal and 894 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 68 signal and 910 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 139 signal and 515 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 428 signal and 410 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 402 signal and 501 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 1 signal and 401 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 332 signal and 909 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 3397 signal and 2551 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 3 signal and 126 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 206 signal and 286 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 21 signal and 19 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 146 signal and 651 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 91 signal and 818 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 238 signal and 336 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 759 signal and 767 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 101 signal and 540 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 1640 signal and 1227 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 45 signal and 713 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 1273 signal and 2093 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 1362 signal and 2575 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 2 receive 866 signal and 1966 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 1416 signal and 1689 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 55 signal and 142 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 2 signal and 9 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 105 signal and 498 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 255 signal and 796 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 330 signal and 894 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 7 signal and 8 cover from userspace component
2023/03/31 02:40:52 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/03/31 02:40:53 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:53 disable threaded and collide
2023/03/31 02:40:53 prog length: 6
2023/03/31 02:40:53 prog length: 19
2023/03/31 02:40:53 HasCrashFail:true HasNetFail:false
02:40:53 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
syz_failure_sync(0x0, 0x3)
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="c2e6c9a28a5419a64397a4b135b3f2f5cc742518625e6d224dfb99bb97f588d90a8fbc38613a02a29f275f3a10e2dc43f9dd1d8cb52b9d2fb1144ba5f2eb02d1089b9ddbd58c061eca1f92d8d228e658805be14496800a97cd51d5de414e732cafb1d34aa7cbc86408cf9c3e31c8cf82f10327aa1946a6e1ce7e2816464909f3b6af59ffaac63b6b76912e216eb462aa58a86f4013e9818243c5c53b97423c56a55702376feccc2887e25274197bf4f4899434dc6f7b38df74f32dcdaabb268476543ddd18e45cda07d0282506539801a126eb439b0a9c4ba092d5bdc5cfac37521afdebcecb1b15209aaec372448dcf16ab5f32ac0726297200651dfa70be682395d7696a2be237337684227ce57a3eedc706a3814c55eda93de77f3a9ed079c8e4ec0aac4c7df9d860372fb70a0216c22945a31efafb75328f34b4fb18a9d557e6b559b0d06254fb2ccdf9fcb3946eef0c5512d6430a30efc29ee480fc6c0a05a73ec02bf278745fb24af2c4a3e2939bdc5faab81d1b5dcb9ef55350036134f727929e2e1ca098eb3aac0e2e5d9ac94df169265d69a0b0643f2f759b84c5bd7b1a995a8247f596447ac686715274cddabe59194726d8c09603bf71c580e98ec48a1636325c022428861596b3bed470ad21fb798f0bbf64a8f355eec53351d6bfe567d2400c7be88266fa6f708e83d2e45b34b9f5018dda7fe6819d0642bd0bd41c76e67ad903393b382a7b6da26c9e8c47218243f51ea3a57d113ac5b995272f622727d971b860cc5da0a5481f742228e89d40690536a8aa97810007b5f5cccb0c01a066ebf0768e17ed428563363104530800a84dfa22137debcca397c75655b9aee067efe94ec89373d49773f2387f2bbfa01e9914c570f86ee1e84d7cec235815c1e5bac0ba842ad806352d465a1115b448c9cc4b52ad37df9ff9302ea364ebcc3eb364876ad0f717019e81dc46195c5e30da8ddfc3e7195907d5e47f247ead0900e5108be1903242f1399502db91eb342f7dd93ed0a3509d5bdfbdb28a200721a640ca7736f5d615c4a227ddaa7e2e257bbcc28fbead47a192b2ade5282ae793a3a6c22915bdd15a9a19fa36479f08f8e661b2b9782c6906d5379427e2f2c92539669fd02674cea2188e5dba374d1aa5c33175bd58f3a21a6574f556c63d25d46c0c851b5743595af34595850c772b3eaea78c146376f434e7b344cb5ac6dcbd722b8b842d99979f68b21ed6b51d5c5c2f2cbcdd928baf12ae7367edba1d6b356ced9b92ed26a82826eceb633f1668fc33bbe030f249b8dfd31edf029e40c76e65182c20477f7a31dc528e9f1eafb9fda281bd95762c6edb98fe0a8ce2ee571c892352023e76310c1eabb8781b00dd58c11e006d567f858693f49bc9fa032489634c1d712a0a4f5eccb97a86007c892d7f0fe07adb75244cb14868e558c41888a8c3b158d33974ce12e5267ac0e78301dbca7e82bf197c43201a0289fad1b53f2b4263d7e1fe41ffb9940b05d504ee43b4452603781acabc684be0347a1cb5ede6cfad5d3fbeee118bf4f7c83b2271dfc96d9a609a3dc4f7603603a05928ed11b987abc54f9ca170a1891fe258a1e85e0068492f2aabaad1652147450517448335a1e41caaef2c545bcee78a16a3bbac9f7223443d84a8a82fdbe1b72f4c1709621fac57bf0936fb6436551006f249c716b2124f33c46b47d5741ae4f4d75d9a64926b0b5d0aa043720cf0420b0daef83b2238187236e413f46b28a59b73159e3d7cdebbf181578cbbc03bf5db0fb76d532f98701e62e9ee58fce81debeb48c8e1e3974b4ad28d26ea3325afffb423496335a2753fec937ca4f7644bf86df184e6eb555f12f25b6e7cb51dde1be606e5bc0480337a319c9ddf77479625dc2595837fbc5cf94f2f8e5f8f288ab3a84230aaa85f6b0b876080c438da20f223b615858b96af1d6c985f105b6c4a406221d3726b4123f2b9a277a735b002d522c622c5a0386fa3f84ec360c3db7f9320bd07b5aa5f3d104c0a91c95125aec73b7727b8248d7b8796df9beec561ee2e5a8bc5b0ef330fceb33e1eaea901afd7e3afbcf2a23740e8cb64d3faf44acf0150338dc62170fe970d1c4eb7dafaab6077421be6d7b5253f1a5f0bffdfcf68bb0470495a1eadd104aa612baa9ac2d936a37d1d858050dfef9993c640e69c06cca5e9eb4a9e790e78b9ae2624f4bf079d57d1ac6cb537e0eb70f9b1275c70804bd6c5b3a2e758acde9878ee63187f17e13f6f6932da75ab3ec98f68575afe4712af0aa4a564fa98d21e9be0d7c775814ecb31eaf35c0132a57f557366ebb39a08762491df040e56c89aafb87913e4671bf6a24c16d642222234b85c0bb33a8606c4657b67eba3b0896db4b60e40f8569b490ea4d763089efcfe5e9586c01960d0391b4194528527b94c8d40d2f165ba161c6b444d5bb483ab6f24e0a7ce8c5950bf42b0243cd161ec939ccaf4413a50e746d4692fab3e1aeec362771d9e65104f1b24e18d0a1bf2a9e7c38fe6e196feb5d30dd26807756cda3ba5c661ffabc9cb7f6a94cf98cf84a45ae1693a5aca91dd2a3f4d7eb6aad61818fd20321537cb154b4f0dcfa5ceaa17d083ed1d50010bf46175032f81a2492e362434af9e0d5a2799adc398ca4a940d28b7e8653f77ea325b78eb883caf446b60448613fc7775367215941f95d1401f38fbfa6acb36ac08f9fa0b7c3563214923082c6e97f1004d21dc5e50970abd54bed198d3524a60622c59e9fa24489dffb8fc134637caabfedd79b84d36ce14255c7f22cd61e10b84864fa0cd2b02a29351ab9d9c3e3ba61d37f0deb08f7fa73c4ee6cc1558d1617c17e207505dab745a3a56fd8ed0c0cd70a54e8a138ee84e66f8552bc8424c2d4bc643dd061b85a3888983b25448cfc5584099bec19c164320195a546f63ae82ad7b3b5d3607d8b84f082edb5d842acce111b8056feeb442e43567b4fb2cc19843576736e585ca0ec576db83ccedb8bd1064abd021dd52a7f38f61cfcf727843fea5b63244e9a93a2ea0eef8ce0145448f1b46c389014b27fe1986697bd30314cc071f824a5775bcb118ea2356db4b8282cead9df2d4e242b9c1126b44edafd340bd8b0e39c6424886e42729f2d2995d106cd1ff4df4bd1abb9b99d3dbbcb8197730c86c144e6974937bd0e50d81fbe982a8172ea4db82ca3c430925b081a6579cbf8407b4f2b1a1dbf5aaf28050dfd826e1934af2f40d34e20ef1653d86265c167f4926ed1c2de54cc58ddcece1a31d666607d8308b433eef16c955a3ba02e5e1c485e71a761fc2b344f90223fbbdff42ef2b5f990768c44becd3221d97d51112b67ae7b0ad09a20546ac8453603c10b46739f440007774f58906c26463ec6d901d3613d796492de39956c3ce7a3c43c3683a86cb136d4d950f0928539992226fce69c57934d86440fb3ab87fb39f18601c15ee2719018d8c3505087358e73fe4f8d1dd1f951e1079def5c1095248d66ced8123d8845b50713ecc8c686abcccb989575a3cfd39287b0021adcf5231ee8b8cc5e802e58e88ad8f763bb0442d04e37db4946408fccbee446f78bca281f479791ed59ebfb00660ad8e7e45cab1410480ca8d6e3a920dedde22379c0731253a9037975dbc305342cce75b3dcded27a4b607d404322ed7909bb46693df60201dd2a23576991d5c109a100f5bf45d391724f67cbc457cc2ffa2e961f3dd6546b661408e7699fb709a5b7175c69f8e88d7f7444010c5a400fd783b5b0a342944ae2adbf8b0eeda69463deec5277dfde9bffec6718da3cbbd56c3ea67ad7d65743427d4d8b32d76bd99a8af36e5414be370c752fa74f127c70468b8d2f62c15f7a38fc8f2ba723c12a0dbadc5348296467c2220c50d82be89f05f379b8eadae4ce8ff4ce15b87253742016a9c81d367fdf6aa0e0f3f78a240a098b3cc16fbc7b0d2911aa768464bb68d01b0b3656c75c1b20487579be10836ea87d68050df28c2aed67f18822b554ea987b1fef45521a85603fd4be5c630c4cf12b1f5dc39b76fd0bce5acb086fc6a1a9ac065e73a36fddfa1d95728283bf952ba8d90603acc831baa6ee971ca7a5ed1f10726e71a3a7cc500872eaaa37f483527375d576abdf4eedecf75cb53049417c7cdde150c1a0a093311f66fcfb08ead403f11c1e57d3fd9eb5e6079f66817a929e607fe828f782aae0f8586bdcf7c03452c02972152ff4aaabc92fbec651c500a2a1d35e299a615daa3a089039f1facf69f7b3f70c559afb6a9ebd97ad05399fa888b3420d01e1b52c5c61634eb65337dbaea4f20ebc8190b99352941052f75a6a02624fd3baba8a46e3a3c8757c49483c2ba05ae42e1ae332860dbf7317975b6133eea0dabe14b0630bb15bc54d04eca3480502543ad341bebff31744ede53454d623a0a3d9bec845049b4ac52ebaf89127d07682eaf77fd777716d82e9ba6e038d25b117bd103e638dd2303d8683cf329a32e1840750cfc97e4eadbf6c1151c83752b449161aaf6b3d3a7f92b942fcb2d61be762c38dcab69878f8c2cc129be4f9a051e1f9464cf671aa6f5b868b9938ad9e563c946d96b3d851f812d6ad775bbf3a225a929f78feacd589fed63948b6534515e2748d0f1d2538e646de65d9abcc6f93c5985577627368ea4372616836136099a950445ef2a79f38cf1850de2b39f2b9a035c906b060d27500809972d7897523af5de3a719728ac7899f8a04148f63c9bf5bf04cff935e29a8122d8ad51a1ec995994e198e78c433af397d1b967b653b8233a58432a2b77d4b4ef760711645e01ba102c072bb9900062dfec5f3c78e97c2ae0b4fe5413591f0f18227d6189b184d429a782feba09795181efedf21df950c0967809487daa1b9fc5d4c61260aee2b4611d90a2635aa464452ff030159bf4740cdab60391b0ca867f7cb64fafd4d1a13a3fd3b9d8e520548a59c0b971f41fdf8e46619ae8289eca62920fd3125d601a9808c604b6215c34042b626a7b416c69307be2e741233ef31b279dab7dac767c3270b5d7a12cf7bce14ffd8b60b99813c0b35475b136c308f4ca3ae54ac17e9a4e064dfe01f98d6d5813c14aae79ece00ab9de11212c4c9846ef3fbd886702f5a575aebad2b0b2ed1a1d613886c2bcb774e6a65ffec02fa026148ca4b6d63f813c45f178546d7c032995172d366299ac63b59a426740e8c5f762af1942272c5ed914dc5e300a8b9884cf36bb4c965d65202fd83e14765e49a04c246e43423cfdf5b163087af2f9faf30b22294c6aec7da1e66ed95710ac8f13ce416d387ecaa4eb09512d1a6ade652d5fb489abc150a2a52177b0dcdbbe88907d8264e88a3495ec8bde4584c31f60df7f1584fe57efc1c58fbb9aacb04cf163d059c328f16da446dce46a76ce4f001cd97637b19ccb0be002d8d07d96e55f7574dad670c482dfec2cf0d99433632ee06a852e886f6ba791def11a56a1e7f002e479f59c0da034b1fb8c319f859933f6e0ab06b6c4c0874c1b9de44977e7d8049e7f97412057c1fd64111f538ab1b4ae09c72bcf51da9b11a84cffa0a575859b570eae80705778e7d44cc3efe0dae06538aba655de1ceb63a80d1141ca8bad713220d7a7e5f0f147b81764814e6af51b59b3dac1fb65765638dc8f7f4ea6e970fa1d86874e24fda9a911276a57728b7b730bb957b5a8ab58e95e64873979f688aac03e3b2f957a4a281f32ba552d3f787e709f5d394bca0df5d35cf0a063e535a6927632e10c51df55311ef45014912053006e5f1c657a7efc", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1434
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 85
-----finish removing dir
Node-0:/root/daemon-log.14416
receive_execute: 37, 126
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-1435 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1435
receive_execute: 53, 126
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 32, 135
receive_execute: 90, 135
executor 3 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
cover_reset in execute_call
execute_one time: 1, 1
----- executor 3 write_call_output, size 9003, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 9003, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 15, 0, 4
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8497, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 8497, flag collect 1
----- executor 3 cover number : 1139, signal number : 129
----- completed 5
execute_call 0, 12, 0, 3
execute_one loop: 0, 0, 15
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 49, 0, 0
execute_one loop: 0, 0, 49
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1785, signal number : 2292
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 433
----- executor 0 executes write_coverage_signal cov->size 168, flag collect 1
----- executor 0 cover number : 126, signal number : 89
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
executor 0 server cover_cnt 4 output_pos_value 5286
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 72, 0, 0
execute_one loop: 0, 0, 72
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 73, 0, 1
execute_one loop: 0, 0, 74
cover_reset in execute_call
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
----- executor 3 write_call_output, size 1649, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
-----executor 0 collect shmids 37
----- directly resend shmid 37
----- executor 3 cover number : 630, signal number : 222
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 0 collect shmids 38
----- directly resend shmid 38
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 39
----- directly resend shmid 39
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
-----executor 0 collect shmids 40
----- directly resend shmid 40
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 335
----- completed 11
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 77
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2226, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 2226, flag collect 1
----- executor 3 cover number : 651, signal number : 325
----- completed 14
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 15
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 147
----- completed 16
execute_call 0, 9, 0, 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 48, 0, 0
execute_one loop: 0, 0, 48
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14416==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2934, write pid:2934
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 2636, 0, 0
execute_one loop: 0, 0, 2637
executor 3, execute_one inner time: 0, 2796, 0
execute_one time: 1, 2797
execute_call 0, 2636, 0, 0
execute_one loop: 0, 0, 2636
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2805, 0
execute_one time: 2, 2805
2023/03/31 02:40:55 for select break: 1
2023/03/31 02:40:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 225, 2800, 0
before receive testcase: 0 0
----- executor 0 cover number : 126, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 49, signal number : 66
----- executor 0 cover number : 10, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 286, signal number : 208
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 1485, signal number : 1898
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 698, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 397, signal number : 310
----- executor 1 executes write_coverage_signal cov->size 23051, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1539, signal number : 1953
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 25166, flag collect 1
----- executor 1 cover number : 410, signal number : 14
----- executor 1 executes write_coverage_signal cov->size 23551, flag collect 1
----- executor 0 cover number : 1785, signal number : 2030
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 87
----- executor 2 executes write_coverage_signal cov->size 29138, flag collect 1
----- executor 1 cover number : 2154, signal number : 2592
----- executor 1 executes write_coverage_signal cov->size 975, flag collect 1
----- executor 0 cover number : 142, signal number : 47
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 863, flag collect 1
----- executor 1 cover number : 276, signal number : 237
----- executor 1 executes write_coverage_signal cov->size 65, flag collect 1
----- executor 1 cover number : 45, signal number : 30
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4690, flag collect 1
----- executor 0 cover number : 405, signal number : 101
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 1 cover number : 829, signal number : 520
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
executor 0 server cover_cnt 45 output_pos_value 14596
----- executor 2 cover number : 1949, signal number : 2618
----- executor 2 executes write_coverage_signal cov->size 719, flag collect 1
----- executor 2 cover number : 266, signal number : 215
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 2 cover number : 750, signal number : 570
----- executor 2 executes write_coverage_signal cov->size 2118, flag collect 1
2023/03/31 02:40:55 for select break: 1
2023/03/31 02:40:55 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 681, signal number : 333
----- executor 2 executes write_coverage_signal cov->size 1470, flag collect 1
----- executor 2 cover number : 547, signal number : 364
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1724, flag collect 1
----- executor 2 cover number : 555, signal number : 252
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1376, signal number : 1716
----- executor 1 executes write_coverage_signal cov->size 1664, flag collect 1
----- executor 1 cover number : 524, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 25893, flag collect 1
time breakdown 0: 179, 2837, 0
before receive testcase: 0 0
----- executor 2 cover number : 1300, signal number : 1458
----- executor 2 executes write_coverage_signal cov->size 28013, flag collect 1
----- executor 1 cover number : 2338, signal number : 1748
----- executor 1 executes write_coverage_signal cov->size 26754, flag collect 1
----- executor 2 cover number : 2443, signal number : 1828
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1873, signal number : 1174
----- executor 1 executes write_coverage_signal cov->size 26414, flag collect 1
----- executor 2 cover number : 2130, signal number : 1019
----- executor 2 executes write_coverage_signal cov->size 22421, flag collect 1
----- executor 1 cover number : 1927, signal number : 756
executor 1 server cover_cnt 16 output_pos_value 24713
----- executor 2 cover number : 2045, signal number : 1174
2023/03/31 02:40:56 for select break: 1
2023/03/31 02:40:56 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 21 output_pos_value 27554
time breakdown 1: 167, 2852, 0
before receive testcase: 0 0
2023/03/31 02:40:56 for select break: 1
2023/03/31 02:40:56 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:56 wg wait finish
2023/03/31 02:40:56 ------ all executors finish execution
2023/03/31 02:40:56 exec time: 2990
2023/03/31 02:40:56 ----- PS len: 4
2023/03/31 02:40:56 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:56 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 129 signal and 1139 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 222 signal and 630 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 [SERVER] executor 1 has 16 replies
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:56 fuzzer receive 335 signal and 830 cover from executor 3
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:56 [SERVER] executor 2 has 21 replies
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/03/31 02:40:56 fuzzer receive 77 signal and 128 cover from executor 3
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 66 signal and 49 cover from userspace component
2023/03/31 02:40:56 fuzzer receive 325 signal and 651 cover from executor 3
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 1953 signal and 1539 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 87 signal and 410 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 1898 signal and 1485 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 2618 signal and 1949 cover from userspace component
2023/03/31 02:40:56 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 310 signal and 397 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 14 signal and 410 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 2592 signal and 2154 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 237 signal and 276 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 30 signal and 45 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 520 signal and 829 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 215 signal and 266 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 1716 signal and 1376 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 7 signal and 524 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 1748 signal and 2338 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 570 signal and 750 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 1174 signal and 1873 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 1 receive 756 signal and 1927 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 333 signal and 681 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 364 signal and 547 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 252 signal and 555 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 1458 signal and 1300 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 1828 signal and 2443 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 1019 signal and 2130 cover from userspace component
2023/03/31 02:40:56 [SERVER] executor 0 has 45 replies
2023/03/31 02:40:56 ------- fuzzer executor 2 receive 1174 signal and 2045 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 2292 signal and 1785 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 433 signal and 530 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 89 signal and 126 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 44 signal and 501 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 22 signal and 126 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 2 signal and 10 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 208 signal and 286 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 6 signal and 4 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 fuzzer receive 147 signal and 749 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 2030 signal and 1785 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 207 signal and 530 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 47 signal and 142 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 101 signal and 405 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:56 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
time breakdown 2: 163, 2865, 0
before receive testcase: 0 0
2023/03/31 02:40:56 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:56 failure smash: true false
2023/03/31 02:40:56 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:56 disable threaded and collide
2023/03/31 02:40:56 prog length: 6
2023/03/31 02:40:56 prog length: 19
2023/03/31 02:40:56 send to channel: true, false
2023/03/31 02:40:56 HasCrashFail:true HasNetFail:false
02:40:56 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
remove dir: /root/glusterfs-client/dfs-0-1435
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 66
-----finish removing dir
receive_execute: 20, 93
receive_execute: 48, 93
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-1436 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1436
receive_execute: 24, 93
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 75, 99
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8949, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 8949, flag collect 1
----- executor 3 cover number : 1273, signal number : 1585
----- completed 1
execute_call 0, 13, 0, 5
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 14, 0, 6
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
execute_call 0, 60, 0, 0
execute_one loop: 0, 0, 60
executor 0 write_server_output
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 server cover_cnt 0 output_pos_value 1
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 2848, 0, 1
execute_one loop: 0, 0, 2849
cover_reset in execute_call
execute_call 0, 2847, 0, 0
execute_one loop: 0, 0, 2847
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2949, 0
execute_one time: 1, 2949
----- executor 3 write_call_output, size 8349, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 8349, flag collect 1
----- executor 3 cover number : 1115, signal number : 226
----- completed 9
execute_call 0, 7, 0, 5
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4477, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 4477, flag collect 1
----- executor 3 cover number : 909, signal number : 339
----- completed 12
execute_call 0, 14, 0, 4
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 16
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3494, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 3494, flag collect 1
----- executor 3 cover number : 934, signal number : 224
----- completed 15
execute_call 0, 12, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 16
execute_call 0, 12, 0, 3
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 147
----- completed 17
execute_call 0, 8, 0, 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2935, write pid:2935
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3024, 1
execute_one time: 3, 3025
2023/03/31 02:40:59 for select break: 1
2023/03/31 02:40:59 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 694, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 825, flag collect 1
----- executor 2 cover number : 279, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 26863, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 27074, flag collect 1
----- executor 0 cover number : 501, signal number : 595
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 104
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 224
----- executor 1 cover number : 1906, signal number : 2287
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 104
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 15897, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
time breakdown 3: 174, 3031, 0
before receive testcase: 0 0
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 1940, signal number : 2327
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 14372, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 575, signal number : 332
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 12490, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 696
----- executor 2 executes write_coverage_signal cov->size 15386, flag collect 1
----- executor 1 cover number : 411, signal number : 40
----- executor 1 executes write_coverage_signal cov->size 31141, flag collect 1
----- executor 2 cover number : 409, signal number : 44
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1820, signal number : 2187
executor 0 server cover_cnt 34 output_pos_value 8671
----- executor 1 cover number : 2110, signal number : 2557
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 906, flag collect 1
2023/03/31 02:40:59 for select break: 1
2023/03/31 02:40:59 --------- executor 0 receive reply, reply.done 1
----- executor 1 cover number : 270, signal number : 141
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1632, flag collect 1
----- executor 1 cover number : 518, signal number : 284
----- executor 1 executes write_coverage_signal cov->size 3058, flag collect 1
time breakdown 0: 142, 3054, 0
----- executor 1 cover number : 665, signal number : 281
----- executor 1 executes write_coverage_signal cov->size 27746, flag collect 1
----- executor 2 cover number : 2036, signal number : 2660
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 841, flag collect 1
----- executor 2 cover number : 269, signal number : 140
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 2 cover number : 596, signal number : 488
----- executor 2 executes write_coverage_signal cov->size 2481, flag collect 1
before receive testcase: 0 0
----- executor 2 cover number : 743, signal number : 284
----- executor 2 executes write_coverage_signal cov->size 27117, flag collect 1
----- executor 1 cover number : 1061, signal number : 1260
----- executor 1 executes write_coverage_signal cov->size 23451, flag collect 1
----- executor 1 cover number : 1029, signal number : 784
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1200, signal number : 1537
----- executor 2 executes write_coverage_signal cov->size 26028, flag collect 1
----- executor 1 cover number : 2768, signal number : 2092
----- executor 1 executes write_coverage_signal cov->size 29160, flag collect 1
----- executor 2 cover number : 1074, signal number : 819
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1987, signal number : 964
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2448, signal number : 2112
----- executor 2 executes write_coverage_signal cov->size 30775, flag collect 1
----- executor 1 cover number : 2440, signal number : 1366
executor 1 server cover_cnt 19 output_pos_value 29195
2023/03/31 02:40:59 for select break: 1
2023/03/31 02:40:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 117, 3087, 0
----- executor 2 cover number : 1902, signal number : 1209
----- executor 2 executes write_coverage_signal cov->size 28427, flag collect 1
before receive testcase: 0 0
----- executor 2 cover number : 2188, signal number : 1593
executor 2 server cover_cnt 17 output_pos_value 29988
2023/03/31 02:40:59 for select break: 1
2023/03/31 02:40:59 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:40:59 wg wait finish
2023/03/31 02:40:59 ------ all executors finish execution
2023/03/31 02:40:59 exec time: 3193
2023/03/31 02:40:59 ----- PS len: 4
2023/03/31 02:40:59 [CLIENT] executor 3 has 19 replies
2023/03/31 02:40:59 fuzzer receive 1585 signal and 1273 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 226 signal and 1115 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 339 signal and 909 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 16 signal and 128 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 224 signal and 934 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 147 signal and 749 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:40:59 [SERVER] executor 2 has 17 replies
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 316 signal and 279 cover from userspace component
2023/03/31 02:40:59 [SERVER] executor 0 has 34 replies
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 595 signal and 501 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 104 signal and 126 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 224 signal and 286 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 22 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
time breakdown 2: 113, 3100, 0
before receive testcase: 0 0
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 [SERVER] executor 1 has 19 replies
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 2327 signal and 1940 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 696 signal and 576 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 44 signal and 409 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 2660 signal and 2036 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 140 signal and 269 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 488 signal and 596 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 284 signal and 743 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 0 receive 2187 signal and 1820 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 1537 signal and 1200 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 819 signal and 1074 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 2112 signal and 2448 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 1209 signal and 1902 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 2287 signal and 1906 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 104 signal and 116 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 57 signal and 66 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 332 signal and 575 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 40 signal and 411 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 2 receive 1593 signal and 2188 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 2557 signal and 2110 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 141 signal and 270 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 284 signal and 518 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 281 signal and 665 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 1260 signal and 1061 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 784 signal and 1029 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 2092 signal and 2768 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 964 signal and 1987 cover from userspace component
2023/03/31 02:40:59 ------- fuzzer executor 1 receive 1366 signal and 2440 cover from userspace component
2023/03/31 02:40:59 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:40:59 failure smash: true false
2023/03/31 02:40:59 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:40:59 disable threaded and collide
2023/03/31 02:40:59 prog length: 6
2023/03/31 02:40:59 prog length: 19
2023/03/31 02:40:59 send to channel: true, false
2023/03/31 02:40:59 HasCrashFail:true HasNetFail:false
02:40:59 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-1436
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
Node-0:/root/daemon-log.14513
remove dir time 100
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1437 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1437
receive_execute: 29, 135
receive_execute: 73, 135
receive_execute: 41, 136
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 91, 142
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8997, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 8997, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 15, 0, 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8476, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 8476, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 1632, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 1632, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 45
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1706, signal number : 2166
----- executor 0 executes write_coverage_signal cov->size 5645, flag collect 1
----- executor 0 cover number : 440, signal number : 341
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 107
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 225
----- executor 0 executes write_coverage_signal cov->size 578, flag collect 1
----- executor 0 cover number : 240, signal number : 36
executor 0 server cover_cnt 10 output_pos_value 6094
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 70, 0, 0
execute_one loop: 0, 0, 70
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 70, 0, 0
execute_one loop: 0, 0, 70
cover_reset in execute_call
-----executor 0 collect shmids 35
----- directly resend shmid 35
----- executor 3 write_call_output, size 1234, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
-----executor 0 collect shmids 36
----- directly resend shmid 36
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
==14513==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 2810, 0, 0
execute_one loop: 0, 0, 2810
cover_reset in execute_call
execute_call 0, 2809, 0, 0
execute_one loop: 0, 0, 2810
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2927, 0
execute_one time: 5, 2927
----- executor 3 write_call_output, size 8353, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 8353, flag collect 1
----- executor 3 cover number : 1117, signal number : 209
----- completed 10
execute_call 0, 6, 0, 5
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4477, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 4477, flag collect 1
----- executor 3 cover number : 909, signal number : 331
----- completed 12
execute_call 0, 13, 0, 7
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 934, signal number : 219
----- completed 15
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 16
execute_call 0, 9, 0, 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2936, write pid:2936
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2990, 0
execute_one time: 1, 2990
2023/03/31 02:41:02 for select break: 1
2023/03/31 02:41:02 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 1 cover number : 51, signal number : 46
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 4949, flag collect 1
----- executor 0 cover number : 501, signal number : 135
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 635, signal number : 722
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 233, 2993, 0
before receive testcase: 0 0
----- executor 0 cover number : 126, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 208
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 1 cover number : 1584, signal number : 2004
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 24266, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1562, signal number : 1516
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 117
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 63
----- executor 2 executes write_coverage_signal cov->size 2059, flag collect 1
----- executor 2 cover number : 409, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 27693, flag collect 1
----- executor 0 cover number : 1706, signal number : 2129
----- executor 0 executes write_coverage_signal cov->size 5645, flag collect 1
----- executor 1 cover number : 576, signal number : 402
----- executor 1 executes write_coverage_signal cov->size 4112, flag collect 1
----- executor 1 cover number : 409, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32662, flag collect 1
----- executor 0 cover number : 440, signal number : 195
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 435
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 59
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 0 cover number : 498, signal number : 122
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 147
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2579, signal number : 3166
----- executor 1 executes write_coverage_signal cov->size 832, flag collect 1
----- executor 1 cover number : 269, signal number : 195
----- executor 1 executes write_coverage_signal cov->size 1307, flag collect 1
----- executor 1 cover number : 493, signal number : 84
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4270, flag collect 1
----- executor 1 cover number : 720, signal number : 367
----- executor 1 executes write_coverage_signal cov->size 410, flag collect 1
----- executor 1 cover number : 226, signal number : 126
----- executor 1 executes write_coverage_signal cov->size 10533, flag collect 1
----- executor 1 cover number : 885, signal number : 770
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2076, signal number : 2681
----- executor 0 cover number : 894, signal number : 596
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
executor 0 server cover_cnt 54 output_pos_value 17781
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1002, flag collect 1
----- executor 2 cover number : 280, signal number : 204
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 271
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2118, flag collect 1
----- executor 2 cover number : 681, signal number : 493
----- executor 2 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 2 cover number : 750, signal number : 343
2023/03/31 02:41:02 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 4810, flag collect 1
2023/03/31 02:41:02 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 733, signal number : 648
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1305, signal number : 957
----- executor 1 executes write_coverage_signal cov->size 28614, flag collect 1
----- executor 2 cover number : 1311, signal number : 1390
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 208, 3021, 0
before receive testcase: 0 0
----- executor 1 cover number : 2552, signal number : 1715
----- executor 1 executes write_coverage_signal cov->size 22268, flag collect 1
----- executor 1 cover number : 1631, signal number : 810
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2865, signal number : 2561
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1800, signal number : 801
executor 1 server cover_cnt 18 output_pos_value 26732
----- executor 2 cover number : 2168, signal number : 906
----- executor 2 executes write_coverage_signal cov->size 24456, flag collect 1
2023/03/31 02:41:02 for select break: 1
2023/03/31 02:41:02 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 177, 3040, 0
before receive testcase: 0 1
----- executor 2 cover number : 2189, signal number : 1521
executor 2 server cover_cnt 25 output_pos_value 31673
2023/03/31 02:41:02 for select break: 1
2023/03/31 02:41:02 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:02 wg wait finish
2023/03/31 02:41:02 ------ all executors finish execution
2023/03/31 02:41:02 exec time: 3183
2023/03/31 02:41:02 ----- PS len: 4
2023/03/31 02:41:02 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:02 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 209 signal and 1117 cover from executor 3
2023/03/31 02:41:02 [SERVER] executor 1 has 18 replies
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 46 signal and 51 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:02 [SERVER] executor 0 has 54 replies
2023/03/31 02:41:02 [SERVER] executor 2 has 25 replies
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 722 signal and 635 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 2004 signal and 1584 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 1516 signal and 1562 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 117 signal and 116 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 63 signal and 66 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 444 signal and 409 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 435 signal and 576 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 402 signal and 576 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 1 signal and 409 cover from userspace component
time breakdown 2: 164, 3048, 0
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 2681 signal and 2076 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 3166 signal and 2579 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 204 signal and 280 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 271 signal and 526 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 493 signal and 681 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 343 signal and 750 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 648 signal and 733 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 195 signal and 269 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 1390 signal and 1311 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 2561 signal and 2865 cover from userspace component
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 331 signal and 909 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 219 signal and 934 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 906 signal and 2168 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 2166 signal and 1706 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 341 signal and 440 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 107 signal and 142 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 2 receive 1521 signal and 2189 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 225 signal and 615 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 36 signal and 240 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 135 signal and 501 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 5 signal and 126 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 9 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 208 signal and 286 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 2129 signal and 1706 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 195 signal and 440 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 59 signal and 142 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 3 signal and 9 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 122 signal and 498 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 147 signal and 615 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 596 signal and 894 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 84 signal and 493 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 367 signal and 720 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 126 signal and 226 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 770 signal and 885 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 957 signal and 1305 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 1715 signal and 2552 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 810 signal and 1631 cover from userspace component
2023/03/31 02:41:02 ------- fuzzer executor 1 receive 801 signal and 1800 cover from userspace component
2023/03/31 02:41:02 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:02 disable threaded and collide
2023/03/31 02:41:02 prog length: 6
2023/03/31 02:41:02 prog length: 19
2023/03/31 02:41:02 HasCrashFail:true HasNetFail:false
02:41:02 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
syz_failure_sync(0x1, 0x3)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="c2e6c9a28a5419a64397a4b135b3f2f5cc742518625e6d224dfb99bb97f588d90a8fbc38613a02a29f275f3a10e2dc43f9dd1d8cb52b9d2fb1144ba5f2eb02d1089b9ddbd58c061eca1f92d8d228e658805be14496800a97cd51d5de414e732cafb1d34aa7cbc86408cf9c3e31c8cf82f10327aa1946a6e1ce7e2816464909f3b6af59ffaac63b6b76912e216eb462aa58a86f4013e9818243c5c53b97423c56a55702376feccc2887e25274197bf4f4899434dc6f7b38df74f32dcdaabb268476543ddd18e45cda07d0282506539801a126eb439b0a9c4ba092d5bdc5cfac37521afdebcecb1b15209aaec372448dcf16ab5f32ac0726297200651dfa70be682395d7696a2be237337684227ce57a3eedc706a3814c55eda93de77f3a9ed079c8e4ec0aac4c7df9d860372fb70a0216c22945a31efafb75328f34b4fb18a9d557e6b559b0d06254fb2ccdf9fcb3946eef0c5512d6430a30efc29ee480fc6c0a05a73ec02bf278745fb24af2c4a3e2939bdc5faab81d1b5dcb9ef55350036134f727929e2e1ca098eb3aac0e2e5d9ac94df169265d69a0b0643f2f759b84c5bd7b1a995a8247f596447ac686715274cddabe59194726d8c09603bf71c580e98ec48a1636325c022428861596b3bed470ad21fb798f0bbf64a8f355eec53351d6bfe567d2400c7be88266fa6f708e83d2e45b34b9f5018dda7fe6819d0642bd0bd41c76e67ad903393b382a7b6da26c9e8c47218243f51ea3a57d113ac5b995272f622727d971b860cc5da0a5481f742228e89d40690536a8aa97810007b5f5cccb0c01a066ebf0768e17ed428563363104530800a84dfa22137debcca397c75655b9aee067efe94ec89373d49773f2387f2bbfa01e9914c570f86ee1e84d7cec235815c1e5bac0ba842ad806352d465a1115b448c9cc4b52ad37df9ff9302ea364ebcc3eb364876ad0f717019e81dc46195c5e30da8ddfc3e7195907d5e47f247ead0900e5108be1903242f1399502db91eb342f7dd93ed0a3509d5bdfbdb28a200721a640ca7736f5d615c4a227ddaa7e2e257bbcc28fbead47a192b2ade5282ae793a3a6c22915bdd15a9a19fa36479f08f8e661b2b9782c6906d5379427e2f2c92539669fd02674cea2188e5dba374d1aa5c33175bd58f3a21a6574f556c63d25d46c0c851b5743595af34595850c772b3eaea78c146376f434e7b344cb5ac6dcbd722b8b842d99979f68b21ed6b51d5c5c2f2cbcdd928baf12ae7367edba1d6b356ced9b92ed26a82826eceb633f1668fc33bbe030f249b8dfd31edf029e40c76e65182c20477f7a31dc528e9f1eafb9fda281bd95762c6edb98fe0a8ce2ee571c892352023e76310c1eabb8781b00dd58c11e006d567f858693f49bc9fa032489634c1d712a0a4f5eccb97a86007c892d7f0fe07adb75244cb14868e558c41888a8c3b158d33974ce12e5267ac0e78301dbca7e82bf197c43201a0289fad1b53f2b4263d7e1fe41ffb9940b05d504ee43b4452603781acabc684be0347a1cb5ede6cfad5d3fbeee118bf4f7c83b2271dfc96d9a609a3dc4f7603603a05928ed11b987abc54f9ca170a1891fe258a1e85e0068492f2aabaad1652147450517448335a1e41caaef2c545bcee78a16a3bbac9f7223443d84a8a82fdbe1b72f4c1709621fac57bf0936fb6436551006f249c716b2124f33c46b47d5741ae4f4d75d9a64926b0b5d0aa043720cf0420b0daef83b2238187236e413f46b28a59b73159e3d7cdebbf181578cbbc03bf5db0fb76d532f98701e62e9ee58fce81debeb48c8e1e3974b4ad28d26ea3325afffb423496335a2753fec937ca4f7644bf86df184e6eb555f12f25b6e7cb51dde1be606e5bc0480337a319c9ddf77479625dc2595837fbc5cf94f2f8e5f8f288ab3a84230aaa85f6b0b876080c438da20f223b615858b96af1d6c985f105b6c4a406221d3726b4123f2b9a277a735b002d522c622c5a0386fa3f84ec360c3db7f9320bd07b5aa5f3d104c0a91c95125aec73b7727b8248d7b8796df9beec561ee2e5a8bc5b0ef330fceb33e1eaea901afd7e3afbcf2a23740e8cb64d3faf44acf0150338dc62170fe970d1c4eb7dafaab6077421be6d7b5253f1a5f0bffdfcf68bb0470495a1eadd104aa612baa9ac2d936a37d1d858050dfef9993c640e69c06cca5e9eb4a9e790e78b9ae2624f4bf079d57d1ac6cb537e0eb70f9b1275c70804bd6c5b3a2e758acde9878ee63187f17e13f6f6932da75ab3ec98f68575afe4712af0aa4a564fa98d21e9be0d7c775814ecb31eaf35c0132a57f557366ebb39a08762491df040e56c89aafb87913e4671bf6a24c16d642222234b85c0bb33a8606c4657b67eba3b0896db4b60e40f8569b490ea4d763089efcfe5e9586c01960d0391b4194528527b94c8d40d2f165ba161c6b444d5bb483ab6f24e0a7ce8c5950bf42b0243cd161ec939ccaf4413a50e746d4692fab3e1aeec362771d9e65104f1b24e18d0a1bf2a9e7c38fe6e196feb5d30dd26807756cda3ba5c661ffabc9cb7f6a94cf98cf84a45ae1693a5aca91dd2a3f4d7eb6aad61818fd20321537cb154b4f0dcfa5ceaa17d083ed1d50010bf46175032f81a2492e362434af9e0d5a2799adc398ca4a940d28b7e8653f77ea325b78eb883caf446b60448613fc7775367215941f95d1401f38fbfa6acb36ac08f9fa0b7c3563214923082c6e97f1004d21dc5e50970abd54bed198d3524a60622c59e9fa24489dffb8fc134637caabfedd79b84d36ce14255c7f22cd61e10b84864fa0cd2b02a29351ab9d9c3e3ba61d37f0deb08f7fa73c4ee6cc1558d1617c17e207505dab745a3a56fd8ed0c0cd70a54e8a138ee84e66f8552bc8424c2d4bc643dd061b85a3888983b25448cfc5584099bec19c164320195a546f63ae82ad7b3b5d3607d8b84f082edb5d842acce111b8056feeb442e43567b4fb2cc19843576736e585ca0ec576db83ccedb8bd1064abd021dd52a7f38f61cfcf727843fea5b63244e9a93a2ea0eef8ce0145448f1b46c389014b27fe1986697bd30314cc071f824a5775bcb118ea2356db4b8282cead9df2d4e242b9c1126b44edafd340bd8b0e39c6424886e42729f2d2995d106cd1ff4df4bd1abb9b99d3dbbcb8197730c86c144e6974937bd0e50d81fbe982a8172ea4db82ca3c430925b081a6579cbf8407b4f2b1a1dbf5aaf28050dfd826e1934af2f40d34e20ef1653d86265c167f4926ed1c2de54cc58ddcece1a31d666607d8308b433eef16c955a3ba02e5e1c485e71a761fc2b344f90223fbbdff42ef2b5f990768c44becd3221d97d51112b67ae7b0ad09a20546ac8453603c10b46739f440007774f58906c26463ec6d901d3613d796492de39956c3ce7a3c43c3683a86cb136d4d950f0928539992226fce69c57934d86440fb3ab87fb39f18601c15ee2719018d8c3505087358e73fe4f8d1dd1f951e1079def5c1095248d66ced8123d8845b50713ecc8c686abcccb989575a3cfd39287b0021adcf5231ee8b8cc5e802e58e88ad8f763bb0442d04e37db4946408fccbee446f78bca281f479791ed59ebfb00660ad8e7e45cab1410480ca8d6e3a920dedde22379c0731253a9037975dbc305342cce75b3dcded27a4b607d404322ed7909bb46693df60201dd2a23576991d5c109a100f5bf45d391724f67cbc457cc2ffa2e961f3dd6546b661408e7699fb709a5b7175c69f8e88d7f7444010c5a400fd783b5b0a342944ae2adbf8b0eeda69463deec5277dfde9bffec6718da3cbbd56c3ea67ad7d65743427d4d8b32d76bd99a8af36e5414be370c752fa74f127c70468b8d2f62c15f7a38fc8f2ba723c12a0dbadc5348296467c2220c50d82be89f05f379b8eadae4ce8ff4ce15b87253742016a9c81d367fdf6aa0e0f3f78a240a098b3cc16fbc7b0d2911aa768464bb68d01b0b3656c75c1b20487579be10836ea87d68050df28c2aed67f18822b554ea987b1fef45521a85603fd4be5c630c4cf12b1f5dc39b76fd0bce5acb086fc6a1a9ac065e73a36fddfa1d95728283bf952ba8d90603acc831baa6ee971ca7a5ed1f10726e71a3a7cc500872eaaa37f483527375d576abdf4eedecf75cb53049417c7cdde150c1a0a093311f66fcfb08ead403f11c1e57d3fd9eb5e6079f66817a929e607fe828f782aae0f8586bdcf7c03452c02972152ff4aaabc92fbec651c500a2a1d35e299a615daa3a089039f1facf69f7b3f70c559afb6a9ebd97ad05399fa888b3420d01e1b52c5c61634eb65337dbaea4f20ebc8190b99352941052f75a6a02624fd3baba8a46e3a3c8757c49483c2ba05ae42e1ae332860dbf7317975b6133eea0dabe14b0630bb15bc54d04eca3480502543ad341bebff31744ede53454d623a0a3d9bec845049b4ac52ebaf89127d07682eaf77fd777716d82e9ba6e038d25b117bd103e638dd2303d8683cf329a32e1840750cfc97e4eadbf6c1151c83752b449161aaf6b3d3a7f92b942fcb2d61be762c38dcab69878f8c2cc129be4f9a051e1f9464cf671aa6f5b868b9938ad9e563c946d96b3d851f812d6ad775bbf3a225a929f78feacd589fed63948b6534515e2748d0f1d2538e646de65d9abcc6f93c5985577627368ea4372616836136099a950445ef2a79f38cf1850de2b39f2b9a035c906b060d27500809972d7897523af5de3a719728ac7899f8a04148f63c9bf5bf04cff935e29a8122d8ad51a1ec995994e198e78c433af397d1b967b653b8233a58432a2b77d4b4ef760711645e01ba102c072bb9900062dfec5f3c78e97c2ae0b4fe5413591f0f18227d6189b184d429a782feba09795181efedf21df950c0967809487daa1b9fc5d4c61260aee2b4611d90a2635aa464452ff030159bf4740cdab60391b0ca867f7cb64fafd4d1a13a3fd3b9d8e520548a59c0b971f41fdf8e46619ae8289eca62920fd3125d601a9808c604b6215c34042b626a7b416c69307be2e741233ef31b279dab7dac767c3270b5d7a12cf7bce14ffd8b60b99813c0b35475b136c308f4ca3ae54ac17e9a4e064dfe01f98d6d5813c14aae79ece00ab9de11212c4c9846ef3fbd886702f5a575aebad2b0b2ed1a1d613886c2bcb774e6a65ffec02fa026148ca4b6d63f813c45f178546d7c032995172d366299ac63b59a426740e8c5f762af1942272c5ed914dc5e300a8b9884cf36bb4c965d65202fd83e14765e49a04c246e43423cfdf5b163087af2f9faf30b22294c6aec7da1e66ed95710ac8f13ce416d387ecaa4eb09512d1a6ade652d5fb489abc150a2a52177b0dcdbbe88907d8264e88a3495ec8bde4584c31f60df7f1584fe57efc1c58fbb9aacb04cf163d059c328f16da446dce46a76ce4f001cd97637b19ccb0be002d8d07d96e55f7574dad670c482dfec2cf0d99433632ee06a852e886f6ba791def11a56a1e7f002e479f59c0da034b1fb8c319f859933f6e0ab06b6c4c0874c1b9de44977e7d8049e7f97412057c1fd64111f538ab1b4ae09c72bcf51da9b11a84cffa0a575859b570eae80705778e7d44cc3efe0dae06538aba655de1ceb63a80d1141ca8bad713220d7a7e5f0f147b81764814e6af51b59b3dac1fb65765638dc8f7f4ea6e970fa1d86874e24fda9a911276a57728b7b730bb957b5a8ab58e95e64873979f688aac03e3b2f957a4a281f32ba552d3f787e709f5d394bca0df5d35cf0a063e535a6927632e10c51df55311ef45014912053006e5f1c657a7efc", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1437
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 52
-----finish removing dir
Node-0:/root/daemon-log.14569
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1438 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1438
receive_execute: 70, 86
receive_execute: 43, 85
receive_execute: 50, 86
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 91, 90
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 1
----- executor 3 write_call_output, size 8978, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 8978, flag collect 1
----- executor 3 cover number : 1273, signal number : 1585
----- completed 1
execute_call 0, 15, 0, 8
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 16, 0, 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 54, 0, 0
execute_one loop: 0, 0, 54
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 27, flag collect 1
----- executor 0 cover number : 18, signal number : 21
----- executor 0 executes write_coverage_signal cov->size 70, flag collect 1
----- executor 0 cover number : 59, signal number : 64
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1785, signal number : 2281
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 434
----- executor 0 executes write_coverage_signal cov->size 26983, flag collect 1
----- executor 0 cover number : 142, signal number : 100
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
executor 0 server cover_cnt 9 output_pos_value 5495
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
execute_call 0, 60, 0, 0
execute_one loop: 0, 0, 60
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 60, 0, 1
execute_one loop: 0, 0, 61
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14569==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2900, 0, 0
execute_one loop: 0, 0, 2900
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3016, 0
execute_one time: 3, 3017
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 2900, 0, 0
execute_one loop: 0, 0, 2900
cover_reset in execute_call
----- executor 3 write_call_output, size 8353, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 8353, flag collect 1
----- executor 3 cover number : 1117, signal number : 230
----- completed 10
execute_call 0, 9, 0, 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4477, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 4477, flag collect 1
----- executor 3 cover number : 909, signal number : 339
----- completed 12
execute_call 0, 15, 0, 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 175, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 175, flag collect 1
----- executor 3 cover number : 123, signal number : 18
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 2226, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 2226, flag collect 1
----- executor 3 cover number : 651, signal number : 153
----- completed 15
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 2737, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 2737, flag collect 1
----- executor 3 cover number : 818, signal number : 91
----- completed 16
execute_call 0, 16, 0, 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 147
----- completed 17
execute_call 0, 9, 0, 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2937, write pid:2937
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3096, 0
execute_one time: 2, 3096
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 93, flag collect 1
2023/03/31 02:41:05 for select break: 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
2023/03/31 02:41:05 --------- executor 3 receive reply, reply.done 1
----- executor 1 cover number : 7, signal number : 7
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 65, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 65, flag collect 1
----- executor 1 cover number : 45, signal number : 48
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 42
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 181, 3101, 0
before receive testcase: 0 1
----- executor 2 cover number : 46, signal number : 61
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 126, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 32, flag collect 1
----- executor 0 cover number : 23, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 59, signal number : 33
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 99
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1584, signal number : 2019
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 44
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 29744, flag collect 1
----- executor 0 cover number : 1785, signal number : 2039
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 209
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1571, signal number : 1973
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 15898, flag collect 1
----- executor 1 cover number : 576, signal number : 402
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 702
----- executor 2 executes write_coverage_signal cov->size 12498, flag collect 1
----- executor 0 cover number : 142, signal number : 58
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 1091, flag collect 1
----- executor 0 cover number : 485, signal number : 164
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 182
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 36
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2686, signal number : 3418
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1000, flag collect 1
----- executor 1 cover number : 280, signal number : 200
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 1 cover number : 774, signal number : 405
----- executor 1 executes write_coverage_signal cov->size 1216, flag collect 1
----- executor 1 cover number : 390, signal number : 102
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 591
executor 0 server cover_cnt 53 output_pos_value 17460
----- executor 2 cover number : 1938, signal number : 2447
----- executor 2 executes write_coverage_signal cov->size 890, flag collect 1
2023/03/31 02:41:05 for select break: 1
2023/03/31 02:41:05 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 270, signal number : 193
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 285
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3946, flag collect 1
----- executor 2 cover number : 930, signal number : 711
----- executor 2 executes write_coverage_signal cov->size 1530, flag collect 1
----- executor 2 cover number : 435, signal number : 107
----- executor 2 executes write_coverage_signal cov->size 23495, flag collect 1
----- executor 1 cover number : 1261, signal number : 1550
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 156, 3128, 0
before receive testcase: 0 0
----- executor 2 cover number : 1029, signal number : 1277
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 27785, flag collect 1
----- executor 1 cover number : 1958, signal number : 985
----- executor 1 executes write_coverage_signal cov->size 28430, flag collect 1
----- executor 2 cover number : 1061, signal number : 788
----- executor 2 executes write_coverage_signal cov->size 28615, flag collect 1
----- executor 1 cover number : 2189, signal number : 1509
----- executor 1 executes write_coverage_signal cov->size 27792, flag collect 1
----- executor 2 cover number : 2552, signal number : 1964
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1893, signal number : 1119
executor 1 server cover_cnt 17 output_pos_value 25616
----- executor 2 cover number : 2577, signal number : 1523
----- executor 2 executes write_coverage_signal cov->size 31867, flag collect 1
2023/03/31 02:41:05 for select break: 1
2023/03/31 02:41:05 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 136, 3154, 0
----- executor 2 cover number : 2102, signal number : 877
executor 2 server cover_cnt 21 output_pos_value 29202
before receive testcase: 0 0
Node-0:/root/daemon-log.14623
2023/03/31 02:41:05 for select break: 1
2023/03/31 02:41:05 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:05 wg wait finish
2023/03/31 02:41:05 ------ all executors finish execution
2023/03/31 02:41:05 exec time: 3246
2023/03/31 02:41:05 ----- PS len: 4
2023/03/31 02:41:05 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:05 fuzzer receive 1585 signal and 1273 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:05 [SERVER] executor 1 has 17 replies
2023/03/31 02:41:05 [SERVER] executor 2 has 21 replies
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 48 signal and 45 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 2019 signal and 1584 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 44 signal and 66 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 402 signal and 576 cover from userspace component
2023/03/31 02:41:05 [SERVER] executor 0 has 53 replies
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 21 signal and 18 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 3418 signal and 2686 cover from userspace component
time breakdown 2: 129, 3160, 0
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 64 signal and 59 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 200 signal and 280 cover from userspace component
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 2281 signal and 1785 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 434 signal and 530 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 100 signal and 142 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 42 signal and 501 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 4 signal and 126 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 2 signal and 10 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 207 signal and 286 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 13 signal and 23 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 405 signal and 774 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 33 signal and 59 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 6 signal and 4 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 75 signal and 65 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 61 signal and 46 cover from userspace component
2023/03/31 02:41:05 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 1973 signal and 1571 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 702 signal and 576 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 36 signal and 410 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 2447 signal and 1938 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 193 signal and 270 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 285 signal and 526 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 230 signal and 1117 cover from executor 3
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 711 signal and 930 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 107 signal and 435 cover from userspace component
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 339 signal and 909 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 18 signal and 123 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 153 signal and 651 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 91 signal and 818 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 147 signal and 749 cover from executor 3
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 1277 signal and 1029 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 102 signal and 390 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 788 signal and 1061 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 1550 signal and 1261 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 985 signal and 1958 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 1509 signal and 2189 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 1 receive 1119 signal and 1893 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 1964 signal and 2552 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 1523 signal and 2577 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 2 receive 877 signal and 2102 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 99 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 2039 signal and 1785 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 209 signal and 530 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 58 signal and 142 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 164 signal and 485 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 182 signal and 615 cover from userspace component
2023/03/31 02:41:05 ------- fuzzer executor 0 receive 591 signal and 894 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:05 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:05 failure smash: true false
2023/03/31 02:41:05 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:41:05 disable threaded and collide
2023/03/31 02:41:05 prog length: 6
2023/03/31 02:41:05 prog length: 19
2023/03/31 02:41:05 HasCrashFail:true HasNetFail:false
02:41:05 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
syz_failure_sync(0x1, 0x3)
pwrite64(r1, &(0x7f00000002c0)="c2e6c9a28a5419a64397a4b135b3f2f5cc742518625e6d224dfb99bb97f588d90a8fbc38613a02a29f275f3a10e2dc43f9dd1d8cb52b9d2fb1144ba5f2eb02d1089b9ddbd58c061eca1f92d8d228e658805be14496800a97cd51d5de414e732cafb1d34aa7cbc86408cf9c3e31c8cf82f10327aa1946a6e1ce7e2816464909f3b6af59ffaac63b6b76912e216eb462aa58a86f4013e9818243c5c53b97423c56a55702376feccc2887e25274197bf4f4899434dc6f7b38df74f32dcdaabb268476543ddd18e45cda07d0282506539801a126eb439b0a9c4ba092d5bdc5cfac37521afdebcecb1b15209aaec372448dcf16ab5f32ac0726297200651dfa70be682395d7696a2be237337684227ce57a3eedc706a3814c55eda93de77f3a9ed079c8e4ec0aac4c7df9d860372fb70a0216c22945a31efafb75328f34b4fb18a9d557e6b559b0d06254fb2ccdf9fcb3946eef0c5512d6430a30efc29ee480fc6c0a05a73ec02bf278745fb24af2c4a3e2939bdc5faab81d1b5dcb9ef55350036134f727929e2e1ca098eb3aac0e2e5d9ac94df169265d69a0b0643f2f759b84c5bd7b1a995a8247f596447ac686715274cddabe59194726d8c09603bf71c580e98ec48a1636325c022428861596b3bed470ad21fb798f0bbf64a8f355eec53351d6bfe567d2400c7be88266fa6f708e83d2e45b34b9f5018dda7fe6819d0642bd0bd41c76e67ad903393b382a7b6da26c9e8c47218243f51ea3a57d113ac5b995272f622727d971b860cc5da0a5481f742228e89d40690536a8aa97810007b5f5cccb0c01a066ebf0768e17ed428563363104530800a84dfa22137debcca397c75655b9aee067efe94ec89373d49773f2387f2bbfa01e9914c570f86ee1e84d7cec235815c1e5bac0ba842ad806352d465a1115b448c9cc4b52ad37df9ff9302ea364ebcc3eb364876ad0f717019e81dc46195c5e30da8ddfc3e7195907d5e47f247ead0900e5108be1903242f1399502db91eb342f7dd93ed0a3509d5bdfbdb28a200721a640ca7736f5d615c4a227ddaa7e2e257bbcc28fbead47a192b2ade5282ae793a3a6c22915bdd15a9a19fa36479f08f8e661b2b9782c6906d5379427e2f2c92539669fd02674cea2188e5dba374d1aa5c33175bd58f3a21a6574f556c63d25d46c0c851b5743595af34595850c772b3eaea78c146376f434e7b344cb5ac6dcbd722b8b842d99979f68b21ed6b51d5c5c2f2cbcdd928baf12ae7367edba1d6b356ced9b92ed26a82826eceb633f1668fc33bbe030f249b8dfd31edf029e40c76e65182c20477f7a31dc528e9f1eafb9fda281bd95762c6edb98fe0a8ce2ee571c892352023e76310c1eabb8781b00dd58c11e006d567f858693f49bc9fa032489634c1d712a0a4f5eccb97a86007c892d7f0fe07adb75244cb14868e558c41888a8c3b158d33974ce12e5267ac0e78301dbca7e82bf197c43201a0289fad1b53f2b4263d7e1fe41ffb9940b05d504ee43b4452603781acabc684be0347a1cb5ede6cfad5d3fbeee118bf4f7c83b2271dfc96d9a609a3dc4f7603603a05928ed11b987abc54f9ca170a1891fe258a1e85e0068492f2aabaad1652147450517448335a1e41caaef2c545bcee78a16a3bbac9f7223443d84a8a82fdbe1b72f4c1709621fac57bf0936fb6436551006f249c716b2124f33c46b47d5741ae4f4d75d9a64926b0b5d0aa043720cf0420b0daef83b2238187236e413f46b28a59b73159e3d7cdebbf181578cbbc03bf5db0fb76d532f98701e62e9ee58fce81debeb48c8e1e3974b4ad28d26ea3325afffb423496335a2753fec937ca4f7644bf86df184e6eb555f12f25b6e7cb51dde1be606e5bc0480337a319c9ddf77479625dc2595837fbc5cf94f2f8e5f8f288ab3a84230aaa85f6b0b876080c438da20f223b615858b96af1d6c985f105b6c4a406221d3726b4123f2b9a277a735b002d522c622c5a0386fa3f84ec360c3db7f9320bd07b5aa5f3d104c0a91c95125aec73b7727b8248d7b8796df9beec561ee2e5a8bc5b0ef330fceb33e1eaea901afd7e3afbcf2a23740e8cb64d3faf44acf0150338dc62170fe970d1c4eb7dafaab6077421be6d7b5253f1a5f0bffdfcf68bb0470495a1eadd104aa612baa9ac2d936a37d1d858050dfef9993c640e69c06cca5e9eb4a9e790e78b9ae2624f4bf079d57d1ac6cb537e0eb70f9b1275c70804bd6c5b3a2e758acde9878ee63187f17e13f6f6932da75ab3ec98f68575afe4712af0aa4a564fa98d21e9be0d7c775814ecb31eaf35c0132a57f557366ebb39a08762491df040e56c89aafb87913e4671bf6a24c16d642222234b85c0bb33a8606c4657b67eba3b0896db4b60e40f8569b490ea4d763089efcfe5e9586c01960d0391b4194528527b94c8d40d2f165ba161c6b444d5bb483ab6f24e0a7ce8c5950bf42b0243cd161ec939ccaf4413a50e746d4692fab3e1aeec362771d9e65104f1b24e18d0a1bf2a9e7c38fe6e196feb5d30dd26807756cda3ba5c661ffabc9cb7f6a94cf98cf84a45ae1693a5aca91dd2a3f4d7eb6aad61818fd20321537cb154b4f0dcfa5ceaa17d083ed1d50010bf46175032f81a2492e362434af9e0d5a2799adc398ca4a940d28b7e8653f77ea325b78eb883caf446b60448613fc7775367215941f95d1401f38fbfa6acb36ac08f9fa0b7c3563214923082c6e97f1004d21dc5e50970abd54bed198d3524a60622c59e9fa24489dffb8fc134637caabfedd79b84d36ce14255c7f22cd61e10b84864fa0cd2b02a29351ab9d9c3e3ba61d37f0deb08f7fa73c4ee6cc1558d1617c17e207505dab745a3a56fd8ed0c0cd70a54e8a138ee84e66f8552bc8424c2d4bc643dd061b85a3888983b25448cfc5584099bec19c164320195a546f63ae82ad7b3b5d3607d8b84f082edb5d842acce111b8056feeb442e43567b4fb2cc19843576736e585ca0ec576db83ccedb8bd1064abd021dd52a7f38f61cfcf727843fea5b63244e9a93a2ea0eef8ce0145448f1b46c389014b27fe1986697bd30314cc071f824a5775bcb118ea2356db4b8282cead9df2d4e242b9c1126b44edafd340bd8b0e39c6424886e42729f2d2995d106cd1ff4df4bd1abb9b99d3dbbcb8197730c86c144e6974937bd0e50d81fbe982a8172ea4db82ca3c430925b081a6579cbf8407b4f2b1a1dbf5aaf28050dfd826e1934af2f40d34e20ef1653d86265c167f4926ed1c2de54cc58ddcece1a31d666607d8308b433eef16c955a3ba02e5e1c485e71a761fc2b344f90223fbbdff42ef2b5f990768c44becd3221d97d51112b67ae7b0ad09a20546ac8453603c10b46739f440007774f58906c26463ec6d901d3613d796492de39956c3ce7a3c43c3683a86cb136d4d950f0928539992226fce69c57934d86440fb3ab87fb39f18601c15ee2719018d8c3505087358e73fe4f8d1dd1f951e1079def5c1095248d66ced8123d8845b50713ecc8c686abcccb989575a3cfd39287b0021adcf5231ee8b8cc5e802e58e88ad8f763bb0442d04e37db4946408fccbee446f78bca281f479791ed59ebfb00660ad8e7e45cab1410480ca8d6e3a920dedde22379c0731253a9037975dbc305342cce75b3dcded27a4b607d404322ed7909bb46693df60201dd2a23576991d5c109a100f5bf45d391724f67cbc457cc2ffa2e961f3dd6546b661408e7699fb709a5b7175c69f8e88d7f7444010c5a400fd783b5b0a342944ae2adbf8b0eeda69463deec5277dfde9bffec6718da3cbbd56c3ea67ad7d65743427d4d8b32d76bd99a8af36e5414be370c752fa74f127c70468b8d2f62c15f7a38fc8f2ba723c12a0dbadc5348296467c2220c50d82be89f05f379b8eadae4ce8ff4ce15b87253742016a9c81d367fdf6aa0e0f3f78a240a098b3cc16fbc7b0d2911aa768464bb68d01b0b3656c75c1b20487579be10836ea87d68050df28c2aed67f18822b554ea987b1fef45521a85603fd4be5c630c4cf12b1f5dc39b76fd0bce5acb086fc6a1a9ac065e73a36fddfa1d95728283bf952ba8d90603acc831baa6ee971ca7a5ed1f10726e71a3a7cc500872eaaa37f483527375d576abdf4eedecf75cb53049417c7cdde150c1a0a093311f66fcfb08ead403f11c1e57d3fd9eb5e6079f66817a929e607fe828f782aae0f8586bdcf7c03452c02972152ff4aaabc92fbec651c500a2a1d35e299a615daa3a089039f1facf69f7b3f70c559afb6a9ebd97ad05399fa888b3420d01e1b52c5c61634eb65337dbaea4f20ebc8190b99352941052f75a6a02624fd3baba8a46e3a3c8757c49483c2ba05ae42e1ae332860dbf7317975b6133eea0dabe14b0630bb15bc54d04eca3480502543ad341bebff31744ede53454d623a0a3d9bec845049b4ac52ebaf89127d07682eaf77fd777716d82e9ba6e038d25b117bd103e638dd2303d8683cf329a32e1840750cfc97e4eadbf6c1151c83752b449161aaf6b3d3a7f92b942fcb2d61be762c38dcab69878f8c2cc129be4f9a051e1f9464cf671aa6f5b868b9938ad9e563c946d96b3d851f812d6ad775bbf3a225a929f78feacd589fed63948b6534515e2748d0f1d2538e646de65d9abcc6f93c5985577627368ea4372616836136099a950445ef2a79f38cf1850de2b39f2b9a035c906b060d27500809972d7897523af5de3a719728ac7899f8a04148f63c9bf5bf04cff935e29a8122d8ad51a1ec995994e198e78c433af397d1b967b653b8233a58432a2b77d4b4ef760711645e01ba102c072bb9900062dfec5f3c78e97c2ae0b4fe5413591f0f18227d6189b184d429a782feba09795181efedf21df950c0967809487daa1b9fc5d4c61260aee2b4611d90a2635aa464452ff030159bf4740cdab60391b0ca867f7cb64fafd4d1a13a3fd3b9d8e520548a59c0b971f41fdf8e46619ae8289eca62920fd3125d601a9808c604b6215c34042b626a7b416c69307be2e741233ef31b279dab7dac767c3270b5d7a12cf7bce14ffd8b60b99813c0b35475b136c308f4ca3ae54ac17e9a4e064dfe01f98d6d5813c14aae79ece00ab9de11212c4c9846ef3fbd886702f5a575aebad2b0b2ed1a1d613886c2bcb774e6a65ffec02fa026148ca4b6d63f813c45f178546d7c032995172d366299ac63b59a426740e8c5f762af1942272c5ed914dc5e300a8b9884cf36bb4c965d65202fd83e14765e49a04c246e43423cfdf5b163087af2f9faf30b22294c6aec7da1e66ed95710ac8f13ce416d387ecaa4eb09512d1a6ade652d5fb489abc150a2a52177b0dcdbbe88907d8264e88a3495ec8bde4584c31f60df7f1584fe57efc1c58fbb9aacb04cf163d059c328f16da446dce46a76ce4f001cd97637b19ccb0be002d8d07d96e55f7574dad670c482dfec2cf0d99433632ee06a852e886f6ba791def11a56a1e7f002e479f59c0da034b1fb8c319f859933f6e0ab06b6c4c0874c1b9de44977e7d8049e7f97412057c1fd64111f538ab1b4ae09c72bcf51da9b11a84cffa0a575859b570eae80705778e7d44cc3efe0dae06538aba655de1ceb63a80d1141ca8bad713220d7a7e5f0f147b81764814e6af51b59b3dac1fb65765638dc8f7f4ea6e970fa1d86874e24fda9a911276a57728b7b730bb957b5a8ab58e95e64873979f688aac03e3b2f957a4a281f32ba552d3f787e709f5d394bca0df5d35cf0a063e535a6927632e10c51df55311ef45014912053006e5f1c657a7efc", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
2023/03/31 02:41:05 send to channel: true, false
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1438
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 91
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1439 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1439
receive_execute: 28, 119
receive_execute: 21, 119
receive_execute: 53, 121
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 3
receive_execute: 76, 126
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9003, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 9003, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 16, 0, 5
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 44, 0, 0
execute_one loop: 0, 0, 44
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 731, signal number : 832
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
executor 0 server cover_cnt 3 output_pos_value 1601
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 45
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2468, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 2468, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 9
execute_call 0, 1, 0, 2
execute_one loop: 0, 0, 3
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14623==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 2678, 0, 0
execute_one loop: 0, 0, 2678
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 2678, 0, 0
execute_one loop: 0, 0, 2678
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2771, 0
execute_one time: 2, 2771
----- executor 3 write_call_output, size 12834, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 12834, flag collect 1
----- executor 3 cover number : 1377, signal number : 536
----- completed 12
execute_call 0, 26, 0, 9
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3494, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 3494, flag collect 1
----- executor 3 cover number : 934, signal number : 218
----- completed 15
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 16
execute_call 0, 13, 0, 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2938, write pid:2938
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2841, 0
execute_one time: 1, 2841
2023/03/31 02:41:08 for select break: 1
2023/03/31 02:41:08 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 2 cover number : 7, signal number : 7
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18997, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 18996, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 551
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 202, 2844, 0
before receive testcase: 0 1
----- executor 2 cover number : 1731, signal number : 2158
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 2 cover number : 401, signal number : 443
----- executor 2 executes write_coverage_signal cov->size 27713, flag collect 1
----- executor 1 cover number : 1730, signal number : 2113
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 15386, flag collect 1
----- executor 0 cover number : 126, signal number : 66
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 224
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 409, signal number : 225
----- executor 1 executes write_coverage_signal cov->size 14359, flag collect 1
----- executor 2 cover number : 575, signal number : 291
----- executor 2 executes write_coverage_signal cov->size 28615, flag collect 1
----- executor 1 cover number : 575, signal number : 65
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1819, signal number : 2056
----- executor 0 executes write_coverage_signal cov->size 1102, flag collect 1
----- executor 0 cover number : 496, signal number : 149
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2551, signal number : 3286
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 899, flag collect 1
----- executor 0 cover number : 731, signal number : 445
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 1, flag collect 1
----- executor 0 cover number : 1, signal number : 1
executor 0 server cover_cnt 44 output_pos_value 11988
----- executor 2 cover number : 270, signal number : 191
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3162, flag collect 1
----- executor 2 cover number : 769, signal number : 663
----- executor 2 executes write_coverage_signal cov->size 1530, flag collect 1
----- executor 2 cover number : 435, signal number : 112
----- executor 2 executes write_coverage_signal cov->size 2533, flag collect 1
2023/03/31 02:41:08 for select break: 1
2023/03/31 02:41:08 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 528, signal number : 422
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2685, signal number : 3336
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 28, flag collect 1
----- executor 1 cover number : 27, signal number : 26
----- executor 1 executes write_coverage_signal cov->size 861, flag collect 1
----- executor 1 cover number : 270, signal number : 180
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 416, flag collect 1
----- executor 1 cover number : 227, signal number : 80
----- executor 1 executes write_coverage_signal cov->size 4274, flag collect 1
----- executor 1 cover number : 720, signal number : 483
----- executor 1 executes write_coverage_signal cov->size 26774, flag collect 1
----- executor 2 cover number : 1236, signal number : 1341
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 174, 2867, 0
before receive testcase: 0 0
----- executor 1 cover number : 1183, signal number : 1426
----- executor 1 executes write_coverage_signal cov->size 25982, flag collect 1
----- executor 2 cover number : 2092, signal number : 1397
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1074, signal number : 837
----- executor 1 executes write_coverage_signal cov->size 31737, flag collect 1
----- executor 2 cover number : 2575, signal number : 1488
----- executor 2 executes write_coverage_signal cov->size 28452, flag collect 1
----- executor 1 cover number : 2643, signal number : 1821
----- executor 1 executes write_coverage_signal cov->size 30220, flag collect 1
----- executor 2 cover number : 1966, signal number : 982
executor 2 server cover_cnt 17 output_pos_value 28020
2023/03/31 02:41:08 for select break: 1
2023/03/31 02:41:08 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 140, 2896, 0
----- executor 1 cover number : 1697, signal number : 810
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
before receive testcase: 0 0
----- executor 1 cover number : 2263, signal number : 1392
executor 1 server cover_cnt 18 output_pos_value 28538
2023/03/31 02:41:08 for select break: 1
2023/03/31 02:41:08 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:08 wg wait finish
2023/03/31 02:41:08 ------ all executors finish execution
2023/03/31 02:41:08 exec time: 3030
2023/03/31 02:41:08 ----- PS len: 4
2023/03/31 02:41:08 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:08 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:08 [SERVER] executor 1 has 18 replies
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/03/31 02:41:08 [SERVER] executor 0 has 44 replies
2023/03/31 02:41:08 [SERVER] executor 2 has 17 replies
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 832 signal and 731 cover from userspace component
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 8 signal and 8 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:08 fuzzer receive 536 signal and 1377 cover from executor 3
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 2113 signal and 1730 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 2158 signal and 1731 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:08 fuzzer receive 218 signal and 934 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 225 signal and 409 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 65 signal and 575 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 3336 signal and 2685 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 443 signal and 401 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 291 signal and 575 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 3286 signal and 2551 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 191 signal and 270 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 663 signal and 769 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 551 signal and 501 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 66 signal and 126 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 26 signal and 27 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 224 signal and 286 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 112 signal and 435 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 22 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 422 signal and 528 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 1341 signal and 1236 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 180 signal and 270 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 1397 signal and 2092 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 1488 signal and 2575 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 80 signal and 227 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 483 signal and 720 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 1426 signal and 1183 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 837 signal and 1074 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 2 receive 982 signal and 1966 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 1821 signal and 2643 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 810 signal and 1697 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 1 receive 1392 signal and 2263 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 2056 signal and 1819 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 149 signal and 496 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 445 signal and 731 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 5 signal and 8 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 19 signal and 27 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/03/31 02:41:08 ------- fuzzer executor 0 receive 1 signal and 1 cover from userspace component
time breakdown 1: 147, 2910, 0
before receive testcase: 0 0
2023/03/31 02:41:08 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:08 disable threaded and collide
2023/03/31 02:41:08 prog length: 6
2023/03/31 02:41:08 prog length: 19
2023/03/31 02:41:08 HasCrashFail:true HasNetFail:false
02:41:08 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
syz_failure_sync(0x1, 0x3)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1439
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 72
-----finish removing dir
receive_execute: 68, 111
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1440 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1440
receive_execute: 42, 111
receive_execute: 28, 110
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 87, 121
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8958, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 8958, flag collect 1
----- executor 3 cover number : 1273, signal number : 1585
----- completed 1
execute_call 0, 18, 0, 10
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 17, 0, 6
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 68, 0, 0
execute_one loop: 0, 0, 68
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Node-0:/root/daemon-log.14682
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
execute_call 0, 69, 0, 0
execute_one loop: 0, 0, 69
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- completed 7
execute_call 0, 69, 0, 0
execute_one loop: 0, 0, 69
cover_reset in execute_call
----- executor 3 write_call_output, size 5472, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 5472, flag collect 1
----- executor 3 cover number : 910, signal number : 68
----- completed 8
execute_call 0, 6, 0, 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 139
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
==14682==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2836, 0, 0
execute_one loop: 0, 0, 2836
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2983, 0
execute_one time: 1, 2984
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 2836, 0, 0
execute_one loop: 0, 0, 2836
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 12833, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 12833, flag collect 1
----- executor 3 cover number : 1379, signal number : 495
----- completed 12
execute_call 0, 20, 0, 6
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3489, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 3489, flag collect 1
----- executor 3 cover number : 934, signal number : 219
----- completed 15
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 16
execute_call 0, 16, 0, 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 2533, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 2533, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 6, 0, 2
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2939, write pid:2939
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3048, 0
execute_one time: 1, 3048
2023/03/31 02:41:11 for select break: 1
2023/03/31 02:41:11 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 208, 3051, 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 833, flag collect 1
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 808, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 595
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 104
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 224
----- executor 0 executes write_coverage_signal cov->size 2788, flag collect 1
----- executor 0 cover number : 422, signal number : 391
----- executor 0 executes write_coverage_signal cov->size 109, flag collect 1
----- executor 0 cover number : 65, signal number : 35
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 99
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2572, signal number : 3139
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 91
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 0 cover number : 1959, signal number : 2285
executor 0 server cover_cnt 34 output_pos_value 9905
----- executor 1 cover number : 66, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 14359, flag collect 1
----- executor 2 cover number : 2606, signal number : 3180
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 117
2023/03/31 02:41:11 for select break: 1
2023/03/31 02:41:12 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 63
----- executor 2 executes write_coverage_signal cov->size 13646, flag collect 1
----- executor 1 cover number : 576, signal number : 410
----- executor 1 executes write_coverage_signal cov->size 14707, flag collect 1
----- executor 2 cover number : 576, signal number : 743
----- executor 2 executes write_coverage_signal cov->size 16766, flag collect 1
----- executor 1 cover number : 409, signal number : 127
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 179, 3077, 0
before receive testcase: 0 1
----- executor 2 cover number : 410, signal number : 145
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1880, signal number : 2394
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 12, signal number : 10
----- executor 1 executes write_coverage_signal cov->size 866, flag collect 1
----- executor 1 cover number : 269, signal number : 146
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 117
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2528, flag collect 1
----- executor 1 cover number : 809, signal number : 289
----- executor 1 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 2 cover number : 2313, signal number : 3154
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1139, flag collect 1
----- executor 1 cover number : 641, signal number : 191
----- executor 1 executes write_coverage_signal cov->size 23453, flag collect 1
----- executor 2 cover number : 278, signal number : 166
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 256
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 5458, flag collect 1
----- executor 2 cover number : 990, signal number : 671
----- executor 2 executes write_coverage_signal cov->size 26317, flag collect 1
----- executor 1 cover number : 1029, signal number : 1302
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1208, signal number : 1639
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 29590, flag collect 1
----- executor 1 cover number : 1086, signal number : 857
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1205, signal number : 933
----- executor 2 executes write_coverage_signal cov->size 29950, flag collect 1
----- executor 1 cover number : 2749, signal number : 2305
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2129, signal number : 1613
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2533, signal number : 1775
----- executor 1 executes write_coverage_signal cov->size 28475, flag collect 1
----- executor 2 cover number : 2482, signal number : 1969
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1997, signal number : 964
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 24 output_pos_value 33216
2023/03/31 02:41:12 for select break: 1
2023/03/31 02:41:12 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 138, 3121, 0
----- executor 2 cover number : 2101, signal number : 1672
executor 2 server cover_cnt 25 output_pos_value 35330
2023/03/31 02:41:12 for select break: 1
2023/03/31 02:41:12 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:12 wg wait finish
2023/03/31 02:41:12 ------ all executors finish execution
2023/03/31 02:41:12 exec time: 3237
before receive testcase: 0 0
2023/03/31 02:41:12 ----- PS len: 4
2023/03/31 02:41:12 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:12 fuzzer receive 1585 signal and 1273 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 282 signal and 427 cover from executor 3
time breakdown 2: 153, 3126, 0
2023/03/31 02:41:12 [SERVER] executor 1 has 24 replies
2023/03/31 02:41:12 [SERVER] executor 2 has 25 replies
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/03/31 02:41:12 [SERVER] executor 0 has 34 replies
2023/03/31 02:41:12 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 68 signal and 910 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 595 signal and 501 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 139 signal and 515 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 3139 signal and 2572 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 91 signal and 116 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 5 signal and 66 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 410 signal and 576 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 127 signal and 409 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 495 signal and 1379 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 2394 signal and 1880 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 10 signal and 12 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 146 signal and 269 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 117 signal and 526 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 289 signal and 809 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 191 signal and 641 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 219 signal and 934 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 1302 signal and 1029 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 857 signal and 1086 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 104 signal and 126 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 2305 signal and 2749 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 1775 signal and 2533 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 964 signal and 1997 cover from userspace component
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 3180 signal and 2606 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 117 signal and 116 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 63 signal and 66 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 743 signal and 576 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 145 signal and 410 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 224 signal and 286 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 391 signal and 422 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 3154 signal and 2313 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 166 signal and 278 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 256 signal and 526 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 671 signal and 990 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 35 signal and 65 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 1639 signal and 1208 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 22 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 99 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 0 receive 2285 signal and 1959 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 933 signal and 1205 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 1613 signal and 2129 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 1969 signal and 2482 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 2 receive 1672 signal and 2101 cover from userspace component
2023/03/31 02:41:12 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:12 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:12 failure smash: true false
2023/03/31 02:41:12 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:41:12 disable threaded and collide
2023/03/31 02:41:12 prog length: 6
2023/03/31 02:41:12 send to channel: true, false
2023/03/31 02:41:12 prog length: 19
2023/03/31 02:41:12 HasCrashFail:true HasNetFail:false
02:41:12 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1440
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
Node-0:/root/daemon-log.14727
remove dir time 70
-----finish removing dir
receive_execute: 34, 105
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1441 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1441
receive_execute: 29, 104
receive_execute: 78, 105
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 93, 114
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8997, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 8997, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 13, 0, 9
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 15, 0, 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 10403, flag collect 1
----- executor 0 cover number : 1500, signal number : 1847
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 107
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1001, signal number : 732
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
executor 0 server cover_cnt 10 output_pos_value 5587
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 34
----- directly resend shmid 34
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14727==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2746, 0, 0
execute_one loop: 0, 0, 2746
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2857, 0
execute_one time: 5, 2858
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 2746, 0, 0
execute_one loop: 0, 0, 2746
cover_reset in execute_call
----- executor 3 write_call_output, size 12831, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 12831, flag collect 1
----- executor 3 cover number : 1377, signal number : 536
----- completed 12
execute_call 0, 31, 0, 9
execute_one loop: 0, 0, 40
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3494, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 3494, flag collect 1
----- executor 3 cover number : 934, signal number : 218
----- completed 15
execute_call 0, 15, 0, 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 16
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 2528, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 2528, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2941, write pid:2941
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 2929, 0
execute_one time: 2, 2930
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 22390, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 24573, flag collect 1
2023/03/31 02:41:15 for select break: 1
----- executor 0 cover number : 501, signal number : 384
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:41:15 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 207, 2933, 0
before receive testcase: 0 1
----- executor 2 cover number : 1888, signal number : 2355
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 11628, flag collect 1
----- executor 1 cover number : 1988, signal number : 2534
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 24
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 14372, flag collect 1
----- executor 0 cover number : 126, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 719
----- executor 2 executes write_coverage_signal cov->size 16760, flag collect 1
----- executor 1 cover number : 576, signal number : 291
----- executor 1 executes write_coverage_signal cov->size 15386, flag collect 1
----- executor 2 cover number : 410, signal number : 98
----- executor 2 executes write_coverage_signal cov->size 32149, flag collect 1
----- executor 1 cover number : 409, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 30233, flag collect 1
----- executor 0 cover number : 1886, signal number : 2039
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1990, signal number : 2524
----- executor 2 executes write_coverage_signal cov->size 917, flag collect 1
----- executor 2 cover number : 270, signal number : 180
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 0 cover number : 142, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1103, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 3953, flag collect 1
----- executor 0 cover number : 497, signal number : 116
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 793, signal number : 665
----- executor 2 executes write_coverage_signal cov->size 739, flag collect 1
----- executor 2 cover number : 377, signal number : 62
----- executor 2 executes write_coverage_signal cov->size 22615, flag collect 1
----- executor 1 cover number : 1697, signal number : 1833
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1153, flag collect 1
----- executor 1 cover number : 280, signal number : 174
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1216, flag collect 1
----- executor 1 cover number : 390, signal number : 210
----- executor 1 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 1 cover number : 774, signal number : 279
----- executor 1 executes write_coverage_signal cov->size 25984, flag collect 1
----- executor 0 cover number : 1001, signal number : 452
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 0 cover number : 165, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 20
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 58 output_pos_value 16446
----- executor 2 cover number : 1076, signal number : 1273
----- executor 2 executes write_coverage_signal cov->size 29204, flag collect 1
2023/03/31 02:41:15 for select break: 1
2023/03/31 02:41:15 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 183, 2965, 0
before receive testcase: 0 0
----- executor 1 cover number : 1074, signal number : 1260
----- executor 1 executes write_coverage_signal cov->size 26779, flag collect 1
----- executor 2 cover number : 1101, signal number : 844
----- executor 2 executes write_coverage_signal cov->size 29654, flag collect 1
----- executor 1 cover number : 1183, signal number : 820
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2551, signal number : 1923
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2444, signal number : 1821
----- executor 2 executes write_coverage_signal cov->size 31565, flag collect 1
----- executor 1 cover number : 2263, signal number : 2038
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2100, signal number : 953
executor 2 server cover_cnt 16 output_pos_value 29199
----- executor 1 cover number : 2685, signal number : 1833
----- executor 1 executes write_coverage_signal cov->size 31749, flag collect 1
2023/03/31 02:41:15 for select break: 1
2023/03/31 02:41:15 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 133, 2990, 0
before receive testcase: 0 0
----- executor 1 cover number : 2643, signal number : 1827
executor 1 server cover_cnt 18 output_pos_value 29267
2023/03/31 02:41:15 for select break: 1
2023/03/31 02:41:15 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:15 wg wait finish
2023/03/31 02:41:15 ------ all executors finish execution
2023/03/31 02:41:15 exec time: 3104
2023/03/31 02:41:15 ----- PS len: 4
2023/03/31 02:41:15 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:15 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 536 signal and 1377 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 218 signal and 934 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:15 [SERVER] executor 0 has 58 replies
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 1847 signal and 1500 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 107 signal and 142 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 732 signal and 1001 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 165 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 6 signal and 8 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 5 signal and 7 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 384 signal and 501 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 3 signal and 126 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 207 signal and 286 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 23 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 2039 signal and 1886 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 54 signal and 142 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 1 signal and 7 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 116 signal and 497 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 2 signal and 5 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 452 signal and 1001 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 13 signal and 165 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 4 signal and 8 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 3 signal and 7 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 20 signal and 27 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:15 [SERVER] executor 1 has 18 replies
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 2534 signal and 1988 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 24 signal and 66 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 291 signal and 576 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 0 signal and 409 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 1833 signal and 1697 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 174 signal and 280 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 210 signal and 390 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 279 signal and 774 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 1260 signal and 1074 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 820 signal and 1183 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 2038 signal and 2263 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 1833 signal and 2685 cover from userspace component
2023/03/31 02:41:15 [SERVER] executor 2 has 16 replies
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 1 receive 1827 signal and 2643 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 2355 signal and 1888 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 719 signal and 576 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 98 signal and 410 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 2524 signal and 1990 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 180 signal and 270 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 665 signal and 793 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 62 signal and 377 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 1273 signal and 1076 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 844 signal and 1101 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 1923 signal and 2551 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 1821 signal and 2444 cover from userspace component
2023/03/31 02:41:15 ------- fuzzer executor 2 receive 953 signal and 2100 cover from userspace component
time breakdown 1: 139, 3000, 0
before receive testcase: 0 0
2023/03/31 02:41:15 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:15 disable threaded and collide
2023/03/31 02:41:15 prog length: 6
2023/03/31 02:41:15 prog length: 19
2023/03/31 02:41:15 HasCrashFail:true HasNetFail:false
02:41:15 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1441
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 76
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1442 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1442
receive_execute: 45, 103
receive_execute: 34, 104
receive_execute: 69, 103
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
receive_execute: 91, 110
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
Node-0:/root/daemon-log.14787
----- executor 3 write_call_output, size 8984, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 8984, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 23, 0, 9
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 64, 0, 0
execute_one loop: 0, 0, 64
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2783, flag collect 1
----- executor 0 cover number : 417, signal number : 498
----- executor 0 executes write_coverage_signal cov->size 70, flag collect 1
----- executor 0 cover number : 57, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1944, signal number : 2359
----- executor 0 executes write_coverage_signal cov->size 5768, flag collect 1
----- executor 0 cover number : 523, signal number : 434
executor 0 server cover_cnt 4 output_pos_value 6271
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 76, 0, 0
execute_one loop: 0, 0, 76
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 77, 0, 0
execute_one loop: 0, 0, 77
cover_reset in execute_call
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==14787==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 2808, 0, 0
execute_one loop: 0, 0, 2808
cover_reset in execute_call
execute_call 0, 2808, 0, 0
execute_one loop: 0, 0, 2809
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 2950, 0
execute_one time: 2, 2952
----- executor 3 write_call_output, size 12833, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 12833, flag collect 1
----- executor 3 cover number : 1379, signal number : 569
----- completed 12
execute_call 0, 17, 0, 4
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 16
----- completed 14
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3490, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 3490, flag collect 1
----- executor 3 cover number : 934, signal number : 225
----- completed 15
execute_call 0, 18, 0, 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 2757, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 2757, flag collect 1
----- executor 3 cover number : 818, signal number : 12
----- completed 16
execute_call 0, 15, 0, 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2536, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 2536, flag collect 1
----- executor 3 cover number : 749, signal number : 147
----- completed 17
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2942, write pid:2942
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3009, 0
execute_one time: 3, 3009
2023/03/31 02:41:18 for select break: 1
2023/03/31 02:41:18 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 792, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 853, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 2 cover number : 279, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 50
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 201, 3014, 0
before receive testcase: 0 0
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 539, signal number : 616
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 67
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 207
----- executor 0 executes write_coverage_signal cov->size 2788, flag collect 1
----- executor 0 cover number : 422, signal number : 338
----- executor 0 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 0 cover number : 57, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2165, signal number : 2584
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28378, flag collect 1
----- executor 1 cover number : 2166, signal number : 2593
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 12974, flag collect 1
----- executor 1 cover number : 576, signal number : 335
----- executor 1 executes write_coverage_signal cov->size 16766, flag collect 1
----- executor 2 cover number : 576, signal number : 740
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 50
----- executor 1 executes write_coverage_signal cov->size 27876, flag collect 1
----- executor 0 cover number : 1944, signal number : 2688
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 219
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1964, signal number : 2615
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 746, flag collect 1
----- executor 2 cover number : 270, signal number : 145
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 292
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3302, flag collect 1
----- executor 1 cover number : 2188, signal number : 2748
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 744, flag collect 1
----- executor 1 cover number : 270, signal number : 147
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 887, signal number : 569
----- executor 2 executes write_coverage_signal cov->size 2151, flag collect 1
----- executor 1 cover number : 526, signal number : 199
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 416, flag collect 1
----- executor 1 cover number : 227, signal number : 139
----- executor 1 executes write_coverage_signal cov->size 5060, flag collect 1
----- executor 2 cover number : 585, signal number : 143
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 883, signal number : 393
----- executor 1 executes write_coverage_signal cov->size 29513, flag collect 1
----- executor 0 cover number : 142, signal number : 15
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 682, flag collect 1
----- executor 0 cover number : 347, signal number : 79
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
executor 0 server cover_cnt 45 output_pos_value 17172
----- executor 2 cover number : 1207, signal number : 1661
----- executor 2 executes write_coverage_signal cov->size 23096, flag collect 1
----- executor 1 cover number : 1154, signal number : 1470
----- executor 1 executes write_coverage_signal cov->size 24230, flag collect 1
2023/03/31 02:41:18 for select break: 1
2023/03/31 02:41:18 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 172, 3053, 0
before receive testcase: 0 0
----- executor 2 cover number : 1619, signal number : 1215
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1200, signal number : 882
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2551, signal number : 1938
----- executor 2 executes write_coverage_signal cov->size 29108, flag collect 1
----- executor 1 cover number : 2331, signal number : 2218
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2575, signal number : 1561
executor 2 server cover_cnt 21 output_pos_value 30220
----- executor 1 cover number : 2177, signal number : 1694
----- executor 1 executes write_coverage_signal cov->size 25549, flag collect 1
2023/03/31 02:41:18 for select break: 1
2023/03/31 02:41:18 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 1689, signal number : 1100
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 22 output_pos_value 31666
2023/03/31 02:41:18 for select break: 1
2023/03/31 02:41:18 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:18 wg wait finish
2023/03/31 02:41:18 ------ all executors finish execution
2023/03/31 02:41:18 exec time: 3178
2023/03/31 02:41:18 ----- PS len: 4
2023/03/31 02:41:18 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:18 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 569 signal and 1379 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 [SERVER] executor 1 has 22 replies
2023/03/31 02:41:18 fuzzer receive 16 signal and 128 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 225 signal and 934 cover from executor 3
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/03/31 02:41:18 fuzzer receive 12 signal and 818 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 147 signal and 749 cover from executor 3
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 616 signal and 539 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:18 [SERVER] executor 2 has 21 replies
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 316 signal and 279 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 2593 signal and 2166 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 335 signal and 576 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 50 signal and 410 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 2748 signal and 2188 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 147 signal and 270 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 199 signal and 526 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 139 signal and 227 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 393 signal and 883 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 1470 signal and 1154 cover from userspace component
2023/03/31 02:41:18 [SERVER] executor 0 has 45 replies
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 882 signal and 1200 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 498 signal and 417 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 2218 signal and 2331 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 26 signal and 57 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 1694 signal and 2177 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 2359 signal and 1944 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 434 signal and 523 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 1100 signal and 1689 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 50 signal and 501 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 67 signal and 126 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 207 signal and 286 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 338 signal and 422 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 23 signal and 57 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 6 signal and 4 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 2584 signal and 2165 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 740 signal and 576 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 2615 signal and 1964 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 145 signal and 270 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 292 signal and 526 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 569 signal and 887 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 143 signal and 585 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 1661 signal and 1207 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 1215 signal and 1619 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 1938 signal and 2551 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 2688 signal and 1944 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 219 signal and 530 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 15 signal and 142 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 1 signal and 7 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 79 signal and 347 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 2 receive 1561 signal and 2575 cover from userspace component
2023/03/31 02:41:18 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
time breakdown 2: 148, 3068, 0
before receive testcase: 0 0
time breakdown 1: 138, 3074, 0
before receive testcase: 0 0
2023/03/31 02:41:18 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:18 failure smash: true false
2023/03/31 02:41:18 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:41:18 disable threaded and collide
2023/03/31 02:41:18 prog length: 6
2023/03/31 02:41:18 prog length: 19
2023/03/31 02:41:18 send to channel: true, false
2023/03/31 02:41:18 HasCrashFail:true HasNetFail:false
02:41:18 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="c2e6c9a28a5419a64397a4b135b3f2f5cc742518625e6d224dfb99bb97f588d90a8fbc38613a02a29f275f3a10e2dc43f9dd1d8cb52b9d2fb1144ba5f2eb02d1089b9ddbd58c061eca1f92d8d228e658805be14496800a97cd51d5de414e732cafb1d34aa7cbc86408cf9c3e31c8cf82f10327aa1946a6e1ce7e2816464909f3b6af59ffaac63b6b76912e216eb462aa58a86f4013e9818243c5c53b97423c56a55702376feccc2887e25274197bf4f4899434dc6f7b38df74f32dcdaabb268476543ddd18e45cda07d0282506539801a126eb439b0a9c4ba092d5bdc5cfac37521afdebcecb1b15209aaec372448dcf16ab5f32ac0726297200651dfa70be682395d7696a2be237337684227ce57a3eedc706a3814c55eda93de77f3a9ed079c8e4ec0aac4c7df9d860372fb70a0216c22945a31efafb75328f34b4fb18a9d557e6b559b0d06254fb2ccdf9fcb3946eef0c5512d6430a30efc29ee480fc6c0a05a73ec02bf278745fb24af2c4a3e2939bdc5faab81d1b5dcb9ef55350036134f727929e2e1ca098eb3aac0e2e5d9ac94df169265d69a0b0643f2f759b84c5bd7b1a995a8247f596447ac686715274cddabe59194726d8c09603bf71c580e98ec48a1636325c022428861596b3bed470ad21fb798f0bbf64a8f355eec53351d6bfe567d2400c7be88266fa6f708e83d2e45b34b9f5018dda7fe6819d0642bd0bd41c76e67ad903393b382a7b6da26c9e8c47218243f51ea3a57d113ac5b995272f622727d971b860cc5da0a5481f742228e89d40690536a8aa97810007b5f5cccb0c01a066ebf0768e17ed428563363104530800a84dfa22137debcca397c75655b9aee067efe94ec89373d49773f2387f2bbfa01e9914c570f86ee1e84d7cec235815c1e5bac0ba842ad806352d465a1115b448c9cc4b52ad37df9ff9302ea364ebcc3eb364876ad0f717019e81dc46195c5e30da8ddfc3e7195907d5e47f247ead0900e5108be1903242f1399502db91eb342f7dd93ed0a3509d5bdfbdb28a200721a640ca7736f5d615c4a227ddaa7e2e257bbcc28fbead47a192b2ade5282ae793a3a6c22915bdd15a9a19fa36479f08f8e661b2b9782c6906d5379427e2f2c92539669fd02674cea2188e5dba374d1aa5c33175bd58f3a21a6574f556c63d25d46c0c851b5743595af34595850c772b3eaea78c146376f434e7b344cb5ac6dcbd722b8b842d99979f68b21ed6b51d5c5c2f2cbcdd928baf12ae7367edba1d6b356ced9b92ed26a82826eceb633f1668fc33bbe030f249b8dfd31edf029e40c76e65182c20477f7a31dc528e9f1eafb9fda281bd95762c6edb98fe0a8ce2ee571c892352023e76310c1eabb8781b00dd58c11e006d567f858693f49bc9fa032489634c1d712a0a4f5eccb97a86007c892d7f0fe07adb75244cb14868e558c41888a8c3b158d33974ce12e5267ac0e78301dbca7e82bf197c43201a0289fad1b53f2b4263d7e1fe41ffb9940b05d504ee43b4452603781acabc684be0347a1cb5ede6cfad5d3fbeee118bf4f7c83b2271dfc96d9a609a3dc4f7603603a05928ed11b987abc54f9ca170a1891fe258a1e85e0068492f2aabaad1652147450517448335a1e41caaef2c545bcee78a16a3bbac9f7223443d84a8a82fdbe1b72f4c1709621fac57bf0936fb6436551006f249c716b2124f33c46b47d5741ae4f4d75d9a64926b0b5d0aa043720cf0420b0daef83b2238187236e413f46b28a59b73159e3d7cdebbf181578cbbc03bf5db0fb76d532f98701e62e9ee58fce81debeb48c8e1e3974b4ad28d26ea3325afffb423496335a2753fec937ca4f7644bf86df184e6eb555f12f25b6e7cb51dde1be606e5bc0480337a319c9ddf77479625dc2595837fbc5cf94f2f8e5f8f288ab3a84230aaa85f6b0b876080c438da20f223b615858b96af1d6c985f105b6c4a406221d3726b4123f2b9a277a735b002d522c622c5a0386fa3f84ec360c3db7f9320bd07b5aa5f3d104c0a91c95125aec73b7727b8248d7b8796df9beec561ee2e5a8bc5b0ef330fceb33e1eaea901afd7e3afbcf2a23740e8cb64d3faf44acf0150338dc62170fe970d1c4eb7dafaab6077421be6d7b5253f1a5f0bffdfcf68bb0470495a1eadd104aa612baa9ac2d936a37d1d858050dfef9993c640e69c06cca5e9eb4a9e790e78b9ae2624f4bf079d57d1ac6cb537e0eb70f9b1275c70804bd6c5b3a2e758acde9878ee63187f17e13f6f6932da75ab3ec98f68575afe4712af0aa4a564fa98d21e9be0d7c775814ecb31eaf35c0132a57f557366ebb39a08762491df040e56c89aafb87913e4671bf6a24c16d642222234b85c0bb33a8606c4657b67eba3b0896db4b60e40f8569b490ea4d763089efcfe5e9586c01960d0391b4194528527b94c8d40d2f165ba161c6b444d5bb483ab6f24e0a7ce8c5950bf42b0243cd161ec939ccaf4413a50e746d4692fab3e1aeec362771d9e65104f1b24e18d0a1bf2a9e7c38fe6e196feb5d30dd26807756cda3ba5c661ffabc9cb7f6a94cf98cf84a45ae1693a5aca91dd2a3f4d7eb6aad61818fd20321537cb154b4f0dcfa5ceaa17d083ed1d50010bf46175032f81a2492e362434af9e0d5a2799adc398ca4a940d28b7e8653f77ea325b78eb883caf446b60448613fc7775367215941f95d1401f38fbfa6acb36ac08f9fa0b7c3563214923082c6e97f1004d21dc5e50970abd54bed198d3524a60622c59e9fa24489dffb8fc134637caabfedd79b84d36ce14255c7f22cd61e10b84864fa0cd2b02a29351ab9d9c3e3ba61d37f0deb08f7fa73c4ee6cc1558d1617c17e207505dab745a3a56fd8ed0c0cd70a54e8a138ee84e66f8552bc8424c2d4bc643dd061b85a3888983b25448cfc5584099bec19c164320195a546f63ae82ad7b3b5d3607d8b84f082edb5d842acce111b8056feeb442e43567b4fb2cc19843576736e585ca0ec576db83ccedb8bd1064abd021dd52a7f38f61cfcf727843fea5b63244e9a93a2ea0eef8ce0145448f1b46c389014b27fe1986697bd30314cc071f824a5775bcb118ea2356db4b8282cead9df2d4e242b9c1126b44edafd340bd8b0e39c6424886e42729f2d2995d106cd1ff4df4bd1abb9b99d3dbbcb8197730c86c144e6974937bd0e50d81fbe982a8172ea4db82ca3c430925b081a6579cbf8407b4f2b1a1dbf5aaf28050dfd826e1934af2f40d34e20ef1653d86265c167f4926ed1c2de54cc58ddcece1a31d666607d8308b433eef16c955a3ba02e5e1c485e71a761fc2b344f90223fbbdff42ef2b5f990768c44becd3221d97d51112b67ae7b0ad09a20546ac8453603c10b46739f440007774f58906c26463ec6d901d3613d796492de39956c3ce7a3c43c3683a86cb136d4d950f0928539992226fce69c57934d86440fb3ab87fb39f18601c15ee2719018d8c3505087358e73fe4f8d1dd1f951e1079def5c1095248d66ced8123d8845b50713ecc8c686abcccb989575a3cfd39287b0021adcf5231ee8b8cc5e802e58e88ad8f763bb0442d04e37db4946408fccbee446f78bca281f479791ed59ebfb00660ad8e7e45cab1410480ca8d6e3a920dedde22379c0731253a9037975dbc305342cce75b3dcded27a4b607d404322ed7909bb46693df60201dd2a23576991d5c109a100f5bf45d391724f67cbc457cc2ffa2e961f3dd6546b661408e7699fb709a5b7175c69f8e88d7f7444010c5a400fd783b5b0a342944ae2adbf8b0eeda69463deec5277dfde9bffec6718da3cbbd56c3ea67ad7d65743427d4d8b32d76bd99a8af36e5414be370c752fa74f127c70468b8d2f62c15f7a38fc8f2ba723c12a0dbadc5348296467c2220c50d82be89f05f379b8eadae4ce8ff4ce15b87253742016a9c81d367fdf6aa0e0f3f78a240a098b3cc16fbc7b0d2911aa768464bb68d01b0b3656c75c1b20487579be10836ea87d68050df28c2aed67f18822b554ea987b1fef45521a85603fd4be5c630c4cf12b1f5dc39b76fd0bce5acb086fc6a1a9ac065e73a36fddfa1d95728283bf952ba8d90603acc831baa6ee971ca7a5ed1f10726e71a3a7cc500872eaaa37f483527375d576abdf4eedecf75cb53049417c7cdde150c1a0a093311f66fcfb08ead403f11c1e57d3fd9eb5e6079f66817a929e607fe828f782aae0f8586bdcf7c03452c02972152ff4aaabc92fbec651c500a2a1d35e299a615daa3a089039f1facf69f7b3f70c559afb6a9ebd97ad05399fa888b3420d01e1b52c5c61634eb65337dbaea4f20ebc8190b99352941052f75a6a02624fd3baba8a46e3a3c8757c49483c2ba05ae42e1ae332860dbf7317975b6133eea0dabe14b0630bb15bc54d04eca3480502543ad341bebff31744ede53454d623a0a3d9bec845049b4ac52ebaf89127d07682eaf77fd777716d82e9ba6e038d25b117bd103e638dd2303d8683cf329a32e1840750cfc97e4eadbf6c1151c83752b449161aaf6b3d3a7f92b942fcb2d61be762c38dcab69878f8c2cc129be4f9a051e1f9464cf671aa6f5b868b9938ad9e563c946d96b3d851f812d6ad775bbf3a225a929f78feacd589fed63948b6534515e2748d0f1d2538e646de65d9abcc6f93c5985577627368ea4372616836136099a950445ef2a79f38cf1850de2b39f2b9a035c906b060d27500809972d7897523af5de3a719728ac7899f8a04148f63c9bf5bf04cff935e29a8122d8ad51a1ec995994e198e78c433af397d1b967b653b8233a58432a2b77d4b4ef760711645e01ba102c072bb9900062dfec5f3c78e97c2ae0b4fe5413591f0f18227d6189b184d429a782feba09795181efedf21df950c0967809487daa1b9fc5d4c61260aee2b4611d90a2635aa464452ff030159bf4740cdab60391b0ca867f7cb64fafd4d1a13a3fd3b9d8e520548a59c0b971f41fdf8e46619ae8289eca62920fd3125d601a9808c604b6215c34042b626a7b416c69307be2e741233ef31b279dab7dac767c3270b5d7a12cf7bce14ffd8b60b99813c0b35475b136c308f4ca3ae54ac17e9a4e064dfe01f98d6d5813c14aae79ece00ab9de11212c4c9846ef3fbd886702f5a575aebad2b0b2ed1a1d613886c2bcb774e6a65ffec02fa026148ca4b6d63f813c45f178546d7c032995172d366299ac63b59a426740e8c5f762af1942272c5ed914dc5e300a8b9884cf36bb4c965d65202fd83e14765e49a04c246e43423cfdf5b163087af2f9faf30b22294c6aec7da1e66ed95710ac8f13ce416d387ecaa4eb09512d1a6ade652d5fb489abc150a2a52177b0dcdbbe88907d8264e88a3495ec8bde4584c31f60df7f1584fe57efc1c58fbb9aacb04cf163d059c328f16da446dce46a76ce4f001cd97637b19ccb0be002d8d07d96e55f7574dad670c482dfec2cf0d99433632ee06a852e886f6ba791def11a56a1e7f002e479f59c0da034b1fb8c319f859933f6e0ab06b6c4c0874c1b9de44977e7d8049e7f97412057c1fd64111f538ab1b4ae09c72bcf51da9b11a84cffa0a575859b570eae80705778e7d44cc3efe0dae06538aba655de1ceb63a80d1141ca8bad713220d7a7e5f0f147b81764814e6af51b59b3dac1fb65765638dc8f7f4ea6e970fa1d86874e24fda9a911276a57728b7b730bb957b5a8ab58e95e64873979f688aac03e3b2f957a4a281f32ba552d3f787e709f5d394bca0df5d35cf0a063e535a6927632e10c51df55311ef45014912053006e5f1c657a7efc", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
syz_failure_sync(0x1, 0x3)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1442
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
Node-0:/root/daemon-log.14838
remove dir time 91
-----finish removing dir
receive_execute: 54, 108
mkdir time 16
executor 3 create dir /root/glusterfs-client/dfs-0-1443 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1443
receive_execute: 39, 108
receive_execute: 33, 108
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 86, 112
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 7, 0
----- executor 3 write_call_output, size 9003, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 9003, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 11, 0, 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 129
----- completed 5
execute_call 0, 15, 0, 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 222
----- completed 6
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 45, 0, 0
execute_one loop: 0, 0, 45
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1706, signal number : 2182
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 432
----- executor 0 executes write_coverage_signal cov->size 131, flag collect 1
----- executor 0 cover number : 107, signal number : 68
executor 0 server cover_cnt 4 output_pos_value 5044
execute_call 0, 57, 0, 0
execute_one loop: 0, 0, 57
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
-----executor 0 collect shmids 34
----- directly resend shmid 34
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 57, 0, 0
execute_one loop: 0, 0, 58
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 290
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
----- executor 3 write_call_output, size 2776, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
-----executor 0 collect shmids 39
----- directly resend shmid 39
executor 3 waits for recv msg
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==14838==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
execute_call 0, 2966, 0, 0
execute_one loop: 0, 0, 2966
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3079, 0
execute_one time: 2, 3079
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 2968, 0, 0
execute_one loop: 0, 0, 2968
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8534, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 8534, flag collect 1
----- executor 3 cover number : 1192, signal number : 281
----- completed 14
execute_call 0, 7, 0, 5
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 4270, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 4270, flag collect 1
----- executor 3 cover number : 843, signal number : 220
----- completed 15
execute_call 0, 16, 0, 4
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 15
----- completed 16
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2943, write pid:2943
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 3131, 0
execute_one time: 2, 3132
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 691, flag collect 1
2023/03/31 02:41:21 for select break: 1
2023/03/31 02:41:21 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 289, signal number : 332
----- executor 1 executes write_coverage_signal cov->size 493, flag collect 1
----- executor 1 cover number : 213, signal number : 212
time breakdown 3: 198, 3137, 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
before receive testcase: 0 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 43
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 689, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 5050, flag collect 1
----- executor 2 cover number : 670, signal number : 732
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 43
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 208
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
Node-0:/root/daemon-log.14891
----- executor 1 cover number : 1627, signal number : 1885
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 64
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 47
----- executor 1 executes write_coverage_signal cov->size 27704, flag collect 1
----- executor 0 cover number : 1706, signal number : 2043
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 210
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 37
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1064, flag collect 1
----- executor 0 cover number : 458, signal number : 133
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 182
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1475, signal number : 1388
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 12390, flag collect 1
----- executor 2 cover number : 576, signal number : 702
----- executor 2 executes write_coverage_signal cov->size 15990, flag collect 1
----- executor 0 cover number : 894, signal number : 592
executor 0 server cover_cnt 47 output_pos_value 16675
----- executor 2 cover number : 411, signal number : 95
----- executor 2 executes write_coverage_signal cov->size 31678, flag collect 1
----- executor 1 cover number : 576, signal number : 404
----- executor 1 executes write_coverage_signal cov->size 2053, flag collect 1
----- executor 1 cover number : 409, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 30837, flag collect 1
2023/03/31 02:41:21 for select break: 1
2023/03/31 02:41:21 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 162, 3172, 0
before receive testcase: 0 0
----- executor 2 cover number : 2604, signal number : 3367
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 728, flag collect 1
----- executor 2 cover number : 269, signal number : 144
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 367
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1996, flag collect 1
----- executor 2 cover number : 655, signal number : 478
----- executor 2 executes write_coverage_signal cov->size 3462, flag collect 1
----- executor 2 cover number : 773, signal number : 404
----- executor 2 executes write_coverage_signal cov->size 17942, flag collect 1
----- executor 2 cover number : 1029, signal number : 1291
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1226, signal number : 1020
----- executor 2 executes write_coverage_signal cov->size 25318, flag collect 1
----- executor 1 cover number : 2358, signal number : 2870
----- executor 1 executes write_coverage_signal cov->size 740, flag collect 1
----- executor 1 cover number : 269, signal number : 142
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 2842, flag collect 1
----- executor 1 cover number : 526, signal number : 176
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2605, flag collect 1
----- executor 2 cover number : 1643, signal number : 1158
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 809, signal number : 398
----- executor 1 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 1 cover number : 641, signal number : 198
----- executor 1 executes write_coverage_signal cov->size 5446, flag collect 1
----- executor 1 cover number : 730, signal number : 549
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1827, signal number : 926
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1357, signal number : 1195
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2670, signal number : 1895
executor 2 server cover_cnt 23 output_pos_value 31210
2023/03/31 02:41:21 for select break: 1
2023/03/31 02:41:21 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 2578, signal number : 2130
----- executor 1 executes write_coverage_signal cov->size 32324, flag collect 1
time breakdown 2: 147, 3208, 0
before receive testcase: 0 0
----- executor 1 cover number : 2515, signal number : 1721
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2021, signal number : 1082
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 22 output_pos_value 30599
2023/03/31 02:41:21 for select break: 1
2023/03/31 02:41:21 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:21 wg wait finish
2023/03/31 02:41:21 ------ all executors finish execution
2023/03/31 02:41:21 exec time: 3338
2023/03/31 02:41:21 ----- PS len: 4
2023/03/31 02:41:21 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:21 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 129 signal and 1139 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 222 signal and 630 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 290 signal and 515 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 281 signal and 1192 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 220 signal and 843 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:21 [SERVER] executor 2 has 23 replies
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 732 signal and 670 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:21 [SERVER] executor 1 has 22 replies
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 332 signal and 289 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 212 signal and 213 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:21 [SERVER] executor 0 has 47 replies
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 1885 signal and 1627 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1388 signal and 1475 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 64 signal and 116 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 47 signal and 66 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 404 signal and 576 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 1 signal and 409 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 2870 signal and 2358 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 142 signal and 269 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 176 signal and 526 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 398 signal and 809 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 198 signal and 641 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 702 signal and 576 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 549 signal and 730 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 1195 signal and 1357 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 95 signal and 411 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 2130 signal and 2578 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 1721 signal and 2515 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 3367 signal and 2604 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 1082 signal and 2021 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 144 signal and 269 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 2182 signal and 1706 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 367 signal and 526 cover from userspace component
time breakdown 1: 141, 3230, 0
2023/03/31 02:41:21 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 478 signal and 655 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 404 signal and 773 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1291 signal and 1029 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1020 signal and 1226 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1158 signal and 1643 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 926 signal and 1827 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 432 signal and 530 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 68 signal and 107 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 43 signal and 501 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 43 signal and 126 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 208 signal and 286 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 3 signal and 4 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 2 receive 1895 signal and 2670 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 2043 signal and 1706 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 210 signal and 530 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 37 signal and 142 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 3 signal and 10 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 133 signal and 458 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 182 signal and 615 cover from userspace component
2023/03/31 02:41:21 ------- fuzzer executor 0 receive 592 signal and 894 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:21 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:21 disable threaded and collide
2023/03/31 02:41:21 prog length: 6
2023/03/31 02:41:21 prog length: 19
2023/03/31 02:41:21 HasCrashFail:true HasNetFail:false
02:41:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
syz_failure_sync(0x1, 0x3)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-1443
remove dir time 56
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1444 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1444
receive_execute: 92, 88
receive_execute: 34, 88
receive_execute: 56, 88
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
receive_execute: 124, 92
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 12, 2
----- executor 3 write_call_output, size 8969, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 8969, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 18, 0, 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8506, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 8506, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 15, 0, 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 1644, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 1644, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 47, 0, 0
execute_one loop: 0, 0, 47
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 304, flag collect 1
----- executor 0 cover number : 44, signal number : 50
----- executor 0 executes write_coverage_signal cov->size 1411, flag collect 1
----- executor 0 cover number : 604, signal number : 672
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 27681, flag collect 1
----- executor 0 cover number : 1253, signal number : 1479
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 205
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 10 output_pos_value 4786
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 34
----- directly resend shmid 34
execute_call 0, 88, 0, 0
execute_one loop: 0, 0, 88
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 88, 0, 0
execute_one loop: 0, 0, 88
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==14891==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 2700, 0, 0
execute_one loop: 0, 0, 2700
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 2698, 0, 0
execute_one loop: 0, 0, 2699
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2847, 0
execute_one time: 3, 2848
----- executor 3 write_call_output, size 8538, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 8538, flag collect 1
----- executor 3 cover number : 1190, signal number : 222
----- completed 14
execute_call 0, 12, 0, 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 4270, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 4270, flag collect 1
----- executor 3 cover number : 843, signal number : 220
----- completed 15
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 15
----- completed 16
execute_call 0, 16, 0, 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 12, 0, 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2944, write pid:2944
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2917, 0
execute_one time: 2, 2917
2023/03/31 02:41:24 for select break: 1
2023/03/31 02:41:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 7, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 19214, flag collect 1
time breakdown 3: 216, 2924, 0
before receive testcase: 0 0
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 0 cover number : 501, signal number : 517
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 18766, flag collect 1
----- executor 1 cover number : 1689, signal number : 2104
----- executor 1 executes write_coverage_signal cov->size 84, flag collect 1
----- executor 1 cover number : 64, signal number : 26
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 13939, flag collect 1
----- executor 2 cover number : 1697, signal number : 2068
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 127
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 16730, flag collect 1
----- executor 0 cover number : 126, signal number : 58
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 1 cover number : 410, signal number : 228
----- executor 1 executes write_coverage_signal cov->size 15806, flag collect 1
----- executor 0 cover number : 286, signal number : 220
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 410, signal number : 479
----- executor 2 executes write_coverage_signal cov->size 11646, flag collect 1
----- executor 1 cover number : 576, signal number : 63
----- executor 1 executes write_coverage_signal cov->size 31426, flag collect 1
----- executor 2 cover number : 576, signal number : 231
----- executor 2 executes write_coverage_signal cov->size 27152, flag collect 1
----- executor 1 cover number : 2210, signal number : 2666
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1021, flag collect 1
----- executor 1 cover number : 280, signal number : 177
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1214, flag collect 1
----- executor 2 cover number : 1302, signal number : 1459
----- executor 2 executes write_coverage_signal cov->size 40, flag collect 1
----- executor 2 cover number : 35, signal number : 37
----- executor 2 executes write_coverage_signal cov->size 1022, flag collect 1
----- executor 1 cover number : 390, signal number : 206
----- executor 1 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 2 cover number : 280, signal number : 176
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 774, signal number : 343
----- executor 1 executes write_coverage_signal cov->size 26238, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 416, flag collect 1
----- executor 2 cover number : 227, signal number : 84
----- executor 2 executes write_coverage_signal cov->size 4274, flag collect 1
----- executor 2 cover number : 720, signal number : 650
----- executor 2 executes write_coverage_signal cov->size 30825, flag collect 1
----- executor 1 cover number : 1347, signal number : 1584
----- executor 1 executes write_coverage_signal cov->size 25900, flag collect 1
----- executor 0 cover number : 1141, signal number : 1166
----- executor 0 executes write_coverage_signal cov->size 43, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 2 cover number : 1333, signal number : 1670
----- executor 2 executes write_coverage_signal cov->size 20686, flag collect 1
----- executor 0 cover number : 106, signal number : 25
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 1159, signal number : 359
----- executor 1 cover number : 1121, signal number : 529
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 27021, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2102, signal number : 1493
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2238, signal number : 1430
----- executor 1 executes write_coverage_signal cov->size 25737, flag collect 1
----- executor 0 cover number : 1861, signal number : 1726
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 1
----- executor 0 cover number : 497, signal number : 121
----- executor 0 executes write_coverage_signal cov->size 27852, flag collect 1
----- executor 1 cover number : 2052, signal number : 1475
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2501, signal number : 1934
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1355, signal number : 1167
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 0 cover number : 349, signal number : 132
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 17
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
executor 0 server cover_cnt 53 output_pos_value 19006
time breakdown 0: 180, 2972, 0
2023/03/31 02:41:24 for select break: 1
2023/03/31 02:41:24 --------- executor 0 receive reply, reply.done 1
----- executor 1 cover number : 2167, signal number : 1444
executor 1 server cover_cnt 18 output_pos_value 27709
2023/03/31 02:41:24 for select break: 1
2023/03/31 02:41:24 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 1
----- executor 2 cover number : 2539, signal number : 1519
executor 2 server cover_cnt 19 output_pos_value 27636
time breakdown 1: 122, 2975, 0
before receive testcase: 0 0
2023/03/31 02:41:24 for select break: 1
2023/03/31 02:41:24 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:24 wg wait finish
2023/03/31 02:41:24 ------ all executors finish execution
2023/03/31 02:41:24 exec time: 3068
2023/03/31 02:41:24 ----- PS len: 4
2023/03/31 02:41:24 [SERVER] executor 1 has 18 replies
2023/03/31 02:41:24 [SERVER] executor 0 has 53 replies
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 50 signal and 44 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 672 signal and 604 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 1479 signal and 1253 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
time breakdown 2: 144, 2980, 0
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:24 [SERVER] executor 2 has 19 replies
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 2068 signal and 1697 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 127 signal and 116 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 2104 signal and 1689 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 479 signal and 410 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 26 signal and 64 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 228 signal and 410 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 63 signal and 576 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 2666 signal and 2210 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 231 signal and 576 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 177 signal and 280 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 1459 signal and 1302 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 205 signal and 349 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 7 signal and 7 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 206 signal and 390 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 343 signal and 774 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 1584 signal and 1347 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 529 signal and 1121 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 1430 signal and 2238 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 1475 signal and 2052 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 517 signal and 501 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 58 signal and 126 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 1 receive 1444 signal and 2167 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 220 signal and 286 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 1166 signal and 1141 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 25 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 37 signal and 35 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 176 signal and 280 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:24 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 84 signal and 227 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 650 signal and 720 cover from userspace component
2023/03/31 02:41:24 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 1670 signal and 1333 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 359 signal and 1159 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 1493 signal and 2102 cover from userspace component
2023/03/31 02:41:24 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 1934 signal and 2501 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 2 receive 1519 signal and 2539 cover from userspace component
2023/03/31 02:41:24 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 222 signal and 1190 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 220 signal and 843 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 1726 signal and 1861 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 121 signal and 497 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 1167 signal and 1355 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 132 signal and 349 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 17 signal and 27 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:41:24 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:24 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:24 failure smash: true false
2023/03/31 02:41:24 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:41:24 disable threaded and collide
2023/03/31 02:41:24 prog length: 6
2023/03/31 02:41:24 prog length: 19
2023/03/31 02:41:24 send to channel: true, false
2023/03/31 02:41:24 HasCrashFail:true HasNetFail:false
02:41:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
syz_failure_sync(0x1, 0x3)
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1444
remove dir time 78
-----finish removing dir
receive_execute: 29, 108
receive_execute: 33, 108
receive_execute: 25, 108
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-1445 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1445
executor 0 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 76, 114
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8970, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 8970, flag collect 1
----- executor 3 cover number : 1274, signal number : 1586
----- completed 1
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 922, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 922, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
Node-0:/root/daemon-log.14950
----- executor 3 write_call_output, size 8464, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 8464, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 30, 0, 5
execute_one loop: 0, 0, 35
cover_reset in execute_call
----- executor 3 write_call_output, size 1646, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 1646, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 71, 0, 0
execute_one loop: 0, 0, 71
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 148, flag collect 1
----- executor 0 cover number : 65, signal number : 77
----- executor 0 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 0 cover number : 414, signal number : 458
----- executor 0 executes write_coverage_signal cov->size 22431, flag collect 1
----- executor 0 cover number : 1708, signal number : 1977
executor 0 server cover_cnt 3 output_pos_value 4709
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 82, 0, 0
execute_one loop: 0, 0, 82
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
execute_call 0, 82, 0, 0
execute_one loop: 0, 0, 82
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 1231, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 1231, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1231, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 1231, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2773, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 2773, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 8, 0, 3
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
==14950==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 2594, 0, 0
execute_one loop: 0, 0, 2594
cover_reset in execute_call
execute_call 0, 2594, 0, 0
execute_one loop: 0, 0, 2594
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2759, 0
execute_one time: 1, 2760
----- executor 3 write_call_output, size 8534, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 8534, flag collect 1
----- executor 3 cover number : 1190, signal number : 219
----- completed 14
execute_call 0, 10, 0, 4
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 4267, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 4267, flag collect 1
----- executor 3 cover number : 843, signal number : 220
----- completed 15
execute_call 0, 20, 0, 3
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 2753, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 2753, flag collect 1
----- executor 3 cover number : 818, signal number : 15
----- completed 16
execute_call 0, 15, 0, 3
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 2532, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 2532, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 9, 0, 2
execute_one loop: 0, 1, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2945, write pid:2945
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2823, 1
execute_one time: 2, 2824
2023/03/31 02:41:27 for select break: 1
2023/03/31 02:41:27 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 11
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 709, flag collect 1
----- executor 0 cover number : 289, signal number : 209
----- executor 0 executes write_coverage_signal cov->size 152, flag collect 1
----- executor 0 cover number : 69, signal number : 67
----- executor 0 executes write_coverage_signal cov->size 5351, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 621, flag collect 1
----- executor 2 cover number : 279, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 698, flag collect 1
----- executor 1 cover number : 287, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1099, signal number : 736
----- executor 0 executes write_coverage_signal cov->size 1252, flag collect 1
----- executor 0 cover number : 386, signal number : 85
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 391
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 190, 2829, 0
before receive testcase: 0 0
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 65
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2163, signal number : 2587
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18763, flag collect 1
----- executor 0 cover number : 1818, signal number : 2728
----- executor 0 executes write_coverage_signal cov->size 5989, flag collect 1
----- executor 0 cover number : 546, signal number : 158
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2197, signal number : 2616
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 11200, flag collect 1
----- executor 2 cover number : 410, signal number : 512
----- executor 2 executes write_coverage_signal cov->size 10967, flag collect 1
----- executor 2 cover number : 576, signal number : 231
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 409, signal number : 258
----- executor 1 executes write_coverage_signal cov->size 17180, flag collect 1
----- executor 1 cover number : 576, signal number : 120
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 14
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1836, signal number : 2449
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 773, flag collect 1
----- executor 2 cover number : 270, signal number : 148
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 286
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3648, flag collect 1
----- executor 2 cover number : 814, signal number : 510
----- executor 2 executes write_coverage_signal cov->size 1828, flag collect 1
----- executor 2 cover number : 677, signal number : 215
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1908, signal number : 2419
----- executor 1 executes write_coverage_signal cov->size 764, flag collect 1
----- executor 1 cover number : 270, signal number : 140
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 201
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4062, flag collect 1
----- executor 1 cover number : 930, signal number : 452
----- executor 1 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 1 cover number : 540, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1818, signal number : 1119
executor 0 server cover_cnt 44 output_pos_value 19624
----- executor 2 cover number : 1239, signal number : 1683
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 15434, flag collect 1
2023/03/31 02:41:27 for select break: 1
2023/03/31 02:41:27 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1104, signal number : 511
----- executor 2 executes write_coverage_signal cov->size 32269, flag collect 1
----- executor 1 cover number : 1226, signal number : 1507
----- executor 1 executes write_coverage_signal cov->size 17910, flag collect 1
time breakdown 0: 141, 2867, 0
before receive testcase: 0 0
----- executor 1 cover number : 1029, signal number : 498
----- executor 1 executes write_coverage_signal cov->size 28862, flag collect 1
----- executor 2 cover number : 2550, signal number : 2650
----- executor 2 executes write_coverage_signal cov->size 28985, flag collect 1
----- executor 1 cover number : 2755, signal number : 2561
----- executor 1 executes write_coverage_signal cov->size 31680, flag collect 1
----- executor 2 cover number : 2492, signal number : 1647
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1983, signal number : 1395
----- executor 1 executes write_coverage_signal cov->size 27368, flag collect 1
----- executor 2 cover number : 2385, signal number : 1524
executor 2 server cover_cnt 23 output_pos_value 33834
2023/03/31 02:41:27 for select break: 1
2023/03/31 02:41:27 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 1641, signal number : 905
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
executor 1 server cover_cnt 21 output_pos_value 30951
2023/03/31 02:41:27 for select break: 1
2023/03/31 02:41:27 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:27 wg wait finish
2023/03/31 02:41:27 ------ all executors finish execution
2023/03/31 02:41:27 exec time: 2999
2023/03/31 02:41:27 ----- PS len: 4
2023/03/31 02:41:27 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:27 fuzzer receive 1586 signal and 1274 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:27 [SERVER] executor 1 has 21 replies
2023/03/31 02:41:27 [SERVER] executor 0 has 44 replies
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 77 signal and 65 cover from userspace component
2023/03/31 02:41:27 [SERVER] executor 2 has 23 replies
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 316 signal and 279 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 458 signal and 414 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 1977 signal and 1708 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 2587 signal and 2163 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 11 signal and 10 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 512 signal and 410 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 231 signal and 576 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
time breakdown 2: 133, 2888, 0
before receive testcase: 0 0
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 2449 signal and 1836 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 148 signal and 270 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 209 signal and 289 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 286 signal and 526 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 67 signal and 69 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 736 signal and 1099 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 85 signal and 386 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 391 signal and 501 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 65 signal and 126 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 510 signal and 814 cover from userspace component
2023/03/31 02:41:27 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 215 signal and 677 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 10 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 24 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 1683 signal and 1239 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 329 signal and 287 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:27 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 2728 signal and 1818 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 158 signal and 546 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 14 signal and 142 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 219 signal and 1190 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 220 signal and 843 cover from executor 3
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 2616 signal and 2197 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 0 receive 1119 signal and 1818 cover from userspace component
2023/03/31 02:41:27 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 258 signal and 409 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 120 signal and 576 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 2419 signal and 1908 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 140 signal and 270 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 201 signal and 526 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 452 signal and 930 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 75 signal and 540 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 1507 signal and 1226 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 511 signal and 1104 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 498 signal and 1029 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 2650 signal and 2550 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 2561 signal and 2755 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 1395 signal and 1983 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 1647 signal and 2492 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 905 signal and 1641 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 2 receive 1524 signal and 2385 cover from userspace component
2023/03/31 02:41:27 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
time breakdown 1: 137, 2891, 0
before receive testcase: 0 0
2023/03/31 02:41:27 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:27 disable threaded and collide
2023/03/31 02:41:27 prog length: 6
2023/03/31 02:41:27 prog length: 19
2023/03/31 02:41:27 HasCrashFail:true HasNetFail:false
02:41:27 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
syz_failure_sync(0x1, 0x3)
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1445
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 79
-----finish removing dir
receive_execute: 62, 115
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1446 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1446
receive_execute: 38, 115
receive_execute: 40, 115
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 2
receive_execute: 94, 123
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8995, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 8995, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 18, 0, 8
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8492, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 8492, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 19, 0, 2
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 5, 0, 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 67, 0, 0
execute_one loop: 0, 0, 67
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
-----executor 0 collect shmids 7
----- directly resend shmid 7
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 67
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 336
----- completed 11
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 18
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 2933, 0, 0
execute_one loop: 0, 0, 2933
cover_reset in execute_call
execute_call 0, 2933, 0, 0
execute_one loop: 0, 0, 2933
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3084, 0
execute_one time: 1, 3085
----- executor 3 write_call_output, size 8532, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 8532, flag collect 1
----- executor 3 cover number : 1190, signal number : 242
----- completed 14
execute_call 0, 10, 0, 5
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 4270, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 4270, flag collect 1
----- executor 3 cover number : 843, signal number : 220
----- completed 15
execute_call 0, 14, 0, 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 14
----- completed 16
execute_call 0, 16, 0, 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 147
----- completed 17
execute_call 0, 10, 0, 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2946, write pid:2946
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3139, 0
execute_one time: 3, 3139
2023/03/31 02:41:31 for select break: 1
2023/03/31 02:41:31 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 707, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1120, flag collect 1
----- executor 1 cover number : 334, signal number : 387
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 cover number : 287, signal number : 329
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 217, 3146, 0
before receive testcase: 0 0
----- executor 0 cover number : 501, signal number : 595
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 126, signal number : 104
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 919, flag collect 1
----- executor 1 cover number : 539, signal number : 617
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 0 cover number : 387, signal number : 223
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1820, signal number : 2175
executor 0 server cover_cnt 34 output_pos_value 8657
----- executor 1 cover number : 2411, signal number : 2863
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 28406, flag collect 1
2023/03/31 02:41:31 for select break: 1
2023/03/31 02:41:31 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 2439, signal number : 2911
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28394, flag collect 1
----- executor 1 cover number : 576, signal number : 375
----- executor 1 executes write_coverage_signal cov->size 1352, flag collect 1
----- executor 1 cover number : 401, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 30571, flag collect 1
time breakdown 0: 177, 3169, 0
before receive testcase: 0 0
----- executor 2 cover number : 576, signal number : 818
----- executor 2 executes write_coverage_signal cov->size 28191, flag collect 1
----- executor 1 cover number : 2359, signal number : 2976
----- executor 1 executes write_coverage_signal cov->size 767, flag collect 1
----- executor 1 cover number : 269, signal number : 150
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 526, signal number : 147
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 1 cover number : 596, signal number : 229
----- executor 1 executes write_coverage_signal cov->size 3263, flag collect 1
----- executor 1 cover number : 906, signal number : 293
----- executor 1 executes write_coverage_signal cov->size 3826, flag collect 1
----- executor 1 cover number : 709, signal number : 555
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1966, signal number : 2571
----- executor 2 executes write_coverage_signal cov->size 762, flag collect 1
----- executor 2 cover number : 269, signal number : 146
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 2 cover number : 526, signal number : 239
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3462, flag collect 1
----- executor 2 cover number : 773, signal number : 496
----- executor 2 executes write_coverage_signal cov->size 2002, flag collect 1
----- executor 2 cover number : 657, signal number : 177
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1374, signal number : 1313
----- executor 1 executes write_coverage_signal cov->size 25737, flag collect 1
----- executor 1 cover number : 2046, signal number : 1622
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1226, signal number : 1709
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1696, signal number : 1271
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2523, signal number : 2241
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2547, signal number : 1966
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
executor 1 server cover_cnt 21 output_pos_value 32150
2023/03/31 02:41:31 for select break: 1
2023/03/31 02:41:31 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 153, 3206, 0
before receive testcase: 0 0
----- executor 2 cover number : 2672, signal number : 1979
----- executor 2 executes write_coverage_signal cov->size 31435, flag collect 1
Node-0:/root/daemon-log.15048
----- executor 2 cover number : 1789, signal number : 816
executor 2 server cover_cnt 20 output_pos_value 31337
2023/03/31 02:41:31 for select break: 1
2023/03/31 02:41:31 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:31 wg wait finish
2023/03/31 02:41:31 ------ all executors finish execution
2023/03/31 02:41:31 exec time: 3334
2023/03/31 02:41:31 ----- PS len: 4
2023/03/31 02:41:31 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:31 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 336 signal and 830 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 242 signal and 1190 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 220 signal and 843 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 14 signal and 818 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 147 signal and 749 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:31 [SERVER] executor 0 has 34 replies
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 595 signal and 501 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 104 signal and 126 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 22 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 223 signal and 387 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 [SERVER] executor 2 has 20 replies
2023/03/31 02:41:31 [SERVER] executor 1 has 21 replies
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 387 signal and 334 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 617 signal and 539 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 2863 signal and 2411 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 375 signal and 576 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 5 signal and 401 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 2976 signal and 2359 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 150 signal and 269 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 329 signal and 287 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 147 signal and 526 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 229 signal and 596 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 2911 signal and 2439 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 818 signal and 576 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 0 receive 2175 signal and 1820 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 293 signal and 906 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 2571 signal and 1966 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 146 signal and 269 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 555 signal and 709 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 239 signal and 526 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 496 signal and 773 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 177 signal and 657 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 1709 signal and 1226 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 1313 signal and 1374 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 1622 signal and 2046 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 1271 signal and 1696 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 1966 signal and 2547 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 2241 signal and 2523 cover from userspace component
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 1979 signal and 2672 cover from userspace component
time breakdown 2: 155, 3219, 0
before receive testcase: 0 0
2023/03/31 02:41:31 ------- fuzzer executor 2 receive 816 signal and 1789 cover from userspace component
2023/03/31 02:41:31 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:31 failure smash: true false
2023/03/31 02:41:31 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:41:31 disable threaded and collide
2023/03/31 02:41:31 prog length: 6
2023/03/31 02:41:31 prog length: 19
2023/03/31 02:41:31 send to channel: true, false
2023/03/31 02:41:31 HasCrashFail:true HasNetFail:false
02:41:31 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
syz_failure_sync(0x1, 0x3)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1446
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 79
-----finish removing dir
receive_execute: 83, 117
receive_execute: 33, 117
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-1447 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1447
receive_execute: 45, 118
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1, execute_one inner time: 3, 0, 0
execute_one time: 1, 3
receive_execute: 98, 124
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 9003, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 9003, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 16, 0, 9
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8488, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 8488, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 17, 0, 7
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 3, 0, 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 69, 0, 0
execute_one loop: 0, 0, 69
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1141, signal number : 1425
----- executor 0 executes write_coverage_signal cov->size 38, flag collect 1
----- executor 0 cover number : 34, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 1494, flag collect 1
----- executor 0 cover number : 635, signal number : 672
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 28548, flag collect 1
----- executor 0 cover number : 1535, signal number : 1594
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 18
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 10 output_pos_value 7198
/root/glusterfs-node-down.sh: 1: kill: No such process

----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 69, 0, 0
execute_one loop: 0, 0, 69
cover_reset in execute_call
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 69, 0, 0
execute_one loop: 0, 0, 69
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 1234, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- executor 3 write_call_output, size 2776, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- directly resend shmid 39
----- executor 3 write_call_output, size 183, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
==15048==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 0 collect shmids 32
----- directly resend shmid 32
-----executor 0 collect shmids 33
----- directly resend shmid 33
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 2747, 0, 0
execute_one loop: 0, 0, 2747
cover_reset in execute_call
execute_call 0, 2747, 0, 0
execute_one loop: 0, 0, 2747
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2893, 0
execute_one time: 1, 2893
-----executor 0 collect shmids 43
----- directly resend shmid 43
Node-0:/root/daemon-log.15109
----- executor 3 write_call_output, size 12620, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 12620, flag collect 1
----- executor 3 cover number : 1322, signal number : 431
----- completed 15
execute_call 0, 29, 0, 8
execute_one loop: 0, 0, 37
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 15
----- completed 16
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2948, write pid:2948
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 1, 2951, 0
execute_one time: 1, 2952
2023/03/31 02:41:34 for select break: 1
2023/03/31 02:41:34 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24462, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 93, flag collect 1
----- executor 1 cover number : 65, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 23805, flag collect 1
----- executor 0 cover number : 526, signal number : 489
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 0 cover number : 501, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 222, 2957, 0
before receive testcase: 0 0
----- executor 2 cover number : 1716, signal number : 2106
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 117
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 2 cover number : 66, signal number : 63
----- executor 2 executes write_coverage_signal cov->size 5200, flag collect 1
----- executor 2 cover number : 1001, signal number : 1147
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1725, signal number : 2114
----- executor 1 executes write_coverage_signal cov->size 494, flag collect 1
----- executor 1 cover number : 99, signal number : 21
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 116, signal number : 104
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 57
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 52
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1733, signal number : 1325
----- executor 2 executes write_coverage_signal cov->size 29515, flag collect 1
----- executor 1 cover number : 1786, signal number : 1356
----- executor 1 executes write_coverage_signal cov->size 5127, flag collect 1
----- executor 1 cover number : 986, signal number : 172
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2610, signal number : 3275
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1056, flag collect 1
----- executor 0 cover number : 379, signal number : 212
----- executor 2 cover number : 280, signal number : 201
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3474, flag collect 1
----- executor 2 cover number : 774, signal number : 702
----- executor 2 executes write_coverage_signal cov->size 1216, flag collect 1
----- executor 2 cover number : 390, signal number : 116
----- executor 2 executes write_coverage_signal cov->size 3117, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 626, signal number : 484
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1320, signal number : 1426
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2116, signal number : 2384
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1457, flag collect 1
----- executor 0 cover number : 1141, signal number : 1241
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 336, signal number : 197
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2487, flag collect 1
----- executor 1 cover number : 743, signal number : 400
----- executor 1 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 1 cover number : 596, signal number : 124
----- executor 1 executes write_coverage_signal cov->size 4826, flag collect 1
----- executor 1 cover number : 625, signal number : 445
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2166, signal number : 2078
----- executor 2 executes write_coverage_signal cov->size 32006, flag collect 1
----- executor 0 cover number : 540, signal number : 475
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1325, signal number : 1166
----- executor 1 executes write_coverage_signal cov->size 29205, flag collect 1
----- executor 2 cover number : 2625, signal number : 1856
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2215, signal number : 1263
----- executor 0 cover number : 881, signal number : 566
----- executor 0 executes write_coverage_signal cov->size 20648, flag collect 1
----- executor 1 cover number : 2853, signal number : 2240
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 server cover_cnt 20 output_pos_value 34186
2023/03/31 02:41:34 for select break: 1
2023/03/31 02:41:34 --------- executor 2 receive reply, reply.done 1
----- executor 0 cover number : 1463, signal number : 1150
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
time breakdown 2: 150, 3009, 0
before receive testcase: 0 0
----- executor 0 cover number : 106, signal number : 40
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 2255, signal number : 1316
----- executor 1 executes write_coverage_signal cov->size 26813, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2616, flag collect 1
----- executor 0 cover number : 971, signal number : 703
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1325, flag collect 1
----- executor 0 cover number : 600, signal number : 153
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1614, signal number : 1026
executor 1 server cover_cnt 20 output_pos_value 30614
time breakdown 1: 163, 3024, 0
----- executor 0 cover number : 1995, signal number : 1796
----- executor 0 executes write_coverage_signal cov->size 3963, flag collect 1
----- executor 0 cover number : 602, signal number : 468
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 15
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 56
executor 0 server cover_cnt 60 output_pos_value 27173
before receive testcase: 0 1
2023/03/31 02:41:34 for select break: 1
2023/03/31 02:41:34 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:34 for select break: 1
2023/03/31 02:41:34 --------- executor 0 receive reply, reply.done 1
2023/03/31 02:41:34 wg wait finish
2023/03/31 02:41:34 ------ all executors finish execution
2023/03/31 02:41:34 exec time: 3150
2023/03/31 02:41:34 ----- PS len: 4
2023/03/31 02:41:34 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:34 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 431 signal and 1322 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:34 [SERVER] executor 0 has 60 replies
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1425 signal and 1141 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 32 signal and 34 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 672 signal and 635 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1594 signal and 1535 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 7 signal and 7 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 18 signal and 27 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 5 signal and 13 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 4 signal and 4 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 489 signal and 526 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 54 signal and 501 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 52 signal and 142 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 212 signal and 379 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1241 signal and 1141 cover from userspace component
time breakdown 0: 201, 3032, 0
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 475 signal and 540 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 2 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 566 signal and 881 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1150 signal and 1463 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 40 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 [SERVER] executor 2 has 20 replies
2023/03/31 02:41:34 [SERVER] executor 1 has 20 replies
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 75 signal and 65 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 2114 signal and 1725 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 21 signal and 99 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 104 signal and 116 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 57 signal and 66 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 1356 signal and 1786 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 172 signal and 986 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 2106 signal and 1716 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 74 signal and 66 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 117 signal and 116 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 2 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 63 signal and 66 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 2384 signal and 2116 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 1147 signal and 1001 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 197 signal and 336 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 703 signal and 971 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 3 signal and 109 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 153 signal and 600 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 400 signal and 743 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 124 signal and 596 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1796 signal and 1995 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 445 signal and 625 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 468 signal and 602 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 6 signal and 7 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 15 signal and 27 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 4 signal and 13 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 2 signal and 4 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 1 signal and 4 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 0 receive 56 signal and 51 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 1166 signal and 1325 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 2240 signal and 2853 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 1316 signal and 2255 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 1 receive 1026 signal and 1614 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 1325 signal and 1733 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 3275 signal and 2610 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 201 signal and 280 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 702 signal and 774 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 116 signal and 390 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 484 signal and 626 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 1426 signal and 1320 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 2078 signal and 2166 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 1856 signal and 2625 cover from userspace component
2023/03/31 02:41:34 ------- fuzzer executor 2 receive 1263 signal and 2215 cover from userspace component
2023/03/31 02:41:34 fsMds: [map[] map[] map[] map[]]
=================================================================
==15109==ERROR: AddressSanitizer: heap-use-after-free on address 0x6210000245c8 at pc 0x7ffff735af05 bp 0x7fffeff6d7c0 sp 0x7fffeff6d7b0
READ of size 8 at 0x6210000245c8 thread T6
    #0 0x7ffff735af04 in gf_mem_acct_enabled /root/glusterfs/libglusterfs/src/mem-pool.c:158
    #1 0x7ffff735af04 in __gf_free /root/glusterfs/libglusterfs/src/mem-pool.c:342
    #2 0x7ffff722467f in rpc_clnt_destroy /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:1777
    #3 0x7ffff722467f in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:875
    #4 0x7ffff721e5d7 in rpc_transport_unref /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:502
    #5 0x7ffff00605bc in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2831
    #6 0x7ffff00605bc in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #7 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #8 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #9 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477
    #10 0x7ffff70e9102 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)

0x6210000245c8 is located 200 bytes inside of 4124-byte region [0x621000024500,0x62100002551c)
freed by thread T8 here:
    #0 0x7ffff76a07cf in __interceptor_free (/lib/x86_64-linux-gnu/libasan.so.5+0x10d7cf)
    #1 0x7ffff735ae19 in __gf_free /root/glusterfs/libglusterfs/src/mem-pool.c:383
    #2 0x7ffff72e7f0f in xlator_tree_free_memacct /root/glusterfs/libglusterfs/src/xlator.c:904
    #3 0x7ffff737f554 in glusterfs_graph_destroy_residual /root/glusterfs/libglusterfs/src/graph.c:1193
    #4 0x7ffff737f68e in glusterfs_graph_destroy /root/glusterfs/libglusterfs/src/graph.c:1234
    #5 0x7ffff73804d0 in glusterfs_graph_cleanup /root/glusterfs/libglusterfs/src/graph.c:1460
    #6 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

previously allocated by thread T6 here:
    #0 0x7ffff76a0dc6 in calloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10ddc6)
    #1 0x7ffff735a226 in __gf_calloc /root/glusterfs/libglusterfs/src/mem-pool.c:177
    #2 0x7ffff747ab7c in new_volume graph.y:139
    #3 0x7ffff747ab7c in graphyyparse graph.y:52
    #4 0x7ffff747c011 in glusterfs_graph_construct graph.y:595
    #5 0x7ffff7382c2d in glusterfs_process_svc_attach_volfp /root/glusterfs/libglusterfs/src/graph.c:1744
    #6 0x55555557478a in mgmt_process_volfile /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:112
    #7 0x555555584f47 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2350
    #8 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #9 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #10 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #11 0x7ffff00525a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #12 0x7ffff0062b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #13 0x7ffff0062b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #14 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #15 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #16 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #17 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #18 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T6 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73fdaf2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7358f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7466b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7466b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fee0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T8 created by T6 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f4f2 in gf_thread_create_detached /root/glusterfs/libglusterfs/src/common-utils.c:3308
    #3 0x7ffff73836af in glusterfs_process_svc_attach_volfp /root/glusterfs/libglusterfs/src/graph.c:1840
    #4 0x55555557478a in mgmt_process_volfile /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:112
    #5 0x555555584f47 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2350
    #6 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #7 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #8 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #9 0x7ffff00525a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #10 0x7ffff0062b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #11 0x7ffff0062b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #12 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #13 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #14 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #15 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #16 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

SUMMARY: AddressSanitizer: heap-use-after-free /root/glusterfs/libglusterfs/src/mem-pool.c:158 in gf_mem_acct_enabled
Shadow bytes around the buggy address:
  0x0c427fffc860: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fffc870: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fffc880: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fffc890: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c427fffc8a0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c427fffc8b0: fd fd fd fd fd fd fd fd fd[fd]fd fd fd fd fd fd
  0x0c427fffc8c0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c427fffc8d0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c427fffc8e0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c427fffc8f0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c427fffc900: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==15109==ABORTING
2023/03/31 02:41:34 disable threaded and collide
2023/03/31 02:41:34 prog length: 6
2023/03/31 02:41:34 prog length: 19
2023/03/31 02:41:34 HasCrashFail:true HasNetFail:false
02:41:34 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
syz_failure_sync(0x1, 0x3)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1447
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir time 54
-----finish removing dir
mkdir time 22
executor 3 create dir /root/glusterfs-client/dfs-0-1448 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1448
receive_execute: 66, 75
receive_execute: 50, 76
receive_execute: 42, 75
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 111, 80
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 7, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
Node-0:/root/daemon-log.15110
==15110==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
----- executor 3 write_call_output, size 8995, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 8995, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 24, 0, 9
execute_one loop: 0, 1, 34
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8508, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 8508, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 20, 0, 5
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 1649, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 1649, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 74, 0, 0
execute_one loop: 0, 0, 74
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2783, flag collect 1
----- executor 0 cover number : 417, signal number : 498
----- executor 0 executes write_coverage_signal cov->size 70, flag collect 1
----- executor 0 cover number : 57, signal number : 26
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1973, signal number : 2363
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 0 cover number : 530, signal number : 439
----- executor 0 executes write_coverage_signal cov->size 168, flag collect 1
----- executor 0 cover number : 126, signal number : 59
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
executor 0 server cover_cnt 6 output_pos_value 6525
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 3
----- directly resend shmid 3
execute_call 0, 100, 0, 0
execute_one loop: 0, 0, 100
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 100, 0, 0
execute_one loop: 0, 0, 100
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
----- executor 3 write_call_output, size 2776, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
-----executor 0 collect shmids 48
----- directly resend shmid 48
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
-----executor 0 collect shmids 52
----- directly resend shmid 52
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2953, 0, 0
execute_one loop: 0, 0, 2953
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3141, 0
execute_one time: 1, 3141
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 2953, 0, 0
execute_one loop: 0, 0, 2953
cover_reset in execute_call
----- executor 3 write_call_output, size 12625, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 12625, flag collect 1
----- executor 3 cover number : 1320, signal number : 427
----- completed 15
execute_call 0, 28, 0, 3
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 2756, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 2756, flag collect 1
----- executor 3 cover number : 818, signal number : 15
----- completed 16
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 148
----- completed 17
execute_call 0, 7, 0, 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2949, write pid:2949
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3189, 0
execute_one time: 3, 3191
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1379, flag collect 1
2023/03/31 02:41:37 for select break: 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
2023/03/31 02:41:37 --------- executor 3 receive reply, reply.done 1
----- executor 1 cover number : 289, signal number : 332
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 501, signal number : 39
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1298, flag collect 1
----- executor 2 cover number : 279, signal number : 316
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 3: 191, 3198, 0
before receive testcase: 0 1
----- executor 1 cover number : 516, signal number : 591
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 0 cover number : 126, signal number : 22
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 9, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 2 cover number : 539, signal number : 617
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 913, flag collect 1
----- executor 0 cover number : 387, signal number : 229
----- executor 0 executes write_coverage_signal cov->size 2998, flag collect 1
----- executor 0 cover number : 520, signal number : 341
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 285, flag collect 1
----- executor 0 cover number : 160, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 0 cover number : 109, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 2163, signal number : 2578
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 29749, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 2200, signal number : 2627
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 28385, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 741
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 384
----- executor 1 executes write_coverage_signal cov->size 25740, flag collect 1
----- executor 1 cover number : 2052, signal number : 2552
----- executor 1 executes write_coverage_signal cov->size 798, flag collect 1
Node-0:/root/daemon-log.15172
----- executor 1 cover number : 270, signal number : 142
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1724, flag collect 1
----- executor 1 cover number : 555, signal number : 215
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2203, flag collect 1
----- executor 2 cover number : 2670, signal number : 3757
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 793, flag collect 1
----- executor 2 cover number : 270, signal number : 159
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1421, flag collect 1
----- executor 1 cover number : 596, signal number : 209
----- executor 1 executes write_coverage_signal cov->size 3273, flag collect 1
----- executor 2 cover number : 526, signal number : 314
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4064, flag collect 1
----- executor 1 cover number : 906, signal number : 317
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 930, signal number : 654
----- executor 2 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 2 cover number : 540, signal number : 88
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1819, signal number : 952
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1349, signal number : 1774
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1244, signal number : 1804
----- executor 2 executes write_coverage_signal cov->size 30840, flag collect 1
----- executor 0 cover number : 1973, signal number : 2776
----- executor 0 executes write_coverage_signal cov->size 5775, flag collect 1
----- executor 2 cover number : 1305, signal number : 1159
----- executor 2 executes write_coverage_signal cov->size 31378, flag collect 1
----- executor 0 cover number : 530, signal number : 238
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 54
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 8
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 0 cover number : 498, signal number : 210
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 176
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2173, signal number : 1947
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 607
executor 0 server cover_cnt 50 output_pos_value 22905
----- executor 1 cover number : 2254, signal number : 1674
----- executor 1 executes write_coverage_signal cov->size 30059, flag collect 1
----- executor 2 cover number : 2604, signal number : 1764
----- executor 2 executes write_coverage_signal cov->size 31267, flag collect 1
2023/03/31 02:41:37 for select break: 1
2023/03/31 02:41:37 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 118, 3254, 0
----- executor 1 cover number : 2451, signal number : 1570
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 3
executor 1 server cover_cnt 19 output_pos_value 30523
----- executor 2 cover number : 2223, signal number : 1301
executor 2 server cover_cnt 21 output_pos_value 31337
before receive testcase: 0 0
2023/03/31 02:41:37 for select break: 1
2023/03/31 02:41:37 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 126, 3261, 0
before receive testcase: 0 0
2023/03/31 02:41:37 for select break: 1
2023/03/31 02:41:37 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:37 wg wait finish
2023/03/31 02:41:37 ------ all executors finish execution
2023/03/31 02:41:37 exec time: 3337
2023/03/31 02:41:37 ----- PS len: 4
2023/03/31 02:41:37 [SERVER] executor 0 has 50 replies
2023/03/31 02:41:37 [SERVER] executor 2 has 21 replies
time breakdown 2: 141, 3262, 0
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 498 signal and 417 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 26 signal and 57 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 2363 signal and 1973 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 439 signal and 530 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 59 signal and 126 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:37 [SERVER] executor 1 has 19 replies
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 39 signal and 501 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 22 signal and 126 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 2 signal and 9 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 332 signal and 289 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 591 signal and 516 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 316 signal and 279 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:37 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:37 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 617 signal and 539 cover from userspace component
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:37 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 130 signal and 1139 cover from executor 3
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 2 signal and 2 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:37 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 2627 signal and 2200 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:37 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 427 signal and 1320 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 15 signal and 818 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 148 signal and 749 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 229 signal and 387 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 341 signal and 520 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 23 signal and 160 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 2 signal and 109 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 952 signal and 1819 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 2776 signal and 1973 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 238 signal and 530 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 54 signal and 142 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 8 signal and 10 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 210 signal and 498 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 1 signal and 5 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 176 signal and 615 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 0 receive 607 signal and 894 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 2578 signal and 2163 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 384 signal and 576 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 2552 signal and 2052 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 142 signal and 270 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 215 signal and 555 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 209 signal and 596 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 317 signal and 906 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 1774 signal and 1349 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 741 signal and 576 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 1947 signal and 2173 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 1674 signal and 2254 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 1570 signal and 2451 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 3757 signal and 2670 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 159 signal and 270 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 314 signal and 526 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 654 signal and 930 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 88 signal and 540 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 1804 signal and 1244 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 1159 signal and 1305 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 1764 signal and 2604 cover from userspace component
2023/03/31 02:41:37 ------- fuzzer executor 2 receive 1301 signal and 2223 cover from userspace component
before receive testcase: 0 0
2023/03/31 02:41:37 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:37 failure smash: true false
2023/03/31 02:41:37 HasCrashFail: true, .HasNetFail: false
2023/03/31 02:41:37 disable threaded and collide
2023/03/31 02:41:37 prog length: 6
2023/03/31 02:41:37 send to channel: true, false
2023/03/31 02:41:37 prog length: 19
2023/03/31 02:41:37 HasCrashFail:true HasNetFail:false
02:41:37 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1448
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 75
-----finish removing dir
receive_execute: 94, 97
receive_execute: 100, 98
receive_execute: 92, 98
mkdir time 22
executor 3 create dir /root/glusterfs-client/dfs-0-1449 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1449
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
receive_execute: 152, 102
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
execute_one time: 2, 3
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8992, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 8992, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 20, 0, 8
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 8508, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 8508, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 70, 0, 0
execute_one loop: 0, 0, 70
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 46, signal number : 61
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 513, signal number : 601
----- executor 0 executes write_coverage_signal cov->size 1200, flag collect 1
----- executor 0 cover number : 445, signal number : 501
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 59
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 0 cover number : 523, signal number : 582
----- executor 0 executes write_coverage_signal cov->size 168, flag collect 1
----- executor 0 cover number : 126, signal number : 81
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 9, signal number : 9
executor 0 server cover_cnt 7 output_pos_value 3629
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
execute_call 0, 64, 0, 0
execute_one loop: 0, 0, 64
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 67, 0, 0
execute_one loop: 0, 0, 67
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2776, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 11, 0, 4
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 3494, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 3494, flag collect 1
----- executor 3 cover number : 934, signal number : 133
----- completed 14
execute_call 0, 15, 0, 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==15172==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2840, 0, 0
execute_one loop: 0, 0, 2840
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3015, 0
execute_one time: 1, 3015
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 2840, 0, 0
execute_one loop: 0, 0, 2840
cover_reset in execute_call
----- executor 3 write_call_output, size 12806, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 12806, flag collect 1
----- executor 3 cover number : 1365, signal number : 311
----- completed 16
execute_call 0, 27, 0, 4
execute_one loop: 0, 0, 31
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 151
----- completed 17
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2950, write pid:2950
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3050, 0
execute_one time: 2, 3050
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
2023/03/31 02:41:41 for select break: 1
time breakdown 3: 254, 3054, 0
2023/03/31 02:41:41 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 7
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 18338, flag collect 1
before receive testcase: 0 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 93, flag collect 1
----- executor 2 cover number : 65, signal number : 75
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 18671, flag collect 1
----- executor 0 cover number : 501, signal number : 32
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1731, signal number : 2144
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 27701, flag collect 1
----- executor 2 cover number : 1695, signal number : 2064
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 29044, flag collect 1
----- executor 0 cover number : 126, signal number : 20
----- executor 0 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 0 cover number : 9, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 0 cover number : 286, signal number : 217
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 576, signal number : 291
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 46, signal number : 66
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 576, signal number : 739
----- executor 2 executes write_coverage_signal cov->size 27622, flag collect 1
----- executor 0 cover number : 513, signal number : 559
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 0 cover number : 4, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2683, signal number : 3230
----- executor 1 executes write_coverage_signal cov->size 28, flag collect 1
----- executor 1 cover number : 27, signal number : 25
----- executor 1 executes write_coverage_signal cov->size 796, flag collect 1
----- executor 1 cover number : 269, signal number : 191
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3274, flag collect 1
----- executor 1 cover number : 767, signal number : 485
----- executor 1 executes write_coverage_signal cov->size 1412, flag collect 1
----- executor 1 cover number : 540, signal number : 89
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2203, signal number : 2755
----- executor 2 executes write_coverage_signal cov->size 789, flag collect 1
----- executor 2 cover number : 269, signal number : 178
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2151, flag collect 1
----- executor 2 cover number : 585, signal number : 489
----- executor 2 executes write_coverage_signal cov->size 2502, flag collect 1
----- executor 2 cover number : 721, signal number : 280
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 2032, signal number : 2292
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 1
----- executor 0 cover number : 497, signal number : 173
----- executor 0 executes write_coverage_signal cov->size 685, flag collect 1
----- executor 0 cover number : 344, signal number : 174
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 0 cover number : 51, signal number : 44
----- executor 0 executes write_coverage_signal cov->size 5628, flag collect 1
----- executor 1 cover number : 1244, signal number : 1524
----- executor 1 executes write_coverage_signal cov->size 27324, flag collect 1
----- executor 0 cover number : 523, signal number : 302
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1320, signal number : 1813
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 43
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 6
----- executor 0 executes write_coverage_signal cov->size 434, flag collect 1
----- executor 0 cover number : 246, signal number : 13
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
executor 0 server cover_cnt 51 output_pos_value 15744
----- executor 1 cover number : 1291, signal number : 719
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 02:41:41 for select break: 1
2023/03/31 02:41:41 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 198, 3086, 0
before receive testcase: 0 0
----- executor 2 cover number : 2323, signal number : 1921
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2245, signal number : 1107
----- executor 1 executes write_coverage_signal cov->size 30342, flag collect 1
----- executor 2 cover number : 2264, signal number : 1308
----- executor 2 executes write_coverage_signal cov->size 32360, flag collect 1
----- executor 1 cover number : 2241, signal number : 1071
executor 1 server cover_cnt 15 output_pos_value 24564
----- executor 2 cover number : 2501, signal number : 1655
executor 2 server cover_cnt 14 output_pos_value 27860
2023/03/31 02:41:41 for select break: 1
2023/03/31 02:41:41 --------- executor 1 receive reply, reply.done 1
2023/03/31 02:41:41 for select break: 1
2023/03/31 02:41:41 --------- executor 2 receive reply, reply.done 1
2023/03/31 02:41:41 wg wait finish
2023/03/31 02:41:41 ------ all executors finish execution
2023/03/31 02:41:41 exec time: 3202
2023/03/31 02:41:41 ----- PS len: 4
2023/03/31 02:41:41 [CLIENT] executor 3 has 19 replies
2023/03/31 02:41:41 fuzzer receive 1589 signal and 1276 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 282 signal and 427 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 [SERVER] executor 0 has 51 replies
2023/03/31 02:41:41 [SERVER] executor 1 has 15 replies
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 7 signal and 7 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 61 signal and 46 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 2144 signal and 1731 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 291 signal and 576 cover from userspace component
2023/03/31 02:41:41 [SERVER] executor 2 has 14 replies
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 3230 signal and 2683 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 75 signal and 65 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 25 signal and 27 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 191 signal and 269 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 485 signal and 767 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 89 signal and 540 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 1524 signal and 1244 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 719 signal and 1291 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 601 signal and 513 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 1107 signal and 2245 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 501 signal and 445 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 59 signal and 51 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 1 receive 1071 signal and 2241 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 2064 signal and 1695 cover from userspace component
2023/03/31 02:41:41 fuzzer receive 130 signal and 1139 cover from executor 3
time breakdown 1: 191, 3103, 0
before receive testcase: 0 0
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 02:41:41 fuzzer receive 194 signal and 630 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 164 signal and 515 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 515 cover from executor 3
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 739 signal and 576 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 2755 signal and 2203 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 178 signal and 269 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 489 signal and 585 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 280 signal and 721 cover from userspace component
2023/03/31 02:41:41 fuzzer receive 327 signal and 830 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 15 signal and 128 cover from executor 3
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 1813 signal and 1320 cover from userspace component
2023/03/31 02:41:41 fuzzer receive 133 signal and 934 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 311 signal and 1365 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 151 signal and 749 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 582 signal and 523 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 81 signal and 126 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 9 signal and 9 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 32 signal and 501 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 20 signal and 126 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 4 signal and 9 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 217 signal and 286 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 66 signal and 46 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 559 signal and 513 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 5 signal and 4 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 23 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 1921 signal and 2323 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 1 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 1308 signal and 2264 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 2 receive 1655 signal and 2501 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 106 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 4 signal and 6 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 2292 signal and 2032 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 173 signal and 497 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 174 signal and 344 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 44 signal and 51 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 302 signal and 523 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 43 signal and 142 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 6 signal and 10 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 13 signal and 246 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 5 signal and 5 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 5 cover from userspace component
2023/03/31 02:41:41 ------- fuzzer executor 0 receive 0 signal and 4 cover from userspace component
time breakdown 2: 190, 3104, 0
before receive testcase: 0 0
2023/03/31 02:41:41 fsMds: [map[] map[] map[] map[]]
2023/03/31 02:41:41 disable threaded and collide
2023/03/31 02:41:41 prog length: 6
2023/03/31 02:41:41 prog length: 19
2023/03/31 02:41:41 HasCrashFail:true HasNetFail:false
02:41:41 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
mkdir(&(0x7f0000000040)='./file0\x00', 0x0)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001380)={'#! ', './file0', [{0x20, '@]\\'}], 0xa, "2a89fc7aedc552937961c779278dce4d42c2deebfd0b1a8728bafc9c0216944f8370a2c40658b5ee92fc442f9a338193717b9d368d86413be610bd93886245a383bcae6d8656f82153b62cc67ca903d7d34eb888c09579264ff5cfb1549da2fae586ed0f4374a28cc48ddf35e5e6ae463a490efe333c53947a8426a24fd77ee40255db5137d0c4dbd88a8d1d0a5bee0fc87b933b53ff88afa277ed2ef30045e8929a28f14402cd9acec96add125bb7a7f53f14fe8d34b0f89707cd8d401c4eff1913a11cc6a88fe89c0265171025bdd465ee47229e"}, 0xe4)
r0 = openat(0xffffffffffffff9c, &(0x7f0000001340)='./file0\x00', 0x311080, 0x1a5)
r1 = open(&(0x7f0000000240)='./file0\x00', 0x208840, 0x19d)
symlinkat(&(0x7f0000000200)='./file0\x00', r1, &(0x7f0000000280)='./file0\x00')
listxattr(&(0x7f0000000140)='./file0\x00', &(0x7f0000000080)=""/144, 0x90)
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000001600)='./file0\x00', 0x0)
mkdir(&(0x7f0000001540)='./file0\x00', 0x100)
pwrite64(r1, &(0x7f00000002c0)="", 0x1000, 0xffffffffffffc065)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001480)='./file0\x00', &(0x7f00000014c0), &(0x7f0000001500)={'U-', 0xffe}, 0x16, 0x1)
fcntl$lock(r0, 0x26, &(0x7f0000001300)={0x2, 0x2, 0xc6, 0x1, 0xffffffffffffffff})
setxattr$security_selinux(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f00000012c0)='system_u:object_r:systemd_systemctl_exec_t:s0\x00', 0x2e, 0x2)
removexattr(&(0x7f0000000000)='./file0\x00', &(0x7f0000001800)=ANY=[@ANYBLOB="8b29b32d41f3f702f23f134033c9280129cd50da33177452dac2551693a658e3dab8ec4e092ace995da1bd2765516131c6e66def3b7820cfa5f5b8a6ca9d65e4ee171525b0ef9109a7fd6ab1017ca2bc48b130fcfc51d07f882853e821fa88b21c69ee2b8c4ee1660dd5988bb6a9277833a8189fcd8c37407c70fe4d4ee99a56f057cfdee01f5fad374d2e892ea0e02c6061c139ec29c15183cf2afae0f8000000000000000000000000f6a0a93e03d899a3d2b92044652c6ff5b94574110416778257f57d0a394d079478fcf0e01e15b3120900000000000000f786f3896f70017babacf8cddf20ddfff6ac57a9ccbd444a6aacc7f1259bc9e90d6ba0d7649d9bd0c3cdbc8c9d8e4b094751d67282ed278d37a8c4409ae25dfe07da5a433282a299d1e22cfd6f772acd468959fac04330e6960ef3c58adc6fc187e882130dbb264077aeae48118d7958087d9bf4d30b510dde047dd7700b47f41eeeb9b49ef95ddaf85022c932856f6083eb0007c984d70000000000000000000000004c4d6c2e5ab41c30e64268e464876ed8852d97ba47ff72a091fb5b925c0c55f2f63a5838c8b3d235b16f73d4486b825cee458641db5801549c277fa889e99400b399af5b0000000000"])
syz_failure_sync(0x1, 0x3)
setxattr$security_evm(&(0x7f00000015c0)='./file0\x00', &(0x7f0000001780), &(0x7f00000017c0)=ANY=[@ANYBLOB="0180a1ef11ba77a2421b5afeb0"], 0xd, 0x2)
chmod(&(0x7f0000001580)='./file0\x00', 0x101)
r2 = dup(r1)
ftruncate(r2, 0xfffffffffffffffc)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 8056
remove dir: /root/glusterfs-client/dfs-0-1449
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
Node-0:/root/daemon-log.15240
remove dir time 75
-----finish removing dir
receive_execute: 42, 113
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-1450 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1450
receive_execute: 59, 113
receive_execute: 40, 113
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 6, 1
receive_execute: 87, 120
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8989, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 8989, flag collect 1
----- executor 3 cover number : 1276, signal number : 1589
----- completed 1
execute_call 0, 22, 0, 7
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 925, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 925, flag collect 1
----- executor 3 cover number : 427, signal number : 282
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8514, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 8514, flag collect 1
----- executor 3 cover number : 1139, signal number : 130
----- completed 5
execute_call 0, 16, 0, 6
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 1648, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 1648, flag collect 1
----- executor 3 cover number : 630, signal number : 194
----- completed 6
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 64, 0, 0
execute_one loop: 0, 0, 64
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 18701, flag collect 1
----- executor 0 cover number : 1759, signal number : 2223
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 107
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 0 cover number : 2, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 1838, flag collect 1
----- executor 0 cover number : 615, signal number : 304
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 577
executor 0 server cover_cnt 11 output_pos_value 6716
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
execute_call 0, 76, 0, 0
execute_one loop: 0, 0, 76
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 76, 0, 0
execute_one loop: 0, 0, 76
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 164
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 1234, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 1234, flag collect 1
----- executor 3 cover number : 515, signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
----- executor 3 write_call_output, size 2776, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 2776, flag collect 1
----- executor 3 cover number : 830, signal number : 327
----- completed 11
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 183, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 183, flag collect 1
----- executor 3 cover number : 128, signal number : 15
----- completed 13
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
-----executor 0 collect shmids 46
----- directly resend shmid 46
-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 48
----- directly resend shmid 48
----- executor 3 write_call_output, size 2226, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 2226, flag collect 1
----- executor 3 cover number : 651, signal number : 139
----- completed 14
execute_call 0, 17, 0, 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30, 0, 0
execute_one loop: 0, 0, 30
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==15240==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_call 0, 2643, 0, 0
execute_one loop: 0, 0, 2643
cover_reset in execute_call
execute_call 0, 2642, 0, 0
execute_one loop: 0, 0, 2642
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2812, 0
execute_one time: 1, 2812
----- executor 3 write_call_output, size 12812, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 12812, flag collect 1
----- executor 3 cover number : 1365, signal number : 313
----- completed 16
execute_call 0, 31, 0, 6
execute_one loop: 0, 0, 37
cover_reset in execute_call
----- executor 3 write_call_output, size 2535, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 2535, flag collect 1
----- executor 3 cover number : 749, signal number : 151
----- completed 17
execute_call 0, 10, 0, 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 2952, write pid:2952
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2856, 0
execute_one time: 2, 2857
2023/03/31 02:41:44 for select break: 1
2023/03/31 02:41:44 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 65, signal number : 74
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 93, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 1 cover number : 65, signal number : 75
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 1 cover number : 3, signal number : 4
----- executor 0 cover number : 501, signal number : 384
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 18770, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 28577, flag collect 1
----- executor 2 cover number : 1730, signal number : 2104
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9554, flag collect 1
----- executor 2 cover number : 576, signal number : 664
----- executor 2 executes write_coverage_signal cov->size 18829, flag collect 1
----- executor 1 cover number : 2224, signal number : 2832
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 0 cover number : 126, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 10, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 1 cover number : 66, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
time breakdown 3: 207, 2863, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 0 cover number : 286, signal number : 209
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 1 cover number : 116, signal number : 99
----- executor 1 executes write_coverage_signal cov->size 123, flag collect 1
----- executor 1 cover number : 66, signal number : 47
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 1
----- executor 0 cover number : 4, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 0 cover number : 106, signal number : 23
----- executor 1 executes write_coverage_signal cov->size 1870, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 567, signal number : 285
----- executor 1 executes write_coverage_signal cov->size 27874, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 410, signal number : 54
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 106, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 6, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 410, signal number : 174
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2691, signal number : 3608
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1083, flag collect 1
----- executor 2 cover number : 280, signal number : 184
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 2 cover number : 641, signal number : 552
----- executor 2 executes write_coverage_signal cov->size 1748, flag collect 1
----- executor 2 cover number : 545, signal number : 215
----- executor 2 executes write_coverage_signal cov->size 13967, flag collect 1
----- executor 0 cover number : 2120, signal number : 2357
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 972, signal number : 1143
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2184, signal number : 2745
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1051, flag collect 1
----- executor 1 cover number : 278, signal number : 177
----- executor 1 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 1 cover number : 3, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3354, flag collect 1
----- executor 1 cover number : 749, signal number : 329
----- executor 1 executes write_coverage_signal cov->size 1330, flag collect 1
----- executor 1 cover number : 415, signal number : 129
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 142, signal number : 57
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 0 cover number : 9, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1105, flag collect 1
----- executor 0 cover number : 499, signal number : 125
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 0 cover number : 5, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2506, flag collect 1
----- executor 0 cover number : 796, signal number : 246
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1282, signal number : 1069
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 894, signal number : 363
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 0 cover number : 8, signal number : 7
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 0 cover number : 7, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 1
----- executor 0 cover number : 27, signal number : 20
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 1
----- executor 0 cover number : 13, signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 0 cover number : 4, signal number : 4
executor 0 server cover_cnt 60 output_pos_value 18832
----- executor 1 cover number : 1320, signal number : 1620
----- executor 1 executes write_coverage_signal cov->size 815, flag collect 1
----- executor 1 cover number : 379, signal number : 79
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 172, 2900, 0
before receive testcase: 0 1
2023/03/31 02:41:44 for select break: 1
2023/03/31 02:41:44 --------- exec
VM DIAGNOSIS:
02:41:34  Registers:
info registers vcpu 0
RAX=0000000080000000 RBX=0000000000000000 RCX=ffffffff815a52cb RDX=0000000000000000
RSI=ff11000100c98000 RDI=0000000000000003 RBP=1fe220002207ff26 RSP=ff110001103ff918
R8 =0000000000000001 R9 =0000000000000000 R10=0000000000000007 R11=ffe21c0020193000
R12=ff11000113fb1c00 R13=00007ffff6b6d000 R14=80000001067ea025 R15=0000000000000000
RIP=ffffffff813c5886 RFL=00000246 [---Z-P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fb73c6b65b0 CR3=00000001150c0002 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=0000000000000000ffffffffff000000 XMM03=00000000000000000000000000000000
XMM04=ffffffffffffffffffffffffffff0000 XMM05=00000000000000000000000000000000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000000 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffba00 RDI=00007ffff7ffd310 RBP=00007fffffffe4c0 RSP=00007fffffffe090
R8 =000000000000001d R9 =000000000000001d R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73029c2 RFL=00000246 [---Z-P-] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 000fffff 00000000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 000fffff 00000000
FS =0000 00007ffff7fff980 000fffff 00000000
GS =0000 0000000000000000 000fffff 00000000
LDT=0000 0000000000000000 000fffff 00000000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007fffffffbe50 CR3=0000000112d8a003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000ffffffffffffff00 XMM01=25252525252525252525252525252525
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=0000000000000000ffffffffffffff00 XMM05=00000000000000000000000000000003
XMM06=00000000000013880000000000000032 XMM07=00000000000005a70000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
