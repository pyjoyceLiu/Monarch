fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 650 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 244 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/28 11:07:48 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:48 NetFailure, Node crash: false false
2023/03/28 11:07:48 mutate testcase with failures
2023/03/28 11:07:48 ----- insertCall()
2023/03/28 11:07:48 ----- generateCall 2374 mkdirat mkdirat
2023/03/28 11:07:48 ----- insertCall()
2023/03/28 11:07:48 ----- generateCall 3765 symlinkat symlinkat
2023/03/28 11:07:48 ----- mutateArg()
2023/03/28 11:07:48 ----- insertCall()
2023/03/28 11:07:48 ----- generateCall 2352 lsetxattr$security_capability lsetxattr$security_capability
2023/03/28 11:07:48 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:48 prog length: 9
2023/03/28 11:07:48 HasCrashFail:false HasNetFail:false
11:07:48 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
lsetxattr$security_capability(&(0x7f00000002c0)='./file1\x00', &(0x7f0000000300), &(0x7f0000000340)=@v3={0x3000000, [{0x2, 0x7fffffff}, {0x20, 0x8}]}, 0x18, 0x1)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
mkdirat(0xffffffffffffff9c, &(0x7f0000000140)='./file0\x00', 0x42)
r0 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file1\x00', 0x20000, 0x9)
symlinkat(&(0x7f0000000180)='./file0\x00', r0, &(0x7f0000000280)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1824
remove dir: /root/glusterfs-client/dfs-0-1078
time breakdown 1: 116, 89, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 77
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1079 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1079
receive_execute: 8, 112
receive_execute: 9, 111
receive_execute: 1, 112
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 15, 116
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6195, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 6195, flag collect 0
----- executor 3 signal number : 1444
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 1412, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 1412, flag collect 0
----- executor 3 signal number : 336
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6774, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 6774, flag collect 0
----- executor 3 signal number : 399
----- completed 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 6948, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 6948, flag collect 0
----- executor 3 signal number : 143
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 5
----- completed 7
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 8
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3140, write pid:3141
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 36, 25, 0
execute_one time: 1, 61
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 131, 64, 0
before receive testcase: 0 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 24932, flag collect 0
----- executor 1 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4665, flag collect 0
----- executor 1 signal number : 789
----- executor 0 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 5173, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 636
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 491
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 2
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 2
----- executor 1 signal number : 492
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 4
executor 0 server cover_cnt 6 output_pos_value 2307
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 247
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 5501, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 19574, flag collect 0
----- executor 2 signal number : 1819
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1087
----- executor 2 executes write_coverage_signal cov->size 10647, flag collect 0
executor 1 server cover_cnt 8 output_pos_value 2642
----- executor 2 signal number : 25
----- executor 2 executes write_coverage_signal cov->size 17563, flag collect 0
----- executor 2 signal number : 1190
----- executor 2 executes write_coverage_signal cov->size 14873, flag collect 0
----- executor 2 signal number : 218
----- executor 2 executes write_coverage_signal cov->size 11107, flag collect 0
----- executor 2 signal number : 66
----- executor 2 executes write_coverage_signal cov->size 11585, flag collect 0
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 120, 73, 0
----- executor 2 signal number : 52
----- executor 2 executes write_coverage_signal cov->size 17831, flag collect 0
before receive testcase: 0 0
time breakdown 1: 113, 72, 0
before receive testcase: 0 0
----- executor 2 signal number : 601
----- executor 2 executes write_coverage_signal cov->size 16954, flag collect 0
----- executor 2 signal number : 108
executor 2 server cover_cnt 12 output_pos_value 5665
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:48 wg wait finish
2023/03/28 11:07:48 ------ all executors finish execution
2023/03/28 11:07:48 exec time: 189
2023/03/28 11:07:48 ----- PS len: 4
2023/03/28 11:07:48 [CLIENT] executor 3 has 9 replies
2023/03/28 11:07:48 fuzzer receive 1444 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 336 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 399 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 143 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 11:07:48 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:48 [SERVER] executor 1 has 8 replies
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:48 [SERVER] executor 2 has 12 replies
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 636 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 1819 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 1087 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 25 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 1190 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 218 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 66 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 52 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 601 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 108 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 247 signal and 0 cover from userspace component
2023/03/28 11:07:48 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:48 NetFailure, Node crash: false false
2023/03/28 11:07:48 mutate testcase with failures
2023/03/28 11:07:48 ----- insertCall()
2023/03/28 11:07:48 ----- generateCall 3761 stat stat
2023/03/28 11:07:48 ----- insertCall()
2023/03/28 11:07:48 ----- generateCall 2374 mkdirat mkdirat
2023/03/28 11:07:48 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:48 prog length: 8
2023/03/28 11:07:48 HasCrashFail:false HasNetFail:false
11:07:48 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
r0 = dup(0xffffffffffffffff)
mkdirat(r0, &(0x7f0000000280)='./file0\x00', 0x2c)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180))
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1168
remove dir: /root/glusterfs-client/dfs-0-1079
time breakdown 2: 120, 76, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 41
-----finish removing dir
receive_execute: 6, 78
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1080 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1080
receive_execute: 5, 78
receive_execute: 2, 77
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0, execute_one inner time: 1, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 1, 1
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 2, 1
receive_execute: 10, 81
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7260, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 7260, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4040, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 4040, flag collect 0
----- executor 3 signal number : 2
----- completed 7
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 5549, pid 3144, write pid:3145
----- executor 3 executes write_coverage_signal cov->size 5549, flag collect 0
----- executor 3 signal number : 142
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 32, 38, 0
execute_one time: 1, 71
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 91, 74, 0
executor 2 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 17313, flag collect 0
----- executor 2 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 3
----- executor 1 signal number : 459
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 13113, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4665, flag collect 0
----- executor 0 signal number : 444
----- executor 2 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 1352, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 215
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 2
----- executor 0 signal number : 1117
----- executor 0 executes write_coverage_signal cov->size 1617, flag collect 0
----- executor 0 signal number : 321
----- executor 0 executes write_coverage_signal cov->size 3722, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 17371, flag collect 0
----- executor 1 signal number : 2173
----- executor 1 executes write_coverage_signal cov->size 23752, flag collect 0
executor 2 server cover_cnt 6 output_pos_value 2305
----- executor 0 signal number : 188
----- executor 1 signal number : 1164
----- executor 0 executes write_coverage_signal cov->size 4060, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 28503, flag collect 0
----- executor 0 signal number : 224
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1626, flag collect 0
----- executor 0 signal number : 249
----- executor 1 signal number : 184
----- executor 1 executes write_coverage_signal cov->size 21729, flag collect 0
executor 0 server cover_cnt 10 output_pos_value 2580
----- executor 1 signal number : 1453
----- executor 1 executes write_coverage_signal cov->size 24797, flag collect 0
time breakdown 2: 79, 82, 0
before receive testcase: 0 1
----- executor 1 signal number : 494
----- executor 1 executes write_coverage_signal cov->size 20546, flag collect 0
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 83, 83, 0
----- executor 1 signal number : 240
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 20785, flag collect 0
----- executor 1 signal number : 217
executor 1 server cover_cnt 9 output_pos_value 6412
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:48 for select break: 1
2023/03/28 11:07:48 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:48 wg wait finish
2023/03/28 11:07:48 ------ all executors finish execution
2023/03/28 11:07:48 exec time: 166
2023/03/28 11:07:48 ----- PS len: 4
2023/03/28 11:07:48 [CLIENT] executor 3 has 8 replies
2023/03/28 11:07:48 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:48 fuzzer receive 142 signal and 0 cover from executor 3
2023/03/28 11:07:48 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 1117 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 321 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 188 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 224 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 0 receive 249 signal and 0 cover from userspace component
2023/03/28 11:07:48 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 459 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 2173 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 1164 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 184 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 1453 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 494 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 240 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 1 receive 217 signal and 0 cover from userspace component
2023/03/28 11:07:48 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:48 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
time breakdown 1: 84, 88, 0
before receive testcase: 0 0
2023/03/28 11:07:48 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:48 NetFailure, Node crash: false false
2023/03/28 11:07:48 mutate testcase with failures
2023/03/28 11:07:48 ----- insertCall()
2023/03/28 11:07:48 ----- generateCall 2750 pwritev pwritev
2023/03/28 11:07:48 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:48 prog length: 6
2023/03/28 11:07:48 HasCrashFail:false HasNetFail:false
11:07:48 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
pwritev(0xffffffffffffffff, &(0x7f0000000140), 0x0, 0xc75, 0x1f)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 992
remove dir: /root/glusterfs-client/dfs-0-1080
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 39
-----finish removing dir
receive_execute: 8, 73
receive_execute: 7, 72
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-1081 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1081
receive_execute: 2, 72
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 12, 75
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3147, write pid:3148
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3147, write pid:3148
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3147, write pid:3148
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3147, write pid:3148
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3147, write pid:3148
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3147, write pid:3148
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_one loop: 0, 0, 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 29, 32, 0
execute_one time: 1, 61
cover_reset in execute_call
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 87, 64, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2216, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 22754, flag collect 0
----- executor 1 signal number : 455
----- executor 1 executes write_coverage_signal cov->size 675, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 817, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4665, flag collect 0
----- executor 1 signal number : 319
----- executor 1 executes write_coverage_signal cov->size 4578, flag collect 0
----- executor 2 signal number : 619
----- executor 0 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 299
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 728
----- executor 0 executes write_coverage_signal cov->size 6325, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 214
----- executor 1 executes write_coverage_signal cov->size 2034, flag collect 0
----- executor 2 signal number : 492
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 236
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 17323, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 4
----- executor 0 signal number : 1406
----- executor 0 executes write_coverage_signal cov->size 6565, flag collect 0
executor 1 server cover_cnt 9 output_pos_value 2677
executor 2 server cover_cnt 6 output_pos_value 2311
----- executor 0 signal number : 415
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 695
----- executor 0 executes write_coverage_signal cov->size 19204, flag collect 0
----- executor 0 signal number : 436
----- executor 0 executes write_coverage_signal cov->size 14515, flag collect 0
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 81, 70, 0
before receive testcase: 0 0
----- executor 0 signal number : 1351
----- executor 0 executes write_coverage_signal cov->size 18200, flag collect 0
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 74, 71, 0
before receive testcase: 0 0
----- executor 0 signal number : 502
----- executor 0 executes write_coverage_signal cov->size 14255, flag collect 0
----- executor 0 signal number : 161
----- executor 0 executes write_coverage_signal cov->size 9983, flag collect 0
----- executor 0 signal number : 115
executor 0 server cover_cnt 10 output_pos_value 5571
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 150
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 6 replies
2023/03/28 11:07:49 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 458 signal and 0 cover from userspace component
2023/03/28 11:07:49 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:49 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:49 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1406 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 415 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 695 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 436 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1351 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 502 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 161 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 115 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 319 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 299 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 214 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 236 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 0: 79, 78, 0
before receive testcase: 0 0
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 NetFailure, Node crash: false false
2023/03/28 11:07:49 mutate testcase with failures
2023/03/28 11:07:49 ----- insertCall()
2023/03/28 11:07:49 ----- generateCall 120 chdir chdir
2023/03/28 11:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:49 prog length: 6
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
chdir(&(0x7f0000000140)='./file0\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 936
remove dir: /root/glusterfs-client/dfs-0-1081
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 34
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1082 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1082
receive_execute: 8, 67
receive_execute: 1, 67
receive_execute: 8, 66
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 13, 70
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3150, write pid:3151
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7988, pid 3150, write pid:3151
----- executor 3 executes write_coverage_signal cov->size 7988, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 1, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 7266, pid 3150, write pid:3151
----- executor 3 executes write_coverage_signal cov->size 7266, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3150, write pid:3151
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3150, write pid:3151
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5553, pid 3150, write pid:3151
----- executor 3 executes write_coverage_signal cov->size 5553, flag collect 0
----- executor 3 signal number : 144
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 40, 14, 0
execute_one time: 1, 54
cover_reset in execute_call
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 13951, flag collect 0
----- executor 0 signal number : 444
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 619
time breakdown 3: 83, 69, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 457
----- executor 1 executes write_coverage_signal cov->size 15809, flag collect 0
----- executor 0 signal number : 215
executor 2 server cover_cnt 5 output_pos_value 2302
executor 0 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 14801, flag collect 0
----- executor 1 signal number : 1881
----- executor 1 executes write_coverage_signal cov->size 31798, flag collect 0
----- executor 1 signal number : 1151
----- executor 1 executes write_coverage_signal cov->size 16225, flag collect 0
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 69, 76, 0
----- executor 1 signal number : 281
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 18197, flag collect 0
time breakdown 2: 75, 77, 0
before receive testcase: 0 0
----- executor 1 signal number : 462
----- executor 1 executes write_coverage_signal cov->size 23954, flag collect 0
----- executor 1 signal number : 265
----- executor 1 executes write_coverage_signal cov->size 20147, flag collect 0
----- executor 1 signal number : 748
----- executor 1 executes write_coverage_signal cov->size 24186, flag collect 0
before receive testcase: 0 0
----- executor 1 signal number : 1464
executor 1 server cover_cnt 10 output_pos_value 6743
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 151
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 6 replies
2023/03/28 11:07:49 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:49 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:49 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 144 signal and 0 cover from executor 3
2023/03/28 11:07:49 [SERVER] executor 1 has 10 replies
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
time breakdown 1: 74, 84, 0
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1881 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1151 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 281 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 462 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 265 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 748 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1464 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 NetFailure, Node crash: false false
2023/03/28 11:07:49 mutate testcase with failures
2023/03/28 11:07:49 ----- insertCall()
2023/03/28 11:07:49 ----- generateCall 237 fsetxattr$smack_xattr_label fsetxattr$smack_xattr_label
2023/03/28 11:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:49 prog length: 6
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
fsetxattr$smack_xattr_label(0xffffffffffffffff, &(0x7f0000000140)='security.SMACK64IPIN\x00', &(0x7f0000000180)={'+-#[#'}, 0x6, 0x1)
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1128
remove dir: /root/glusterfs-client/dfs-0-1082
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 51
executor 3 create dir /root/glusterfs-client/dfs-0-1083 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1083
receive_execute: 8, 86
receive_execute: 4, 87
receive_execute: 0, 85
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 13, 89
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3154, write pid:3155
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6205, pid 3154, write pid:3155
----- executor 3 executes write_coverage_signal cov->size 6205, flag collect 0
----- executor 3 signal number : 1448
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3154, write pid:3155
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3154, write pid:3155
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3154, write pid:3155
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3154, write pid:3155
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 22
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3, execute_one inner time: 43, 29, 0
execute_one time: 1, 73
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 102, 77, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 2712, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 12509, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 5377, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 17257, flag collect 0
----- executor 0 signal number : 444
----- executor 1 signal number : 617
----- executor 1 executes write_coverage_signal cov->size 2034, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2045, flag collect 0
----- executor 1 signal number : 214
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 247
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 791
----- executor 1 signal number : 4
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 19120, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4665, flag collect 0
----- executor 0 signal number : 558
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
executor 1 server cover_cnt 7 output_pos_value 2669
----- executor 2 signal number : 1764
----- executor 2 executes write_coverage_signal cov->size 20247, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 945
----- executor 2 executes write_coverage_signal cov->size 31452, flag collect 0
----- executor 0 signal number : 492
executor 0 server cover_cnt 6 output_pos_value 2307
----- executor 2 signal number : 265
----- executor 2 executes write_coverage_signal cov->size 20401, flag collect 0
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 85, 83, 0
before receive testcase: 0 0
----- executor 2 signal number : 877
----- executor 2 executes write_coverage_signal cov->size 15804, flag collect 0
----- executor 2 signal number : 963
----- executor 2 executes write_coverage_signal cov->size 15965, flag collect 0
----- executor 2 signal number : 78
----- executor 2 executes write_coverage_signal cov->size 8123, flag collect 0
----- executor 2 signal number : 35
----- executor 2 executes write_coverage_signal cov->size 13073, flag collect 0
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 111
----- executor 2 executes write_coverage_signal cov->size 11201, flag collect 0
----- executor 2 signal number : 224
executor 2 server cover_cnt 11 output_pos_value 5755
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 175
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 6 replies
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:49 [SERVER] executor 1 has 7 replies
2023/03/28 11:07:49 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:49 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 1764 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 945 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 265 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 877 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 963 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 78 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 35 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 111 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 791 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 224 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 617 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 214 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 247 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
time breakdown 0: 91, 85, 0
before receive testcase: 0 1
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 NetFailure, Node crash: false false
2023/03/28 11:07:49 mutate testcase with failures
2023/03/28 11:07:49 ----- insertCall()
2023/03/28 11:07:49 ----- generateCall 2781 readlinkat readlinkat
2023/03/28 11:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:49 prog length: 6
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
readlinkat(0xffffffffffffffff, &(0x7f0000000140)='./file0\x00', &(0x7f0000000180)=""/103, 0x67)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1008
remove dir: /root/glusterfs-client/dfs-0-1083
time breakdown 2: 94, 89, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-1084 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1084
receive_execute: 7, 64
receive_execute: 5, 65
receive_execute: 1, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 10, 68
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3157, write pid:3158
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1449
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7979, pid 3157, write pid:3158
----- executor 3 executes write_coverage_signal cov->size 7979, flag collect 0
----- executor 3 signal number : 689
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3157, write pid:3158
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 103
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3157, write pid:3158
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3157, write pid:3158
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3157, write pid:3158
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 1
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 37, 21, 0
execute_one time: 1, 58
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
time breakdown 3: 78, 61, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 17302, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1381, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 3848, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1634, flag collect 0
----- executor 0 signal number : 399
----- executor 0 executes write_coverage_signal cov->size 2939, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 215
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 333
----- executor 0 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 11100, flag collect 0
----- executor 1 signal number : 2
----- executor 0 signal number : 1246
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 3
----- executor 0 signal number : 201
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 13085, flag collect 0
----- executor 0 signal number : 0
executor 1 server cover_cnt 5 output_pos_value 2300
----- executor 2 signal number : 1371
----- executor 2 executes write_coverage_signal cov->size 29955, flag collect 0
executor 0 server cover_cnt 8 output_pos_value 2664
----- executor 2 signal number : 1103
----- executor 2 executes write_coverage_signal cov->size 18547, flag collect 0
----- executor 2 signal number : 82
----- executor 2 executes write_coverage_signal cov->size 13293, flag collect 0
----- executor 2 signal number : 490
----- executor 2 executes write_coverage_signal cov->size 15999, flag collect 0
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 71, 69, 0
time breakdown 0: 70, 68, 0
before receive testcase: 0 0
before receive testcase: 0 0
----- executor 2 signal number : 62
----- executor 2 executes write_coverage_signal cov->size 13815, flag collect 0
----- executor 2 signal number : 954
----- executor 2 executes write_coverage_signal cov->size 14323, flag collect 0
----- executor 2 signal number : 102
----- executor 2 executes write_coverage_signal cov->size 14477, flag collect 0
----- executor 2 signal number : 245
----- executor 2 executes write_coverage_signal cov->size 13437, flag collect 0
----- executor 2 signal number : 619
executor 2 server cover_cnt 11 output_pos_value 5522
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 139
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 6 replies
2023/03/28 11:07:49 [SERVER] executor 0 has 8 replies
2023/03/28 11:07:49 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:49 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 66, 75, 0
2023/03/28 11:07:49 fuzzer receive 1449 signal and 0 cover from executor 3
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 1371 signal and 0 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 689 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 1103 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 490 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 62 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 954 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 102 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 245 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 399 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 333 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1246 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 201 signal and 0 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 prog length: 15
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="626e724bdc4326c951db17fa904da8b8fed6b55f70a400cac8c35282955cf5f9d167cb3b9d5587a8234f5a958b3cb9d216cb51cc91b56af630983405b8eb5cea9ad3b98d4d80bfb6b1788e710ae15eb4302f841843e9bc3adcdd5b02db307e9fb7302164e1a8733bba0ec4626765b417a61c8053c41f2e6bfe141b9619a3f042039d99459de28d791ada1155891e79353367dc46df69c507d1fedc33e7f5b77d67402ff259996682c62df8cffa88d079207e11163787c7a075ce6c88059777a057987c0576a036c1a91a3f88291d1c02aa5ed76e261fd258c740278111914957d22a3e37cfb6d425ba83c570d7ff24c86b9ffff5c684c6471f3502e17a72caf168c06098ffc40597df80c5f9aa33204a10742fd20d4d91e3e8e7953c57419a3cb81162eaf0f89ab25c9c6216e11a4fff18b3d393f5727581dbdfab03acfe4e937b9312129062659ce69cfc27d5df519a14a5bb3c625a2223b07900d397611f680317d48aacb1005c29651336a500903bd464e020cc0c1dc0da4bcf2af96179e0f581a06ba211b1545e27c6341294ddd9fa8fee4aa9cb77559d38e5e038e332ed3b7ed85125491f69460a25bf7ee9773c65a4d3d722101f00edcc829b5429e9c5e30c7622783bcf89e285149cb77f0413918330bcf90aa90105f0d83a5542c0eb2dc15f67eb869c28bc5c054b3d40423efe3e1e52730fd225f6debbf68657217f9df40909f6c5d17ce270c5e755010c265041b09c371fb27fa9d500575ed0e315ec451dffb90e53e4e8cfc779b5459da212fcc3772d150fa1cf0f969f323f99ee790a23eb21f6e62c2a8df00fba4ce27643797a0ca3cee11dd1fc2f66b993aeb40887f19780892473fec7739020401a1d3eb877452eac7bc8207ce7a9939af962a3a0a07d7653b4400f35e15b66b23490ac464d31200d08e1ec932d7f206f7e77acb31d3cca698128ce2ca9f0c29797631cbf961b3be284fc46a20c00f0fd892e6c8608b57f954cda0fb22fea0008418fe1635f3a42a7a7ce9efd1b2d3fa8c107b12ac8ce9f8784c4db16466258cf78f4520a083ed1b08d6d269890ec41f5beaa7f2d3078ecda929952efadb67e56d041fdaf0b4190bd65474b4ff8cb7ecca263bfcc46273d6ee05b99e95e2a757ad28d74c4b4431f8b661b251051d90afe9c6fcd5033932e023aca2594806e9f5707058e7900ea6fe83d05622c6e6b82853d4a37a41179d1a866c09d96f6d999daddbf283859ffe4116c0c5b9304cbd2bb7cd22ea0a3683ec85fd7658292c9c3e29a1115763395efecd48f20bb388d59b446b024bf59de9386a9ef7de9ba035e7209921d67f08096ec8c32a1cfff4151e1ff9a7bf14a43cc3b3fad615ad8b10080385d934ca7d4c19c562726dfdc284b7ae9361081ce024cf3fb06f565322dc21d81bb979f74729916dd21fcc0f67e458bbcb3722a5c2e88f019d4784b580fd6b832234e530452890cdb8066d58a02df681bb34d73d2837d604748cc5febb04a82e033e6ef884032e66fe64c7224b36d3566004ed32c9fcabcb423782a5b8f194c3d9aadeca3a7a2012731a8e18b06c5c0d6a5f99882f6af416520752814c46d8eab8d8be740499883280f969dee54aa7df0ca054638120e38f655dc230cba106f5e8ecff218d17d4e6a2ee7fc22c5085dd1141b3961558cd519ff1c11cbf3d93c2b89299ecbfcac75a37aebad5074960d26111a0fff7009bb608bfa156020816cfe3e53f23678ef48035f2a49036c4cf9e2dbfd33ca1d2875dd665c073a43db800a957d5eb3ef1055d5e89923e4529d40952e6fb5db3fdc1b3fab4da6b0b816dcefd873094697110cec6076844c480d5fe79eaa570883e8d6e6ea3295bf8b0b21f8fc17adae152a242ee645e88d2b580b8a915eafbe28c7b6ab4afc93d47c83e52ab90a5712fd505829dabc08179c85d7f7bdc8de658f81359a7a2056970a5d9602d45504d913b41589b16f6ef4929010f26a59d20e7db779dfc1f8f4c863cf7d0a658fb98a579e75541b652efc17b9addf2cdf038547d3b8188fc3676ac21d10625f8e1b24d13ecada7b2c8b7c4d781787622e3b179ca512364011e286ea4e74cc4f4a730fe48276c8bc1fffe032dcfe3e2ddff75b75414f2068e2bc13c74fe60bf75231c9b909fc04fd22959494f821302e54d63c4675b94453d1542643c5a6d3b3965f35722c694ee17b4de7029a15776acabd4d12d250ba4ebb4f354dc845bc7aeb522cc9203efd0cc90fbd0b05f458087ee6affb09252b244b78164f48dac72231d321573ea4d8a70bf31119083f999de466859bed6a2ca1261418ed54b7fb4610cd31ee9b5db50050ab59777278494f4828885674fc5e55115a1f3e157143d95ae2124164265f2b331ca83599357d5938bb5954135298cc46c0be1563f7488c1982aa2848fbe9c1714e6e3082f4b65bf71012d313a4ea4fa4404feadc23a4124a6f84b020ce22cdde003630673f3fd19682861d1d78cba5df2cb9f1a23b8d0d20f8c8d8c3ac7d076405821b2420fa2631b487558e23fb210eed886ed023ab59cd20d3e9bc1934300022c8bd50ebb8edc295d03f2e8cf449f6db6e696e9954cb5d01363d5bd6b0e498bfbb8246aa21baadb670543efda45a130452988b1089d56731d5bf50de0ec5472fcab390dd0837d70d12fe737d50264dbcac28f6f8180ca62afe96a8dacba226725c254c3c56a69d185019c58247e7960f3764986a7560fdf73db27ba3e2a33d9e86784a9f02a188180adaf70f715bbe08992b1bc4ee87b04bb9a9ad3d2d55d55d5c43ed5ab4106b7e122c5de3760a180858cbc784c90b60d124c7e99c5559be98d2e0facf8dfee559ec3b29ff901bc1a76406ad72a4cf8a20da2492719430d3db43739f81686c10a53f9c90dc3c416ecfc79f2c867f88425585c620699e27ad8b3b00855786d995e5bc79fcf3594612860c17321d3b0261d17a52b6f6481348d70d4b68adc633c2b976788c7b3f93a1ab860a6851a274eb776f7a5043fac6efa8984bbabc3fddaca3784b799532df196e738f5964909f970d7f3e67c15ecb7335bf463e6e62e2c9f43dd0e7622986f15cbf256b09b641f8c9e17058c38e11f7531b3d58f073f446adf246d8a6c72e1b54eece5212c13374aa70487fcfb77c4ed021a26ab461d2ee36e7a714d9df5369ed4bb1fae8a1c4dd9c6dad8912e4c6b67180cb4410d41134e82799c447f166b4ddd7e7513ea9e7e0f89a5161892ac43869ddfe3b2bcbdd8ae475ed772b3ddbf191f0a76ae70d81efbacd87977a9ead8fdc004993e2e177995529996a0ab94367fc761824296ad1481995dc481fc0384649b7735671eed184e7ee97cb819b273f02c9af87f5bae62b8a913a240a82a49823c7ab2a6378d32873ccfe9d4c6509b47816686e65160cfd808d3565aec53201e22bc47b12525334674daecb5b0b55a7e29f2edf9239c0e3003198a79746c145adde06d08dc364f7691d206efd1da2154aeca64de1c6da251c6d4325e66b0f5ee6077fac5b49994187a8e3c5d0f50539faf8189a83c008fdeccc8f81df7c05c6c61397ed508f3edc2eb6322fd1fa7ad6edd51835b971d109719aa23ca7eb2f053a55228754e03200ebd29161d3e5e9ccd295f8c22ab37c28448e222ba58012394ed4de021ef8780001e62b6b0e84b6b6e8a7c7ce5dee4148be1d1235c06477dc3add71e8b1274f2a3555bfdcd83a81dfab5065e5fa4079f25e0c810860b26f0383756831ef62ca8c6b272217604bf17360c3f331aaecbb29ae39ed673c741295f0789cc0f53eabf1bafa8928bef5d8b90ef95de1b614b424aeb903a4146f542cb42e07dba5c6fb795a78bd14e62ae76cccb746587202afdb67e36e6368c40d4bad95a6628cbf737e9e68e7d857c6857dd17661e43cfae0a7c0c510a5249b693af8413686fd658afc3abdb3f1ab656e6186eb7ea0a4928808be9f0ef6bee3f1cef12a2d09a9aeb87ffbb8734904d50784f409a734498855dd70335160194f33baed74ffad23fca1b20feba2fc0bf8e9008400cfc6a3e2d6156eaf703e4fd43b2836b3ecd8a26e22297057e15a27271954b4222eaf91990847c587b749079c72ebbca98b90b1d7cb5d684c83ac463ba300f32adf503e7151845af2bf9db50edbcd74a957d6132185115247a4f72180dc0f0b089dc62ac687c5879742a8e8f73b2270814fcfcf88999b13468584403caf56f664b5fd958cf2860b949cc8978ac30b3377e2aad1462b23a86681bbc97278866116040c7999bdf40cd3cd959e8ac867a895f173378f2f47f46e916bb179434bda2720c9bfbe498b2dd3644b386dab1b3f8cbb0c64088af126de0d0b1461f83cba98780fcf84d3d5ec3fde5ab51333ee8b73b5037ee3c9dc8654f922561e882eb3060e826e2bfa8e7e9e6d827811bfb0131cee1f56e1be04cba1df4138c9aa28fe4fe9a54a747794c413938845562c54a9d6a98390c399f31a56e98a2ef0684480b56bb5442d0010eb8a78282c5975f2d5d12cfd48b772536b855ecd226cc4c3753b78b4c5556a442e647c645c985c17ec7cf14eed7af1bc1a47741be36ad6e772d6674a10487af8a8954ee537af3f32cc5e95a45f5f195dad2eabfd1388fd23ce27a88d968d6fd95c95cebd30dc0769fffed6f94a248b78ef96fb8c8a7743d6610677a887ebb4de01f713a5db05a6f879e102c68fba38a303ebe74b751fda77d386e52e0e14e3f1d5954276cf21aca6d161fb05cf4203723dd41736203a900564ed58f1fd5e8a89a296fa1ebebf59816fe98c0ce8f927344c329018e8e772459c92bd92b1deea7ca4d9979d252a979b532b58925402f3734d375c975e4ddb205d510bf20be5a00a276cb702da62aa56b980628fb2e6e010fb8e8783211659f9f2a498d0df1ecde002dcc3ada15d95fb7661141b23e87fda9b10bea38b75ec11391b2c82e8f6c1b644d2907bb756559390fe671821dca6e2442b419521dbb0335dabafd416b1e473506dcc610bee5672cd25febcaf1c9ec221018def3d0deb12729cc401c0d2e91310313fe483c69ab358b0d546312187c824867c54e18a5b9c5c2fde985381414338a0b37fd5382b0deeb631b67539378c5756510be848a70ebdd66d749f8c370f450b69b5c0e9a2399b56608f812ca67ef83401ab97010a33a890b34bca31845508b17dc8859303b2d2589e219a3bd0105bb2e5abff1e675234cb3b271728d7e0b22b9111ab913b6694125489d5d4c2265e218e0d2163905d5cc803d0bbac745faf68110094e1c76c15e0c4efb29e239882e11efc774c85934a5f075e8f9b7c44ed2f9804fab8c996e8e29ebc4681eadc0d2d5cbe6b209ad648fcb4ab4621ec926dbd546eee96cd86048aa9f78c880450f8ae3aeeced0b1ccad45dac3111960cc269e65e9879a24d88f63eab27bb18e045a844d224e5aae0c8abffae58fab192f5d736cb30421bc28fbf2d43ef86cdeee72e49ec607d35cfa359743c743e5139321251481e7f0b2a60c94cfb8982a0426a64197f42c03bf034012ffe87b360ba8760cd9dcb03df98415ab56430602d58740f0fcf3e85f0bd639b786ac357e2da6a59d28b5cdabc538b42fd10a6a1a9a15b4ca61b24c3b979f53ec0452e7605e65bd583f4ccc7ae40047e8d4ebc9e3e1c1913f81f9e7072663fed37275ce9c1bc872197f43260ee8d9bfa2f25b60830eca7c4ac7f751d5d926e7f3d5aaa1e68b1148c52f362016765456ab8c67912632e721f5417684478fbf2b9d5a89165969072dbc5bdc4b63cb282dc260fdab91f4", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
r2 = dup(0xffffffffffffffff)
open$dir(&(0x7f0000000a00)='./file2\x00', 0x240000, 0x0)
fremovexattr(r2, &(0x7f0000000280)=@known='trusted.overlay.upper\x00')
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9128
remove dir: /root/glusterfs-client/dfs-0-1084
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 36
-----finish removing dir
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-1085 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1085
receive_execute: 9, 60
receive_execute: 8, 61
receive_execute: 2, 60
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 13, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 1
----- executor 3 cover number : 1164, signal number : 1445
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 1
----- executor 3 cover number : 1504, signal number : 688
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 1
----- executor 3 cover number : 1141, signal number : 104
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 1
----- executor 3 cover number : 138, signal number : 35
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 3
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6204, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 6204, flag collect 1
----- executor 3 cover number : 1145, signal number : 178
----- completed 12
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5265, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 5265, flag collect 1
----- executor 3 cover number : 1210, signal number : 6
----- completed 14
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3160, write pid:3161
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 58, 0
execute_one time: 4, 60
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 76, 65, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 15828, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 1
----- executor 2 cover number : 669, signal number : 697
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 cover number : 992, signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 cover number : 554, signal number : 505
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 2 cover number : 554, signal number : 540
----- executor 1 cover number : 733, signal number : 215
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 1
executor 1 server cover_cnt 4 output_pos_value 4975
----- executor 2 cover number : 992, signal number : 648
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 2 cover number : 733, signal number : 201
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 5 output_pos_value 5895
time breakdown 1: 69, 72, 0
before receive testcase: 0 0
----- executor 0 cover number : 410, signal number : 458
----- executor 0 executes write_coverage_signal cov->size 1404, flag collect 1
----- executor 0 cover number : 403, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 14553, flag collect 1
----- executor 0 cover number : 1178, signal number : 1385
----- executor 0 executes write_coverage_signal cov->size 1456, flag collect 1
----- executor 0 cover number : 440, signal number : 393
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 63, 75, 0
before receive testcase: 0 0
----- executor 0 cover number : 1011, signal number : 785
----- executor 0 executes write_coverage_signal cov->size 9641, flag collect 1
----- executor 0 cover number : 1053, signal number : 27
----- executor 0 executes write_coverage_signal cov->size 12529, flag collect 1
----- executor 0 cover number : 1121, signal number : 390
----- executor 0 executes write_coverage_signal cov->size 10601, flag collect 1
----- executor 0 cover number : 1803, signal number : 849
----- executor 0 executes write_coverage_signal cov->size 11049, flag collect 1
----- executor 0 cover number : 1750, signal number : 773
----- executor 0 executes write_coverage_signal cov->size 7608, flag collect 1
----- executor 0 cover number : 1531, signal number : 531
executor 0 server cover_cnt 10 output_pos_value 16323
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 156
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 15 replies
2023/03/28 11:07:49 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1118 signal and 992 cover from userspace component
2023/03/28 11:07:49 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 505 signal and 554 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 697 signal and 669 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:49 [SERVER] executor 0 has 10 replies
time breakdown 0: 69, 95, 0
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 540 signal and 554 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 458 signal and 410 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1 signal and 403 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 648 signal and 992 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 201 signal and 733 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1385 signal and 1178 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 393 signal and 440 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 785 signal and 1011 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 27 signal and 1053 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 390 signal and 1121 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 849 signal and 1803 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 773 signal and 1750 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 531 signal and 1531 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:49 fuzzer receive 1445 signal and 1164 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 688 signal and 1504 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 104 signal and 1141 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 35 signal and 138 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 3 signal and 997 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 178 signal and 1145 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 6 signal and 1210 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 prog length: 15
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
r2 = dup(0xffffffffffffffff)
open$dir(&(0x7f0000000a00)='./file2\x00', 0x240000, 0x0)
fremovexattr(r2, &(0x7f0000000280)=@known='trusted.overlay.upper\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9128
remove dir: /root/glusterfs-client/dfs-0-1085
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1086 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1086
receive_execute: 22, 70
receive_execute: 25, 70
receive_execute: 2, 69
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
receive_execute: 30, 73
execute_one time: 3, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6179, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 6179, flag collect 1
----- executor 3 cover number : 1165, signal number : 1443
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 1
----- executor 3 cover number : 1505, signal number : 692
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7246, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 7246, flag collect 1
----- executor 3 cover number : 1142, signal number : 104
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4051, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 4051, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 1
----- executor 3 cover number : 138, signal number : 35
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4051, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 4051, flag collect 1
----- executor 3 cover number : 998, signal number : 3
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 6210, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 6210, flag collect 1
----- executor 3 cover number : 1146, signal number : 178
----- completed 12
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 1
----- executor 3 cover number : 1211, signal number : 6
----- completed 14
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3162, write pid:3163
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 51, 0
execute_one time: 1, 51
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
time breakdown 3: 103, 53, 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 14427, flag collect 1
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 2 cover number : 554, signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 2 cover number : 733, signal number : 728
----- executor 0 cover number : 250, signal number : 243
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 992, signal number : 791
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 2 cover number : 992, signal number : 492
----- executor 1 cover number : 409, signal number : 455
----- executor 1 executes write_coverage_signal cov->size 2809, flag collect 1
----- executor 1 cover number : 402, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 16837, flag collect 1
----- executor 0 cover number : 733, signal number : 204
executor 2 server cover_cnt 4 output_pos_value 4976
executor 0 server cover_cnt 5 output_pos_value 5247
----- executor 1 cover number : 1881, signal number : 2306
----- executor 1 executes write_coverage_signal cov->size 2926, flag collect 1
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
time breakdown 2: 92, 62, 0
before receive testcase: 0 0
----- executor 1 cover number : 442, signal number : 388
----- executor 1 executes write_coverage_signal cov->size 32235, flag collect 1
time breakdown 0: 71, 63, 0
before receive testcase: 0 0
----- executor 1 cover number : 1011, signal number : 811
----- executor 1 executes write_coverage_signal cov->size 13072, flag collect 1
----- executor 1 cover number : 2068, signal number : 1225
----- executor 1 executes write_coverage_signal cov->size 11628, flag collect 1
----- executor 1 cover number : 1362, signal number : 283
----- executor 1 executes write_coverage_signal cov->size 12879, flag collect 1
----- executor 1 cover number : 1356, signal number : 136
----- executor 1 executes write_coverage_signal cov->size 11600, flag collect 1
----- executor 1 cover number : 1210, signal number : 187
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
executor 1 server cover_cnt 9 output_pos_value 15962
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 149
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 15 replies
2023/03/28 11:07:49 fuzzer receive 1443 signal and 1165 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 692 signal and 1505 cover from executor 3
time breakdown 1: 95, 78, 0
2023/03/28 11:07:49 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:49 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 243 signal and 250 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 728 signal and 733 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 791 signal and 992 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 204 signal and 733 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 104 signal and 1142 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 35 signal and 138 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 3 signal and 998 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 178 signal and 1146 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 6 signal and 1211 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 455 signal and 409 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 2 signal and 402 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 2306 signal and 1881 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 388 signal and 442 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 811 signal and 1011 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 1225 signal and 2068 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 283 signal and 1362 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 136 signal and 1356 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 187 signal and 1210 cover from userspace component
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 prog length: 15
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
r2 = dup(0xffffffffffffffff)
open$dir(&(0x7f0000000a00)='./file2\x00', 0x240000, 0x0)
fremovexattr(r2, &(0x7f0000000280)=@known='trusted.overlay.upper\x00')
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 9128
remove dir: /root/glusterfs-client/dfs-0-1086
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 43
receive_execute: 17, 71
receive_execute: 17, 72
executor 3 create dir /root/glusterfs-client/dfs-0-1087 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1087
receive_execute: 1, 72
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 24, 75
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 7, 1
----- executor 3 write_call_output, size 6211, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 1
----- executor 3 cover number : 1165, signal number : 1448
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 1
----- executor 3 cover number : 1505, signal number : 688
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 1
----- executor 3 cover number : 1142, signal number : 104
----- completed 5
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 1
----- executor 3 cover number : 138, signal number : 35
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 3
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 11
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 6213, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 6213, flag collect 1
----- executor 3 cover number : 1146, signal number : 178
----- completed 12
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5273, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 5273, flag collect 1
----- executor 3 cover number : 1211, signal number : 6
----- completed 14
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3164, write pid:3165
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 15
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 73, 0
execute_one time: 1, 73
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2812, flag collect 1
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 2 cover number : 403, signal number : 449
----- executor 2 executes write_coverage_signal cov->size 14423, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 1191, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 1 cover number : 559, signal number : 201
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 1 cover number : 554, signal number : 618
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 1 cover number : 992, signal number : 831
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 1
time breakdown 3: 99, 76, 0
before receive testcase: 0 0
----- executor 0 cover number : 992, signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 1 cover number : 733, signal number : 215
----- executor 1 executes write_coverage_signal cov->size 1055, flag collect 1
----- executor 2 cover number : 410, signal number : 10
----- executor 2 executes write_coverage_signal cov->size 7962, flag collect 1
----- executor 0 cover number : 733, signal number : 215
----- executor 1 cover number : 415, signal number : 28
executor 0 server cover_cnt 4 output_pos_value 4975
executor 1 server cover_cnt 6 output_pos_value 6010
----- executor 2 cover number : 986, signal number : 1134
----- executor 2 executes write_coverage_signal cov->size 2914, flag collect 1
----- executor 2 cover number : 444, signal number : 409
----- executor 2 executes write_coverage_signal cov->size 32241, flag collect 1
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 74, 84, 0
----- executor 2 cover number : 1009, signal number : 778
----- executor 2 executes write_coverage_signal cov->size 12779, flag collect 1
----- executor 2 cover number : 1357, signal number : 603
----- executor 2 executes write_coverage_signal cov->size 7999, flag collect 1
----- executor 2 cover number : 1170, signal number : 74
----- executor 2 executes write_coverage_signal cov->size 8598, flag collect 1
time breakdown 0: 89, 95, 0
before receive testcase: 0 1
before receive testcase: 0 0
----- executor 2 cover number : 1630, signal number : 769
----- executor 2 executes write_coverage_signal cov->size 8813, flag collect 1
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1777, signal number : 1020
----- executor 2 executes write_coverage_signal cov->size 8864, flag collect 1
----- executor 2 cover number : 1440, signal number : 400
----- executor 2 executes write_coverage_signal cov->size 10999, flag collect 1
----- executor 2 cover number : 997, signal number : 58
executor 2 server cover_cnt 11 output_pos_value 17361
2023/03/28 11:07:49 for select break: 1
2023/03/28 11:07:49 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:49 wg wait finish
2023/03/28 11:07:49 ------ all executors finish execution
2023/03/28 11:07:49 exec time: 173
2023/03/28 11:07:49 ----- PS len: 4
2023/03/28 11:07:49 [CLIENT] executor 3 has 15 replies
2023/03/28 11:07:49 fuzzer receive 1448 signal and 1165 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 688 signal and 1505 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 104 signal and 1142 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:49 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 449 signal and 403 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 10 signal and 410 cover from userspace component
2023/03/28 11:07:49 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
time breakdown 2: 88, 102, 0
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 201 signal and 559 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 35 signal and 138 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 3 signal and 998 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 178 signal and 1146 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 1004 signal and 992 cover from userspace component
2023/03/28 11:07:49 fuzzer receive 6 signal and 1211 cover from executor 3
2023/03/28 11:07:49 fuzzer receive 0 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 11:07:49 ------- fuzzer executor 0 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 1134 signal and 986 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 409 signal and 444 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 778 signal and 1009 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 603 signal and 1357 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 74 signal and 1170 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 769 signal and 1630 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 1020 signal and 1777 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 400 signal and 1440 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 2 receive 58 signal and 997 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 618 signal and 554 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 831 signal and 992 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:49 ------- fuzzer executor 1 receive 28 signal and 415 cover from userspace component
2023/03/28 11:07:49 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:49 -----2 triaging input for call #11 link (new signal=171)
2023/03/28 11:07:49 minimize prog 3
2023/03/28 11:07:49 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:49 prog length: 14
2023/03/28 11:07:49 HasCrashFail:false HasNetFail:false
11:07:49 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
dup(0xffffffffffffffff)
open$dir(&(0x7f0000000a00)='./file2\x00', 0x240000, 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8976
remove dir: /root/glusterfs-client/dfs-0-1087
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 33
-----finish removing dir
receive_execute: 10, 58
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-1088 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1088
receive_execute: 4, 57
receive_execute: 20, 57
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 2, 0, 0
execute_one time: 2, 2
receive_execute: 25, 62
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 3 signal number : 35
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6192, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 6192, flag collect 0
----- executor 3 signal number : 178
----- completed 12
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7274, pid 3166, write pid:3167
----- executor 3 executes write_coverage_signal cov->size 7274, flag collect 0
----- executor 3 signal number : 7
----- completed 14
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 56, 0
execute_one time: 1, 56
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 87, 59, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 17206, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 signal number : 789
----- executor 0 executes write_coverage_signal cov->size 3848, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 558
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 0 signal number : 492
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 7993, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 3848, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 215
----- executor 2 signal number : 1141
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
executor 0 server cover_cnt 5 output_pos_value 2300
----- executor 1 signal number : 2
executor 1 server cover_cnt 5 output_pos_value 2300
----- executor 2 signal number : 1199
----- executor 2 executes write_coverage_signal cov->size 738, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 14550, flag collect 0
----- executor 2 signal number : 260
----- executor 2 executes write_coverage_signal cov->size 11446, flag collect 0
----- executor 2 signal number : 1151
----- executor 2 executes write_coverage_signal cov->size 8876, flag collect 0
----- executor 2 signal number : 484
----- executor 2 executes write_coverage_signal cov->size 7962, flag collect 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 43
----- executor 2 executes write_coverage_signal cov->size 9285, flag collect 0
time breakdown 0: 68, 67, 0
before receive testcase: 0 0
----- executor 2 signal number : 761
----- executor 2 executes write_coverage_signal cov->size 9521, flag collect 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 152
time breakdown 1: 77, 68, 0
before receive testcase: 0 0
executor 2 server cover_cnt 11 output_pos_value 5683
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:50 wg wait finish
2023/03/28 11:07:50 ------ all executors finish execution
2023/03/28 11:07:50 exec time: 129
2023/03/28 11:07:50 ----- PS len: 4
2023/03/28 11:07:50 [CLIENT] executor 3 has 14 replies
2023/03/28 11:07:50 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:50 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1141 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1199 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 260 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1151 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 484 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 761 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 152 signal and 0 cover from userspace component
time breakdown 2: 61, 72, 0
2023/03/28 11:07:50 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:50 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/28 11:07:50 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:50 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:50 prog length: 13
2023/03/28 11:07:50 HasCrashFail:false HasNetFail:false
11:07:50 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
dup(0xffffffffffffffff)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8840
remove dir: /root/glusterfs-client/dfs-0-1088
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 48
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-1089 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1089
receive_execute: 7, 79
receive_execute: 0, 79
receive_execute: 7, 80
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 12, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 104
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 3 signal number : 35
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6204, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 6204, flag collect 0
----- executor 3 signal number : 178
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3168, write pid:3169
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 48, 1
execute_one time: 1, 49
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 15854, flag collect 0
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 492
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 12193, flag collect 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 215
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 2229
----- executor 0 executes write_coverage_signal cov->size 32071, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
time breakdown 3: 95, 51, 0
before receive testcase: 0 0
----- executor 0 signal number : 1114
----- executor 0 executes write_coverage_signal cov->size 738, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 11043, flag collect 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 1134
----- executor 0 executes write_coverage_signal cov->size 9637, flag collect 0
time breakdown 1: 86, 59, 0
----- executor 0 signal number : 88
----- executor 0 executes write_coverage_signal cov->size 9227, flag collect 0
----- executor 0 signal number : 582
----- executor 0 executes write_coverage_signal cov->size 12631, flag collect 0
----- executor 0 signal number : 113
----- executor 0 executes write_coverage_signal cov->size 9631, flag collect 0
----- executor 0 signal number : 109
executor 0 server cover_cnt 10 output_pos_value 5859
time breakdown 2: 79, 60, 0
before receive testcase: 0 1
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:50 wg wait finish
2023/03/28 11:07:50 ------ all executors finish execution
2023/03/28 11:07:50 exec time: 143
2023/03/28 11:07:50 ----- PS len: 4
2023/03/28 11:07:50 [CLIENT] executor 3 has 13 replies
2023/03/28 11:07:50 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 2229 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1114 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1134 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 88 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 582 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 113 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 109 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
time breakdown 0: 87, 64, 0
before receive testcase: 0 0
2023/03/28 11:07:50 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:50 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:50 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:50 prog length: 12
2023/03/28 11:07:50 HasCrashFail:false HasNetFail:false
11:07:50 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8792
remove dir: /root/glusterfs-client/dfs-0-1089
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 52
-----finish removing dir
receive_execute: 6, 84
receive_execute: 1, 85
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1090 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1090
receive_execute: 6, 85
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 1, 2
receive_execute: 11, 87
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 6183, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 6183, flag collect 0
----- executor 3 signal number : 1444
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7973, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 7973, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 108
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 3 signal number : 35
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6212, pid 3170, write pid:3171
----- executor 3 executes write_coverage_signal cov->size 6212, flag collect 0
----- executor 3 signal number : 178
----- completed 12
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 55, 0
execute_one time: 0, 56
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 98, 57, 0
executor 2 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 11799, flag collect 0
----- executor 2 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 9630, flag collect 0
----- executor 2 signal number : 1362
----- executor 2 executes write_coverage_signal cov->size 13515, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 215
executor 0 server cover_cnt 5 output_pos_value 2301
----- executor 2 signal number : 700
----- executor 2 executes write_coverage_signal cov->size 19260, flag collect 0
----- executor 2 signal number : 470
----- executor 2 executes write_coverage_signal cov->size 9521, flag collect 0
----- executor 2 signal number : 405
----- executor 2 executes write_coverage_signal cov->size 8598, flag collect 0
----- executor 2 signal number : 761
----- executor 2 executes write_coverage_signal cov->size 5638, flag collect 0
----- executor 2 signal number : 335
----- executor 2 executes write_coverage_signal cov->size 5615, flag collect 0
----- executor 2 signal number : 936
----- executor 2 executes write_coverage_signal cov->size 15788, flag collect 0
----- executor 2 signal number : 192
----- executor 2 executes write_coverage_signal cov->size 7962, flag collect 0
----- executor 2 signal number : 39
executor 2 server cover_cnt 11 output_pos_value 5690
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 215
executor 1 server cover_cnt 4 output_pos_value 2295
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:50 wg wait finish
2023/03/28 11:07:50 ------ all executors finish execution
2023/03/28 11:07:50 exec time: 152
2023/03/28 11:07:50 ----- PS len: 4
2023/03/28 11:07:50 [CLIENT] executor 3 has 12 replies
2023/03/28 11:07:50 fuzzer receive 1444 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 12 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1362 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 700 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 470 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 405 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 761 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 335 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 936 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 192 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 39 signal and 0 cover from userspace component
time breakdown 1: 91, 66, 0
before receive testcase: 0 0
time breakdown 0: 86, 64, 0
before receive testcase: 0 0
2023/03/28 11:07:50 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:50 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:50 prog length: 11
2023/03/28 11:07:50 HasCrashFail:false HasNetFail:false
11:07:50 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8552
remove dir: /root/glusterfs-client/dfs-0-1090
time breakdown 2: 90, 67, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 51
-----finish removing dir
mkdir time 23
executor 3 create dir /root/glusterfs-client/dfs-0-1091 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1091
receive_execute: 2, 75
receive_execute: 5, 74
receive_execute: 2, 74
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 9, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 37
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7256, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 7256, flag collect 0
----- executor 3 signal number : 104
----- completed 5
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 4034, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 4034, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 185, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 185, flag collect 0
----- executor 3 signal number : 35
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4034, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 4034, flag collect 0
----- executor 3 signal number : 3
----- completed 10
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 6175, pid 3172, write pid:3173
----- executor 3 executes write_coverage_signal cov->size 6175, flag collect 0
----- executor 3 signal number : 178
----- completed 11
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 1, 64, 0
execute_one time: 1, 65
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
time breakdown 3: 95, 68, 0
before receive testcase: 0 0
----- executor 1 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 9692, flag collect 0
----- executor 1 signal number : 558
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 491
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 215
----- executor 0 signal number : 458
----- executor 0 executes write_coverage_signal cov->size 6181, flag collect 0
----- executor 0 signal number : 1
executor 1 server cover_cnt 4 output_pos_value 2295
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 0 executes write_coverage_signal cov->size 7608, flag collect 0
----- executor 0 signal number : 1826
----- executor 0 executes write_coverage_signal cov->size 13342, flag collect 0
----- executor 0 signal number : 896
----- executor 0 executes write_coverage_signal cov->size 17066, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 12891, flag collect 0
----- executor 0 signal number : 539
time breakdown 2: 77, 83, 0
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 9333, flag collect 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 74
----- executor 0 executes write_coverage_signal cov->size 11691, flag collect 0
----- executor 0 signal number : 1197
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
----- executor 0 signal number : 347
----- executor 0 executes write_coverage_signal cov->size 11251, flag collect 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 98
time breakdown 1: 76, 83, 0
before receive testcase: 0 1
executor 0 server cover_cnt 10 output_pos_value 5759
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:50 wg wait finish
2023/03/28 11:07:50 ------ all executors finish execution
2023/03/28 11:07:50 exec time: 163
2023/03/28 11:07:50 ----- PS len: 4
2023/03/28 11:07:50 [CLIENT] executor 3 has 11 replies
2023/03/28 11:07:50 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:50 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 458 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1826 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 896 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
time breakdown 0: 79, 89, 0
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 539 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 1197 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 347 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 98 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:50 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 35 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:50 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:50 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:50 prog length: 10
2023/03/28 11:07:50 HasCrashFail:false HasNetFail:false
11:07:50 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400)={0x0, 0x0, 0x0, 0x0, 0x0, <r0=>0x0})
fstat(0xffffffffffffffff, &(0x7f0000000480)={0x0, 0x0, 0x0, 0x0, 0x0, <r1=>0x0})
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
lsetxattr$system_posix_acl(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000001680)=ANY=[@ANYBLOB="02000000010002000000000002000200", @ANYRES32, @ANYBLOB="02000000", @ANYRES32, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32, @ANYBLOB="02000400", @ANYRES32, @ANYBLOB="040005000000000008000500", @ANYRES32=r0, @ANYBLOB="08000300", @ANYRES32=0xee00, @ANYBLOB="08000100", @ANYBLOB="", @ANYBLOB="08000500", @ANYRESOCT, @ANYBLOB="08000200", @ANYRES32=0xee01, @ANYBLOB="0e637dbee20100", @ANYRES32=r1, @ANYBLOB="10000000000000002000020000000000"], 0x7c, 0x2)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 8416
remove dir: /root/glusterfs-client/dfs-0-1091
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-1092 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1092
receive_execute: 6, 65
receive_execute: 9, 62
receive_execute: 1, 64
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 10, 67
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 7992, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 7992, flag collect 0
----- executor 3 signal number : 690
----- completed 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7266, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 7266, flag collect 0
----- executor 3 signal number : 102
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 193, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 193, flag collect 0
----- executor 3 signal number : 34
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6210, pid 3174, write pid:3175
----- executor 3 executes write_coverage_signal cov->size 6210, flag collect 0
----- executor 3 signal number : 179
----- completed 10
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 46, 0
execute_one time: 1, 46
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 11803, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 456
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9998, flag collect 0
----- executor 0 signal number : 444
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 1 signal number : 1379
----- executor 1 executes write_coverage_signal cov->size 8771, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 789
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 19267, flag collect 0
----- executor 2 signal number : 492
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 558
time breakdown 3: 77, 49, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 470
----- executor 1 executes write_coverage_signal cov->size 9633, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 491
----- executor 1 signal number : 599
----- executor 1 executes write_coverage_signal cov->size 12582, flag collect 0
----- executor 1 signal number : 1688
----- executor 1 executes write_coverage_signal cov->size 15722, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 218
----- executor 1 executes write_coverage_signal cov->size 8390, flag collect 0
----- executor 1 signal number : 250
executor 1 server cover_cnt 9 output_pos_value 5646
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 65, 57, 0
before receive testcase: 0 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:50 wg wait finish
2023/03/28 11:07:50 ------ all executors finish execution
2023/03/28 11:07:50 exec time: 123
2023/03/28 11:07:50 ----- PS len: 4
2023/03/28 11:07:50 [CLIENT] executor 3 has 10 replies
2023/03/28 11:07:50 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:50 fuzzer receive 690 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 102 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 179 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 1379 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 470 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 599 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 1688 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 218 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 250 signal and 0 cover from userspace component
2023/03/28 11:07:50 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:50 HasCrashFail: false, .HasNetFail: false
time breakdown 2: 71, 54, 0
before receive testcase: 0 1
2023/03/28 11:07:50 prog length: 9
2023/03/28 11:07:50 HasCrashFail:false HasNetFail:false
11:07:50 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400))
fstat(0xffffffffffffffff, &(0x7f0000000480))
write$binfmt_aout(0xffffffffffffffff, &(0x7f0000000500)={{0x108, 0x40, 0x6, 0x1cd, 0x2c3, 0x7, 0x183, 0xfffff9b1}, "032442d096908a823d1458e5251bbbc6b717b41559300902fe2f2ff260bb670cda56b4f444a9c447460e28f36fd12b136dfa8d6a6efce56d0a85fdf6a911fe75b9820f21a37097a12adf201e7f219bef7533f6b47c867f8ede5799be03d64dd7ae8d90fb349f1d4e38e9720e08068deabaf8bb9cf40db19fac767a57c57e618d611ca4fac909833864c1f50d5c72898c3c6d393c7cab7e640dea32d6d25099b174d31c5a7b47130685e14f32f5d6574bb4a59fef8d0c273af2ebe94bb8d229d1f615883520f09828d5e22c76e93daa280b9441", ['\x00', '\x00', '\x00', '\x00']}, 0x4f3)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 71, 57, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 3024
remove dir: /root/glusterfs-client/dfs-0-1092
remove dir time 47
-----finish removing dir
receive_execute: 6, 92
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1093 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1093
receive_execute: 3, 92
receive_execute: 2, 92
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 before execute_one
execute_one time: 2, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 2
receive_execute: 8, 96
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7994, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 7994, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6214, pid 3176, write pid:3177
----- executor 3 executes write_coverage_signal cov->size 6214, flag collect 0
----- executor 3 signal number : 178
----- completed 9
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 1, 41
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 14490, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 1 signal number : 215
----- executor 2 signal number : 459
----- executor 0 signal number : 127
----- executor 2 executes write_coverage_signal cov->size 703, flag collect 0
time breakdown 3: 104, 43, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 0
----- executor 0 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 10650, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 117, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 72
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 419
----- executor 2 signal number : 2002
----- executor 2 executes write_coverage_signal cov->size 30861, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 762
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 16
----- executor 2 signal number : 1196
----- executor 2 executes write_coverage_signal cov->size 742, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 8322, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 548
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 249
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 490
----- executor 2 signal number : 351
executor 0 server cover_cnt 9 output_pos_value 2713
----- executor 2 executes write_coverage_signal cov->size 5745, flag collect 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 94, 50, 0
----- executor 2 signal number : 84
----- executor 2 executes write_coverage_signal cov->size 5104, flag collect 0
----- executor 2 signal number : 24
----- executor 2 executes write_coverage_signal cov->size 4200, flag collect 0
----- executor 2 signal number : 27
----- executor 2 executes write_coverage_signal cov->size 9404, flag collect 0
----- executor 2 signal number : 965
----- executor 2 executes write_coverage_signal cov->size 9317, flag collect 0
----- executor 2 signal number : 615
executor 2 server cover_cnt 11 output_pos_value 5759
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 95, 53, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:50 for select break: 1
2023/03/28 11:07:50 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:50 wg wait finish
2023/03/28 11:07:50 ------ all executors finish execution
2023/03/28 11:07:50 exec time: 148
2023/03/28 11:07:50 ----- PS len: 4
2023/03/28 11:07:50 [CLIENT] executor 3 has 9 replies
2023/03/28 11:07:50 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:50 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 459 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:50 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:50 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 2002 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 1196 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 351 signal and 0 cover from userspace component
2023/03/28 11:07:50 [SERVER] executor 0 has 9 replies
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 127 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 84 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 72 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 419 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 24 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 27 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 965 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 762 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 548 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 2 receive 615 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 249 signal and 0 cover from userspace component
2023/03/28 11:07:50 ------- fuzzer executor 0 receive 490 signal and 0 cover from userspace component
2023/03/28 11:07:50 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:50 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:50 prog length: 8
2023/03/28 11:07:50 HasCrashFail:false HasNetFail:false
11:07:50 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400))
fstat(0xffffffffffffffff, &(0x7f0000000480))
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1128
remove dir: /root/glusterfs-client/dfs-0-1093
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 98, 55, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 52
-----finish removing dir
mkdir time 46
executor 3 create dir /root/glusterfs-client/dfs-0-1094 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1094
receive_execute: 4, 97
receive_execute: 2, 98
receive_execute: 3, 99
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 11, 102
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 39
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7258, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 7258, flag collect 0
----- executor 3 signal number : 104
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4042, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6208, pid 3178, write pid:3179
----- executor 3 executes write_coverage_signal cov->size 6208, flag collect 0
----- executor 3 signal number : 178
----- completed 8
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 78, 0
execute_one time: 2, 78
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12390, flag collect 0
time breakdown 3: 113, 90, 1
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2045, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 2 signal number : 730
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 243
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 455
----- executor 1 executes write_coverage_signal cov->size 2808, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 8402, flag collect 0
----- executor 0 signal number : 791
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 492
----- executor 0 signal number : 204
----- executor 1 signal number : 1625
executor 0 server cover_cnt 5 output_pos_value 2317
----- executor 1 executes write_coverage_signal cov->size 2920, flag collect 0
----- executor 1 signal number : 393
----- executor 1 executes write_coverage_signal cov->size 25119, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2298
----- executor 1 signal number : 776
----- executor 1 executes write_coverage_signal cov->size 11620, flag collect 0
----- executor 1 signal number : 162
----- executor 1 executes write_coverage_signal cov->size 8020, flag collect 0
----- executor 1 signal number : 331
----- executor 1 executes write_coverage_signal cov->size 12576, flag collect 0
----- executor 1 signal number : 1680
----- executor 1 executes write_coverage_signal cov->size 15711, flag collect 0
----- executor 1 signal number : 290
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 9 output_pos_value 5741
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 201
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 8 replies
2023/03/28 11:07:51 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:51 [SERVER] executor 2 has 4 replies
time breakdown 2: 100, 98, 0
before receive testcase: 0 0
2023/03/28 11:07:51 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 730 signal and 0 cover from userspace component
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1625 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 393 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 776 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 162 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 331 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1680 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 290 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 243 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 791 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 204 signal and 0 cover from userspace component
time breakdown 0: 102, 98, 0
before receive testcase: 0 0
time breakdown 1: 101, 103, 0
before receive testcase: 0 0
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 7
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
stat(&(0x7f00000003c0)='./file2\x00', &(0x7f0000000400))
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1056
remove dir: /root/glusterfs-client/dfs-0-1094
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 59
executor 3 create dir /root/glusterfs-client/dfs-0-1095 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1095
receive_execute: 2, 101
receive_execute: 6, 102
receive_execute: 7, 101
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 10, 106
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7756, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 7756, flag collect 0
----- executor 3 signal number : 172
----- completed 5
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 6
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6190, pid 3180, write pid:3181
----- executor 3 executes write_coverage_signal cov->size 6190, flag collect 0
----- executor 3 signal number : 179
----- completed 7
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 0, 49, 0
execute_one time: 1, 49
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 11801, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 444
----- executor 1 signal number : 457
----- executor 1 executes write_coverage_signal cov->size 3395, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1191, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 9969, flag collect 0
----- executor 0 signal number : 201
----- executor 0 executes write_coverage_signal cov->size 803, flag collect 0
----- executor 0 signal number : 199
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 587
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 694
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 202
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 1 signal number : 1494
----- executor 1 executes write_coverage_signal cov->size 8771, flag collect 0
----- executor 1 signal number : 689
----- executor 1 executes write_coverage_signal cov->size 19256, flag collect 0
----- executor 1 signal number : 488
----- executor 1 executes write_coverage_signal cov->size 12919, flag collect 0
----- executor 1 signal number : 539
----- executor 1 executes write_coverage_signal cov->size 12492, flag collect 0
----- executor 1 signal number : 117
----- executor 1 executes write_coverage_signal cov->size 7155, flag collect 0
----- executor 1 signal number : 1026
----- executor 1 executes write_coverage_signal cov->size 13764, flag collect 0
----- executor 1 signal number : 826
executor 0 server cover_cnt 6 output_pos_value 2346
time breakdown 3: 116, 51, 0
before receive testcase: 0 1
executor 1 server cover_cnt 9 output_pos_value 5664
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 108, 60, 0
before receive testcase: 0 0
time breakdown 0: 108, 61, 0
time breakdown 1: 104, 61, 0
before receive testcase: 0 1
2023/03/28 11:07:51 for select break: 1
before receive testcase: 0 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 166
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 7 replies
2023/03/28 11:07:51 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:51 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 201 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:51 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 199 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 587 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 694 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 202 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1494 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 689 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 488 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 539 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 117 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1026 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 826 signal and 0 cover from userspace component
2023/03/28 11:07:51 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 179 signal and 0 cover from executor 3
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 6
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
rmdir(&(0x7f0000000000)='./file1\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 944
remove dir: /root/glusterfs-client/dfs-0-1095
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 49
executor 3 create dir /root/glusterfs-client/dfs-0-1096 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1096
receive_execute: 4, 91
receive_execute: 6, 91
receive_execute: 4, 91
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 1
execute_one time: 4, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 6, 1
receive_execute: 10, 106
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6173, pid 3182, write pid:3183
----- executor 3 executes write_coverage_signal cov->size 6173, flag collect 0
----- executor 3 signal number : 1441
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7978, pid 3182, write pid:3183
----- executor 3 executes write_coverage_signal cov->size 7978, flag collect 0
----- executor 3 signal number : 692
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3182, write pid:3183
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3182, write pid:3183
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3182, write pid:3183
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 104
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 6204, pid 3182, write pid:3183
----- executor 3 executes write_coverage_signal cov->size 6204, flag collect 0
----- executor 3 signal number : 178
----- completed 6
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 38, 0
execute_one time: 1, 39
time breakdown 3: 116, 41, 0
before receive testcase: 0 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 10395, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 1354, flag collect 0
----- executor 1 signal number : 11
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 3028, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 730, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 4124, flag collect 0
----- executor 1 signal number : 112
----- executor 1 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 2 signal number : 789
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 9403, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 1246
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 201
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 2374
----- executor 0 executes write_coverage_signal cov->size 7866, flag collect 0
----- executor 2 signal number : 491
executor 1 server cover_cnt 7 output_pos_value 2659
----- executor 0 signal number : 760
----- executor 0 executes write_coverage_signal cov->size 17808, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 312
----- executor 0 executes write_coverage_signal cov->size 7936, flag collect 0
----- executor 0 signal number : 526
----- executor 0 executes write_coverage_signal cov->size 9649, flag collect 0
----- executor 0 signal number : 103
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 538
----- executor 0 executes write_coverage_signal cov->size 12365, flag collect 0
----- executor 0 signal number : 597
----- executor 0 executes write_coverage_signal cov->size 9370, flag collect 0
----- executor 0 signal number : 108
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 10 output_pos_value 5805
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 96, 60, 0
time breakdown 2: 97, 61, 0
before receive testcase: 0 0
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 154
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 6 replies
2023/03/28 11:07:51 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:51 [SERVER] executor 1 has 7 replies
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:51 fuzzer receive 1441 signal and 0 cover from executor 3
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 112 signal and 0 cover from userspace component
2023/03/28 11:07:51 fuzzer receive 692 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 104 signal and 0 cover from executor 3
time breakdown 0: 95, 63, 0
2023/03/28 11:07:51 fuzzer receive 178 signal and 0 cover from executor 3
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1246 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 201 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 2374 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 760 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 312 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 526 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 103 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 538 signal and 0 cover from userspace component
2023/03/28 11:07:51 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 597 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 108 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 5
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000140), &(0x7f00000001c0)='./file0\x00', 0x8, 0x2)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 856
remove dir: /root/glusterfs-client/dfs-0-1096
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 54
-----finish removing dir
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-1097 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1097
receive_execute: 3, 89
receive_execute: 2, 89
receive_execute: 6, 89
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 11, 92
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6200, pid 3184, write pid:3185
----- executor 3 executes write_coverage_signal cov->size 6200, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7988, pid 3184, write pid:3185
----- executor 3 executes write_coverage_signal cov->size 7988, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3184, write pid:3185
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3184, write pid:3185
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9420, pid 3184, write pid:3185
----- executor 3 executes write_coverage_signal cov->size 9420, flag collect 0
----- executor 3 signal number : 280
----- completed 5
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 26, 0
execute_one time: 3, 26
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 491
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
time breakdown 3: 103, 31, 0
before receive testcase: 0 0
----- executor 0 signal number : 619
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2107, flag collect 0
----- executor 1 signal number : 448
----- executor 1 executes write_coverage_signal cov->size 11731, flag collect 0
----- executor 1 signal number : 10
----- executor 1 executes write_coverage_signal cov->size 7659, flag collect 0
----- executor 1 signal number : 1849
----- executor 1 executes write_coverage_signal cov->size 22011, flag collect 0
----- executor 0 signal number : 728
----- executor 1 signal number : 1161
----- executor 1 executes write_coverage_signal cov->size 2182, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 8089, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 356
----- executor 1 executes write_coverage_signal cov->size 10114, flag collect 0
----- executor 0 signal number : 492
----- executor 1 signal number : 284
----- executor 1 executes write_coverage_signal cov->size 14185, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2296
----- executor 1 signal number : 1050
----- executor 1 executes write_coverage_signal cov->size 10715, flag collect 0
----- executor 1 signal number : 502
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 95, 38, 0
before receive testcase: 0 0
executor 1 server cover_cnt 9 output_pos_value 5703
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 92, 41, 0
before receive testcase: 0 0
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 130
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 5 replies
2023/03/28 11:07:51 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 280 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:51 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 448 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1849 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1161 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 356 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 284 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1050 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 502 signal and 0 cover from userspace component
time breakdown 1: 91, 41, 0
2023/03/28 11:07:51 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 4
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
fchmod(0xffffffffffffffff, 0x180)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 608
remove dir: /root/glusterfs-client/dfs-0-1097
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-1098 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1098
receive_execute: 4, 75
receive_execute: 4, 75
receive_execute: 6, 75
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 10, 80
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3186, write pid:3187
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3186, write pid:3187
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 32
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3186, write pid:3187
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9425, pid 3186, write pid:3187
----- executor 3 executes write_coverage_signal cov->size 9425, flag collect 0
----- executor 3 signal number : 280
----- completed 4
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 0, 46, 0
execute_one time: 1, 46
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 90, 48, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1405, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 448
----- executor 2 executes write_coverage_signal cov->size 12435, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 3579, flag collect 0
----- executor 1 signal number : 492
----- executor 2 signal number : 1030
----- executor 2 executes write_coverage_signal cov->size 1465, flag collect 0
----- executor 2 signal number : 403
----- executor 2 executes write_coverage_signal cov->size 26074, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 2 signal number : 914
----- executor 2 executes write_coverage_signal cov->size 9779, flag collect 0
----- executor 2 signal number : 1277
----- executor 2 executes write_coverage_signal cov->size 6144, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 492
executor 0 server cover_cnt 4 output_pos_value 2296
----- executor 2 signal number : 31
----- executor 2 executes write_coverage_signal cov->size 6295, flag collect 0
----- executor 2 signal number : 305
----- executor 2 executes write_coverage_signal cov->size 9299, flag collect 0
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 832
----- executor 2 executes write_coverage_signal cov->size 7988, flag collect 0
time breakdown 1: 79, 55, 0
before receive testcase: 0 0
----- executor 2 signal number : 89
----- executor 2 executes write_coverage_signal cov->size 7322, flag collect 0
time breakdown 0: 79, 56, 0
----- executor 2 signal number : 404
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
executor 2 server cover_cnt 11 output_pos_value 5778
before receive testcase: 0 0
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 135
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 4 replies
2023/03/28 11:07:51 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 280 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 448 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 1030 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 403 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 914 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 1277 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 31 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 305 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 832 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 89 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 404 signal and 0 cover from userspace component
2023/03/28 11:07:51 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
time breakdown 2: 81, 61, 0
before receive testcase: 0 0
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 3
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/glusterfs-client/dfs-0-1098
remove dir time 73
-----finish removing dir
mkdir time 42
executor 3 create dir /root/glusterfs-client/dfs-0-1099 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1099
receive_execute: 3, 114
receive_execute: 1, 115
receive_execute: 6, 115
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
receive_execute: 9, 117
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3188, write pid:3189
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- executor 3 write_call_output, size 7995, pid 3188, write pid:3189
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 9404, pid 3188, write pid:3189
----- executor 3 executes write_coverage_signal cov->size 9404, flag collect 0
----- executor 3 signal number : 280
----- completed 3
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 0, 31, 0
execute_one time: 1, 32
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 126, 35, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1405, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 446
----- executor 1 executes write_coverage_signal cov->size 1431, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 12430, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 215
----- executor 1 signal number : 695
----- executor 2 signal number : 11
----- executor 1 executes write_coverage_signal cov->size 3761, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8598, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 647
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 1952
----- executor 1 signal number : 360
----- executor 2 executes write_coverage_signal cov->size 1465, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 392
----- executor 2 executes write_coverage_signal cov->size 21824, flag collect 0
----- executor 1 signal number : 491
----- executor 2 signal number : 802
time breakdown 0: 118, 39, 0
----- executor 2 executes write_coverage_signal cov->size 5864, flag collect 0
2023/03/28 11:07:51 for select break: 1
----- executor 2 signal number : 658
----- executor 2 executes write_coverage_signal cov->size 4736, flag collect 0
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 40
executor 1 server cover_cnt 5 output_pos_value 2653
----- executor 2 executes write_coverage_signal cov->size 6144, flag collect 0
----- executor 2 signal number : 25
----- executor 2 executes write_coverage_signal cov->size 9317, flag collect 0
----- executor 2 signal number : 842
----- executor 2 executes write_coverage_signal cov->size 5638, flag collect 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 9558, flag collect 0
----- executor 2 signal number : 183
time breakdown 1: 121, 43, 0
before receive testcase: 0 1
executor 2 server cover_cnt 11 output_pos_value 5744
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 161
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:51 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:51 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:51 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 446 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 1952 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:51 fuzzer receive 280 signal and 0 cover from executor 3
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 392 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 802 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 658 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 40 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 25 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 695 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 842 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 183 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 647 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 360 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
time breakdown 2: 116, 45, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 2
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/glusterfs-client/dfs-0-1099
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-1100 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1100
receive_execute: 2, 71
receive_execute: 0, 71
receive_execute: 4, 71
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 2, 0, 0
execute_one time: 1, 2
receive_execute: 10, 74
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3190, write pid:3191
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 3 write_call_output, size 5265, pid 3190, write pid:3191
----- executor 3 executes write_coverage_signal cov->size 5265, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 2, 9
time breakdown 3: 84, 13, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 443
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 444
----- executor 1 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 1197
----- executor 0 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 0 signal number : 697
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 389
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 293
executor 0 server cover_cnt 6 output_pos_value 3046
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 1060, flag collect 0
----- executor 1 signal number : 51
time breakdown 2: 73, 19, 0
before receive testcase: 0 0
executor 1 server cover_cnt 4 output_pos_value 2016
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 71, 24, 0
2023/03/28 11:07:51 for select break: 1
2023/03/28 11:07:51 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:51 wg wait finish
2023/03/28 11:07:51 ------ all executors finish execution
2023/03/28 11:07:51 exec time: 95
2023/03/28 11:07:51 ----- PS len: 4
2023/03/28 11:07:51 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:51 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:51 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:51 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 1197 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 697 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 389 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 0 receive 293 signal and 0 cover from userspace component
2023/03/28 11:07:51 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:51 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:51 ------- fuzzer executor 1 receive 51 signal and 0 cover from userspace component
time breakdown 1: 75, 24, 0
2023/03/28 11:07:51 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:51 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:51 prog length: 2
2023/03/28 11:07:51 HasCrashFail:false HasNetFail:false
11:07:51 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/glusterfs-client/dfs-0-1100
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 41
executor 3 create dir /root/glusterfs-client/dfs-0-1101 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1101
receive_execute: 1, 69
receive_execute: 8, 67
receive_execute: 0, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 8, 74
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3192, write pid:3193
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3192, write pid:3193
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1380, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 2 signal number : 458
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2934, flag collect 0
----- executor 0 signal number : 1004
----- executor 2 signal number : 655
----- executor 1 signal number : 658
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 635
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 1 signal number : 166
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 1 signal number : 8
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 1248
executor 1 server cover_cnt 6 output_pos_value 3048
executor 2 server cover_cnt 4 output_pos_value 2378
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 66, 21, 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 91
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:52 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 658 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 635 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 166 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 655 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1248 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 2
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
time breakdown 3: 82, 13, 0
before receive testcase: 0 1
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 336
remove dir: /root/glusterfs-client/dfs-0-1101
time breakdown 2: 75, 22, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 70, 22, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 51
-----finish removing dir
mkdir time 41
executor 3 create dir /root/glusterfs-client/dfs-0-1102 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1102
receive_execute: 0, 90
receive_execute: 1, 92
receive_execute: 1, 92
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 6, 95
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3194, write pid:3195
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3194, write pid:3195
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 14, 0
execute_one time: 1, 15
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 101, 18, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 1380, flag collect 0
----- executor 1 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 2934, flag collect 0
----- executor 1 signal number : 1201
----- executor 0 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 2 signal number : 655
----- executor 2 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 1 signal number : 697
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 1 signal number : 389
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1252
----- executor 2 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 0
----- executor 1 signal number : 293
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 11
executor 2 server cover_cnt 4 output_pos_value 2378
executor 1 server cover_cnt 6 output_pos_value 3054
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 91, 24, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 119
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:52 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1201 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 697 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 389 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 293 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
time breakdown 1: 93, 26, 0
2023/03/28 11:07:52 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 655 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1252 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 2
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/glusterfs-client/dfs-0-1102
time breakdown 2: 93, 25, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1103 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1103
receive_execute: 2, 66
receive_execute: 0, 66
receive_execute: 3, 66
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 3
receive_execute: 6, 70
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4154, pid 3196, write pid:3197
----- executor 3 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 3 signal number : 1244
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4061, pid 3196, write pid:3197
----- executor 3 executes write_coverage_signal cov->size 4061, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 0, 8, 0
execute_one time: 1, 8
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 76, 10, 0
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 444
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 1 signal number : 685
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 987
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 198
----- executor 0 executes write_coverage_signal cov->size 907, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 8
----- executor 0 signal number : 42
executor 1 server cover_cnt 5 output_pos_value 2338
executor 0 server cover_cnt 4 output_pos_value 2007
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 68, 16, 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 69, 18, 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 85
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:52 fuzzer receive 1244 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 42 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
time breakdown 1: 66, 19, 0
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 685 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 987 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 198 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:52 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 2
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/glusterfs-client/dfs-0-1103
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 30
-----finish removing dir
receive_execute: 0, 57
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-1104 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1104
receive_execute: 2, 59
receive_execute: 1, 59
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 7, 61
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4151, pid 3198, write pid:3199
----- executor 3 executes write_coverage_signal cov->size 4151, flag collect 0
----- executor 3 signal number : 1242
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4058, pid 3198, write pid:3199
----- executor 3 executes write_coverage_signal cov->size 4058, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 8, 0
execute_one time: 2, 8
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 13, 0
executor 1 write_server_output
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2672, flag collect 0
----- executor 1 signal number : 1004
----- executor 2 signal number : 599
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 625
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 648
executor 2 server cover_cnt 4 output_pos_value 2328
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 80
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:52 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:52 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 685 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 809 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 fuzzer receive 1242 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 370 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 599 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 625 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 648 signal and 0 cover from userspace component
time breakdown 1: 61, 21, 0
before receive testcase: 0 0
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 2
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 360
remove dir: /root/glusterfs-client/dfs-0-1104
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 57, 20, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 signal number : 685
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 809
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 370
executor 0 server cover_cnt 5 output_pos_value 2326
time breakdown 0: 60, 21, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 40
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1105 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1105
receive_execute: 1, 77
receive_execute: 2, 76
receive_execute: 1, 76
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 7, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3200, write pid:3201
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4045, pid 3200, write pid:3201
----- executor 3 executes write_coverage_signal cov->size 4045, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 5, 0
execute_one time: 1, 5
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 74
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
time breakdown 3: 90, 8, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 signal number : 425
----- executor 0 signal number : 1118
----- executor 1 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 7001, flag collect 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 391
----- executor 2 signal number : 694
----- executor 2 executes write_coverage_signal cov->size 9847, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 1883
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 26
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 245
executor 2 server cover_cnt 7 output_pos_value 3383
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 78, 19, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 97
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:52 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 2 has 7 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 74 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 425 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 391 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 694 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1883 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 26 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 245 signal and 0 cover from userspace component
time breakdown 2: 78, 20, 0
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(0x0, 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1105
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 77, 20, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1106 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1106
receive_execute: 0, 69
receive_execute: 2, 69
receive_execute: 2, 68
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 6, 71
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3202, write pid:3203
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4154, pid 3202, write pid:3203
----- executor 3 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 3 signal number : 1244
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4061, pid 3202, write pid:3203
----- executor 3 executes write_coverage_signal cov->size 4061, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 1, 5, 0
execute_one time: 1, 6
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 77, 9, 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 391
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 897
----- executor 1 executes write_coverage_signal cov->size 6970, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 1 signal number : 599
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 1 executes write_coverage_signal cov->size 1271, flag collect 0
----- executor 1 signal number : 107
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 368
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 4
executor 1 server cover_cnt 6 output_pos_value 2438
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 69, 15, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 85
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 1244 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:52 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 897 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 599 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 107 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 368 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 391 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
time breakdown 0: 71, 14, 0
before receive testcase: 0 0
time breakdown 1: 70, 17, 0
before receive testcase: 0 0
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(0x0, 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1106
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 39
-----finish removing dir
receive_execute: 3, 67
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1107 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1107
receive_execute: 3, 66
receive_execute: 1, 67
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 7, 73
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3204, write pid:3205
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3204, write pid:3205
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 2
execute_one loop: 0, 1, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3204, write pid:3205
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 12, 0
execute_one time: 1, 12
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 80, 15, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 6970, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 556
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 195
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 6
executor 2 server cover_cnt 5 output_pos_value 2335
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 68, 26, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 70, 27, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 95
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:52 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 556 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
time breakdown 2: 70, 28, 0
2023/03/28 11:07:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
before receive testcase: 0 0
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 195 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(0x0, 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1107
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-1108 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1108
receive_execute: 3, 57
receive_execute: 3, 56
receive_execute: 1, 57
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 2, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 1, 0, 0
receive_execute: 7, 59
execute_one time: 1, 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3206, write pid:3207
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4151, pid 3206, write pid:3207
----- executor 3 executes write_coverage_signal cov->size 4151, flag collect 0
----- executor 3 signal number : 1242
----- completed 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4058, pid 3206, write pid:3207
----- executor 3 executes write_coverage_signal cov->size 4058, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 0, 10
executor 0 write_server_output
time breakdown 3: 66, 13, 0
executor 1 write_server_output
executor 2 write_server_output
before receive testcase: 0 1
----- executor 0 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7676, flag collect 0
----- executor 2 signal number : 443
----- executor 0 signal number : 797
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 505
----- executor 1 signal number : 505
----- executor 0 signal number : 603
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 1004
----- executor 0 signal number : 450
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 372
executor 0 server cover_cnt 6 output_pos_value 2695
executor 1 server cover_cnt 3 output_pos_value 1962
executor 2 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 60, 20, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 58, 21, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 80
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:52 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 fuzzer receive 1242 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 797 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 603 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 450 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 372 signal and 0 cover from userspace component
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 59, 20, 0
before receive testcase: 0 0
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1108
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 34
-----finish removing dir
mkdir time 42
executor 3 create dir /root/glusterfs-client/dfs-0-1109 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1109
receive_execute: 2, 76
receive_execute: 4, 76
receive_execute: 4, 76
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 8, 79
executor 1 before execute_one
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3208, write pid:3209
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3208, write pid:3209
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3208, write pid:3209
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 8, 0
execute_one time: 1, 8
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 1 signal number : 74
time breakdown 3: 87, 11, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 74
----- executor 0 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 424
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 425
----- executor 0 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 503
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1116
----- executor 2 executes write_coverage_signal cov->size 7602, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 1004
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 196
executor 1 server cover_cnt 4 output_pos_value 2018
----- executor 2 executes write_coverage_signal cov->size 2602, flag collect 0
----- executor 2 signal number : 6
executor 2 server cover_cnt 6 output_pos_value 2394
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 80, 18, 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 96
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 74 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 74 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 425 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 1116 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 196 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 6 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
time breakdown 2: 78, 20, 0
before receive testcase: 0 0
2023/03/28 11:07:52 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 424 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 503 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
time breakdown 1: 80, 17, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1109
remove dir time 29
-----finish removing dir
mkdir time 42
executor 3 create dir /root/glusterfs-client/dfs-0-1110 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1110
receive_execute: 1, 73
receive_execute: 0, 72
receive_execute: 3, 73
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 2
executor 1 before execute_one
receive_execute: 8, 75
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3210, write pid:3211
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3210, write pid:3211
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3210, write pid:3211
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 1, 7
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 83, 10, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3037, flag collect 0
----- executor 1 signal number : 443
----- executor 0 signal number : 573
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 signal number : 602
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 1 signal number : 505
----- executor 2 signal number : 685
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 638
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
executor 0 server cover_cnt 4 output_pos_value 2269
----- executor 2 signal number : 987
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 198
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 8
executor 2 server cover_cnt 5 output_pos_value 2338
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 76, 17, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 72, 18, 0
before receive testcase: 0 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 91
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:52 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 573 signal and 0 cover from userspace component
2023/03/28 11:07:52 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 602 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 638 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 685 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 198 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 8 signal and 0 cover from userspace component
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1110
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 74, 18, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 27
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1111 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1111
receive_execute: 1, 59
receive_execute: 1, 60
receive_execute: 2, 60
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 62
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3212, write pid:3213
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4154, pid 3212, write pid:3213
----- executor 3 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 3 signal number : 1244
----- completed 2
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3212, write pid:3213
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 6, 0
execute_one time: 1, 6
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2491, flag collect 0
----- executor 2 signal number : 559
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 2 signal number : 623
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 648
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 1 signal number : 685
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 541
----- executor 1 signal number : 809
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 969
----- executor 1 signal number : 370
executor 2 server cover_cnt 4 output_pos_value 2286
executor 0 server cover_cnt 3 output_pos_value 1963
executor 1 server cover_cnt 5 output_pos_value 2326
time breakdown 3: 68, 10, 0
before receive testcase: 0 0
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:52 for select break: 1
2023/03/28 11:07:52 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:52 wg wait finish
2023/03/28 11:07:52 ------ all executors finish execution
2023/03/28 11:07:52 exec time: 77
2023/03/28 11:07:52 ----- PS len: 4
2023/03/28 11:07:52 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:52 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:52 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
time breakdown 0: 60, 17, 0
2023/03/28 11:07:52 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 685 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 559 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 809 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 623 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 2 receive 648 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 541 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 0 receive 969 signal and 0 cover from userspace component
time breakdown 1: 62, 17, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:52 ------- fuzzer executor 1 receive 370 signal and 0 cover from userspace component
2023/03/28 11:07:52 fuzzer receive 1244 signal and 0 cover from executor 3
2023/03/28 11:07:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:52 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:52 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:52 prog length: 3
2023/03/28 11:07:52 HasCrashFail:false HasNetFail:false
11:07:52 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, 0x0, 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1111
time breakdown 2: 61, 16, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 29
-----finish removing dir
receive_execute: 1, 81
mkdir time 53
executor 3 create dir /root/glusterfs-client/dfs-0-1112 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1112
receive_execute: 1, 81
receive_execute: 2, 81
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 5, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6179, pid 3214, write pid:3215
----- executor 3 executes write_coverage_signal cov->size 6179, flag collect 0
----- executor 3 signal number : 1443
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3214, write pid:3215
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3214, write pid:3215
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 0
----- executor 3 signal number : 298
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 13, 0
execute_one time: 1, 13
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 91, 16, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 675, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2594, flag collect 0
----- executor 0 signal number : 443
----- executor 1 signal number : 865
----- executor 1 executes write_coverage_signal cov->size 9796, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 11
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 2602, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 730, flag collect 0
----- executor 0 signal number : 384
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 0 executes write_coverage_signal cov->size 2211, flag collect 0
----- executor 1 signal number : 679
----- executor 1 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 0 signal number : 270
----- executor 0 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 1 signal number : 291
----- executor 0 signal number : 1248
executor 1 server cover_cnt 6 output_pos_value 3035
executor 0 server cover_cnt 6 output_pos_value 2379
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
time breakdown 0: 82, 27, 0
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 108
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1443 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:53 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 865 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 679 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 291 signal and 0 cover from userspace component
2023/03/28 11:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 384 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 270 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1248 signal and 0 cover from userspace component
time breakdown 2: 83, 25, 0
before receive testcase: 0 0
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, 0x0, 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1112
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 82, 26, 0
before receive testcase: 0 1
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 52
-----finish removing dir
receive_execute: 3, 85
receive_execute: 2, 86
receive_execute: 1, 86
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-1113 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1113
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 89
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 2
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6204, pid 3216, write pid:3217
----- executor 3 executes write_coverage_signal cov->size 6204, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3216, write pid:3217
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5270, pid 3216, write pid:3217
----- executor 3 executes write_coverage_signal cov->size 5270, flag collect 0
----- executor 3 signal number : 298
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 97, 13, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 1 signal number : 443
----- executor 0 signal number : 541
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 787
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 809
----- executor 2 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 969
----- executor 0 executes write_coverage_signal cov->size 14097, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 signal number : 1004
----- executor 2 signal number : 678
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 293
----- executor 0 signal number : 1886
executor 0 server cover_cnt 4 output_pos_value 3852
executor 1 server cover_cnt 3 output_pos_value 1962
time breakdown 0: 87, 22, 0
before receive testcase: 0 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 108
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1448 signal and 0 cover from executor 3
time breakdown 1: 88, 22, 0
before receive testcase: 0 0
2023/03/28 11:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 541 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 969 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1886 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 7 replies
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 787 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 809 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 678 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, 0x0, 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2 server cover_cnt 7 output_pos_value 3038
time breakdown 2: 88, 21, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1113
remove dir time 46
-----finish removing dir
mkdir time 42
executor 3 create dir /root/glusterfs-client/dfs-0-1114 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1114
receive_execute: 3, 87
receive_execute: 3, 88
receive_execute: 3, 88
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 8, 93
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3218, write pid:3219
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3218, write pid:3219
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5265, pid 3218, write pid:3219
----- executor 3 executes write_coverage_signal cov->size 5265, flag collect 0
----- executor 3 signal number : 298
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 0, 11
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 101, 12, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 443
----- executor 2 signal number : 1117
----- executor 2 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 393
----- executor 0 signal number : 1118
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 8566, flag collect 0
----- executor 1 signal number : 1004
----- executor 0 signal number : 770
executor 2 server cover_cnt 3 output_pos_value 1963
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 196
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 246
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 596
executor 0 server cover_cnt 7 output_pos_value 3401
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 90, 22, 0
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 110
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 0 has 7 replies
2023/03/28 11:07:53 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 770 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 196 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 246 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 596 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1117 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 393 signal and 0 cover from userspace component
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1114
time breakdown 2: 91, 22, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 91, 22, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 24
executor 3 create dir /root/glusterfs-client/dfs-0-1115 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1115
receive_execute: 4, 51
receive_execute: 4, 51
receive_execute: 3, 51
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 8, 59
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6205, pid 3220, write pid:3221
----- executor 3 executes write_coverage_signal cov->size 6205, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 1213, pid 3220, write pid:3221
----- executor 3 executes write_coverage_signal cov->size 1213, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3220, write pid:3221
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 12, 0
execute_one time: 0, 13
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 675, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
executor 0 write_server_output
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 443
----- executor 2 signal number : 897
----- executor 2 executes write_coverage_signal cov->size 7841, flag collect 0
time breakdown 3: 67, 16, 0
----- executor 1 executes write_coverage_signal cov->size 2210, flag collect 0
before receive testcase: 0 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4702, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 703
----- executor 2 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 368
----- executor 2 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 signal number : 997
----- executor 1 executes write_coverage_signal cov->size 1524, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 82
----- executor 2 signal number : 598
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
executor 2 server cover_cnt 6 output_pos_value 3031
executor 1 server cover_cnt 4 output_pos_value 2040
----- executor 0 signal number : 1004
executor 0 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 55, 27, 0
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 55, 27, 0
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 84
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 295 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:53 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 897 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 703 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 368 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 598 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
time breakdown 0: 54, 33, 0
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 997 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 82 signal and 0 cover from userspace component
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1115
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-1116 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1116
receive_execute: 6, 67
receive_execute: 7, 66
receive_execute: 0, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 9, 70
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3222, write pid:3223
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 3222, write pid:3223
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 89
----- completed 2
execute_one loop: 0, 1, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3222, write pid:3223
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 14, 0
execute_one time: 1, 14
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 79, 17, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 443
----- executor 1 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 890
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 1004
----- executor 1 signal number : 703
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 1968
----- executor 1 signal number : 678
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 291
executor 1 server cover_cnt 6 output_pos_value 3034
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 65, 24, 0
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 73, 25, 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 92
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:53 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 890 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 703 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 678 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 291 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 3 replies
time breakdown 2: 73, 25, 0
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, 0x0)
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1116
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 51
executor 3 create dir /root/glusterfs-client/dfs-0-1117 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1117
receive_execute: 2, 80
receive_execute: 0, 80
receive_execute: 1, 80
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3224, write pid:3225
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 1216, pid 3224, write pid:3225
----- executor 3 executes write_coverage_signal cov->size 1216, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3224, write pid:3225
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 11, 0
execute_one time: 0, 11
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 780, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 9105, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 813
----- executor 2 executes write_coverage_signal cov->size 2602, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 784
----- executor 2 executes write_coverage_signal cov->size 2594, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 signal number : 655
----- executor 2 signal number : 679
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
----- executor 2 signal number : 293
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 258
executor 2 server cover_cnt 6 output_pos_value 3034
executor 0 server cover_cnt 3 output_pos_value 1962
executor 1 server cover_cnt 4 output_pos_value 2374
time breakdown 3: 89, 12, 0
before receive testcase: 0 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
time breakdown 2: 80, 19, 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
time breakdown 0: 82, 19, 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 101
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 295 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 655 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 813 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 258 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 784 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 679 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
time breakdown 1: 81, 21, 0
2023/03/28 11:07:53 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(0x0, &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1117
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1118 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1118
receive_execute: 1, 66
receive_execute: 2, 65
receive_execute: 2, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6195, pid 3226, write pid:3227
----- executor 3 executes write_coverage_signal cov->size 6195, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3226, write pid:3227
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3226, write pid:3227
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 27, 0
execute_one time: 1, 28
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 78, 31, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 1406, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2789, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 633
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 445
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 10397, flag collect 0
----- executor 2 signal number : 259
----- executor 1 signal number : 1004
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 7391, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2352
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 1362
----- executor 0 executes write_coverage_signal cov->size 19028, flag collect 0
----- executor 0 signal number : 1016
----- executor 0 executes write_coverage_signal cov->size 1467, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 8815, flag collect 0
----- executor 0 signal number : 919
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 557
----- executor 0 executes write_coverage_signal cov->size 6283, flag collect 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 303
----- executor 0 executes write_coverage_signal cov->size 7382, flag collect 0
----- executor 0 signal number : 39
----- executor 0 executes write_coverage_signal cov->size 6417, flag collect 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 87
time breakdown 1: 67, 42, 0
before receive testcase: 0 0
executor 0 server cover_cnt 10 output_pos_value 4775
time breakdown 2: 68, 41, 0
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
time breakdown 0: 67, 47, 0
2023/03/28 11:07:53 exec time: 113
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 0 has 10 replies
before receive testcase: 0 1
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 445 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1362 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1016 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 919 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 557 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 303 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 39 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 87 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:53 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 633 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 259 signal and 0 cover from userspace component
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(0x0, &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1118
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1119 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1119
receive_execute: 8, 75
receive_execute: 8, 74
receive_execute: 2, 75
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 11, 80
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3228, write pid:3229
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3228, write pid:3229
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3228, write pid:3229
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 27, 0
execute_one time: 1, 27
time breakdown 3: 91, 29, 0
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 8995, flag collect 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 455
----- executor 2 executes write_coverage_signal cov->size 2816, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 443
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4736, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2416, flag collect 0
----- executor 2 signal number : 1133
----- executor 2 executes write_coverage_signal cov->size 16348, flag collect 0
----- executor 1 signal number : 549
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 272
----- executor 2 signal number : 1002
----- executor 2 executes write_coverage_signal cov->size 2920, flag collect 0
----- executor 2 signal number : 10
----- executor 2 executes write_coverage_signal cov->size 6144, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 1606, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2281
----- executor 2 signal number : 168
----- executor 2 executes write_coverage_signal cov->size 11156, flag collect 0
----- executor 2 signal number : 468
----- executor 2 executes write_coverage_signal cov->size 3189, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 7720, flag collect 0
----- executor 2 signal number : 681
----- executor 2 executes write_coverage_signal cov->size 7370, flag collect 0
----- executor 2 signal number : 767
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 78, 36, 0
executor 2 server cover_cnt 11 output_pos_value 4731
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 82, 37, 0
before receive testcase: 0 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 115
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:53 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 549 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
time breakdown 2: 83, 39, 0
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 272 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 455 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1133 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1002 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 168 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 468 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 681 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 767 signal and 0 cover from userspace component
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(0x0, &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1119
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 33
-----finish removing dir
receive_execute: 5, 60
receive_execute: 5, 61
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-1120 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1120
receive_execute: 2, 61
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- executor 3 write_call_output, size 6201, pid 3230, write pid:3231
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7983, pid 3230, write pid:3231
----- executor 3 executes write_coverage_signal cov->size 7983, flag collect 0
----- executor 3 signal number : 690
----- completed 2
execute_one loop: 0, 0, 29
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3230, write pid:3231
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 37, 0
execute_one time: 1, 38
2023/03/28 11:07:53 for select break: 1
executor 0 write_server_output
time breakdown 3: 71, 41, 0
executor 2 write_server_output
before receive testcase: 0 1
2023/03/28 11:07:53 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
----- executor 2 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 10396, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 1404, flag collect 0
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 712, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 9655, flag collect 0
----- executor 2 signal number : 40
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 1368
----- executor 0 executes write_coverage_signal cov->size 1460, flag collect 0
----- executor 0 signal number : 396
executor 2 server cover_cnt 4 output_pos_value 2005
----- executor 0 executes write_coverage_signal cov->size 17805, flag collect 0
----- executor 0 signal number : 611
----- executor 0 executes write_coverage_signal cov->size 7369, flag collect 0
----- executor 0 signal number : 915
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 564
2023/03/28 11:07:53 for select break: 1
----- executor 0 executes write_coverage_signal cov->size 7916, flag collect 0
2023/03/28 11:07:53 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 65, 47, 0
----- executor 0 signal number : 310
----- executor 0 executes write_coverage_signal cov->size 10924, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 1611, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 11 output_pos_value 4788
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 63, 49, 0
2023/03/28 11:07:53 for select break: 1
2023/03/28 11:07:53 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:53 wg wait finish
2023/03/28 11:07:53 ------ all executors finish execution
2023/03/28 11:07:53 exec time: 111
2023/03/28 11:07:53 ----- PS len: 4
2023/03/28 11:07:53 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:53 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 690 signal and 0 cover from executor 3
2023/03/28 11:07:53 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:53 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:53 [SERVER] executor 0 has 11 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:53 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
time breakdown 0: 66, 50, 0
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 2 receive 40 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 1368 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 396 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 611 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 915 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 564 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 310 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/28 11:07:53 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:53 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:53 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:53 prog length: 3
2023/03/28 11:07:53 HasCrashFail:false HasNetFail:false
11:07:53 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1120
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 60
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1121 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1121
receive_execute: 0, 92
receive_execute: 1, 94
receive_execute: 3, 95
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 11, 0
receive_execute: 9, 106
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6174, pid 3232, write pid:3233
----- executor 3 executes write_coverage_signal cov->size 6174, flag collect 0
----- executor 3 signal number : 1441
----- completed 1
execute_one loop: 0, 1, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7958, pid 3232, write pid:3233
----- executor 3 executes write_coverage_signal cov->size 7958, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 3203, pid 3232, write pid:3233
----- executor 3 executes write_coverage_signal cov->size 3203, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 20, 0
execute_one time: 1, 20
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 115, 22, 0
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3299, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 12477, flag collect 0
----- executor 2 signal number : 662
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 612
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 491
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 7356, flag collect 0
----- executor 0 signal number : 1378
executor 2 server cover_cnt 5 output_pos_value 2584
----- executor 0 executes write_coverage_signal cov->size 21124, flag collect 0
----- executor 0 signal number : 1082
----- executor 0 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 0 signal number : 384
----- executor 0 executes write_coverage_signal cov->size 9022, flag collect 0
----- executor 0 signal number : 856
----- executor 0 executes write_coverage_signal cov->size 5996, flag collect 0
----- executor 0 signal number : 535
----- executor 0 executes write_coverage_signal cov->size 5791, flag collect 0
----- executor 0 signal number : 32
----- executor 0 executes write_coverage_signal cov->size 8317, flag collect 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 315
time breakdown 2: 95, 39, 0
before receive testcase: 0 0
executor 0 server cover_cnt 8 output_pos_value 5064
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 492
executor 1 server cover_cnt 4 output_pos_value 2296
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 137
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 fuzzer receive 1441 signal and 0 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:54 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:54 [SERVER] executor 0 has 8 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1378 signal and 0 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1082 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 384 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 662 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 856 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 612 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 535 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 32 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 315 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:54 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:54 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:54 prog length: 3
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1121
time breakdown 1: 98, 42, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 92, 42, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 45
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1122 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1122
receive_execute: 1, 81
receive_execute: 5, 81
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 1, 84
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 11, 83
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3234, write pid:3235
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3234, write pid:3235
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 3211, pid 3234, write pid:3235
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 1, 22, 0
execute_one time: 1, 23
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 94, 26, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1461, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 471
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 12484, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 1 signal number : 702
----- executor 1 executes write_coverage_signal cov->size 4643, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 493
----- executor 2 signal number : 492
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 8317, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2298
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 1563
----- executor 0 executes write_coverage_signal cov->size 20089, flag collect 0
----- executor 0 signal number : 1025
----- executor 0 executes write_coverage_signal cov->size 6423, flag collect 0
----- executor 0 signal number : 422
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 616
----- executor 0 executes write_coverage_signal cov->size 7377, flag collect 0
----- executor 0 signal number : 795
----- executor 0 executes write_coverage_signal cov->size 7781, flag collect 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 85, 31, 0
----- executor 0 signal number : 131
----- executor 0 executes write_coverage_signal cov->size 9657, flag collect 0
----- executor 0 signal number : 141
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 86, 34, 0
before receive testcase: 0 0
executor 0 server cover_cnt 8 output_pos_value 5174
before receive testcase: 0 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 119
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:54 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:54 [SERVER] executor 0 has 8 replies
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1563 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1025 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 422 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 616 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 795 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 131 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 141 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 471 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 702 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 493 signal and 0 cover from userspace component
2023/03/28 11:07:54 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:07:54 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:54 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:54 prog length: 3
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', 0x0)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1122
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 82, 38, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 26
-----finish removing dir
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-1123 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1123
receive_execute: 4, 54
receive_execute: 4, 55
receive_execute: 7, 54
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 11, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3236, write pid:3237
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 8451, pid 3236, write pid:3237
----- executor 3 executes write_coverage_signal cov->size 8451, flag collect 0
----- executor 3 signal number : 755
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 3211, pid 3236, write pid:3237
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 41, 0
execute_one time: 1, 41
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6490, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4610, flag collect 0
----- executor 2 signal number : 991
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 611
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 353
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 444
----- executor 0 signal number : 656
----- executor 0 executes write_coverage_signal cov->size 9061, flag collect 0
----- executor 2 signal number : 492
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
time breakdown 3: 71, 47, 0
before receive testcase: 0 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 2907
----- executor 0 signal number : 1234
----- executor 1 signal number : 728
----- executor 0 executes write_coverage_signal cov->size 11506, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 492
----- executor 0 signal number : 957
----- executor 0 executes write_coverage_signal cov->size 8583, flag collect 0
----- executor 0 signal number : 160
----- executor 0 executes write_coverage_signal cov->size 6405, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 665
----- executor 0 executes write_coverage_signal cov->size 9033, flag collect 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 999
----- executor 0 executes write_coverage_signal cov->size 9655, flag collect 0
----- executor 0 signal number : 118
----- executor 0 executes write_coverage_signal cov->size 8317, flag collect 0
----- executor 0 signal number : 329
----- executor 0 executes write_coverage_signal cov->size 6138, flag collect 0
----- executor 0 signal number : 51
executor 0 server cover_cnt 10 output_pos_value 5201
time breakdown 2: 61, 56, 0
before receive testcase: 0 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 59, 58, 0
before receive testcase: 0 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 115
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 656 signal and 0 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 991 signal and 0 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:54 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 755 signal and 0 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1234 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 957 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 160 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 665 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 999 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 118 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 329 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 611 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 353 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 51 signal and 0 cover from userspace component
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:54 prog length: 3
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/glusterfs-client/dfs-0-1123
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 58, 61, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 34
-----finish removing dir
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-1124 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1124
receive_execute: 5, 74
receive_execute: 8, 74
receive_execute: 3, 74
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 11, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3238, write pid:3239
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 1
----- executor 3 cover number : 1164, signal number : 1445
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7979, pid 3238, write pid:3239
----- executor 3 executes write_coverage_signal cov->size 7979, flag collect 1
----- executor 3 cover number : 1504, signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 9398, pid 3238, write pid:3239
----- executor 3 executes write_coverage_signal cov->size 9398, flag collect 1
----- executor 3 cover number : 1267, signal number : 280
----- completed 3
execute_one loop: 0, 0, 11
executor 3, execute_one inner time: 0, 36, 0
execute_one time: 1, 36
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 10395, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3722, flag collect 1
----- executor 2 cover number : 554, signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 2 cover number : 733, signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 1 cover number : 585, signal number : 655
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 409, signal number : 456
----- executor 0 executes write_coverage_signal cov->size 3441, flag collect 1
----- executor 1 cover number : 733, signal number : 695
----- executor 1 executes write_coverage_signal cov->size 4055, flag collect 1
----- executor 2 cover number : 992, signal number : 492
----- executor 0 cover number : 409, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 1
time breakdown 3: 88, 39, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 4976
----- executor 1 cover number : 992, signal number : 491
----- executor 0 cover number : 1235, signal number : 1408
----- executor 0 executes write_coverage_signal cov->size 5487, flag collect 1
executor 1 server cover_cnt 4 output_pos_value 5009
----- executor 0 cover number : 839, signal number : 908
----- executor 0 executes write_coverage_signal cov->size 18537, flag collect 1
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 79, 49, 0
before receive testcase: 0 0
----- executor 0 cover number : 903, signal number : 293
----- executor 0 executes write_coverage_signal cov->size 10511, flag collect 1
time breakdown 2: 82, 49, 0
before receive testcase: 0 0
----- executor 0 cover number : 1650, signal number : 1116
----- executor 0 executes write_coverage_signal cov->size 8967, flag collect 1
----- executor 0 cover number : 1793, signal number : 766
----- executor 0 executes write_coverage_signal cov->size 4783, flag collect 1
----- executor 0 cover number : 1019, signal number : 48
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 1
----- executor 0 cover number : 1309, signal number : 520
----- executor 0 executes write_coverage_signal cov->size 14503, flag collect 1
----- executor 0 cover number : 1447, signal number : 164
executor 0 server cover_cnt 10 output_pos_value 16724
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 138
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:54 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 456 signal and 409 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 655 signal and 585 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1 signal and 409 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 728 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 695 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1408 signal and 1235 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 491 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 908 signal and 839 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 293 signal and 903 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1116 signal and 1650 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 766 signal and 1793 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 48 signal and 1019 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 520 signal and 1309 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 164 signal and 1447 cover from userspace component
time breakdown 0: 77, 63, 0
before receive testcase: 0 1
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 fuzzer receive 1445 signal and 1164 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 688 signal and 1504 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 280 signal and 1267 cover from executor 3
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:54 prog length: 3
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/glusterfs-client/dfs-0-1124
remove dir time 34
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1125 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1125
receive_execute: 6, 71
receive_execute: 20, 71
receive_execute: 20, 71
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 27, 89
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3240, write pid:3241
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 1
----- executor 3 cover number : 1165, signal number : 1447
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3240, write pid:3241
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 1
----- executor 3 cover number : 1505, signal number : 688
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 9421, pid 3240, write pid:3241
----- executor 3 executes write_coverage_signal cov->size 9421, flag collect 1
----- executor 3 cover number : 1268, signal number : 280
----- completed 3
execute_one loop: 0, 0, 18
executor 3, execute_one inner time: 0, 39, 0
execute_one time: 1, 39
time breakdown 3: 116, 51, 0
executor 2 write_server_output
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
executor 0 write_server_output
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 cover number : 554, signal number : 619
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 1
----- executor 2 cover number : 250, signal number : 243
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 2 cover number : 992, signal number : 791
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 2 cover number : 733, signal number : 204
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 3443, flag collect 1
----- executor 1 cover number : 409, signal number : 455
----- executor 1 executes write_coverage_signal cov->size 10399, flag collect 1
executor 2 server cover_cnt 5 output_pos_value 5247
----- executor 0 cover number : 992, signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 1 cover number : 409, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 9637, flag collect 1
----- executor 0 cover number : 733, signal number : 215
executor 0 server cover_cnt 4 output_pos_value 4975
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
----- executor 1 cover number : 1444, signal number : 1736
----- executor 1 executes write_coverage_signal cov->size 17807, flag collect 1
time breakdown 2: 91, 75, 0
before receive testcase: 0 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 77, 75, 0
----- executor 1 cover number : 902, signal number : 982
----- executor 1 executes write_coverage_signal cov->size 5496, flag collect 1
----- executor 1 cover number : 839, signal number : 178
----- executor 1 executes write_coverage_signal cov->size 8399, flag collect 1
before receive testcase: 0 0
----- executor 1 cover number : 1362, signal number : 297
----- executor 1 executes write_coverage_signal cov->size 4433, flag collect 1
----- executor 1 cover number : 1268, signal number : 572
----- executor 1 executes write_coverage_signal cov->size 13796, flag collect 1
----- executor 1 cover number : 1961, signal number : 833
----- executor 1 executes write_coverage_signal cov->size 13628, flag collect 1
----- executor 1 cover number : 1792, signal number : 582
executor 1 server cover_cnt 9 output_pos_value 16050
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 160
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 fuzzer receive 1447 signal and 1165 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 688 signal and 1505 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 280 signal and 1268 cover from executor 3
2023/03/28 11:07:54 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 455 signal and 409 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 1 signal and 409 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 1736 signal and 1444 cover from userspace component
time breakdown 1: 91, 90, 0
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 982 signal and 902 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 1004 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 178 signal and 839 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 297 signal and 1362 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 2 has 5 replies
before receive testcase: 0 0
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 243 signal and 250 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 791 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 204 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 572 signal and 1268 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 833 signal and 1961 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 582 signal and 1792 cover from userspace component
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:54 prog length: 3
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', &(0x7f00000002c0)='./file1\x00')
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 536
remove dir: /root/glusterfs-client/dfs-0-1125
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 43
-----finish removing dir
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1126 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1126
receive_execute: 6, 83
receive_execute: 16, 82
receive_execute: 21, 83
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 27, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6204, pid 3242, write pid:3243
----- executor 3 executes write_coverage_signal cov->size 6204, flag collect 1
----- executor 3 cover number : 1165, signal number : 1448
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7994, pid 3242, write pid:3243
----- executor 3 executes write_coverage_signal cov->size 7994, flag collect 1
----- executor 3 cover number : 1505, signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 9406, pid 3242, write pid:3243
----- executor 3 executes write_coverage_signal cov->size 9406, flag collect 1
----- executor 3 cover number : 1268, signal number : 280
----- completed 3
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 1, 30
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 cover number : 554, signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 1 cover number : 733, signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 733, signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12430, flag collect 1
----- executor 1 cover number : 992, signal number : 492
----- executor 0 cover number : 992, signal number : 492
executor 1 server cover_cnt 4 output_pos_value 4976
----- executor 2 cover number : 410, signal number : 458
----- executor 2 executes write_coverage_signal cov->size 1404, flag collect 1
executor 0 server cover_cnt 4 output_pos_value 4976
time breakdown 3: 113, 32, 0
before receive testcase: 0 0
----- executor 2 cover number : 403, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 2888, flag collect 1
----- executor 2 cover number : 1080, signal number : 1198
----- executor 2 executes write_coverage_signal cov->size 22451, flag collect 1
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 89, 40, 0
before receive testcase: 0 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 98, 42, 0
before receive testcase: 0 0
----- executor 2 cover number : 1032, signal number : 1219
----- executor 2 executes write_coverage_signal cov->size 1456, flag collect 1
----- executor 2 cover number : 440, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 12385, flag collect 1
----- executor 2 cover number : 1319, signal number : 885
----- executor 2 executes write_coverage_signal cov->size 6295, flag collect 1
----- executor 2 cover number : 1204, signal number : 550
----- executor 2 executes write_coverage_signal cov->size 9304, flag collect 1
----- executor 2 cover number : 1123, signal number : 281
----- executor 2 executes write_coverage_signal cov->size 4736, flag collect 1
----- executor 2 cover number : 986, signal number : 39
----- executor 2 executes write_coverage_signal cov->size 9408, flag collect 1
----- executor 2 cover number : 1941, signal number : 986
----- executor 2 executes write_coverage_signal cov->size 4135, flag collect 1
----- executor 2 cover number : 1004, signal number : 51
executor 2 server cover_cnt 11 output_pos_value 16650
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 140
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 fuzzer receive 1448 signal and 1165 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 688 signal and 1505 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 280 signal and 1268 cover from executor 3
2023/03/28 11:07:54 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 458 signal and 410 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 0 signal and 403 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 728 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 1198 signal and 1080 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 1219 signal and 1032 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 7 signal and 440 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 885 signal and 1319 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 550 signal and 1204 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 281 signal and 1123 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 728 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 39 signal and 986 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 986 signal and 1941 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 51 signal and 1004 cover from userspace component
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 104, 56, 0
before receive testcase: 0 0
2023/03/28 11:07:54 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/03/28 11:07:54 prog length: 3
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
link(&(0x7f0000000180)='./file0\x00', 0x0)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 496
remove dir: /root/glusterfs-client/dfs-0-1126
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-1127 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1127
receive_execute: 30, 62
receive_execute: 31, 63
receive_execute: 14, 63
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
execute_one time: 2, 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 2, 0
receive_execute: 36, 66
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3244, write pid:3245
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 1
----- executor 3 cover number : 1165, signal number : 1448
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3244, write pid:3245
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 1
----- executor 3 cover number : 1505, signal number : 690
----- completed 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 3211, pid 3244, write pid:3245
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 1
----- executor 3 cover number : 743, signal number : 101
----- completed 3
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 36, 0
execute_one time: 0, 37
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1382, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 2 cover number : 410, signal number : 457
----- executor 2 executes write_coverage_signal cov->size 11095, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 733, signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 992, signal number : 492
executor 0 server cover_cnt 4 output_pos_value 4976
----- executor 2 cover number : 410, signal number : 2
----- executor 2 executes write_coverage_signal cov->size 7370, flag collect 1
time breakdown 3: 102, 39, 1
before receive testcase: 0 0
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 1 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 1 cover number : 992, signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 3421, flag collect 1
----- executor 1 cover number : 607, signal number : 578
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 1
----- executor 1 cover number : 668, signal number : 259
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 1 cover number : 733, signal number : 203
executor 1 server cover_cnt 5 output_pos_value 6019
time breakdown 1: 94, 47, 0
before receive testcase: 0 0
----- executor 2 cover number : 1758, signal number : 2117
----- executor 2 executes write_coverage_signal cov->size 1540, flag collect 1
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 460, signal number : 318
----- executor 2 executes write_coverage_signal cov->size 18540, flag collect 1
time breakdown 0: 92, 49, 0
before receive testcase: 0 0
----- executor 2 cover number : 902, signal number : 672
----- executor 2 executes write_coverage_signal cov->size 7929, flag collect 1
----- executor 2 cover number : 1237, signal number : 441
----- executor 2 executes write_coverage_signal cov->size 6347, flag collect 1
----- executor 2 cover number : 1023, signal number : 240
----- executor 2 executes write_coverage_signal cov->size 7737, flag collect 1
----- executor 2 cover number : 1023, signal number : 50
----- executor 2 executes write_coverage_signal cov->size 7700, flag collect 1
----- executor 2 cover number : 1639, signal number : 608
----- executor 2 executes write_coverage_signal cov->size 3640, flag collect 1
----- executor 2 cover number : 943, signal number : 221
----- executor 2 executes write_coverage_signal cov->size 3177, flag collect 1
----- executor 2 cover number : 770, signal number : 26
executor 2 server cover_cnt 11 output_pos_value 15761
2023/03/28 11:07:54 for select break: 1
2023/03/28 11:07:54 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:54 wg wait finish
2023/03/28 11:07:54 ------ all executors finish execution
2023/03/28 11:07:54 exec time: 130
2023/03/28 11:07:54 ----- PS len: 4
2023/03/28 11:07:54 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:54 fuzzer receive 1448 signal and 1165 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 690 signal and 1505 cover from executor 3
2023/03/28 11:07:54 fuzzer receive 101 signal and 743 cover from executor 3
2023/03/28 11:07:54 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:54 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 457 signal and 410 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 2 signal and 410 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 728 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 2117 signal and 1758 cover from userspace component
2023/03/28 11:07:54 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
time breakdown 2: 77, 66, 0
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 1118 signal and 992 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 578 signal and 607 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 259 signal and 668 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 1 receive 203 signal and 733 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 0 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 318 signal and 460 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 672 signal and 902 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 441 signal and 1237 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 240 signal and 1023 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 50 signal and 1023 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 608 signal and 1639 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 221 signal and 943 cover from userspace component
2023/03/28 11:07:54 ------- fuzzer executor 2 receive 26 signal and 770 cover from userspace component
2023/03/28 11:07:54 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:54 ----- triage return due to empty signal call #1 renameat
2023/03/28 11:07:54 prog length: 17
2023/03/28 11:07:54 HasCrashFail:false HasNetFail:false
11:07:54 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000680)='./file2\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$trusted_overlay_redirect(&(0x7f00000005c0)='./file0\x00', &(0x7f0000000940), &(0x7f0000000980)='./file1\x00', 0x8, 0x1)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2, r4}], {0x4, 0x2}, [{0x8, 0x5, r5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
rename(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)='./file2\x00')
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5144
remove dir: /root/glusterfs-client/dfs-0-1127
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1128 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1128
receive_execute: 8, 79
receive_execute: 27, 79
receive_execute: 23, 80
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 30, 82
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6173, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 6173, flag collect 1
----- executor 3 cover number : 1164, signal number : 1441
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 1
----- executor 3 cover number : 1504, signal number : 692
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7753, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 7753, flag collect 1
----- executor 3 cover number : 1189, signal number : 172
----- completed 3
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 10
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 1
----- executor 3 cover number : 997, signal number : 2
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5550, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 5550, flag collect 1
----- executor 3 cover number : 1115, signal number : 142
----- completed 15
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 1
----- executor 3 cover number : 137, signal number : 34
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6767, pid 3246, write pid:3247
----- executor 3 executes write_coverage_signal cov->size 6767, flag collect 1
----- executor 3 cover number : 1295, signal number : 9
----- completed 17
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 0, 74, 0
execute_one time: 1, 74
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 112, 77, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2549, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 4909, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4055, flag collect 1
----- executor 1 cover number : 567, signal number : 645
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 2 cover number : 992, signal number : 1117
----- executor 2 executes write_coverage_signal cov->size 3722, flag collect 1
----- executor 0 cover number : 404, signal number : 452
----- executor 0 executes write_coverage_signal cov->size 23699, flag collect 1
----- executor 1 cover number : 554, signal number : 618
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 2 cover number : 585, signal number : 507
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 2 cover number : 733, signal number : 217
----- executor 1 cover number : 992, signal number : 831
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 1
executor 2 server cover_cnt 4 output_pos_value 5009
----- executor 1 cover number : 733, signal number : 215
executor 1 server cover_cnt 4 output_pos_value 5168
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 2 receive reply, reply.done 1
----- executor 0 cover number : 429, signal number : 38
----- executor 0 executes write_coverage_signal cov->size 19964, flag collect 1
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 106, 87, 0
----- executor 0 cover number : 2063, signal number : 2513
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
before receive testcase: 0 0
----- executor 0 cover number : 970, signal number : 1054
----- executor 0 executes write_coverage_signal cov->size 5112, flag collect 1
----- executor 0 cover number : 442, signal number : 51
----- executor 0 executes write_coverage_signal cov->size 12552, flag collect 1
time breakdown 2: 87, 85, 0
before receive testcase: 0 0
----- executor 0 cover number : 1252, signal number : 328
----- executor 0 executes write_coverage_signal cov->size 19199, flag collect 1
----- executor 0 cover number : 1185, signal number : 292
----- executor 0 executes write_coverage_signal cov->size 19561, flag collect 1
----- executor 0 cover number : 2310, signal number : 482
----- executor 0 executes write_coverage_signal cov->size 11656, flag collect 1
----- executor 0 cover number : 1659, signal number : 582
----- executor 0 executes write_coverage_signal cov->size 18594, flag collect 1
----- executor 0 cover number : 1464, signal number : 153
executor 0 server cover_cnt 10 output_pos_value 18154
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:55 wg wait finish
2023/03/28 11:07:55 ------ all executors finish execution
2023/03/28 11:07:55 exec time: 210
2023/03/28 11:07:55 ----- PS len: 4
2023/03/28 11:07:55 [CLIENT] executor 3 has 17 replies
2023/03/28 11:07:55 fuzzer receive 1441 signal and 1164 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 692 signal and 1504 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 172 signal and 1189 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:55 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:55 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:55 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 452 signal and 404 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 997 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 142 signal and 1115 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 34 signal and 137 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 9 signal and 1295 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 645 signal and 567 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 618 signal and 554 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 38 signal and 429 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 831 signal and 992 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 2513 signal and 2063 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1054 signal and 970 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 51 signal and 442 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 328 signal and 1252 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 292 signal and 1185 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 482 signal and 2310 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 582 signal and 1659 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1117 signal and 992 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 507 signal and 585 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 217 signal and 733 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 153 signal and 1464 cover from userspace component
time breakdown 0: 103, 130, 0
before receive testcase: 0 1
2023/03/28 11:07:55 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:55 prog length: 17
2023/03/28 11:07:55 HasCrashFail:false HasNetFail:false
11:07:55 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000680)='./file2\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$trusted_overlay_redirect(&(0x7f00000005c0)='./file0\x00', &(0x7f0000000940), &(0x7f0000000980)='./file1\x00', 0x8, 0x1)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2, r4}], {0x4, 0x2}, [{0x8, 0x5, r5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
rename(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)='./file2\x00')
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5144
remove dir: /root/glusterfs-client/dfs-0-1128
remove dir time 36
-----finish removing dir
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-1129 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1129
receive_execute: 5, 75
receive_execute: 47, 76
receive_execute: 50, 76
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 56, 80
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 1
----- executor 3 cover number : 1165, signal number : 1448
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 7994, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 7994, flag collect 1
----- executor 3 cover number : 1505, signal number : 688
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 1
----- executor 3 cover number : 1142, signal number : 104
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 1
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 1
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 1
----- completed 13
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5555, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 5555, flag collect 1
----- executor 3 cover number : 1116, signal number : 142
----- completed 15
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 1
----- executor 3 cover number : 137, signal number : 33
----- completed 16
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6759, pid 3248, write pid:3249
----- executor 3 executes write_coverage_signal cov->size 6759, flag collect 1
----- executor 3 cover number : 1296, signal number : 8
----- completed 17
execute_one loop: 0, 0, 19
executor 3, execute_one inner time: 0, 87, 0
execute_one time: 1, 87
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 136, 89, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2109, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 2 cover number : 403, signal number : 448
----- executor 2 executes write_coverage_signal cov->size 26572, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 1 cover number : 992, signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 cover number : 554, signal number : 505
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 992, signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 1 cover number : 733, signal number : 215
----- executor 0 cover number : 733, signal number : 215
executor 1 server cover_cnt 4 output_pos_value 4975
executor 0 server cover_cnt 4 output_pos_value 4975
----- executor 2 cover number : 410, signal number : 11
----- executor 2 executes write_coverage_signal cov->size 10913, flag collect 1
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 1008, signal number : 1143
----- executor 2 executes write_coverage_signal cov->size 2178, flag collect 1
----- executor 2 cover number : 442, signal number : 401
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 123, 104, 0
before receive testcase: 0 0
time breakdown 0: 80, 100, 0
before receive testcase: 0 0
----- executor 2 cover number : 949, signal number : 687
----- executor 2 executes write_coverage_signal cov->size 22311, flag collect 1
----- executor 2 cover number : 2157, signal number : 1407
----- executor 2 executes write_coverage_signal cov->size 16098, flag collect 1
----- executor 2 cover number : 1467, signal number : 311
----- executor 2 executes write_coverage_signal cov->size 15665, flag collect 1
----- executor 2 cover number : 1324, signal number : 142
----- executor 2 executes write_coverage_signal cov->size 20128, flag collect 1
----- executor 2 cover number : 1965, signal number : 142
----- executor 2 executes write_coverage_signal cov->size 10795, flag collect 1
----- executor 2 cover number : 1710, signal number : 594
----- executor 2 executes write_coverage_signal cov->size 7894, flag collect 1
----- executor 2 cover number : 1296, signal number : 258
executor 2 server cover_cnt 11 output_pos_value 18709
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:55 wg wait finish
2023/03/28 11:07:55 ------ all executors finish execution
2023/03/28 11:07:55 exec time: 202
2023/03/28 11:07:55 ----- PS len: 4
2023/03/28 11:07:55 [CLIENT] executor 3 has 17 replies
2023/03/28 11:07:55 fuzzer receive 1448 signal and 1165 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 688 signal and 1505 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 104 signal and 1142 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 1 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 1118 signal and 992 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 1 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 1 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 505 signal and 554 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1004 signal and 992 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 215 signal and 733 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 142 signal and 1116 cover from executor 3
2023/03/28 11:07:55 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 448 signal and 403 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 11 signal and 410 cover from userspace component
time breakdown 2: 126, 125, 0
before receive testcase: 0 0
2023/03/28 11:07:55 fuzzer receive 33 signal and 137 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 8 signal and 1296 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1143 signal and 1008 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 401 signal and 442 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 687 signal and 949 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1407 signal and 2157 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 311 signal and 1467 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 142 signal and 1324 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 142 signal and 1965 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 594 signal and 1710 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 258 signal and 1296 cover from userspace component
2023/03/28 11:07:55 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:55 prog length: 17
2023/03/28 11:07:55 HasCrashFail:false HasNetFail:false
11:07:55 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000680)='./file2\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$trusted_overlay_redirect(&(0x7f00000005c0)='./file0\x00', &(0x7f0000000940), &(0x7f0000000980)='./file1\x00', 0x8, 0x1)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2, r4}], {0x4, 0x2}, [{0x8, 0x5, r5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
rename(&(0x7f0000000540)='./file0\x00', &(0x7f0000000580)='./file2\x00')
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 5144
remove dir: /root/glusterfs-client/dfs-0-1129
remove dir time 40
-----finish removing dir
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-1130 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1130
receive_execute: 30, 78
receive_execute: 26, 78
receive_execute: 4, 78
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 36, 81
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6195, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 6195, flag collect 1
----- executor 3 cover number : 1165, signal number : 1444
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 7994, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 7994, flag collect 1
----- executor 3 cover number : 1505, signal number : 692
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 1
----- executor 3 cover number : 1142, signal number : 104
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 5
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 12
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 1
----- executor 3 cover number : 998, signal number : 2
----- completed 13
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5555, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 5555, flag collect 1
----- executor 3 cover number : 1116, signal number : 142
----- completed 15
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6763, pid 3250, write pid:3251
----- executor 3 executes write_coverage_signal cov->size 6763, flag collect 1
----- executor 3 cover number : 1296, signal number : 6
----- completed 17
execute_one loop: 0, 0, 17
executor 3, execute_one inner time: 0, 85, 0
execute_one time: 1, 85
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 14455, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 1 cover number : 733, signal number : 789
----- executor 0 cover number : 554, signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 3729, flag collect 1
time breakdown 3: 117, 87, 0
before receive testcase: 0 0
----- executor 0 cover number : 733, signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 1 cover number : 635, signal number : 666
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 1
----- executor 1 cover number : 668, signal number : 243
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 2 cover number : 410, signal number : 457
----- executor 2 executes write_coverage_signal cov->size 13908, flag collect 1
----- executor 1 cover number : 992, signal number : 492
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 0 receive reply, reply.done 1
executor 1 server cover_cnt 5 output_pos_value 6079
----- executor 2 cover number : 410, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 10913, flag collect 1
----- executor 2 cover number : 1007, signal number : 1143
----- executor 0 cover number : 992, signal number : 492
executor 0 server cover_cnt 5 output_pos_value 4985
time breakdown 0: 108, 94, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 31962, flag collect 1
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 104, 98, 0
before receive testcase: 0 0
----- executor 2 cover number : 905, signal number : 990
----- executor 2 executes write_coverage_signal cov->size 21437, flag collect 1
----- executor 2 cover number : 902, signal number : 151
----- executor 2 executes write_coverage_signal cov->size 20675, flag collect 1
----- executor 2 cover number : 2151, signal number : 1401
----- executor 2 executes write_coverage_signal cov->size 16893, flag collect 1
----- executor 2 cover number : 1926, signal number : 122
----- executor 2 executes write_coverage_signal cov->size 15665, flag collect 1
----- executor 2 cover number : 1324, signal number : 324
----- executor 2 executes write_coverage_signal cov->size 12447, flag collect 1
----- executor 2 cover number : 1852, signal number : 647
----- executor 2 executes write_coverage_signal cov->size 17674, flag collect 1
----- executor 2 cover number : 1467, signal number : 99
----- executor 2 executes write_coverage_signal cov->size 7959, flag collect 1
----- executor 2 cover number : 1315, signal number : 257
executor 2 server cover_cnt 11 output_pos_value 19295
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:55 wg wait finish
2023/03/28 11:07:55 ------ all executors finish execution
2023/03/28 11:07:55 exec time: 202
2023/03/28 11:07:55 ----- PS len: 4
2023/03/28 11:07:55 [CLIENT] executor 3 has 17 replies
2023/03/28 11:07:55 fuzzer receive 1444 signal and 1165 cover from executor 3
2023/03/28 11:07:55 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:55 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 789 signal and 733 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 457 signal and 410 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1 signal and 410 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 666 signal and 635 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1143 signal and 1007 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 728 signal and 733 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 990 signal and 905 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 151 signal and 902 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 692 signal and 1505 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 104 signal and 1142 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
time breakdown 2: 83, 124, 0
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1401 signal and 2151 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 122 signal and 1926 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 324 signal and 1324 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 647 signal and 1852 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 99 signal and 1467 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 257 signal and 1315 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 243 signal and 668 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 492 signal and 992 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 998 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 142 signal and 1116 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 6 signal and 1296 cover from executor 3
2023/03/28 11:07:55 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:55 -----2 triaging input for call #15 lsetxattr$system_posix_acl (new signal=1)
2023/03/28 11:07:55 minimize prog 3
2023/03/28 11:07:55 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:55 prog length: 16
2023/03/28 11:07:55 HasCrashFail:false HasNetFail:false
11:07:55 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000680)='./file2\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
setxattr$trusted_overlay_redirect(&(0x7f00000005c0)='./file0\x00', &(0x7f0000000940), &(0x7f0000000980)='./file1\x00', 0x8, 0x1)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2, r4}], {0x4, 0x2}, [{0x8, 0x5, r5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4992
remove dir: /root/glusterfs-client/dfs-0-1130
remove dir time 44
-----finish removing dir
mkdir time 52
executor 3 create dir /root/glusterfs-client/dfs-0-1131 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1131
receive_execute: 32, 95
receive_execute: 2, 96
receive_execute: 28, 96
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 37, 99
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 7266, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 7266, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 3 write_call_output, size 4055, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 13
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5553, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 5553, flag collect 0
----- executor 3 signal number : 142
----- completed 15
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3252, write pid:3253
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 16
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 66, 0
execute_one time: 1, 66
----- executor 1 executes write_coverage_signal cov->size 2788, flag collect 0
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 1 signal number : 442
----- executor 1 executes write_coverage_signal cov->size 15780, flag collect 0
----- executor 0 signal number : 74
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 425
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 617
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
time breakdown 3: 136, 69, 0
before receive testcase: 0 1
----- executor 1 signal number : 20
----- executor 1 executes write_coverage_signal cov->size 15572, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 1551, flag collect 0
----- executor 0 signal number : 247
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 203
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 215
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 2571
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 server cover_cnt 6 output_pos_value 2589
----- executor 1 signal number : 1024
----- executor 1 executes write_coverage_signal cov->size 2922, flag collect 0
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 25
----- executor 1 executes write_coverage_signal cov->size 17326, flag collect 0
time breakdown 2: 98, 75, 0
before receive testcase: 0 0
----- executor 1 signal number : 485
----- executor 1 executes write_coverage_signal cov->size 12048, flag collect 0
----- executor 1 signal number : 159
----- executor 1 executes write_coverage_signal cov->size 12540, flag collect 0
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 584
----- executor 1 executes write_coverage_signal cov->size 11590, flag collect 0
time breakdown 0: 128, 76, 0
before receive testcase: 0 0
----- executor 1 signal number : 274
executor 1 server cover_cnt 9 output_pos_value 5612
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:55 wg wait finish
2023/03/28 11:07:55 ------ all executors finish execution
2023/03/28 11:07:55 exec time: 177
2023/03/28 11:07:55 ----- PS len: 4
2023/03/28 11:07:55 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:55 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 442 signal and 0 cover from userspace component
2023/03/28 11:07:55 [CLIENT] executor 3 has 16 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 20 signal and 0 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 2571 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 1024 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 25 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 485 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 159 signal and 0 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 425 signal and 0 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 124, 81, 0
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 617 signal and 0 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 247 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 203 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 142 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 584 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 274 signal and 0 cover from userspace component
2023/03/28 11:07:55 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:55 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:55 prog length: 15
2023/03/28 11:07:55 HasCrashFail:false HasNetFail:false
11:07:55 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000680)='./file2\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
fstat(r0, &(0x7f0000000740)={0x0, 0x0, 0x0, 0x0, 0x0, <r5=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2, r4}], {0x4, 0x2}, [{0x8, 0x5, r5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4704
remove dir: /root/glusterfs-client/dfs-0-1131
remove dir time 34
-----finish removing dir
mkdir time 44
executor 3 create dir /root/glusterfs-client/dfs-0-1132 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1132
receive_execute: 6, 79
receive_execute: 9, 78
receive_execute: 3, 79
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 2, 0
receive_execute: 12, 81
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6174, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 6174, flag collect 0
----- executor 3 signal number : 1441
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7958, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 7958, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 108
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 13
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3254, write pid:3255
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 15
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 60, 0
execute_one time: 1, 61
2023/03/28 11:07:55 for select break: 1
time breakdown 3: 93, 64, 0
executor 0 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 11797, flag collect 0
----- executor 1 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 3473, flag collect 0
----- executor 2 signal number : 492
----- executor 1 signal number : 636
----- executor 0 signal number : 459
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5432, flag collect 0
2023/03/28 11:07:55 --------- executor 3 receive reply, reply.done 1
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 1 signal number : 245
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 492
----- executor 0 executes write_coverage_signal cov->size 12530, flag collect 0
----- executor 0 signal number : 1317
executor 1 server cover_cnt 5 output_pos_value 2622
----- executor 0 executes write_coverage_signal cov->size 17415, flag collect 0
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 608
----- executor 0 executes write_coverage_signal cov->size 19255, flag collect 0
----- executor 0 signal number : 493
----- executor 0 executes write_coverage_signal cov->size 11543, flag collect 0
----- executor 0 signal number : 513
----- executor 0 executes write_coverage_signal cov->size 10599, flag collect 0
----- executor 0 signal number : 1023
----- executor 0 executes write_coverage_signal cov->size 11327, flag collect 0
----- executor 0 signal number : 192
----- executor 0 executes write_coverage_signal cov->size 12875, flag collect 0
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 82, 71, 0
before receive testcase: 0 0
----- executor 0 signal number : 86
----- executor 0 executes write_coverage_signal cov->size 7608, flag collect 0
----- executor 0 signal number : 539
executor 0 server cover_cnt 10 output_pos_value 5261
time breakdown 2: 87, 71, 0
before receive testcase: 0 1
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:55 wg wait finish
2023/03/28 11:07:55 ------ all executors finish execution
2023/03/28 11:07:55 exec time: 158
2023/03/28 11:07:55 ----- PS len: 4
2023/03/28 11:07:55 [CLIENT] executor 3 has 15 replies
2023/03/28 11:07:55 fuzzer receive 1441 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 459 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1317 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 608 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 493 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 513 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1023 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 192 signal and 0 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 636 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 245 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 86 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 539 signal and 0 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:55 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:55 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:55 prog length: 14
2023/03/28 11:07:55 HasCrashFail:false HasNetFail:false
11:07:55 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
stat(&(0x7f0000000680)='./file2\x00', &(0x7f00000006c0)={0x0, 0x0, 0x0, 0x0, <r4=>0x0})
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2, r4}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4552
remove dir: /root/glusterfs-client/dfs-0-1132
time breakdown 0: 85, 79, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1133 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1133
receive_execute: 9, 72
receive_execute: 1, 73
receive_execute: 10, 72
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
receive_execute: 14, 75
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 690
----- completed 2
execute_one loop: 0, 0, 28
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 103
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 1
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 1
----- completed 13
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3256, write pid:3257
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 33
----- completed 14
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 69, 0
execute_one time: 1, 70
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 89, 73, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 704, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3664, flag collect 0
----- executor 1 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 711
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 446
----- executor 0 executes write_coverage_signal cov->size 16538, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 612
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 359
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 491
----- executor 1 signal number : 491
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 11543, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 2633
----- executor 0 signal number : 1747
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2295
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 82, 79, 0
before receive testcase: 0 0
----- executor 0 signal number : 1055
----- executor 0 executes write_coverage_signal cov->size 742, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 9222, flag collect 0
----- executor 0 signal number : 688
----- executor 0 executes write_coverage_signal cov->size 12878, flag collect 0
----- executor 0 signal number : 237
----- executor 0 executes write_coverage_signal cov->size 11002, flag collect 0
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 9643, flag collect 0
----- executor 0 signal number : 91
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 12248, flag collect 0
time breakdown 1: 81, 80, 0
before receive testcase: 0 0
----- executor 0 signal number : 825
executor 0 server cover_cnt 10 output_pos_value 5195
2023/03/28 11:07:55 for select break: 1
2023/03/28 11:07:55 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:55 wg wait finish
2023/03/28 11:07:55 ------ all executors finish execution
2023/03/28 11:07:55 exec time: 156
2023/03/28 11:07:55 ----- PS len: 4
2023/03/28 11:07:55 [CLIENT] executor 3 has 14 replies
2023/03/28 11:07:55 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:55 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 711 signal and 0 cover from userspace component
2023/03/28 11:07:55 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 690 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 103 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:55 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/28 11:07:55 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 446 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1747 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 1055 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 688 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 237 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 91 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 612 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 0 receive 825 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 359 signal and 0 cover from userspace component
2023/03/28 11:07:55 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:55 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:55 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:55 prog length: 13
2023/03/28 11:07:55 HasCrashFail:false HasNetFail:false
11:07:55 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$trusted_overlay_nlink(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100), 0x0, 0x0, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4384
remove dir: /root/glusterfs-client/dfs-0-1133
time breakdown 0: 74, 84, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 33
-----finish removing dir
receive_execute: 1, 68
receive_execute: 5, 68
receive_execute: 6, 68
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-1134 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1134
executor 2 before execute_one
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
execute_one time: 2, 1
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 9, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4056, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 4056, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4056, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 4056, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4056, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 4056, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3258, write pid:3259
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 13
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 44, 0
execute_one time: 1, 44
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 13037, flag collect 0
executor 1 write_server_output
time breakdown 3: 81, 47, 0
before receive testcase: 0 1
----- executor 2 signal number : 455
----- executor 2 executes write_coverage_signal cov->size 3511, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 14392, flag collect 0
----- executor 2 signal number : 1784
----- executor 2 executes write_coverage_signal cov->size 30651, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
executor 0 write_server_output
----- executor 1 signal number : 789
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 1037
----- executor 2 executes write_coverage_signal cov->size 3634, flag collect 0
----- executor 1 signal number : 558
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 12494, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 697
----- executor 1 signal number : 491
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 3731, flag collect 0
----- executor 2 signal number : 725
----- executor 2 executes write_coverage_signal cov->size 4763, flag collect 0
----- executor 2 signal number : 41
----- executor 2 executes write_coverage_signal cov->size 9404, flag collect 0
----- executor 0 signal number : 646
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 360
----- executor 2 signal number : 987
----- executor 2 executes write_coverage_signal cov->size 7962, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 59
----- executor 2 executes write_coverage_signal cov->size 4832, flag collect 0
----- executor 2 signal number : 21
----- executor 2 executes write_coverage_signal cov->size 9365, flag collect 0
----- executor 0 signal number : 491
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 2 signal number : 36
executor 0 server cover_cnt 5 output_pos_value 2654
executor 2 server cover_cnt 11 output_pos_value 5198
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 74, 56, 0
before receive testcase: 0 1
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 126
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 13 replies
2023/03/28 11:07:56 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 455 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:56 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 697 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 646 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 360 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 1784 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 1037 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 725 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 41 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 59 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 21 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 36 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 12
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
chown(&(0x7f0000000380)='./file1\x00', 0xee00, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4144
remove dir: /root/glusterfs-client/dfs-0-1134
time breakdown 0: 69, 57, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 74, 56, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 29
-----finish removing dir
receive_execute: 1, 65
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1135 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1135
receive_execute: 2, 65
receive_execute: 3, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 8, 68
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6186, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 6186, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3260, write pid:3261
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 12
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 2, 40
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
time breakdown 3: 76, 45, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 15876, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
----- executor 1 signal number : 789
----- executor 0 signal number : 456
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 9649, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1198
----- executor 1 signal number : 491
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 executes write_coverage_signal cov->size 32334, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 1088
----- executor 0 executes write_coverage_signal cov->size 12871, flag collect 0
----- executor 0 signal number : 566
----- executor 0 executes write_coverage_signal cov->size 7608, flag collect 0
----- executor 0 signal number : 613
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
----- executor 0 signal number : 309
----- executor 0 executes write_coverage_signal cov->size 9364, flag collect 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 42
----- executor 0 executes write_coverage_signal cov->size 13842, flag collect 0
time breakdown 2: 68, 52, 0
before receive testcase: 0 0
----- executor 0 signal number : 814
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 53, 0
before receive testcase: 0 0
executor 0 server cover_cnt 8 output_pos_value 5111
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 122
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 12 replies
2023/03/28 11:07:56 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 0 has 8 replies
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1198 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1088 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 566 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 613 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 309 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 42 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 814 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 11
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0)={0x0, 0x0, 0x0, 0x0, <r1=>0x0})
fstat(r0, &(0x7f0000000440)={0x0, 0x0, 0x0, 0x0, 0x0, <r2=>0x0})
fstat(r0, &(0x7f00000004c0)={0x0, 0x0, 0x0, 0x0, 0x0, <r3=>0x0})
setxattr$system_posix_acl(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340)='system.posix_acl_default\x00', &(0x7f0000000800)=ANY=[@ANYBLOB="02000000010000000000000002000400", @ANYRES32=0xee01, @ANYBLOB="02000100", @ANYRES32=0x0, @ANYBLOB="02000500", @ANYRES32=r1, @ANYBLOB="bc0200050000000000000000d165266480dd900bcc40fd443c1117a086002ecb08a2fd95be4cbd2280a65603573cbd5c06c9963a05bbcaa358d531daf14af70b41f724a599a06b09397552f49db88a6e6c63207738d28222d44bc35cdd0cbfd4a0b2e08149885afc45cbdffccfe9abf26009367a6ebbf60ff77ca9", @ANYRES32=0x0, @ANYBLOB="02000300", @ANYRES32, @ANYBLOB="02000100", @ANYRES32=0xee01, @ANYBLOB="02000e00", @ANYRES32=0x0, @ANYBLOB="02000200", @ANYRES32=0x0, @ANYBLOB="040006000000000008000200", @ANYRES32=0xee01, @ANYBLOB="08000100", @ANYRES32=r2, @ANYBLOB='\b\x00\x00\x00', @ANYRES32=0x0, @ANYBLOB="08000500", @ANYRES32=0x0, @ANYBLOB="08000100", @ANYRES32=r3, @ANYBLOB="10000700000000002000010000000000"], 0x8c, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 4008
remove dir: /root/glusterfs-client/dfs-0-1135
time breakdown 0: 67, 56, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 36
-----finish removing dir
receive_execute: 1, 63
receive_execute: 6, 62
receive_execute: 4, 63
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-1136 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1136
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
execute_one time: 2, 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 10, 66
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4048, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4048, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 4048, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3262, write pid:3263
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 11
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 1, 40
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2809, flag collect 0
----- executor 0 signal number : 446
----- executor 2 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 12390, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 7747, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 1156
----- executor 2 signal number : 728
----- executor 0 executes write_coverage_signal cov->size 26647, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2044, flag collect 0
----- executor 1 signal number : 791
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 491
executor 1 server cover_cnt 4 output_pos_value 2297
----- executor 0 signal number : 1087
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 executes write_coverage_signal cov->size 2920, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 7308, flag collect 0
----- executor 0 signal number : 898
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
time breakdown 3: 76, 44, 0
before receive testcase: 0 0
----- executor 0 signal number : 665
----- executor 0 executes write_coverage_signal cov->size 9643, flag collect 0
----- executor 0 signal number : 115
----- executor 0 executes write_coverage_signal cov->size 16131, flag collect 0
----- executor 0 signal number : 163
----- executor 0 executes write_coverage_signal cov->size 7608, flag collect 0
----- executor 0 signal number : 537
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 52, 0
before receive testcase: 0 0
executor 0 server cover_cnt 10 output_pos_value 5115
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 69, 52, 0
before receive testcase: 0 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 117
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 11 replies
2023/03/28 11:07:56 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 446 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 791 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1156 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1087 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 898 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 665 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 115 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 163 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 537 signal and 0 cover from userspace component
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 10
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0))
fstat(r0, &(0x7f0000000440))
fstat(r0, &(0x7f00000004c0))
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2368
remove dir: /root/glusterfs-client/dfs-0-1136
time breakdown 0: 64, 55, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 49
-----finish removing dir
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-1137 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1137
receive_execute: 3, 77
receive_execute: 6, 77
receive_execute: 6, 77
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 10, 80
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6182, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 6182, flag collect 0
----- executor 3 signal number : 1441
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 7259, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 7259, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3264, write pid:3265
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 10
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 42, 0
execute_one time: 2, 43
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 11098, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 491
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 3419, flag collect 0
----- executor 2 signal number : 619
----- executor 0 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 9623, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1321
----- executor 0 executes write_coverage_signal cov->size 8669, flag collect 0
----- executor 2 signal number : 492
----- executor 0 signal number : 695
executor 1 server cover_cnt 4 output_pos_value 2295
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1044
----- executor 0 executes write_coverage_signal cov->size 9631, flag collect 0
----- executor 0 signal number : 394
----- executor 0 executes write_coverage_signal cov->size 4521, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 12483, flag collect 0
----- executor 0 signal number : 670
----- executor 0 executes write_coverage_signal cov->size 10616, flag collect 0
time breakdown 3: 90, 47, 0
before receive testcase: 0 0
----- executor 0 signal number : 794
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
----- executor 0 signal number : 342
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 83, 55, 0
executor 0 server cover_cnt 10 output_pos_value 5771
time breakdown 2: 83, 55, 0
before receive testcase: 0 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 135
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 10 replies
2023/03/28 11:07:56 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:56 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 1441 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1321 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 695 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1044 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 394 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 670 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 794 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 342 signal and 0 cover from userspace component
time breakdown 0: 81, 57, 0
before receive testcase: 0 1
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 9
before receive testcase: 0 0
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0))
fstat(r0, &(0x7f0000000440))
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2272
remove dir: /root/glusterfs-client/dfs-0-1137
remove dir time 30
-----finish removing dir
receive_execute: 6, 88
mkdir time 57
executor 3 create dir /root/glusterfs-client/dfs-0-1138 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1138
receive_execute: 3, 89
receive_execute: 0, 88
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 3, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 11, 91
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6204, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 6204, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3266, write pid:3267
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 9
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 33, 0
execute_one time: 1, 34
executor 2 write_server_output
time breakdown 3: 102, 37, 0
executor 1 write_server_output
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1118
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 789
----- executor 0 signal number : 215
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 491
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 2 executes write_coverage_signal cov->size 3419, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 11098, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 10596, flag collect 0
----- executor 2 signal number : 2182
----- executor 2 executes write_coverage_signal cov->size 8666, flag collect 0
----- executor 2 signal number : 571
----- executor 2 executes write_coverage_signal cov->size 18527, flag collect 0
----- executor 2 signal number : 424
----- executor 2 executes write_coverage_signal cov->size 7762, flag collect 0
----- executor 2 signal number : 90
----- executor 2 executes write_coverage_signal cov->size 10860, flag collect 0
----- executor 2 signal number : 1007
----- executor 2 executes write_coverage_signal cov->size 4793, flag collect 0
----- executor 2 signal number : 51
----- executor 2 executes write_coverage_signal cov->size 6368, flag collect 0
----- executor 2 signal number : 43
----- executor 2 executes write_coverage_signal cov->size 9521, flag collect 0
----- executor 2 signal number : 149
----- executor 2 executes write_coverage_signal cov->size 3640, flag collect 0
----- executor 2 signal number : 223
executor 2 server cover_cnt 11 output_pos_value 5232
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 92, 44, 0
before receive testcase: 0 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 88, 45, 0
before receive testcase: 0 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 134
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 9 replies
2023/03/28 11:07:56 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:56 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 2182 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 571 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 90 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 1007 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 51 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 43 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 149 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 223 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 8
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
fstat(0xffffffffffffffff, &(0x7f00000003c0))
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2176
remove dir: /root/glusterfs-client/dfs-0-1138
time breakdown 2: 94, 46, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-1139 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1139
receive_execute: 3, 57
receive_execute: 2, 57
receive_execute: 3, 57
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 8, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 773, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 773, flag collect 0
----- executor 3 signal number : 1
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3268, write pid:3269
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 33
----- completed 8
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 45, 0
execute_one time: 1, 45
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 2 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 12432, flag collect 0
----- executor 1 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 444
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 456
----- executor 2 executes write_coverage_signal cov->size 2081, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12641, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3259, flag collect 0
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 654
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 492
----- executor 0 signal number : 614
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 2603
----- executor 2 executes write_coverage_signal cov->size 26189, flag collect 0
----- executor 0 signal number : 648
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
executor 1 server cover_cnt 5 output_pos_value 2302
----- executor 0 signal number : 201
time breakdown 3: 68, 48, 0
before receive testcase: 0 0
----- executor 2 signal number : 936
----- executor 2 executes write_coverage_signal cov->size 2261, flag collect 0
----- executor 2 signal number : 82
----- executor 2 executes write_coverage_signal cov->size 11123, flag collect 0
executor 0 server cover_cnt 5 output_pos_value 2577
----- executor 2 signal number : 397
----- executor 2 executes write_coverage_signal cov->size 4200, flag collect 0
----- executor 2 signal number : 30
----- executor 2 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 2 signal number : 602
----- executor 2 executes write_coverage_signal cov->size 6381, flag collect 0
----- executor 2 signal number : 68
----- executor 2 executes write_coverage_signal cov->size 5771, flag collect 0
----- executor 2 signal number : 38
----- executor 2 executes write_coverage_signal cov->size 6144, flag collect 0
----- executor 2 signal number : 31
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 12 output_pos_value 5283
time breakdown 1: 60, 56, 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 116
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 8 replies
2023/03/28 11:07:56 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 1 has 5 replies
2023/03/28 11:07:56 [SERVER] executor 2 has 12 replies
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 2603 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 936 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 654 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 614 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 648 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 201 signal and 0 cover from userspace component
time breakdown 2: 59, 59, 0
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 397 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 30 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 602 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 68 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 33 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 38 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 31 signal and 0 cover from userspace component
time breakdown 0: 61, 55, 0
before receive testcase: 0 0
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 7
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2104
remove dir: /root/glusterfs-client/dfs-0-1139
remove dir time 36
-----finish removing dir
receive_execute: 6, 64
receive_execute: 3, 64
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1140 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1140
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 3, 63
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 1, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 11, 66
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6182, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 6182, flag collect 0
----- executor 3 signal number : 1441
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 7745, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 7745, flag collect 0
----- executor 3 signal number : 172
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3270, write pid:3271
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 42, 0
execute_one time: 1, 43
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 77, 45, 0
executor 0 write_server_output
before receive testcase: 0 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1870, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
----- executor 2 signal number : 645
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 13811, flag collect 0
----- executor 1 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 615
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 459
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 7747, flag collect 0
----- executor 0 signal number : 1156
----- executor 0 executes write_coverage_signal cov->size 742, flag collect 0
----- executor 0 signal number : 305
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 26717, flag collect 0
----- executor 1 signal number : 492
----- executor 2 executes write_coverage_signal cov->size 817, flag collect 0
----- executor 2 signal number : 98
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 491
executor 2 server cover_cnt 6 output_pos_value 2327
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 789
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 709
----- executor 0 executes write_coverage_signal cov->size 14447, flag collect 0
----- executor 0 signal number : 141
----- executor 0 executes write_coverage_signal cov->size 8967, flag collect 0
----- executor 0 signal number : 858
----- executor 0 executes write_coverage_signal cov->size 9259, flag collect 0
----- executor 0 signal number : 593
----- executor 0 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 0 signal number : 107
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 11 output_pos_value 5152
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 118
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 7 replies
2023/03/28 11:07:56 [SERVER] executor 0 has 11 replies
2023/03/28 11:07:56 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 1441 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 172 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 1156 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 305 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 709 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 141 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 858 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 593 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 107 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 645 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 615 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 459 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 98 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 7
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2104
time breakdown 2: 66, 53, 0
before receive testcase: 0 0
remove dir: /root/glusterfs-client/dfs-0-1140
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 67, 52, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 70, 54, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-1141 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1141
receive_execute: 1, 55
receive_execute: 3, 55
receive_execute: 3, 55
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 60
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6188, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 6188, flag collect 0
----- executor 3 signal number : 1443
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 7266, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 7266, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 1
----- completed 4
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3272, write pid:3273
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 1, 43, 0
execute_one time: 1, 44
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 68, 48, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 11797, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 444
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 8364, flag collect 0
----- executor 2 signal number : 491
----- executor 0 executes write_coverage_signal cov->size 3354, flag collect 0
----- executor 0 signal number : 677
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 1493
----- executor 1 executes write_coverage_signal cov->size 19259, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 614
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 648
----- executor 1 signal number : 1000
----- executor 1 executes write_coverage_signal cov->size 7927, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 201
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 9847, flag collect 0
executor 0 server cover_cnt 5 output_pos_value 2600
----- executor 1 signal number : 1508
----- executor 1 executes write_coverage_signal cov->size 11603, flag collect 0
----- executor 1 signal number : 194
----- executor 1 executes write_coverage_signal cov->size 8099, flag collect 0
----- executor 1 signal number : 50
----- executor 1 executes write_coverage_signal cov->size 15652, flag collect 0
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 399
time breakdown 2: 58, 56, 0
before receive testcase: 0 0
executor 1 server cover_cnt 9 output_pos_value 5208
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:56 for select break: 1
2023/03/28 11:07:56 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:56 wg wait finish
2023/03/28 11:07:56 ------ all executors finish execution
2023/03/28 11:07:56 exec time: 114
2023/03/28 11:07:56 ----- PS len: 4
2023/03/28 11:07:56 [CLIENT] executor 3 has 7 replies
2023/03/28 11:07:56 fuzzer receive 1443 signal and 0 cover from executor 3
2023/03/28 11:07:56 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:56 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 677 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:56 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 1493 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 1000 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 1508 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 194 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 50 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 1 receive 399 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 614 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 648 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 0 receive 201 signal and 0 cover from userspace component
2023/03/28 11:07:56 ------- fuzzer executor 2 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:56 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:56 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:56 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:56 prog length: 7
2023/03/28 11:07:56 HasCrashFail:false HasNetFail:false
11:07:56 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
r0 = openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
faccessat(r0, &(0x7f00000002c0)='./file1\x00', 0x4a)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 2104
remove dir: /root/glusterfs-client/dfs-0-1141
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 1: 58, 59, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 56, 57, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 48
-----finish removing dir
receive_execute: 3, 102
mkdir time 55
executor 3 create dir /root/glusterfs-client/dfs-0-1142 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1142
receive_execute: 2, 102
receive_execute: 5, 102
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 7, 109
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 7261, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 7261, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 4042, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 4042, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4043, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 4043, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3274, write pid:3275
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 7
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 35, 0
execute_one time: 1, 35
executor 1 write_server_output
time breakdown 3: 116, 38, 0
executor 0 write_server_output
before receive testcase: 0 1
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1404, flag collect 0
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 1354, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 448
----- executor 1 executes write_coverage_signal cov->size 13111, flag collect 0
----- executor 0 signal number : 11
----- executor 2 signal number : 215
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 1 signal number : 10
----- executor 1 executes write_coverage_signal cov->size 4433, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 727, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 112
----- executor 1 signal number : 1437
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 723
----- executor 0 executes write_coverage_signal cov->size 6380, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 25728, flag collect 0
----- executor 0 signal number : 730
executor 0 server cover_cnt 7 output_pos_value 2665
----- executor 1 signal number : 1094
----- executor 1 executes write_coverage_signal cov->size 1458, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 17015, flag collect 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 107, 48, 0
before receive testcase: 0 0
----- executor 1 signal number : 1456
----- executor 1 executes write_coverage_signal cov->size 14116, flag collect 0
----- executor 1 signal number : 369
----- executor 1 executes write_coverage_signal cov->size 9996, flag collect 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 268
----- executor 1 executes write_coverage_signal cov->size 7978, flag collect 0
----- executor 1 signal number : 107
executor 1 server cover_cnt 9 output_pos_value 5224
time breakdown 0: 105, 50, 0
before receive testcase: 0 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 156
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [CLIENT] executor 3 has 7 replies
2023/03/28 11:07:57 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:57 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 448 signal and 0 cover from userspace component
2023/03/28 11:07:57 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1437 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1094 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1456 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 369 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 268 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 107 signal and 0 cover from userspace component
2023/03/28 11:07:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 34 signal and 0 cover from executor 3
time breakdown 1: 104, 54, 0
2023/03/28 11:07:57 [SERVER] executor 0 has 7 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 112 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 723 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 730 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 6
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
openat(0xffffffffffffff9c, &(0x7f0000000280)='./file1\x00', 0x101200, 0x6)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1944
remove dir: /root/glusterfs-client/dfs-0-1142
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 28
-----finish removing dir
receive_execute: 9, 63
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-1143 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1143
receive_execute: 11, 63
receive_execute: 3, 63
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 15, 66
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3276, write pid:3277
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7959, pid 3276, write pid:3277
----- executor 3 executes write_coverage_signal cov->size 7959, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 7263, pid 3276, write pid:3277
----- executor 3 executes write_coverage_signal cov->size 7263, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4051, pid 3276, write pid:3277
----- executor 3 executes write_coverage_signal cov->size 4051, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4037, pid 3276, write pid:3277
----- executor 3 executes write_coverage_signal cov->size 4037, flag collect 0
----- executor 3 signal number : 2
----- completed 5
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3276, write pid:3277
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 6
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 1, 31
time breakdown 3: 81, 33, 0
executor 0 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 13813, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 459
----- executor 0 executes write_coverage_signal cov->size 703, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 12478, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 505
----- executor 0 signal number : 2058
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 742, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 299
----- executor 1 signal number : 215
----- executor 0 executes write_coverage_signal cov->size 26458, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 784
----- executor 0 executes write_coverage_signal cov->size 4521, flag collect 0
----- executor 0 signal number : 63
----- executor 0 executes write_coverage_signal cov->size 9374, flag collect 0
----- executor 0 signal number : 781
----- executor 0 executes write_coverage_signal cov->size 9631, flag collect 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 74, 40, 0
before receive testcase: 0 0
----- executor 0 signal number : 298
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
----- executor 0 signal number : 318
----- executor 0 executes write_coverage_signal cov->size 9623, flag collect 0
----- executor 0 signal number : 68
executor 0 server cover_cnt 10 output_pos_value 5159
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 66, 42, 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 108
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [CLIENT] executor 3 has 6 replies
2023/03/28 11:07:57 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:57 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 459 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 2058 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 784 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 63 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 781 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 298 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 318 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 68 signal and 0 cover from userspace component
2023/03/28 11:07:57 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:57 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 5
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$security_selinux(&(0x7f0000000140)='./file1\x00', &(0x7f0000000180), &(0x7f00000001c0)='system_u:object_r:mtrr_device_t:s0\x00', 0x23, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1784
remove dir: /root/glusterfs-client/dfs-0-1143
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 73, 45, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 40
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-1144 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1144
receive_execute: 1, 66
receive_execute: 1, 66
receive_execute: 6, 67
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 2
receive_execute: 10, 70
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 2
----- executor 3 write_call_output, size 6177, pid 3278, write pid:3279
----- executor 3 executes write_coverage_signal cov->size 6177, flag collect 0
----- executor 3 signal number : 1441
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7962, pid 3278, write pid:3279
----- executor 3 executes write_coverage_signal cov->size 7962, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7247, pid 3278, write pid:3279
----- executor 3 executes write_coverage_signal cov->size 7247, flag collect 0
----- executor 3 signal number : 108
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3278, write pid:3279
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3278, write pid:3279
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 5
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2107, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 446
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 11739, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 9649, flag collect 0
----- executor 1 signal number : 215
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 1198
----- executor 0 executes write_coverage_signal cov->size 22632, flag collect 0
----- executor 2 signal number : 728
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
----- executor 0 signal number : 1075
----- executor 0 executes write_coverage_signal cov->size 2201, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 6417, flag collect 0
----- executor 0 signal number : 384
----- executor 0 executes write_coverage_signal cov->size 12608, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 207
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
time breakdown 3: 81, 26, 0
before receive testcase: 0 0
----- executor 0 signal number : 598
----- executor 0 executes write_coverage_signal cov->size 9143, flag collect 0
----- executor 0 signal number : 782
----- executor 0 executes write_coverage_signal cov->size 8321, flag collect 0
----- executor 0 signal number : 321
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 67, 35, 0
executor 0 server cover_cnt 10 output_pos_value 5057
before receive testcase: 0 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 73, 35, 0
before receive testcase: 0 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 103
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [CLIENT] executor 3 has 5 replies
2023/03/28 11:07:57 fuzzer receive 1441 signal and 0 cover from executor 3
2023/03/28 11:07:57 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:57 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 446 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:57 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 1198 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 1075 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 384 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 207 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 598 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 782 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 321 signal and 0 cover from userspace component
2023/03/28 11:07:57 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 108 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 4
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1472
executor 1: prog_data_offset 1320, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-1144
time breakdown 0: 67, 37, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 41
-----finish removing dir
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-1145 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1145
receive_execute: 1, 71
receive_execute: 2, 71
executor 2 before execute_one
receive_execute: 3, 72
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 74
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3280, write pid:3281
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3280, write pid:3281
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7268, pid 3280, write pid:3281
----- executor 3 executes write_coverage_signal cov->size 7268, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3280, write pid:3281
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 4
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 24, 1
execute_one time: 1, 25
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 82, 27, 0
executor 0 write_server_output
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 215
executor 0 server cover_cnt 4 output_pos_value 2295
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 491
executor 1 server cover_cnt 4 output_pos_value 2295
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 10395, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 2764, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 4832, flag collect 0
----- executor 2 signal number : 1156
----- executor 2 executes write_coverage_signal cov->size 17807, flag collect 0
----- executor 2 signal number : 1005
----- executor 2 executes write_coverage_signal cov->size 4646, flag collect 0
----- executor 2 signal number : 76
----- executor 2 executes write_coverage_signal cov->size 7764, flag collect 0
----- executor 2 signal number : 64
----- executor 2 executes write_coverage_signal cov->size 6337, flag collect 0
----- executor 2 signal number : 193
----- executor 2 executes write_coverage_signal cov->size 6422, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9404, flag collect 0
----- executor 2 signal number : 1142
----- executor 2 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 2 signal number : 772
----- executor 2 executes write_coverage_signal cov->size 6295, flag collect 0
----- executor 2 signal number : 124
executor 2 server cover_cnt 11 output_pos_value 5028
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 107
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [CLIENT] executor 3 has 4 replies
2023/03/28 11:07:57 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:57 [SERVER] executor 2 has 11 replies
2023/03/28 11:07:57 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
time breakdown 2: 73, 36, 0
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 1156 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 1005 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 76 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 64 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 193 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 1142 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 772 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 124 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:57 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 3
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1384
remove dir: /root/glusterfs-client/dfs-0-1145
time breakdown 1: 75, 33, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 73, 35, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 49
-----finish removing dir
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-1146 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1146
receive_execute: 2, 79
receive_execute: 3, 79
receive_execute: 1, 79
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 7, 82
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3282, write pid:3283
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3282, write pid:3283
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 3211, pid 3282, write pid:3283
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 26, 0
execute_one time: 1, 27
executor 1 write_server_output
executor 0 write_server_output
time breakdown 3: 89, 30, 0
executor 2 write_server_output
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 12468, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 444
----- executor 0 signal number : 789
----- executor 1 signal number : 456
----- executor 1 executes write_coverage_signal cov->size 4728, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3469, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 1126
----- executor 1 executes write_coverage_signal cov->size 20043, flag collect 0
----- executor 0 signal number : 558
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 697
----- executor 0 signal number : 491
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 612
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 1081
----- executor 1 executes write_coverage_signal cov->size 14149, flag collect 0
----- executor 2 signal number : 648
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 1215
----- executor 1 executes write_coverage_signal cov->size 4433, flag collect 0
----- executor 1 signal number : 699
----- executor 1 executes write_coverage_signal cov->size 14184, flag collect 0
----- executor 2 signal number : 201
executor 2 server cover_cnt 5 output_pos_value 2618
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 336
----- executor 1 executes write_coverage_signal cov->size 6356, flag collect 0
----- executor 1 signal number : 118
executor 1 server cover_cnt 7 output_pos_value 5053
time breakdown 2: 80, 40, 0
time breakdown 1: 82, 40, 0
before receive testcase: 0 1
2023/03/28 11:07:57 for select break: 1
before receive testcase: 0 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 119
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:57 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:57 [SERVER] executor 1 has 7 replies
2023/03/28 11:07:57 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:57 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1126 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1081 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1215 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 699 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 336 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 118 signal and 0 cover from userspace component
2023/03/28 11:07:57 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 558 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 491 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 697 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 612 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 648 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 201 signal and 0 cover from userspace component
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
time breakdown 0: 81, 38, 0
before receive testcase: 0 0
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 3
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1384
remove dir: /root/glusterfs-client/dfs-0-1146
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-1147 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1147
receive_execute: 3, 62
receive_execute: 2, 61
receive_execute: 2, 61
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
receive_execute: 8, 65
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6188, pid 3284, write pid:3285
----- executor 3 executes write_coverage_signal cov->size 6188, flag collect 0
----- executor 3 signal number : 1443
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3284, write pid:3285
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 3403, pid 3284, write pid:3285
----- executor 3 executes write_coverage_signal cov->size 3403, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 0, 25
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 73, 28, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2083, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 456
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 10399, flag collect 0
----- executor 2 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 0
----- executor 2 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 9705, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 492
----- executor 2 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 1629
----- executor 1 executes write_coverage_signal cov->size 17945, flag collect 0
----- executor 2 signal number : 215
executor 0 server cover_cnt 4 output_pos_value 2296
----- executor 1 signal number : 993
----- executor 1 executes write_coverage_signal cov->size 2269, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 1 signal number : 79
----- executor 1 executes write_coverage_signal cov->size 8199, flag collect 0
----- executor 1 signal number : 1225
----- executor 1 executes write_coverage_signal cov->size 6766, flag collect 0
----- executor 1 signal number : 410
----- executor 1 executes write_coverage_signal cov->size 12451, flag collect 0
----- executor 1 signal number : 151
----- executor 1 executes write_coverage_signal cov->size 8374, flag collect 0
----- executor 1 signal number : 185
executor 1 server cover_cnt 9 output_pos_value 5156
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
time breakdown 0: 65, 36, 0
time breakdown 2: 63, 37, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 101
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:57 fuzzer receive 1443 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 11:07:57 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 456 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1629 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 993 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 79 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1225 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 410 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 151 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 185 signal and 0 cover from userspace component
2023/03/28 11:07:57 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:07:57 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 2
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/glusterfs-client/dfs-0-1147
time breakdown 1: 63, 40, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 31
-----finish removing dir
receive_execute: 5, 70
receive_execute: 2, 71
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1148 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1148
receive_execute: 5, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 11, 73
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3286, write pid:3287
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3286, write pid:3287
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 16
executor 3, execute_one inner time: 0, 23, 0
execute_one time: 1, 23
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 84, 26, 0
executor 1 write_server_output
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 1 signal number : 658
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 635
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 505
----- executor 0 signal number : 1004
----- executor 1 signal number : 166
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 9108, flag collect 0
----- executor 1 signal number : 8
----- executor 2 signal number : 1562
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
executor 1 server cover_cnt 6 output_pos_value 3048
----- executor 2 signal number : 331
executor 2 server cover_cnt 4 output_pos_value 2854
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 76, 33, 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 104
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:57 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:57 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:57 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:57 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 658 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 635 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 166 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
time breakdown 1: 73, 33, 0
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 1562 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 2
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 75, 33, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/glusterfs-client/dfs-0-1148
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 35
-----finish removing dir
mkdir time 45
executor 3 create dir /root/glusterfs-client/dfs-0-1149 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1149
receive_execute: 2, 80
receive_execute: 0, 80
receive_execute: 0, 77
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 6, 83
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- executor 3 write_call_output, size 6207, pid 3288, write pid:3289
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3288, write pid:3289
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 14, 0
execute_one time: 1, 14
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
executor 2 write_server_output
executor 0 write_server_output
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 signal number : 1197
----- executor 1 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
time breakdown 3: 89, 17, 0
before receive testcase: 0 0
----- executor 0 signal number : 505
----- executor 1 signal number : 697
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 389
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 1 signal number : 293
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 254
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
executor 1 server cover_cnt 6 output_pos_value 3046
----- executor 2 signal number : 791
executor 2 server cover_cnt 4 output_pos_value 2006
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 82, 24, 0
before receive testcase: 0 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 81, 24, 0
before receive testcase: 0 0
time breakdown 2: 77, 26, 0
2023/03/28 11:07:57 for select break: 1
2023/03/28 11:07:57 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:57 wg wait finish
2023/03/28 11:07:57 ------ all executors finish execution
2023/03/28 11:07:57 exec time: 109
2023/03/28 11:07:57 ----- PS len: 4
2023/03/28 11:07:57 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:57 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 254 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 2 receive 791 signal and 0 cover from userspace component
2023/03/28 11:07:57 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:57 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:57 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:57 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 1197 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 697 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 389 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/28 11:07:57 ------- fuzzer executor 1 receive 293 signal and 0 cover from userspace component
2023/03/28 11:07:57 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:57 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:57 prog length: 2
2023/03/28 11:07:57 HasCrashFail:false HasNetFail:false
11:07:57 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1184
remove dir: /root/glusterfs-client/dfs-0-1149
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 36
-----finish removing dir
receive_execute: 0, 71
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-1150 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1150
receive_execute: 6, 70
receive_execute: 5, 71
executor 1 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
receive_execute: 10, 78
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6211, pid 3290, write pid:3291
----- executor 3 executes write_coverage_signal cov->size 6211, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 5270, pid 3290, write pid:3291
----- executor 3 executes write_coverage_signal cov->size 5270, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 1, 23, 0
execute_one time: 1, 24
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 88, 27, 0
before receive testcase: 0 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
----- executor 2 signal number : 787
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 987
----- executor 2 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 2 signal number : 191
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 604
executor 2 server cover_cnt 6 output_pos_value 3047
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 76, 39, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 76, 39, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 114
time breakdown 2: 71, 43, 0
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:58 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 787 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 987 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 191 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 604 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 2
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1208
remove dir: /root/glusterfs-client/dfs-0-1150
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 42
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1151 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1151
receive_execute: 5, 76
receive_execute: 1, 76
receive_execute: 7, 76
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 11, 82
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4151, pid 3292, write pid:3293
----- executor 3 executes write_coverage_signal cov->size 4151, flag collect 0
----- executor 3 signal number : 1242
----- completed 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4058, pid 3292, write pid:3293
----- executor 3 executes write_coverage_signal cov->size 4058, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 1, 6, 0
execute_one time: 1, 7
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
time breakdown 3: 93, 11, 0
before receive testcase: 0 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 signal number : 443
----- executor 0 signal number : 444
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 505
----- executor 1 signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 897
----- executor 0 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 599
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 370
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 3
executor 0 server cover_cnt 5 output_pos_value 2329
time breakdown 2: 77, 21, 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 81, 21, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 99
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:58 fuzzer receive 1242 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 0 has 5 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 897 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 599 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 370 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:58 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
time breakdown 0: 83, 22, 0
before receive testcase: 0 0
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 2
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1208
remove dir: /root/glusterfs-client/dfs-0-1151
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 24
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-1152 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1152
receive_execute: 2, 56
receive_execute: 1, 56
receive_execute: 1, 55
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 5, 1
receive_execute: 6, 63
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3294, write pid:3295
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3294, write pid:3295
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 1, 7
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 69, 9, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 707, flag collect 0
----- executor 1 signal number : 1004
----- executor 2 signal number : 444
----- executor 0 signal number : 446
----- executor 2 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 670, flag collect 0
----- executor 0 signal number : 13
----- executor 2 signal number : 685
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 504
----- executor 0 executes write_coverage_signal cov->size 727, flag collect 0
----- executor 2 signal number : 809
----- executor 0 signal number : 149
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 1634, flag collect 0
----- executor 0 signal number : 249
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 370
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 5
executor 2 server cover_cnt 5 output_pos_value 2329
executor 0 server cover_cnt 6 output_pos_value 2384
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 57, 21, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 78
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:58 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:58 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 446 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 685 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 504 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 149 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 809 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 370 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 249 signal and 0 cover from userspace component
time breakdown 0: 56, 22, 0
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 2
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1208
remove dir: /root/glusterfs-client/dfs-0-1152
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 58, 20, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 42
executor 3 create dir /root/glusterfs-client/dfs-0-1153 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1153
receive_execute: 0, 71
receive_execute: 2, 74
receive_execute: 2, 73
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
receive_execute: 6, 76
execute_one time: 1, 2
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4137, pid 3296, write pid:3297
----- executor 3 executes write_coverage_signal cov->size 4137, flag collect 0
----- executor 3 signal number : 1241
----- completed 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3296, write pid:3297
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 1, 10
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 82, 15, 0
executor 0 write_server_output
executor 1 write_server_output
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 1 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 3559, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 671
----- executor 1 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 589
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 0 signal number : 638
----- executor 1 signal number : 1004
executor 0 server cover_cnt 4 output_pos_value 2354
executor 1 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 95
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:58 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
time breakdown 0: 71, 22, 0
before receive testcase: 0 0
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 671 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 589 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 638 signal and 0 cover from userspace component
2023/03/28 11:07:58 [CLIENT] executor 3 has 2 replies
2023/03/28 11:07:58 fuzzer receive 1241 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 711 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 784 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 371 signal and 0 cover from userspace component
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(0x0, 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1153
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 8234, flag collect 0
----- executor 2 signal number : 711
----- executor 2 executes write_coverage_signal cov->size 2602, flag collect 0
----- executor 2 signal number : 784
----- executor 2 executes write_coverage_signal cov->size 2602, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 371
executor 2 server cover_cnt 5 output_pos_value 2328
time breakdown 1: 75, 22, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 76, 21, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 1, 50
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-1154 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1154
receive_execute: 1, 51
receive_execute: 2, 50
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 53
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3298, write pid:3299
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4154, pid 3298, write pid:3299
----- executor 3 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 3 signal number : 1244
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4061, pid 3298, write pid:3299
----- executor 3 executes write_coverage_signal cov->size 4061, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 8, 0
execute_one time: 1, 8
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 59, 12, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 0 signal number : 541
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 695
----- executor 1 executes write_coverage_signal cov->size 7329, flag collect 0
----- executor 2 signal number : 505
----- executor 0 signal number : 969
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 659
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
executor 0 server cover_cnt 3 output_pos_value 1963
----- executor 2 signal number : 1004
----- executor 1 signal number : 449
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 372
executor 2 server cover_cnt 3 output_pos_value 1962
executor 1 server cover_cnt 6 output_pos_value 2646
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 52, 18, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 52, 19, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 70
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 fuzzer receive 1244 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 695 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 659 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 449 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
time breakdown 1: 52, 19, 0
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 372 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 541 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 969 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(0x0, 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1154
remove dir time 31
-----finish removing dir
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1155 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1155
receive_execute: 2, 71
receive_execute: 2, 71
receive_execute: 1, 71
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
receive_execute: 6, 75
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3300, write pid:3301
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4129, pid 3300, write pid:3301
----- executor 3 executes write_coverage_signal cov->size 4129, flag collect 0
----- executor 3 signal number : 1239
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3300, write pid:3301
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 1, 7
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2744, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 7700, flag collect 0
----- executor 2 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 668
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 246
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 184
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 10
----- executor 1 signal number : 391
executor 0 server cover_cnt 6 output_pos_value 2702
executor 2 server cover_cnt 3 output_pos_value 1962
executor 1 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
time breakdown 3: 81, 10, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 90
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
time breakdown 2: 73, 18, 0
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 1239 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:58 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:58 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 668 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 246 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 184 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 391 signal and 0 cover from userspace component
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(0x0, 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1155
time breakdown 1: 72, 19, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 73, 18, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 23
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1156 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1156
receive_execute: 1, 49
receive_execute: 2, 50
receive_execute: 1, 50
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
receive_execute: 5, 54
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3302, write pid:3303
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3302, write pid:3303
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 2
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3302, write pid:3303
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 1, 9
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 signal number : 443
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1386, flag collect 0
----- executor 2 signal number : 685
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 809
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 455
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 1 signal number : 655
----- executor 2 signal number : 370
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 2326
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 247
time breakdown 3: 59, 13, 0
before receive testcase: 0 0
executor 1 server cover_cnt 4 output_pos_value 2374
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 73
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:58 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 655 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 685 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 809 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 370 signal and 0 cover from userspace component
2023/03/28 11:07:58 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 247 signal and 0 cover from userspace component
time breakdown 1: 50, 24, 0
time breakdown 2: 51, 20, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1156
time breakdown 0: 52, 20, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 33
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1157 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1157
receive_execute: 1, 68
receive_execute: 6, 69
receive_execute: 6, 69
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 0
receive_execute: 9, 74
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3304, write pid:3305
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4154, pid 3304, write pid:3305
----- executor 3 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 3 signal number : 1244
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4061, pid 3304, write pid:3305
----- executor 3 executes write_coverage_signal cov->size 4061, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 1, 8
time breakdown 3: 83, 10, 0
before receive testcase: 0 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 443
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
executor 0 server cover_cnt 3 output_pos_value 1962
----- executor 1 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6970, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 556
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 1004
----- executor 1 signal number : 195
----- executor 1 executes write_coverage_signal cov->size 13889, flag collect 0
----- executor 1 signal number : 719
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 6
executor 2 server cover_cnt 3 output_pos_value 1962
executor 1 server cover_cnt 6 output_pos_value 3057
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 75, 21, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 90
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 1244 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 556 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 195 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 719 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1157
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 75, 19, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 1: 70, 21, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1158 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1158
receive_execute: 4, 74
receive_execute: 2, 74
receive_execute: 1, 75
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 7, 78
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3306, write pid:3307
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4154, pid 3306, write pid:3307
----- executor 3 executes write_coverage_signal cov->size 4154, flag collect 0
----- executor 3 signal number : 1244
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 4061, pid 3306, write pid:3307
----- executor 3 executes write_coverage_signal cov->size 4061, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 1, 14, 0
execute_one time: 1, 15
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 897
----- executor 1 executes write_coverage_signal cov->size 7206, flag collect 0
time breakdown 3: 85, 18, 0
before receive testcase: 0 1
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 634
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
----- executor 1 signal number : 370
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 244
executor 2 server cover_cnt 3 output_pos_value 1962
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
executor 0 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 78, 25, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 100
executor 1 server cover_cnt 6 output_pos_value 2612
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 1244 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
time breakdown 2: 76, 25, 0
2023/03/28 11:07:58 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
before receive testcase: 0 0
time breakdown 1: 76, 25, 0
before receive testcase: 0 0
2023/03/28 11:07:58 [SERVER] executor 1 has 6 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 897 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 634 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 370 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 244 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1158
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 37
-----finish removing dir
mkdir time 46
executor 3 create dir /root/glusterfs-client/dfs-0-1159 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1159
receive_execute: 2, 82
receive_execute: 2, 82
receive_execute: 2, 83
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 86
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3308, write pid:3309
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4156, pid 3308, write pid:3309
----- executor 3 executes write_coverage_signal cov->size 4156, flag collect 0
----- executor 3 signal number : 1245
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4063, pid 3308, write pid:3309
----- executor 3 executes write_coverage_signal cov->size 4063, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 7, 0
execute_one time: 1, 7
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 92, 10, 0
executor 2 write_server_output
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1226, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 455
----- executor 1 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3635, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 691
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2602, flag collect 0
----- executor 0 signal number : 969
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 1004
----- executor 0 signal number : 248
----- executor 2 signal number : 872
----- executor 2 executes write_coverage_signal cov->size 7602, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 2376
----- executor 2 signal number : 625
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 371
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 3
executor 2 server cover_cnt 5 output_pos_value 2331
executor 1 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 84, 17, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 84, 18, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 101
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:58 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/03/28 11:07:58 fuzzer receive 1245 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 691 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 969 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 872 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 248 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 625 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 371 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
time breakdown 2: 85, 19, 0
before receive testcase: 0 0
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, 0x0, 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1159
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 28
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-1160 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1160
receive_execute: 2, 53
receive_execute: 4, 53
receive_execute: 3, 54
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 1
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 8, 57
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3310, write pid:3311
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3310, write pid:3311
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5265, pid 3310, write pid:3311
----- executor 3 executes write_coverage_signal cov->size 5265, flag collect 0
----- executor 3 signal number : 298
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
time breakdown 3: 65, 16, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 1386, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 457
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 1117
----- executor 0 signal number : 787
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3635, flag collect 0
----- executor 0 signal number : 1103
----- executor 1 signal number : 543
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 389
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 248
----- executor 0 signal number : 297
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 15
executor 1 server cover_cnt 4 output_pos_value 2378
executor 0 server cover_cnt 6 output_pos_value 3054
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 1 receive reply, reply.done 1
time breakdown 0: 57, 24, 0
before receive testcase: 0 1
time breakdown 1: 58, 23, 0
before receive testcase: 0 0
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
executor 2 server cover_cnt 3 output_pos_value 1962
2023/03/28 11:07:58 for select break: 1
2023/03/28 11:07:58 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:58 wg wait finish
2023/03/28 11:07:58 ------ all executors finish execution
2023/03/28 11:07:58 exec time: 92
2023/03/28 11:07:58 ----- PS len: 4
2023/03/28 11:07:58 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:58 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:58 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 55, 39, 0
2023/03/28 11:07:58 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:58 [SERVER] executor 1 has 4 replies
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 1117 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 543 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 1 receive 248 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:58 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 787 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 1103 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 389 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 297 signal and 0 cover from userspace component
2023/03/28 11:07:58 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/28 11:07:58 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:58 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:58 prog length: 3
2023/03/28 11:07:58 HasCrashFail:false HasNetFail:false
11:07:58 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, 0x0, 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1160
executor 1: prog_data_offset 1320, prog_size 8
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 53
-----finish removing dir
mkdir time 38
executor 3 create dir /root/glusterfs-client/dfs-0-1161 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1161
receive_execute: 1, 91
receive_execute: 14, 91
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
receive_execute: 16, 93
execute_one time: 1, 1
receive_execute: 20, 93
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 4, 1
----- executor 3 write_call_output, size 6205, pid 3312, write pid:3313
----- executor 3 executes write_coverage_signal cov->size 6205, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3312, write pid:3313
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5270, pid 3312, write pid:3313
----- executor 3 executes write_coverage_signal cov->size 5270, flag collect 0
----- executor 3 signal number : 298
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 1, 20, 0
execute_one time: 1, 21
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 signal number : 444
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 802, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 2 signal number : 1197
----- executor 2 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 2 signal number : 697
----- executor 1 signal number : 247
executor 1 server cover_cnt 1 output_pos_value 251
----- executor 2 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 2 signal number : 389
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 293
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 11
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 2750, flag collect 0
----- executor 0 signal number : 618
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 612
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 648
executor 0 server cover_cnt 4 output_pos_value 2334
time breakdown 0: 106, 28, 0
executor 2 server cover_cnt 6 output_pos_value 3050
before receive testcase: 0 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 109, 28, 0
before receive testcase: 0 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 122
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:59 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 1 has 1 replies
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 247 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 618 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 612 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 648 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 2 has 6 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1197 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 697 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 389 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 293 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, 0x0, 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
time breakdown 3: 113, 24, 0
before receive testcase: 0 1
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1161
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 92, 31, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 33
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1162 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1162
receive_execute: 3, 64
receive_execute: 2, 64
receive_execute: 0, 65
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 5, 67
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3314, write pid:3315
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3314, write pid:3315
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5265, pid 3314, write pid:3315
----- executor 3 executes write_coverage_signal cov->size 5265, flag collect 0
----- executor 3 signal number : 298
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
time breakdown 3: 72, 12, 0
before receive testcase: 0 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
executor 1 server cover_cnt 3 output_pos_value 1962
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 7841, flag collect 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 658
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 188
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 612
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 6 output_pos_value 3049
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 67, 19, 0
time breakdown 1: 66, 18, 0
before receive testcase: 0 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 82
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 0 has 6 replies
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 658 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 188 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 612 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
time breakdown 2: 65, 18, 0
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1162
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 28
-----finish removing dir
receive_execute: 0, 61
receive_execute: 1, 63
mkdir time 35
executor 3 create dir /root/glusterfs-client/dfs-0-1163 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1163
receive_execute: 0, 63
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 5, 67
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3316, write pid:3317
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 3316, write pid:3317
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 89
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3316, write pid:3317
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 9, 0
execute_one time: 1, 9
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 72, 12, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 1 signal number : 1118
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8082, flag collect 0
----- executor 0 signal number : 1117
----- executor 0 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 1 signal number : 693
----- executor 1 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 1 signal number : 189
----- executor 1 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 393
----- executor 1 signal number : 14
----- executor 2 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 1 signal number : 245
----- executor 1 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 1 signal number : 594
executor 0 server cover_cnt 3 output_pos_value 1963
executor 2 server cover_cnt 3 output_pos_value 1962
executor 1 server cover_cnt 7 output_pos_value 3319
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 64, 20, 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
before receive testcase: 0 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 84
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:59 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 1 has 7 replies
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 693 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 189 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 14 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 245 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 594 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1117 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 393 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 63, 21, 0
before receive testcase: 0 0
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1163
time breakdown 0: 62, 20, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 39
-----finish removing dir
mkdir time 44
executor 3 create dir /root/glusterfs-client/dfs-0-1164 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1164
receive_execute: 4, 83
receive_execute: 4, 83
receive_execute: 4, 83
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 9, 85
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6165, pid 3318, write pid:3319
----- executor 3 executes write_coverage_signal cov->size 6165, flag collect 0
----- executor 3 signal number : 1444
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 1213, pid 3318, write pid:3319
----- executor 3 executes write_coverage_signal cov->size 1213, flag collect 0
----- executor 3 signal number : 295
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4057, pid 3318, write pid:3319
----- executor 3 executes write_coverage_signal cov->size 4057, flag collect 0
----- executor 3 signal number : 3
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 8, 0
execute_one time: 1, 9
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
time breakdown 3: 94, 12, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1191, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 633
----- executor 1 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 890
----- executor 0 signal number : 11
----- executor 2 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 0 signal number : 540
----- executor 2 signal number : 703
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 795
----- executor 2 signal number : 252
----- executor 2 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
executor 0 server cover_cnt 4 output_pos_value 1992
----- executor 2 signal number : 367
----- executor 2 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 2 signal number : 587
executor 2 server cover_cnt 7 output_pos_value 3266
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 87, 19, 0
before receive testcase: 0 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 87, 19, 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 103
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [SERVER] executor 0 has 4 replies
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 633 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 540 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 795 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
time breakdown 2: 87, 19, 0
2023/03/28 11:07:59 [SERVER] executor 2 has 7 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 890 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 703 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 252 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 367 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 587 signal and 0 cover from userspace component
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1444 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 295 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 3 signal and 0 cover from executor 3
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, 0x0)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1164
remove dir time 29
-----finish removing dir
mkdir time 37
executor 3 create dir /root/glusterfs-client/dfs-0-1165 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1165
receive_execute: 3, 66
receive_execute: 1, 66
receive_execute: 3, 66
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
execute_one time: 2, 1
receive_execute: 7, 82
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3320, write pid:3321
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 3320, write pid:3321
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 89
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3320, write pid:3321
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 1
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 10, 0
execute_one time: 1, 10
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 89, 13, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 signal number : 443
----- executor 0 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 1 signal number : 1118
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 0 signal number : 897
----- executor 1 signal number : 391
----- executor 0 executes write_coverage_signal cov->size 8571, flag collect 0
----- executor 0 signal number : 814
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
executor 2 server cover_cnt 3 output_pos_value 1962
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
----- executor 0 signal number : 677
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 232
executor 0 server cover_cnt 7 output_pos_value 3384
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
time breakdown 2: 67, 33, 0
before receive testcase: 0 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 101
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 1 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:59 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 0 has 7 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 391 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 897 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 814 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 677 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 232 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(0x0, &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
time breakdown 1: 69, 32, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 69, 36, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1165
remove dir time 32
-----finish removing dir
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-1166 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1166
receive_execute: 5, 71
receive_execute: 1, 71
receive_execute: 4, 73
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 8, 75
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6200, pid 3322, write pid:3323
----- executor 3 executes write_coverage_signal cov->size 6200, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7988, pid 3322, write pid:3323
----- executor 3 executes write_coverage_signal cov->size 7988, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3322, write pid:3323
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 32, 0
execute_one time: 1, 32
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 83, 34, 0
before receive testcase: 0 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 443
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2111, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 446
----- executor 1 executes write_coverage_signal cov->size 9693, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2905, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 11
----- executor 1 executes write_coverage_signal cov->size 6058, flag collect 0
----- executor 0 signal number : 541
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 1 signal number : 1602
----- executor 1 executes write_coverage_signal cov->size 17073, flag collect 0
----- executor 2 signal number : 1004
----- executor 0 signal number : 969
executor 0 server cover_cnt 3 output_pos_value 1963
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 1006
----- executor 1 executes write_coverage_signal cov->size 2192, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 12159, flag collect 0
----- executor 1 signal number : 1260
----- executor 1 executes write_coverage_signal cov->size 4728, flag collect 0
----- executor 1 signal number : 37
----- executor 1 executes write_coverage_signal cov->size 14045, flag collect 0
----- executor 1 signal number : 360
----- executor 1 executes write_coverage_signal cov->size 4794, flag collect 0
----- executor 1 signal number : 93
executor 1 server cover_cnt 9 output_pos_value 4852
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 117
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 1 has 9 replies
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 446 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:59 [SERVER] executor 0 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 541 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 969 signal and 0 cover from userspace component
time breakdown 1: 77, 44, 0
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1602 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1006 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1260 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 37 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 360 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 93 signal and 0 cover from userspace component
before receive testcase: 0 0
executor 2 server cover_cnt 3 output_pos_value 1962
time breakdown 2: 76, 42, 0
before receive testcase: 0 0
2023/03/28 11:07:59 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(0x0, &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 73, 41, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1166
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 51
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1167 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1167
receive_execute: 4, 87
receive_execute: 5, 87
receive_execute: 2, 86
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 9, 90
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3324, write pid:3325
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3324, write pid:3325
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3324, write pid:3325
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 1406, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 443
----- executor 0 signal number : 447
----- executor 0 executes write_coverage_signal cov->size 10394, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
time breakdown 3: 99, 27, 0
before receive testcase: 0 0
----- executor 0 signal number : 12
----- executor 1 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 8026, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
----- executor 0 signal number : 1371
----- executor 0 executes write_coverage_signal cov->size 17802, flag collect 0
----- executor 2 signal number : 505
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1004
executor 2 server cover_cnt 3 output_pos_value 1962
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 0 signal number : 1005
----- executor 0 executes write_coverage_signal cov->size 1466, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 9411, flag collect 0
----- executor 0 signal number : 32
----- executor 0 executes write_coverage_signal cov->size 6405, flag collect 0
----- executor 0 signal number : 381
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 593
----- executor 0 executes write_coverage_signal cov->size 6283, flag collect 0
----- executor 0 signal number : 96
----- executor 0 executes write_coverage_signal cov->size 7373, flag collect 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 771
executor 0 server cover_cnt 10 output_pos_value 4742
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 89, 34, 0
before receive testcase: 0 1
time breakdown 2: 91, 34, 0
before receive testcase: 0 1
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 126
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 447 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 2 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1371 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1005 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 32 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 381 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 593 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 96 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 771 signal and 0 cover from userspace component
time breakdown 0: 92, 39, 0
before receive testcase: 0 0
2023/03/28 11:07:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(0x0, &(0x7f0000000640)='system.posix_acl_access\x00', &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 1 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1344
remove dir: /root/glusterfs-client/dfs-0-1167
remove dir time 33
-----finish removing dir
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1168 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1168
receive_execute: 6, 69
receive_execute: 1, 70
receive_execute: 7, 69
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
execute_one time: 2, 0
receive_execute: 11, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3326, write pid:3327
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3326, write pid:3327
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3326, write pid:3327
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 40, 0
execute_one time: 1, 40
2023/03/28 11:07:59 for select break: 1
executor 0 write_server_output
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2105, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 448
----- executor 0 executes write_coverage_signal cov->size 9696, flag collect 0
----- executor 2 signal number : 1118
----- executor 2 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 2 signal number : 541
time breakdown 3: 83, 44, 0
before receive testcase: 0 1
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 257
----- executor 0 signal number : 10
----- executor 0 executes write_coverage_signal cov->size 4521, flag collect 0
----- executor 0 signal number : 1156
----- executor 0 executes write_coverage_signal cov->size 17079, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2372
----- executor 0 signal number : 1003
----- executor 0 executes write_coverage_signal cov->size 2174, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 12050, flag collect 0
----- executor 0 signal number : 1355
----- executor 0 executes write_coverage_signal cov->size 12909, flag collect 0
----- executor 0 signal number : 152
----- executor 0 executes write_coverage_signal cov->size 1602, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 6417, flag collect 0
----- executor 0 signal number : 114
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 519
executor 0 server cover_cnt 10 output_pos_value 4795
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 124
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
executor 1 server cover_cnt 3 output_pos_value 1962
time breakdown 1: 75, 54, 0
before receive testcase: 0 0
2023/03/28 11:07:59 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 1 has 3 replies
2023/03/28 11:07:59 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:07:59 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 2 has 4 replies
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 541 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 257 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 448 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1156 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1003 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1355 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 152 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 114 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 519 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', 0x0, &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1328
remove dir: /root/glusterfs-client/dfs-0-1168
time breakdown 2: 76, 52, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 71, 54, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-1169 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1169
receive_execute: 4, 68
receive_execute: 2, 68
receive_execute: 2, 68
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 9, 71
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3328, write pid:3329
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 7983, pid 3328, write pid:3329
----- executor 3 executes write_coverage_signal cov->size 7983, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 3211, pid 3328, write pid:3329
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 34, 0
execute_one time: 1, 34
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1596, flag collect 0
----- executor 1 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 1408, flag collect 0
----- executor 2 signal number : 457
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 448
----- executor 0 executes write_coverage_signal cov->size 11088, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 3761, flag collect 0
----- executor 1 signal number : 492
----- executor 2 signal number : 669
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 signal number : 233
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 10
time breakdown 3: 80, 36, 0
before receive testcase: 0 0
----- executor 2 signal number : 492
----- executor 0 executes write_coverage_signal cov->size 6150, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 0 signal number : 1334
----- executor 0 executes write_coverage_signal cov->size 18630, flag collect 0
executor 2 server cover_cnt 5 output_pos_value 2656
----- executor 0 signal number : 1065
----- executor 0 executes write_coverage_signal cov->size 1460, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 6435, flag collect 0
----- executor 0 signal number : 66
----- executor 0 executes write_coverage_signal cov->size 6417, flag collect 0
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 70, 43, 0
----- executor 0 signal number : 381
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 7634, flag collect 0
----- executor 0 signal number : 608
----- executor 0 executes write_coverage_signal cov->size 9024, flag collect 0
----- executor 0 signal number : 791
----- executor 0 executes write_coverage_signal cov->size 8317, flag collect 0
----- executor 0 signal number : 320
executor 0 server cover_cnt 10 output_pos_value 5060
2023/03/28 11:07:59 for select break: 1
2023/03/28 11:07:59 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:07:59 wg wait finish
2023/03/28 11:07:59 ------ all executors finish execution
2023/03/28 11:07:59 exec time: 115
2023/03/28 11:07:59 ----- PS len: 4
2023/03/28 11:07:59 [CLIENT] executor 3 has 3 replies
2023/03/28 11:07:59 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:07:59 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:07:59 [SERVER] executor 0 has 10 replies
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 448 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1334 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 1065 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 66 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 381 signal and 0 cover from userspace component
2023/03/28 11:07:59 [SERVER] executor 1 has 4 replies
time breakdown 0: 70, 46, 0
before receive testcase: 0 0
2023/03/28 11:07:59 [SERVER] executor 2 has 5 replies
2023/03/28 11:07:59 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 669 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 233 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 608 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 791 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 0 receive 320 signal and 0 cover from userspace component
2023/03/28 11:07:59 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:07:59 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 72, 43, 0
before receive testcase: 0 0
2023/03/28 11:07:59 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:07:59 prog length: 3
2023/03/28 11:07:59 HasCrashFail:false HasNetFail:false
11:07:59 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', 0x0, &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1328
remove dir: /root/glusterfs-client/dfs-0-1169
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 39
executor 3 create dir /root/glusterfs-client/dfs-0-1170 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1170
receive_execute: 7, 69
receive_execute: 4, 69
receive_execute: 10, 66
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 11, 71
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6205, pid 3330, write pid:3331
----- executor 3 executes write_coverage_signal cov->size 6205, flag collect 0
----- executor 3 signal number : 1448
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7995, pid 3330, write pid:3331
----- executor 3 executes write_coverage_signal cov->size 7995, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 3211, pid 3330, write pid:3331
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 12484, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
time breakdown 3: 82, 27, 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
before receive testcase: 0 1
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 6059, flag collect 0
----- executor 1 signal number : 492
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 789
----- executor 0 executes write_coverage_signal cov->size 3722, flag collect 0
----- executor 0 signal number : 561
----- executor 0 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 0 signal number : 491
----- executor 2 signal number : 1744
executor 0 server cover_cnt 4 output_pos_value 2298
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 2 executes write_coverage_signal cov->size 20087, flag collect 0
----- executor 2 signal number : 1068
----- executor 2 executes write_coverage_signal cov->size 7970, flag collect 0
----- executor 2 signal number : 418
----- executor 2 executes write_coverage_signal cov->size 3579, flag collect 0
----- executor 2 signal number : 372
----- executor 2 executes write_coverage_signal cov->size 6295, flag collect 0
----- executor 2 signal number : 124
----- executor 2 executes write_coverage_signal cov->size 7370, flag collect 0
----- executor 2 signal number : 800
----- executor 2 executes write_coverage_signal cov->size 4786, flag collect 0
----- executor 2 signal number : 111
----- executor 2 executes write_coverage_signal cov->size 7793, flag collect 0
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 82
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 76, 33, 0
before receive testcase: 0 0
time breakdown 0: 73, 33, 0
executor 2 server cover_cnt 9 output_pos_value 5205
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 105
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1448 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 1 has 4 replies
2023/03/28 11:08:00 [SERVER] executor 2 has 9 replies
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1744 signal and 0 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 0 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 561 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 491 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1068 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 418 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 372 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 124 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 800 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 111 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 82 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:00 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', 0x0, &(0x7f00000007c0)={{}, {0x1, 0x9}, [{0x2, 0x2}], {0x4, 0x2}, [{0x8, 0x5}], {0x10, 0x2}, {0x20, 0x4}}, 0x34, 0x2)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1328
remove dir: /root/glusterfs-client/dfs-0-1170
time breakdown 2: 76, 37, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 31
-----finish removing dir
mkdir time 45
executor 3 create dir /root/glusterfs-client/dfs-0-1171 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1171
receive_execute: 5, 76
receive_execute: 5, 75
receive_execute: 1, 76
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
executor 2 before execute_one
execute_one time: 1, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 9, 79
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6185, pid 3332, write pid:3333
----- executor 3 executes write_coverage_signal cov->size 6185, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 7982, pid 3332, write pid:3333
----- executor 3 executes write_coverage_signal cov->size 7982, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 3205, pid 3332, write pid:3333
----- executor 3 executes write_coverage_signal cov->size 3205, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 23, 0
execute_one time: 1, 24
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 2083, flag collect 0
time breakdown 3: 88, 29, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 1551, flag collect 0
----- executor 2 signal number : 444
----- executor 1 signal number : 659
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 0 signal number : 456
----- executor 1 signal number : 540
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 377
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 10397, flag collect 0
----- executor 2 signal number : 1117
----- executor 2 executes write_coverage_signal cov->size 3722, flag collect 0
----- executor 1 signal number : 491
----- executor 2 signal number : 507
----- executor 0 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 7779, flag collect 0
----- executor 2 signal number : 217
----- executor 0 signal number : 1385
----- executor 0 executes write_coverage_signal cov->size 17797, flag collect 0
executor 1 server cover_cnt 5 output_pos_value 2527
executor 2 server cover_cnt 4 output_pos_value 2298
----- executor 0 signal number : 998
----- executor 0 executes write_coverage_signal cov->size 2268, flag collect 0
----- executor 0 signal number : 73
----- executor 0 executes write_coverage_signal cov->size 4783, flag collect 0
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 6417, flag collect 0
----- executor 0 signal number : 380
----- executor 0 executes write_coverage_signal cov->size 9245, flag collect 0
----- executor 0 signal number : 605
----- executor 0 executes write_coverage_signal cov->size 7373, flag collect 0
----- executor 0 signal number : 773
----- executor 0 executes write_coverage_signal cov->size 8317, flag collect 0
----- executor 0 signal number : 324
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 81, 35, 0
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 10 output_pos_value 5048
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 113
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 [SERVER] executor 1 has 5 replies
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 659 signal and 0 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 0 has 10 replies
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1117 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 507 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 217 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 1385 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 998 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 73 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 380 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 605 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 773 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 324 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 540 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 377 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 491 signal and 0 cover from userspace component
2023/03/28 11:08:00 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:00 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x2)
---

end of program
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1171
time breakdown 2: 77, 35, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
time breakdown 0: 80, 37, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 45
-----finish removing dir
mkdir time 44
executor 3 create dir /root/glusterfs-client/dfs-0-1172 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1172
receive_execute: 1, 88
receive_execute: 3, 89
receive_execute: 1, 88
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 6, 92
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3334, write pid:3335
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7967, pid 3334, write pid:3335
----- executor 3 executes write_coverage_signal cov->size 7967, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 3403, pid 3334, write pid:3335
----- executor 3 executes write_coverage_signal cov->size 3403, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 26, 0
execute_one time: 1, 26
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 11778, flag collect 0
----- executor 1 signal number : 457
----- executor 1 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 10815, flag collect 0
time breakdown 3: 98, 29, 0
before receive testcase: 0 0
----- executor 1 signal number : 1604
----- executor 1 executes write_coverage_signal cov->size 738, flag collect 0
----- executor 1 signal number : 285
----- executor 1 executes write_coverage_signal cov->size 19345, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 505
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 215
executor 0 server cover_cnt 4 output_pos_value 2295
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
executor 2 server cover_cnt 4 output_pos_value 2296
----- executor 1 signal number : 752
----- executor 1 executes write_coverage_signal cov->size 9848, flag collect 0
----- executor 1 signal number : 1280
----- executor 1 executes write_coverage_signal cov->size 7417, flag collect 0
time breakdown 0: 90, 36, 0
before receive testcase: 0 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 92, 37, 0
----- executor 1 signal number : 271
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 8391, flag collect 0
----- executor 1 signal number : 268
----- executor 1 executes write_coverage_signal cov->size 8378, flag collect 0
----- executor 1 signal number : 164
executor 1 server cover_cnt 9 output_pos_value 5112
time breakdown 1: 89, 42, 0
before receive testcase: 0 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 132
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 0 has 4 replies
2023/03/28 11:08:00 [SERVER] executor 1 has 9 replies
2023/03/28 11:08:00 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 457 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1604 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 285 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 752 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1280 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 271 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 268 signal and 0 cover from userspace component
2023/03/28 11:08:00 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 164 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 505 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 215 signal and 0 cover from userspace component
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:00 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1172
remove dir time 43
-----finish removing dir
mkdir time 40
executor 3 create dir /root/glusterfs-client/dfs-0-1173 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1173
receive_execute: 8, 83
receive_execute: 3, 82
receive_execute: 8, 82
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
execute_one time: 2, 1
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 12, 86
executor 0, execute_one inner time: 0, 0, 0
executor 1 before execute_one
execute_one time: 2, 0
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 3, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3336, write pid:3337
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7989, pid 3336, write pid:3337
----- executor 3 executes write_coverage_signal cov->size 7989, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 3211, pid 3336, write pid:3337
----- executor 3 executes write_coverage_signal cov->size 3211, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 30, 0
execute_one time: 0, 31
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 98, 34, 0
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 11801, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 619
----- executor 1 signal number : 458
----- executor 0 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 558
----- executor 2 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 8199, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 935, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 19
----- executor 2 signal number : 215
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 492
----- executor 1 signal number : 2090
----- executor 1 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 1 signal number : 314
----- executor 1 executes write_coverage_signal cov->size 19257, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
executor 0 server cover_cnt 5 output_pos_value 2318
----- executor 1 signal number : 781
----- executor 1 executes write_coverage_signal cov->size 12536, flag collect 0
----- executor 1 signal number : 813
----- executor 1 executes write_coverage_signal cov->size 8402, flag collect 0
----- executor 1 signal number : 408
----- executor 1 executes write_coverage_signal cov->size 9980, flag collect 0
----- executor 1 signal number : 267
----- executor 1 executes write_coverage_signal cov->size 4794, flag collect 0
----- executor 1 signal number : 109
executor 1 server cover_cnt 9 output_pos_value 5268
time breakdown 0: 91, 42, 0
before receive testcase: 0 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 128
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 1 has 9 replies
2023/03/28 11:08:00 [SERVER] executor 0 has 5 replies
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 458 signal and 0 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
time breakdown 1: 85, 46, 0
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 2090 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 314 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 781 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 813 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 408 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 267 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 109 signal and 0 cover from userspace component
2023/03/28 11:08:00 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 789 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 558 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
time breakdown 2: 90, 42, 0
before receive testcase: 0 1
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
before receive testcase: 0 0
2023/03/28 11:08:00 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1173
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-1174 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1174
receive_execute: 5, 66
receive_execute: 0, 66
receive_execute: 5, 65
executor 1 before execute_one
executor 2 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
receive_execute: 10, 68
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 2
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6194, pid 3338, write pid:3339
----- executor 3 executes write_coverage_signal cov->size 6194, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3338, write pid:3339
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 3403, pid 3338, write pid:3339
----- executor 3 executes write_coverage_signal cov->size 3403, flag collect 0
----- executor 3 signal number : 134
----- completed 3
execute_one loop: 0, 0, 4
executor 3, execute_one inner time: 0, 23, 0
execute_one time: 0, 24
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 11799, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 789
----- executor 0 signal number : 458
----- executor 0 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 1004
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 1 signal number : 215
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 12905, flag collect 0
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 2 signal number : 19
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1370
----- executor 0 executes write_coverage_signal cov->size 811, flag collect 0
----- executor 0 signal number : 307
----- executor 0 executes write_coverage_signal cov->size 19246, flag collect 0
----- executor 2 signal number : 492
executor 1 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 770
----- executor 0 executes write_coverage_signal cov->size 7373, flag collect 0
time breakdown 3: 79, 26, 0
before receive testcase: 0 0
executor 2 server cover_cnt 5 output_pos_value 2318
----- executor 0 signal number : 914
----- executor 0 executes write_coverage_signal cov->size 8317, flag collect 0
----- executor 0 signal number : 551
----- executor 0 executes write_coverage_signal cov->size 6417, flag collect 0
----- executor 0 signal number : 114
----- executor 0 executes write_coverage_signal cov->size 4521, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 4382, flag collect 0
----- executor 0 signal number : 516
executor 0 server cover_cnt 10 output_pos_value 5053
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 71, 34, 0
before receive testcase: 0 0
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 101
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 1 has 4 replies
2023/03/28 11:08:00 [SERVER] executor 2 has 5 replies
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 19 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 0 has 10 replies
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 458 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 1370 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 307 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 770 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 914 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 551 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 114 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 516 signal and 0 cover from userspace component
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1174
time breakdown 1: 66, 33, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 0: 70, 35, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 32
-----finish removing dir
mkdir time 26
executor 3 create dir /root/glusterfs-client/dfs-0-1175 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1175
receive_execute: 2, 59
receive_execute: 4, 59
receive_execute: 1, 59
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1, execute_one inner time: 1, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 1, 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 7, 69
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6182, pid 3340, write pid:3341
----- executor 3 executes write_coverage_signal cov->size 6182, flag collect 1
----- executor 3 cover number : 1163, signal number : 1444
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 7980, pid 3340, write pid:3341
----- executor 3 executes write_coverage_signal cov->size 7980, flag collect 1
----- executor 3 cover number : 1505, signal number : 688
----- completed 2
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 3400, pid 3340, write pid:3341
----- executor 3 executes write_coverage_signal cov->size 3400, flag collect 1
----- executor 3 cover number : 802, signal number : 134
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 25, 0
execute_one time: 1, 25
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
executor 2 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2788, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 1 cover number : 409, signal number : 455
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 9691, flag collect 1
----- executor 0 cover number : 992, signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 2 cover number : 554, signal number : 619
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 554, signal number : 505
----- executor 0 executes write_coverage_signal cov->size 1236, flag collect 1
----- executor 1 cover number : 409, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 8234, flag collect 1
----- executor 2 cover number : 992, signal number : 1004
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 2 cover number : 733, signal number : 215
----- executor 0 cover number : 480, signal number : 112
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 0 cover number : 733, signal number : 202
executor 0 server cover_cnt 5 output_pos_value 5557
time breakdown 3: 76, 27, 0
before receive testcase: 0 0
executor 2 server cover_cnt 4 output_pos_value 4975
----- executor 1 cover number : 1486, signal number : 1776
----- executor 1 executes write_coverage_signal cov->size 17263, flag collect 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 61, 45, 0
----- executor 1 cover number : 923, signal number : 991
----- executor 1 executes write_coverage_signal cov->size 3002, flag collect 1
----- executor 1 cover number : 526, signal number : 81
----- executor 1 executes write_coverage_signal cov->size 9827, flag collect 1
before receive testcase: 0 0
----- executor 1 cover number : 1862, signal number : 1254
----- executor 1 executes write_coverage_signal cov->size 14147, flag collect 1
----- executor 1 cover number : 1375, signal number : 341
----- executor 1 executes write_coverage_signal cov->size 6772, flag collect 1
----- executor 1 cover number : 1173, signal number : 178
----- executor 1 executes write_coverage_signal cov->size 4728, flag collect 1
----- executor 1 cover number : 980, signal number : 40
executor 1 server cover_cnt 9 output_pos_value 14289
time breakdown 0: 60, 44, 0
before receive testcase: 0 0
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 115
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1444 signal and 1163 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 1505 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 134 signal and 802 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 0 has 5 replies
2023/03/28 11:08:00 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 1 has 9 replies
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 619 signal and 554 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 455 signal and 409 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 2 signal and 409 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1004 signal and 992 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 215 signal and 733 cover from userspace component
time breakdown 1: 63, 56, 0
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1776 signal and 1486 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 991 signal and 923 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 81 signal and 526 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 1118 signal and 992 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1254 signal and 1862 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 341 signal and 1375 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 178 signal and 1173 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 40 signal and 980 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 505 signal and 554 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 112 signal and 480 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 202 signal and 733 cover from userspace component
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1175
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 27
-----finish removing dir
receive_execute: 17, 65
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1176 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1176
receive_execute: 11, 59
receive_execute: 18, 64
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
execute_one time: 2, 1
receive_execute: 25, 68
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6207, pid 3342, write pid:3343
----- executor 3 executes write_coverage_signal cov->size 6207, flag collect 1
----- executor 3 cover number : 1165, signal number : 1447
----- completed 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 7992, pid 3342, write pid:3343
----- executor 3 executes write_coverage_signal cov->size 7992, flag collect 1
----- executor 3 cover number : 1505, signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 3403, pid 3342, write pid:3343
----- executor 3 executes write_coverage_signal cov->size 3403, flag collect 1
----- executor 3 cover number : 802, signal number : 135
----- completed 3
execute_one loop: 0, 0, 6
executor 3, execute_one inner time: 0, 31, 0
execute_one time: 0, 31
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 12490, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 cover number : 401, signal number : 444
----- executor 2 executes write_coverage_signal cov->size 3722, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 2 cover number : 585, signal number : 655
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 554, signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 2 cover number : 733, signal number : 695
----- executor 2 executes write_coverage_signal cov->size 4055, flag collect 1
----- executor 0 cover number : 733, signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 1 cover number : 410, signal number : 457
----- executor 1 executes write_coverage_signal cov->size 9266, flag collect 1
----- executor 2 cover number : 992, signal number : 491
time breakdown 3: 93, 33, 0
before receive testcase: 0 1
----- executor 0 cover number : 992, signal number : 492
----- executor 0 executes write_coverage_signal cov->size 1225, flag collect 1
executor 2 server cover_cnt 4 output_pos_value 5009
----- executor 0 cover number : 476, signal number : 94
executor 0 server cover_cnt 5 output_pos_value 5549
----- executor 1 cover number : 1333, signal number : 1575
----- executor 1 executes write_coverage_signal cov->size 20092, flag collect 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 82, 44, 0
before receive testcase: 0 1
----- executor 1 cover number : 948, signal number : 1014
----- executor 1 executes write_coverage_signal cov->size 6828, flag collect 1
time breakdown 2: 82, 42, 0
before receive testcase: 0 0
----- executor 1 cover number : 1362, signal number : 314
----- executor 1 executes write_coverage_signal cov->size 9848, flag collect 1
----- executor 1 cover number : 1776, signal number : 1286
----- executor 1 executes write_coverage_signal cov->size 9589, flag collect 1
----- executor 1 cover number : 1167, signal number : 225
----- executor 1 executes write_coverage_signal cov->size 8401, flag collect 1
----- executor 1 cover number : 1210, signal number : 163
executor 1 server cover_cnt 7 output_pos_value 13262
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 120
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1447 signal and 1165 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 688 signal and 1505 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 135 signal and 802 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 0 has 5 replies
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 619 signal and 554 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 728 signal and 733 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 492 signal and 992 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 94 signal and 476 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 1 has 7 replies
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 457 signal and 410 cover from userspace component
time breakdown 1: 70, 55, 0
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1575 signal and 1333 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1014 signal and 948 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 314 signal and 1362 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 1286 signal and 1776 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 225 signal and 1167 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 163 signal and 1210 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 444 signal and 401 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 655 signal and 585 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 695 signal and 733 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 491 signal and 992 cover from userspace component
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1176
remove dir time 82
-----finish removing dir
mkdir time 41
executor 3 create dir /root/glusterfs-client/dfs-0-1177 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1177
receive_execute: 5, 124
receive_execute: 18, 124
receive_execute: 16, 124
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
receive_execute: 24, 127
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6177, pid 3344, write pid:3345
----- executor 3 executes write_coverage_signal cov->size 6177, flag collect 1
----- executor 3 cover number : 1162, signal number : 1442
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 7994, pid 3344, write pid:3345
----- executor 3 executes write_coverage_signal cov->size 7994, flag collect 1
----- executor 3 cover number : 1505, signal number : 690
----- completed 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3403, pid 3344, write pid:3345
----- executor 3 executes write_coverage_signal cov->size 3403, flag collect 1
----- executor 3 cover number : 802, signal number : 134
----- completed 3
execute_one loop: 0, 0, 14
executor 3, execute_one inner time: 1, 38, 0
execute_one time: 1, 39
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 151, 41, 0
before receive testcase: 0 0
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 2085, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 1
----- executor 1 cover number : 401, signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 1
----- executor 0 cover number : 401, signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 2 cover number : 409, signal number : 455
----- executor 2 executes write_coverage_signal cov->size 10397, flag collect 1
----- executor 1 cover number : 733, signal number : 789
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 1
----- executor 0 cover number : 992, signal number : 1118
----- executor 0 executes write_coverage_signal cov->size 3508, flag collect 1
----- executor 1 cover number : 554, signal number : 558
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 1
----- executor 0 cover number : 610, signal number : 583
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 1
----- executor 0 cover number : 669, signal number : 261
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 1
----- executor 2 cover number : 409, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 6071, flag collect 1
----- executor 1 cover number : 992, signal number : 491
----- executor 0 cover number : 733, signal number : 203
executor 1 server cover_cnt 4 output_pos_value 4975
executor 0 server cover_cnt 5 output_pos_value 6030
----- executor 2 cover number : 1471, signal number : 1744
----- executor 2 executes write_coverage_signal cov->size 2280, flag collect 1
----- executor 2 cover number : 526, signal number : 503
----- executor 2 executes write_coverage_signal cov->size 17797, flag collect 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 0 receive reply, reply.done 1
time breakdown 1: 129, 51, 0
time breakdown 0: 140, 51, 0
before receive testcase: 0 0
----- executor 2 cover number : 902, signal number : 572
----- executor 2 executes write_coverage_signal cov->size 9404, flag collect 1
----- executor 2 cover number : 1940, signal number : 1311
----- executor 2 executes write_coverage_signal cov->size 1606, flag collect 1
----- executor 2 cover number : 653, signal number : 14
----- executor 2 executes write_coverage_signal cov->size 7926, flag collect 1
----- executor 2 cover number : 1236, signal number : 201
----- executor 2 executes write_coverage_signal cov->size 3154, flag collect 1
before receive testcase: 0 0
----- executor 2 cover number : 656, signal number : 198
----- executor 2 executes write_coverage_signal cov->size 9626, flag collect 1
----- executor 2 cover number : 1168, signal number : 125
----- executor 2 executes write_coverage_signal cov->size 6144, flag collect 1
----- executor 2 cover number : 798, signal number : 49
executor 2 server cover_cnt 11 output_pos_value 15375
2023/03/28 11:08:00 for select break: 1
2023/03/28 11:08:00 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:00 wg wait finish
2023/03/28 11:08:00 ------ all executors finish execution
2023/03/28 11:08:00 exec time: 188
2023/03/28 11:08:00 ----- PS len: 4
2023/03/28 11:08:00 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:00 fuzzer receive 1442 signal and 1162 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 690 signal and 1505 cover from executor 3
2023/03/28 11:08:00 fuzzer receive 134 signal and 802 cover from executor 3
2023/03/28 11:08:00 [SERVER] executor 0 has 5 replies
2023/03/28 11:08:00 [SERVER] executor 2 has 11 replies
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 444 signal and 401 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 455 signal and 409 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1 signal and 409 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1744 signal and 1471 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 503 signal and 526 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 572 signal and 902 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 1118 signal and 992 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 1311 signal and 1940 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 14 signal and 653 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 583 signal and 610 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 261 signal and 669 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 201 signal and 1236 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 198 signal and 656 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 125 signal and 1168 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 2 receive 49 signal and 798 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 0 receive 203 signal and 733 cover from userspace component
2023/03/28 11:08:00 [SERVER] executor 1 has 4 replies
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 444 signal and 401 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 789 signal and 733 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 558 signal and 554 cover from userspace component
2023/03/28 11:08:00 ------- fuzzer executor 1 receive 491 signal and 992 cover from userspace component
2023/03/28 11:08:00 fsMds: [map[] map[] map[] map[]]
time breakdown 2: 142, 64, 0
before receive testcase: 0 0
2023/03/28 11:08:00 triageInput addInputToCorpus: HasCrashFail: false, HasNetFail: false
2023/03/28 11:08:00 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:00 prog length: 3
2023/03/28 11:08:00 HasCrashFail:false HasNetFail:false
11:08:00 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1177
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 27
-----finish removing dir
mkdir time 45
executor 3 create dir /root/glusterfs-client/dfs-0-1178 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1178
receive_execute: 12, 73
receive_execute: 19, 73
receive_execute: 25, 73
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
receive_execute: 31, 76
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3346, write pid:3347
----- completed 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3346, write pid:3347
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3346, write pid:3347
----- completed 3
execute_one loop: 0, 0, 3
executor 3, execute_one inner time: 0, 24, 0
execute_one time: 1, 24
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 1 write_server_output
executor 2 write_server_output
time breakdown 3: 107, 27, 0
before receive testcase: 0 0
executor 0 server cover_cnt 0 output_pos_value 1
executor 2 server cover_cnt 0 output_pos_value 1
executor 1 server cover_cnt 0 output_pos_value 1
time breakdown 0: 98, 33, 0
before receive testcase: 0 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 108
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [CLIENT] executor 3 has 3 replies
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 [SERVER] executor 0 has 0 replies
2023/03/28 11:08:01 [SERVER] executor 1 has 0 replies
2023/03/28 11:08:01 [SERVER] executor 2 has 0 replies
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 ------ executing comparison hint: 0
time breakdown 1: 92, 34, 0
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2344 linkat linkat
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2858 sendfile sendfile
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 8
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
r0 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
r1 = open$dir(&(0x7f0000000100)='./file1\x00', 0x923000, 0x4)
r2 = openat(r0, &(0x7f0000000140)='./file0\x00', 0x143080, 0x4)
sendfile(r1, r2, &(0x7f0000000180)=0x80000001, 0xdc1)
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file0\x00', r0, &(0x7f00000000c0)='./file0\x00', 0x0)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1472
remove dir: /root/glusterfs-client/dfs-0-1178
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
time breakdown 2: 85, 34, 0
before receive testcase: 0 1
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 42
-----finish removing dir
receive_execute: 1, 85
mkdir time 43
executor 3 create dir /root/glusterfs-client/dfs-0-1179 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1179
receive_execute: 0, 83
receive_execute: 2, 86
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 3, 1
receive_execute: 5, 88
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6200, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 6200, flag collect 0
----- executor 3 signal number : 1447
----- completed 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1213, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 1213, flag collect 0
----- executor 3 signal number : 295
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4055, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 4055, flag collect 0
----- executor 3 signal number : 3
----- completed 6
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 6775, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 6775, flag collect 0
----- executor 3 signal number : 392
----- completed 7
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 3403, pid 3348, write pid:3349
----- executor 3 executes write_coverage_signal cov->size 3403, flag collect 0
----- executor 3 signal number : 134
----- completed 8
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 8
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 11
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 25, 20, 0
execute_one time: 1, 45
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 728
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
time breakdown 3: 93, 48, 0
before receive testcase: 0 0
----- executor 2 signal number : 492
executor 2 server cover_cnt 6 output_pos_value 2321
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 86, 57, 0
before receive testcase: 0 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3349, flag collect 0
----- executor 0 signal number : 677
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 1004
----- executor 0 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 259
----- executor 0 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 0 signal number : 202
executor 0 server cover_cnt 5 output_pos_value 2602
time breakdown 0: 88, 56, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 7000, flag collect 0
----- executor 1 signal number : 458
----- executor 1 executes write_coverage_signal cov->size 17999, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 20985, flag collect 0
----- executor 1 signal number : 1999
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 30264, flag collect 0
----- executor 1 signal number : 1143
----- executor 1 executes write_coverage_signal cov->size 7902, flag collect 0
----- executor 1 signal number : 82
----- executor 1 executes write_coverage_signal cov->size 23143, flag collect 0
----- executor 1 signal number : 974
----- executor 1 executes write_coverage_signal cov->size 11686, flag collect 0
----- executor 1 signal number : 89
----- executor 1 executes write_coverage_signal cov->size 14681, flag collect 0
----- executor 1 signal number : 665
----- executor 1 executes write_coverage_signal cov->size 12974, flag collect 0
----- executor 1 signal number : 253
executor 1 server cover_cnt 11 output_pos_value 5717
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 161
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [CLIENT] executor 3 has 8 replies
2023/03/28 11:08:01 fuzzer receive 1447 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 295 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 392 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 11:08:01 [SERVER] executor 0 has 5 replies
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 677 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 259 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 202 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 1 has 11 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 458 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1999 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1143 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 82 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 974 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 89 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 2 has 6 replies
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 665 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 253 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 728 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
time breakdown 1: 83, 76, 0
before receive testcase: 0 0
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2814 rmdir rmdir
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2349 lremovexattr lremovexattr
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 5
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
rmdir(&(0x7f0000000000)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
lremovexattr(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000100)=ANY=[@ANYBLOB="747275737465642e73797374656d2e706f8514a7de28875bc861636365737300"])
---

end of program
----- executor 2 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 888
remove dir: /root/glusterfs-client/dfs-0-1179
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
remove dir time 38
-----finish removing dir
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-1180 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1180
receive_execute: 2, 68
receive_execute: 22, 69
receive_execute: 23, 69
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2, execute_one inner time: 0, 0, 0
output_pos: 1, output_pos_value 1
execute_one time: 2, 0
executor 1, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 28, 72
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6179, pid 3351, write pid:3352
----- executor 3 executes write_coverage_signal cov->size 6179, flag collect 0
----- executor 3 signal number : 1443
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 467, pid 3351, write pid:3352
----- executor 3 executes write_coverage_signal cov->size 467, flag collect 0
----- executor 3 signal number : 89
----- completed 2
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6771, pid 3351, write pid:3352
----- executor 3 executes write_coverage_signal cov->size 6771, flag collect 0
----- executor 3 signal number : 401
----- completed 3
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 3893, pid 3351, write pid:3352
----- executor 3 executes write_coverage_signal cov->size 3893, flag collect 0
----- executor 3 signal number : 259
----- completed 4
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 1802, pid 3351, write pid:3352
----- executor 3 executes write_coverage_signal cov->size 1802, flag collect 0
----- executor 3 signal number : 201
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 7
executor 3, execute_one inner time: 33, 27, 0
execute_one time: 1, 60
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 2716, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 6252, flag collect 0
----- executor 2 signal number : 444
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2549, flag collect 0
----- executor 0 signal number : 645
----- executor 0 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 615
----- executor 0 executes write_coverage_signal cov->size 1634, flag collect 0
2023/03/28 11:08:01 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 789
----- executor 2 executes write_coverage_signal cov->size 4665, flag collect 0
----- executor 2 signal number : 558
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 492
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 4
time breakdown 3: 100, 64, 0
before receive testcase: 0 1
executor 2 server cover_cnt 6 output_pos_value 2307
----- executor 0 signal number : 347
----- executor 0 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 0 signal number : 211
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 492
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 8 output_pos_value 2340
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 92, 71, 0
before receive testcase: 0 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 458
----- executor 1 executes write_coverage_signal cov->size 20790, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 15833, flag collect 0
----- executor 1 signal number : 2295
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1397
----- executor 1 executes write_coverage_signal cov->size 6823, flag collect 0
time breakdown 2: 91, 73, 0
before receive testcase: 0 0
----- executor 1 signal number : 55
----- executor 1 executes write_coverage_signal cov->size 21590, flag collect 0
----- executor 1 signal number : 1478
----- executor 1 executes write_coverage_signal cov->size 19551, flag collect 0
----- executor 1 signal number : 453
----- executor 1 executes write_coverage_signal cov->size 18415, flag collect 0
----- executor 1 signal number : 270
----- executor 1 executes write_coverage_signal cov->size 14787, flag collect 0
----- executor 1 signal number : 165
executor 1 server cover_cnt 9 output_pos_value 6602
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 152
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [CLIENT] executor 3 has 5 replies
2023/03/28 11:08:01 fuzzer receive 1443 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 89 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 401 signal and 0 cover from executor 3
2023/03/28 11:08:01 [SERVER] executor 1 has 9 replies
2023/03/28 11:08:01 [SERVER] executor 0 has 8 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 458 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 2 has 6 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 2295 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 789 signal and 0 cover from userspace component
2023/03/28 11:08:01 fuzzer receive 259 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 201 signal and 0 cover from executor 3
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 558 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 645 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 615 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 347 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 211 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1397 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 55 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1478 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 453 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 270 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 165 signal and 0 cover from userspace component
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2809 rename rename
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 4
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
rename(&(0x7f0000000000)='./file0\x00', &(0x7f00000000c0)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 776
remove dir: /root/glusterfs-client/dfs-0-1180
time breakdown 1: 71, 83, 0
before receive testcase: 0 0
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-1181 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1181
receive_execute: 12, 63
receive_execute: 1, 64
receive_execute: 13, 64
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
execute_one time: 1, 1
receive_execute: 18, 66
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6176, pid 3354, write pid:3355
----- executor 3 executes write_coverage_signal cov->size 6176, flag collect 0
----- executor 3 signal number : 1442
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 7970, pid 3354, write pid:3355
----- executor 3 executes write_coverage_signal cov->size 7970, flag collect 0
----- executor 3 signal number : 688
----- completed 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 3194, pid 3354, write pid:3355
----- executor 3 executes write_coverage_signal cov->size 3194, flag collect 0
----- executor 3 signal number : 100
----- completed 3
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 192, pid 3354, write pid:3355
----- executor 3 executes write_coverage_signal cov->size 192, flag collect 0
----- executor 3 signal number : 34
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
execute_one loop: 0, 0, 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 23, 6, 0
execute_one time: 1, 29
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 signal number : 444
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
time breakdown 3: 84, 43, 0
before receive testcase: 0 0
----- executor 2 signal number : 444
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 728
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 619
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 492
----- executor 2 signal number : 1004
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 20866, flag collect 0
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 3461, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 13871, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 2 signal number : 215
----- executor 0 signal number : 2545
executor 1 server cover_cnt 4 output_pos_value 2296
----- executor 0 executes write_coverage_signal cov->size 4737, flag collect 0
----- executor 0 signal number : 625
----- executor 0 executes write_coverage_signal cov->size 31065, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2295
----- executor 0 signal number : 587
----- executor 0 executes write_coverage_signal cov->size 13787, flag collect 0
----- executor 0 signal number : 872
----- executor 0 executes write_coverage_signal cov->size 14903, flag collect 0
----- executor 0 signal number : 206
----- executor 0 executes write_coverage_signal cov->size 16064, flag collect 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
time breakdown 1: 65, 49, 0
before receive testcase: 0 1
----- executor 0 signal number : 178
----- executor 0 executes write_coverage_signal cov->size 10465, flag collect 0
----- executor 0 signal number : 207
----- executor 0 executes write_coverage_signal cov->size 12816, flag collect 0
----- executor 0 signal number : 131
executor 0 server cover_cnt 10 output_pos_value 5838
time breakdown 2: 76, 49, 0
before receive testcase: 0 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 77, 53, 0
before receive testcase: 0 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 120
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [CLIENT] executor 3 has 4 replies
2023/03/28 11:08:01 fuzzer receive 1442 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 688 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 100 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 34 signal and 0 cover from executor 3
2023/03/28 11:08:01 [SERVER] executor 0 has 10 replies
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 2545 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 625 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 587 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 872 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 206 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 178 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 207 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 131 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 1 has 4 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 728 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 215 signal and 0 cover from userspace component
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2344 linkat linkat
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 4
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
linkat(0xffffffffffffff9c, &(0x7f0000000000)='./file1\x00', 0xffffffffffffffff, &(0x7f00000000c0)='./file1\x00', 0x400)
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 848
remove dir: /root/glusterfs-client/dfs-0-1181
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 27
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-1182 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1182
receive_execute: 9, 59
receive_execute: 9, 60
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 6, 59
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 13, 70
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6183, pid 3357, write pid:3358
----- executor 3 executes write_coverage_signal cov->size 6183, flag collect 0
----- executor 3 signal number : 1444
----- completed 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 7992, pid 3357, write pid:3358
----- executor 3 executes write_coverage_signal cov->size 7992, flag collect 0
----- executor 3 signal number : 692
----- completed 2
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 7248, pid 3357, write pid:3358
----- executor 3 executes write_coverage_signal cov->size 7248, flag collect 0
----- executor 3 signal number : 104
----- completed 3
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 178, pid 3357, write pid:3358
----- executor 3 executes write_coverage_signal cov->size 178, flag collect 0
----- executor 3 signal number : 24
----- completed 4
execute_one loop: 0, 0, 1
cover_reset in execute_call
Node-3:/root/daemon-log.416
execute_one loop: 0, 0, 4
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 18
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 35, 22, 0
execute_one time: 1, 57
cover_reset in execute_call
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8342, flag collect 0
----- executor 1 signal number : 444
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 2 signal number : 456
----- executor 1 signal number : 789
----- executor 1 executes write_coverage_signal cov->size 4578, flag collect 0
----- executor 1 signal number : 669
----- executor 1 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 22102, flag collect 0
----- executor 1 signal number : 244
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 492
----- executor 1 executes write_coverage_signal cov->size 2046, flag collect 0
----- executor 1 signal number : 5
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12869, flag collect 0
----- executor 2 signal number : 1385
----- executor 2 executes write_coverage_signal cov->size 10497, flag collect 0
----- executor 2 signal number : 948
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 6 output_pos_value 2662
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2037, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 3848, flag collect 0
----- executor 0 signal number : 619
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 728
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 492
----- executor 0 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 signal number : 5
executor 0 server cover_cnt 5 output_pos_value 2304
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 12883, flag collect 0
time breakdown 3: 83, 60, 0
before receive testcase: 0 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 14684, flag collect 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1669
----- executor 2 executes write_coverage_signal cov->size 9293, flag collect 0
time breakdown 0: 65, 75, 0
before receive testcase: 0 0
----- executor 2 signal number : 209
----- executor 2 executes write_coverage_signal cov->size 11470, flag collect 0
----- executor 2 signal number : 280
----- executor 2 executes write_coverage_signal cov->size 19356, flag collect 0
----- executor 2 signal number : 170
----- executor 2 executes write_coverage_signal cov->size 17968, flag collect 0
time breakdown 1: 69, 74, 0
before receive testcase: 0 0
----- executor 2 signal number : 375
executor 2 server cover_cnt 11 output_pos_value 6128
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 142
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [CLIENT] executor 3 has 4 replies
2023/03/28 11:08:01 fuzzer receive 1444 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 692 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 104 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 24 signal and 0 cover from executor 3
2023/03/28 11:08:01 [SERVER] executor 0 has 5 replies
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 619 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 728 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 1 has 6 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 789 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 669 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 244 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 492 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/28 11:08:01 [SERVER] executor 2 has 11 replies
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 456 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 1385 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 948 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 1669 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 209 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 280 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 170 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 375 signal and 0 cover from userspace component
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- mutateArg()
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2347 llistxattr llistxattr
2023/03/28 11:08:01 ----- mutateArg()
2023/03/28 11:08:01 ----- mutateArg()
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 4
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000140)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000000)='system.posix_acl_default\x00', 0x0, 0x0, 0x0)
llistxattr(&(0x7f00000000c0)='./file1\x00', &(0x7f0000000100)=""/56, 0x38)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 768
remove dir: /root/glusterfs-client/dfs-0-1182
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 68, 82, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 30
-----finish removing dir
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-1183 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1183
receive_execute: 2, 59
receive_execute: 9, 60
receive_execute: 9, 59
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 13, 62
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3360, write pid:3361
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5268, pid 3360, write pid:3361
----- executor 3 executes write_coverage_signal cov->size 5268, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 3360, write pid:3361
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3360, write pid:3361
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 2
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 12, 2, 0
execute_one time: 2, 14
time breakdown 3: 75, 19, 0
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 679, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4074, flag collect 0
----- executor 0 signal number : 444
----- executor 0 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 1659, flag collect 0
----- executor 0 signal number : 1118
----- executor 2 signal number : 695
----- executor 0 executes write_coverage_signal cov->size 12585, flag collect 0
----- executor 1 signal number : 443
----- executor 1 executes write_coverage_signal cov->size 2214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 2944, flag collect 0
----- executor 1 signal number : 505
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 1 signal number : 1004
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
----- executor 2 signal number : 571
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 662
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
executor 1 server cover_cnt 3 output_pos_value 1962
----- executor 2 signal number : 648
----- executor 0 signal number : 188
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 3234, flag collect 0
----- executor 0 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 2880, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2370
----- executor 0 signal number : 605
----- executor 0 executes write_coverage_signal cov->size 3226, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 8 output_pos_value 3071
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 69, 25, 0
before receive testcase: 0 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 87
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [CLIENT] executor 3 has 4 replies
2023/03/28 11:08:01 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:08:01 [SERVER] executor 0 has 8 replies
2023/03/28 11:08:01 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:01 [SERVER] executor 1 has 3 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 505 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1004 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 444 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 1118 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 662 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 188 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 13 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 605 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/28 11:08:01 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 443 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 695 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 571 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 648 signal and 0 cover from userspace component
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2364 lsetxattr$user lsetxattr$user
2023/03/28 11:08:01 ----- insertCall()
2023/03/28 11:08:01 ----- generateCall 2360 lsetxattr$trusted_overlay_opaque lsetxattr$trusted_overlay_opaque
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 5
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file1\x00')
lsetxattr$trusted_overlay_opaque(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x7)
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
lsetxattr$user(&(0x7f0000000000)='./file1\x00', &(0x7f00000000c0), &(0x7f0000000100)='*(.{*N\x00', 0x7, 0x1)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 1176
remove dir: /root/glusterfs-client/dfs-0-1183
time breakdown 0: 68, 27, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
time breakdown 2: 62, 25, 0
before receive testcase: 0 0
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
remove dir time 50
-----finish removing dir
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-1184 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1184
receive_execute: 2, 75
receive_execute: 3, 75
receive_execute: 0, 75
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 7, 78
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6201, pid 3363, write pid:3364
----- executor 3 executes write_coverage_signal cov->size 6201, flag collect 0
----- executor 3 signal number : 1445
----- completed 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5265, pid 3363, write pid:3364
----- executor 3 executes write_coverage_signal cov->size 5265, flag collect 0
----- executor 3 signal number : 298
----- completed 2
execute_one loop: 0, 0, 3
cover_reset in execute_call
=================================================================
==416==ERROR: AddressSanitizer: heap-use-after-free on address 0x6210003e599c at pc 0x7fffeefdbe58 bp 0x7fffefa731f0 sp 0x7fffefa731e0
WRITE of size 4 at 0x6210003e599c thread T7
    #0 0x7fffeefdbe57 in dht_rename_lookup_cbk /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:1591
    #1 0x7fffef1c4b5c in client4_0_lookup_cbk /root/glusterfs/xlators/protocol/client/src/client-rpc-fops_v2.c:2570
    #2 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #3 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #4 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #5 0x7ffff03455a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #6 0x7ffff0355b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #7 0x7ffff0355b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #8 0x7ffff0355b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #9 0x7ffff0355b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #10 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #11 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #12 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477
    #13 0x7ffff70e9102 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)

0x6210003e599c is located 156 bytes inside of 4164-byte region [0x6210003e5900,0x6210003e6944)
freed by thread T6 here:
    #0 0x7ffff76a07cf in __interceptor_free (/lib/x86_64-linux-gnu/libasan.so.5+0x10d7cf)
    #1 0x7ffff735ae19 in __gf_free /root/glusterfs/libglusterfs/src/mem-pool.c:383
    #2 0x7fffeef76acd in dht_local_wipe /root/glusterfs/xlators/cluster/dht/src/dht-helper.c:805
    #3 0x7fffeef76acd in dht_local_wipe /root/glusterfs/xlators/cluster/dht/src/dht-helper.c:713
    #4 0x7fffeefc630c in dht_rename_unlock_cbk /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:39
    #5 0x7fffeefce071 in dht_rename_unlock /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:741
    #6 0x7fffeefd03cd in dht_rename_done /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:758
    #7 0x7fffeefd5bf5 in dht_rename_unlink /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:1002
    #8 0x7fffeefd688e in dht_rename_cbk /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:1150
    #9 0x7fffef1c3803 in client4_0_rename_cbk /root/glusterfs/xlators/protocol/client/src/client-rpc-fops_v2.c:2349
    #10 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #11 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #12 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #13 0x7ffff03455a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #14 0x7ffff0355b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #15 0x7ffff0355b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #16 0x7ffff0355b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #17 0x7ffff0355b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #18 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #19 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #20 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

previously allocated by thread T8 here:
    #0 0x7ffff76a0dc6 in calloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10ddc6)
    #1 0x7ffff735a226 in __gf_calloc /root/glusterfs/libglusterfs/src/mem-pool.c:177
    #2 0x7fffeef82b19 in dht_local_init /root/glusterfs/xlators/cluster/dht/src/dht-helper.c:815
    #3 0x7fffeefdc6ae in dht_rename /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:1967
    #4 0x7fffeef27618 in gf_utime_rename /root/glusterfs/xlators/features/utime/src/utime-autogen-fops.c:231
    #5 0x7fffeeefc6fe in wb_rename /root/glusterfs/xlators/performance/write-behind/src/write-behind.c:2747
    #6 0x7ffff7483855 in default_rename /root/glusterfs/libglusterfs/src/defaults.c:2630
    #7 0x7fffeeeb9693 in ob_rename /root/glusterfs/xlators/performance/open-behind/src/open-behind.c:752
    #8 0x7ffff7483855 in default_rename /root/glusterfs/libglusterfs/src/defaults.c:2630
    #9 0x7fffeee42664 in mdc_rename /root/glusterfs/xlators/performance/md-cache/src/md-cache.c:1912
    #10 0x7ffff74dd97f in default_rename_resume /root/glusterfs/libglusterfs/src/defaults.c:1896
    #11 0x7ffff7322a15 in call_resume_wind /root/glusterfs/libglusterfs/src/call-stub.c:2087
    #12 0x7ffff73528f4 in call_resume /root/glusterfs/libglusterfs/src/call-stub.c----- executor 3 write_call_output, size 6767, pid 3363, write pid:3364
----- executor 3 executes write_coverage_signal cov->size 6767, flag collect 0
----- executor 3 signal number : 392
----- completed 3
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 3387, pid 3363, write pid:3364
----- executor 3 executes write_coverage_signal cov->size 3387, flag collect 0
----- executor 3 signal number : 134
----- completed 4
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4052, pid 3363, write pid:3364
----- executor 3 executes write_coverage_signal cov->size 4052, flag collect 0
----- executor 3 signal number : 5
----- completed 5
execute_one loop: 0, 0, 3
cover_reset in execute_call
:2390
    #13 0x7fffeee1b8bc in iot_worker /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:227
    #14 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T7 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73fdaf2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7358f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7466b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7466b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fee0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T6 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73fdaf2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7358f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7466b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7466b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fee0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T8 created by T6 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7fffeee1aace in __iot_workers_scale /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:830
    #4 0x7fffeee22d62 in iot_workers_scale /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:853
    #5 0x7fffeee22d62 in init /root/glusterfs/xlators/performance/io-threads/src/io-threads.c:1251
    #6 0x7ffff72ea208 in __xlator_init /root/glusterfs/libglusterfs/src/xlator.c:610
    #7 0x7ffff72ea208 in xlator_init /root/glusterfs/libglusterfs/src/xlator.c:635
    #8 0x7ffff737d672 in glusterfs_graph_init /root/glusterfs/libglusterfs/src/graph.c:474
    #9 0x7ffff737e71b in glusterfs_graph_activate /root/glusterfs/libglusterfs/src/graph.c:823
    #10 0x555555573a4e in glusterfs_process_volfp /root/glusterfs/glusterfsd/src/glusterfsd.c:2493
    #11 0x555555584675 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2444
    #12 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #13 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #14 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #15 0x7ffff03455a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #16 0x7ffff0355b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #17 0x7ffff0355b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #18 0x7ffff0355b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #19 0x7ffff0355b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #20 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #21 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #22 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

SUMMARY: AddressSanitizer: heap-use-after-free /root/glusterfs/xlators/cluster/dht/src/dht-rename.c:1591 in dht_rename_lookup_cbk
Shadow bytes around the buggy address:
  0x0c4280074ae0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4280074af0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4280074b00: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4280074b10: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c4280074b20: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c4280074b30: fd fd fd[fd]fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c4280074b40: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c4280074b50: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c4280074b60: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c4280074b70: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c4280074b80: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==416==ABORTING
execute_one loop: 0, 0, 51
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 27
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 29, 79, 0
execute_one time: 1, 108
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
time breakdown 3: 85, 115, 0
before receive testcase: 0 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5550, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5550, flag collect 0
----- executor 1 signal number : 1117
----- executor 1 executes write_coverage_signal cov->size 3031, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 335, flag collect 0
----- executor 0 signal number : 250
----- executor 0 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 0 signal number : 118
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 117, flag collect 0
----- executor 0 signal number : 62
----- executor 1 signal number : 578
----- executor 1 executes write_coverage_signal cov->size 2042, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 4162, flag collect 0
----- executor 0 signal number : 404
----- executor 0 executes write_coverage_signal cov->size 14401, flag collect 0
----- executor 1 signal number : 694
----- executor 1 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 2 signal number : 1117
----- executor 2 executes write_coverage_signal cov->size 3031, flag collect 0
----- executor 1 signal number : 493
----- executor 2 signal number : 578
----- executor 2 executes write_coverage_signal cov->size 4746, flag collect 0
----- executor 0 signal number : 543
----- executor 0 executes write_coverage_signal cov->size 9307, flag collect 0
----- executor 2 signal number : 968
----- executor 2 executes write_coverage_signal cov->size 2042, flag collect 0
executor 1 server cover_cnt 4 output_pos_value 2895
----- executor 2 signal number : 216
----- executor 0 signal number : 1804
----- executor 0 executes write_coverage_signal cov->size 21545, flag collect 0
executor 2 server cover_cnt 4 output_pos_value 2892
----- executor 0 signal number : 1063
----- executor 0 executes write_coverage_signal cov->size 5627, flag collect 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 78, 122, 0
before receive testcase: 0 0
----- executor 0 signal number : 30
----- executor 0 executes write_coverage_signal cov->size 12897, flag collect 0
----- executor 0 signal number : 292
----- executor 0 executes write_coverage_signal cov->size 12058, flag collect 0
----- executor 0 signal number : 1111
----- executor 0 executes write_coverage_signal cov->size 6809, flag collect 0
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 4728, flag collect 0
----- executor 0 signal number : 47
----- executor 0 executes write_coverage_signal cov->size 9304, flag collect 0
----- executor 0 signal number : 141
executor 0 server cover_cnt 14 output_pos_value 6198
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 77, 124, 0
before receive testcase: 0 0
2023/03/28 11:08:01 for select break: 1
2023/03/28 11:08:01 --------- executor 0 receive reply, reply.done 1
2023/03/28 11:08:01 wg wait finish
2023/03/28 11:08:01 ------ all executors finish execution
2023/03/28 11:08:01 exec time: 201
2023/03/28 11:08:01 ----- PS len: 4
2023/03/28 11:08:01 [SERVER] executor 0 has 14 replies
2023/03/28 11:08:01 [SERVER] executor 2 has 4 replies
2023/03/28 11:08:01 [SERVER] executor 1 has 4 replies
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 1117 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 578 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 694 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 1 receive 493 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 250 signal and 0 cover from userspace component
time breakdown 0: 75, 126, 0
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 118 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 404 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 543 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 1804 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 1063 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 30 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 292 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 1117 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 578 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 968 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 1111 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 2 receive 216 signal and 0 cover from userspace component
2023/03/28 11:08:01 ------- fuzzer executor 0 receive 141 signal and 0 cover from userspace component
2023/03/28 11:08:01 [CLIENT] executor 3 has 5 replies
2023/03/28 11:08:01 fuzzer receive 1445 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 298 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 392 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 134 signal and 0 cover from executor 3
2023/03/28 11:08:01 fuzzer receive 5 signal and 0 cover from executor 3
2023/03/28 11:08:01 fsMds: [map[] map[] map[] map[]]
2023/03/28 11:08:01 NetFailure, Node crash: false false
2023/03/28 11:08:01 mutate testcase with failures
2023/03/28 11:08:01 ----- mutateArg()
2023/03/28 11:08:01 HasCrashFail: false, .HasNetFail: false
2023/03/28 11:08:01 prog length: 3
2023/03/28 11:08:01 HasCrashFail:false HasNetFail:false
11:08:01 ---executing program 0:
---
---
---
symlinkat(&(0x7f0000000040)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000080)='./file0\x00')
renameat(0xffffffffffffff9c, &(0x7f0000000200)='./file1\x00', 0xffffffffffffff9c, &(0x7f0000000240)='./file0\x00')
lsetxattr$system_posix_acl(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640)='system.posix_acl_access\x00', 0x0, 0x0, 0x0)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 624
remove dir: /root/glusterfs-client/dfs-0-1184
opendir(/root/glusterfs-client/dfs-0-1184) failedremove dir time 0
-----finish removing dir
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8

VM DIAGNOSIS:
11:08:01  Registers:
info registers vcpu 0
RAX=00007ffff7a74870 RBX=000000002265607e RCX=000000000000001e RDX=000000000000001e
RSI=00000000000000dc RDI=00007ffff77c4480 RBP=000060c00010fe30 RSP=00007fffeb08afc0
R8 =00007ffff77c4480 R9 =000000000000001e R10=00007fffeb041000 R11=00007fffea51ce28
R12=00007fffeb08b0e0 R13=000000000005607e R14=0000000000000000 R15=000000000000001e
RIP=00007ffff76c19aa RFL=00000206 [-----P-] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007fffeb08f700 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00006140000e7037 CR3=000000010c1c8002 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001fa0
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=fdfdfdfdfdfdfdfdfdfdfdfdfdfdfdfd XMM01=00000000000002f80000618000033c98
XMM02=00000000000000000000000000000000 XMM03=0000000000000000000061e000438998
XMM04=00000000000000000000000000000000 XMM05=000000000000000000007ffff721f4e0
XMM06=00000000000000000000000000000000 XMM07=00000000000000080000100000000000
XMM08=312d302d7366642fcafebabe0000001b XMM09=00000000000000000000000000000000
XMM10=20202000202000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe50 RDI=0000000000000001 RBP=00007fffffffe4d0 RSP=00007fffffffe4b0
R8 =0000000000000017 R9 =0000000000000017 R10=0000000000000000 R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032f6 RFL=00000246 [---Z-P-] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=00007ffff7fffc88 CR3=000000010b996002 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=0000000000000000000000000000001a
XMM06=00000000000013880000000000000032 XMM07=00000000000004a00000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
