amespace sandbox: /proc/self/ns/user does not exist
2023/03/31 10:52:44 Android sandbox: /sys/fs/selinux/policy can't be opened (open /sys/fs/selinux/policy: invalid argument)
2023/03/31 10:52:44 fault injection: CONFIG_FAULT_INJECTION_DEBUG_FS or CONFIG_FAILSLAB are not enabled
2023/03/31 10:52:44 leak checking: CONFIG_DEBUG_KMEMLEAK is not enabled
2023/03/31 10:52:44 net packet injection: /dev/net/tun does not exist
2023/03/31 10:52:44 net device setup: enabled
2023/03/31 10:52:44 concurrency sanitizer: /sys/kernel/debug/kcsan does not exist
2023/03/31 10:52:44 devlink PCI setup: enabled
2023/03/31 10:52:44 USB emulation: /dev/raw-gadget does not exist
2023/03/31 10:52:44 hci packet injection: /dev/vhci does not exist
2023/03/31 10:52:44 wifi device emulation: /sys/class/mac80211_hwsim/ does not exist
2023/03/31 10:52:44 802.15.4 emulation: /sys/bus/platform/devices/mac802154_hwsim does not exist
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 26
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 26
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash false hasNet false
2023/03/31 10:52:45 prog length: 20
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash false hasNet false
2023/03/31 10:52:45 prog length: 20
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 fetching corpus: 50, signal 6290/56106/62304 (executing program)
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 26
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 26
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:45 prog length: 6
2023/03/31 10:52:45 prog length: 22
2023/03/31 10:52:45 fetching corpus: 100, signal 6804/70998/78430 (executing program)
2023/03/31 10:52:46 deserializeInput: hasCrash false hasNet true
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash false hasNet false
2023/03/31 10:52:46 prog length: 20
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 fetching corpus: 150, signal 6981/86556/94385 (executing program)
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 26
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:46 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:46 prog length: 6
2023/03/31 10:52:46 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 fetching corpus: 200, signal 6981/89917/98281 (executing program)
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 26
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 26
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:47 prog length: 6
2023/03/31 10:52:47 prog length: 22
2023/03/31 10:52:47 fetching corpus: 250, signal 7241/93531/102548 (executing program)
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet true
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 26
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash false hasNet true
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 24
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 fetching corpus: 300, signal 7242/96675/106058 (executing program)
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 21
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 deserializeInput: hasCrash true hasNet false
2023/03/31 10:52:48 prog length: 6
2023/03/31 10:52:48 prog length: 22
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/109527 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/110089 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/110610 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/111148 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/111677 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/112166 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/112681 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/113241 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/113774 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/114353 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/114856 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/115388 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/115916 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/116457 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/116966 (executing program)
2023/03/31 10:52:48 fetching corpus: 349, signal 7307/99795/117512 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/118026 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/118516 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/119067 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/119606 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/120119 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/120646 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/121193 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/121731 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/122270 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/122810 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/123344 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/123876 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/124454 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/124980 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/125490 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/126016 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/126546 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/127087 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/127598 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/128135 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/128656 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/129184 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/129729 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/130268 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/130805 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/131329 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/131865 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/132395 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/132938 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/133446 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/133972 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/134496 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/135037 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/135552 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/136083 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/136613 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/137144 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/137684 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/138164 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/138701 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/139228 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/139417 (executing program)
2023/03/31 10:52:49 fetching corpus: 349, signal 7307/99795/139417 (executing program)
2023/03/31 10:52:49 starting 1 fuzzer processes
2023/03/31 10:52:49 ----- generateCall 207 fcntl$lock fcntl$lock
2023/03/31 10:52:49 ----- generateCall 2350 lseek lseek
2023/03/31 10:52:49 ----- generateCall 216 fdatasync fdatasync
2023/03/31 10:52:49 ----- generateCall 248 fstat fstat
2023/03/31 10:52:49 ----- generateCall 4129 write$binfmt_elf64 write$binfmt_elf64
2023/03/31 10:52:49 ----- generateCall 2462 openat openat
2023/03/31 10:52:49 ----- generateCall 208 fcntl$notify fcntl$notify
2023/03/31 10:52:49 ----- generateCall 120 chdir chdir
2023/03/31 10:52:49 ----- generateCall 205 fcntl$getown fcntl$getown
2023/03/31 10:52:49 ----- generateCall 244 fsetxattr$user fsetxattr$user
2023/03/31 10:52:49 ----- generateCall 3985 write write
2023/03/31 10:52:49 ----- generateCall 2344 linkat linkat
2023/03/31 10:52:49 ----- generateCall 2723 pread64 pread64
2023/03/31 10:52:49 ----- generateCall 3662 setxattr setxattr
2023/03/31 10:52:49 map[./file0:true]
2023/03/31 10:52:49 HasCrashFail: false, .HasNetFail: false
2023/03/31 10:52:49 prog length: 20
2023/03/31 10:52:49 HasCrashFail:false HasNetFail:false
10:52:49 ---executing program 0:
---
---
---
fcntl$lock(0xffffffffffffffff, 0x6, &(0x7f0000000000)={0x0, 0x1, 0xd5, 0x6})
r0 = openat(0xffffffffffffff9c, &(0x7f0000000040)='./file0\x00', 0x240, 0x0)
lseek(r0, 0x9, 0x0)
fdatasync(r0)
fstat(r0, &(0x7f0000000080))
r1 = open$dir(&(0x7f0000000100)='./file0\x00', 0x501800, 0xb3)
write$binfmt_elf64(r1, &(0x7f0000000140)={{0x7f, 0x45, 0x4c, 0x46, 0x5, 0x3, 0x0, 0xf7, 0x0, 0x2, 0x6, 0x5, 0x1a3, 0x40, 0xc8, 0x5, 0x5, 0x38, 0x1, 0x9, 0x1, 0x5}, [{0x3, 0xa56, 0x82b4107, 0x2, 0x2475, 0x7fff, 0x3f, 0x4}, {0x3, 0x28, 0xa0, 0x0, 0xec9, 0x6, 0x1, 0x20}], "4fc5e09bb03b8e", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0xab7)
r2 = openat(0xffffffffffffffff, &(0x7f0000000c00)='./file0\x00', 0x422000, 0x0)
fcntl$notify(r2, 0x402, 0xb)
chdir(&(0x7f0000000c40)='./file0\x00')
r3 = fcntl$dupfd(r2, 0x0, r2)
fcntl$getown(r3, 0x9)
fsetxattr$user(r3, &(0x7f0000000c80), &(0x7f0000000cc0)='\x00', 0x1, 0x1)
r4 = open(&(0x7f0000000d00)='./file0\x00', 0x20200, 0x102)
write(r4, &(0x7f0000000d40)="00485c5cbeadb2908e610887e7979e25e5f3940ca1932a6bc65530f4e169964fc86a088f3209e7856b075de6b02c991826174e85119c12452675c5ac10665f72e69614cc29d597a6e80403055f0dc227247db77863dd65bc66864a61a7b1df1008503cdeda9ce893385edeaee85a4c6143d077835933e0a59cfe9972db5f9b232cad3fbcc000f8b2c778e0bd3642d621d6c27b76f485ea476cf3bf3563aea6700137123f4c2bd757a153e3f29ba0c96fb53c5fa8905840ca0492404d1fbe06544431310ba18fd5a6e5af9d704e504c35485376371b09f5740969f06ad01a0b1efc2483e975f06cdbd35b9566fc4ea404cf96d4a5bf", 0xf5)
r5 = open$dir(&(0x7f0000000e40)='./file0\x00', 0x40000, 0x10)
r6 = fcntl$dupfd(r4, 0x0, r3)
linkat(r5, &(0x7f0000000e80)='./file0\x00', r6, &(0x7f0000000ec0)='./file0\x00', 0x1000)
pread64(r6, &(0x7f0000000f00)=""/154, 0x9a, 0x7)
setxattr(&(0x7f0000000fc0)='./file0\x00', &(0x7f0000001000)=@random={'os2.', ')\x00'}, &(0x7f0000001040)='\x00', 0x1, 0x3)
---

end of program
2023/03/31 10:52:49 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/glusterfs-images/focal.id_rsa root@192.168.0.35 /root/syz-executor exec 0 0 glusterfs 3 4 192.168.0.35 0 "3 1 'replica 3'" false false false false false]
2023/03/31 10:52:49 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/glusterfs-images/focal.id_rsa root@192.168.0.36 /root/syz-executor exec 0 1 glusterfs 3 4 192.168.0.35 0 "3 1 'replica 3'" false false false false false]
2023/03/31 10:52:49 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/glusterfs-images/focal.id_rsa root@192.168.0.37 /root/syz-executor exec 0 2 glusterfs 3 4 192.168.0.35 0 "3 1 'replica 3'" false false false false false]
2023/03/31 10:52:49 -----run executor: [/usr/bin/ssh -F /dev/null -o ConnectionAttempts=100 -o ConnectTimeout=120 -o UserKnownHostsFile=/dev/null -o BatchMode=yes -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o ConnectTimeout=100 -i /home/tlyu/dfs-fuzzing/disk-images/glusterfs-images/focal.id_rsa root@192.168.0.38 /root/syz-executor exec 1 3 glusterfs 3 4 192.168.0.35 0 "3 1 'replica 3'" false false false false false]
Warning: Permanently added '192.168.0.37' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.35' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.36' (ECDSA) to the list of known hosts.
Warning: Permanently added '192.168.0.38' (ECDSA) to the list of known hosts.
----- is restarting 0
---- dfs_name glusterfs is_dfs_client 0
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #8 SMP Fri Jun 3 16:18:40 CEST 2022
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.35 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu:unlink FIFO failed: No such file or directory
 xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdcfff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffdd000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 5b58001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 461474587 cycles
[    0.000010] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000024] kernel: tsc: Detected 2899.988 MHz processor
[    0.007330] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.007349] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.007368] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.007435] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.007448] kernel: last_pfn = 0xbffdd max_arch_pfn = 0x10000000000
[    0.016790] kernel: found SMP MP-table at [mem 0x000f5c70-0x000f5c7f]
[    0.016987] kernel: Using GB pages for direct mapping
[    0.018270] kernel: ACPI: Early table checksum verification disabled
[    0.018287] kernel: ACPI: RSDP 0x00000000000F5A40 000014 (v00 BOCHS )
[    0.018311] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.018340] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.018369] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.018392] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.018410] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    0.018433] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.018454] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.018464] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.018473] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.018482] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.018491] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.019408] kernel: No NUMA configuration found
[    0.019415] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.019432] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.019566] kernel: Zone ranges:
[    0.019570] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.019582] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.019593] kernel:   Normal   [mem 0x0000000100000000-0x00000002bfffffff]
[    0.019603] kernel: Movable zone start for each node
[    0.019607] kernel: Early memory node ranges
[    0.019611] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.019620] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdcfff]
[    0.019629] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.019641] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.020076] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.020154] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.118052] kernel: On node 0, zone Normal: 35 pages in unavailable ranges
[    0.535832] kernel: kasan: KernelAddressSanitizer initialized
[    0.536229] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.536255] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.536310] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.536327] kernel: ACPI: INT_SRC_OVR (bexecutor 0 finishes userspace_cover_open
before receiving handshake request
us 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.536339] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.536349] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.536360] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.536371] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.536392] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.536398] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.536411] kernel: TSC deadline timer available
[    0.536415] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.536453] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.536461] kernel: kvm-guest: setup PV sched yield
[    0.536508] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.536521] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.536528] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.536536] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.536548] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffdd000-0xbfffffff]
[    0.536555] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.536563] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.536570] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.536578] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.536588] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.536595] kernel: Booting paravirtualized kernel on KVM
[    0.536602] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.553411] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.554165] kernel: percpu: Embedded 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.554205] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.554223] kernel: pcpu-alloc: [0] 0 1 
[    0.554329] kernel: kvm-guest: setup async PF for cpu 0
[    0.554340] kernel: kvm-guest: stealtime: cpu 0, msr 26501f140
[    0.554352] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580189
[    0.554361] kernel: Policy zone: Normal
[    0.554367] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.35 quiet nokaslr
[    0.554695] kernel: Unknown command line parameters: nokaslr
[    0.559603] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.563171] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.563325] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.828037] kernel: Memory: 8817340K/10485228K available (47117K kernel code, 10298K rwdata, 7204K rodata, 2068K init, 2860K bss, 1667688K reserved, 0K cma-reserved)
[    0.828299] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.828974] kernel: rcu: Hierarchical RCU implementation.
[    0.828980] kernel: rcu:         RCU event tracing is enabled.
[    0.828984] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.828995] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.829001] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.838932] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.839366] kernel: random: get_random_bytes called from start_kernel+0x22b/0x456 with crng_init=0
[    0.843621] kernel: Console: colour VGA+ 80x25
[    0.843788] kernel: printk: console [ttyS0] enabled
[    0.843872] kernel: ACPI: Core revision 20210730
[    0.844305] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.844552] kernel: APIC: Switch to symmetric I/O mode setup
[    0.844562] kernel: kvm-guest: setup PV IPIs
[    0.845920] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.845972] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.846005] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.846024] kernel: pid_max: default: 32768 minimum: 301
[    0.846168] kernel: LSM: Security Framework initializing
[    0.846225] kernel: SELinux:  Initializing.
[    0.846404] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.847007] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.848530] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0.848748] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.848758] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.848791] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.848807] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.848812] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.848821] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.848832] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.848840] kernel: TAA: Mitigation: TSX disabled
[    0.874922] kernel: Freeing SMP alternatives memory: 40K
[    0.875189] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.875459] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.875605] kernel: ... version:                2
[    0.875611] kernel: ... bit width:              48
[    0.875616] kernel: ... generic registers:      8
[    0.875621] kernel: ... value mask:             0000ffffffffffff
[    0.875627] kernel: ... max period:             00007fffffffffff
[    0.875632] kernel: ... fixed-purpose events:   3
[    0.875637] kernel: ... event mask:             00000007000000ff
[    0.875863] kernel: rcu: Hierarchical SRCU implementation.
[    0.877424] kernel: smp: Bringing up secondary CPUs ...
[    0.878018] kernel: x86: Booting SMP configuration:
[    0.878025] kernel: .... node  #0, CPUs:      #1
[    0.006703] kernel: kvm-clock: cpu 1, msr 5b58041, secondary cpu clock
[    0.006703] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.880063] kernel: kvm-guest: setup async PF for cpu 1
[    0.880091] kernel: kvm-guest: stealtime: cpu 1, msr 26511f140
[    0.880129] kernel: smp: Brought up 1 node, 2 CPUs
[    0.880129] kernel: smpboot: Max logical packages: 2
[    0.880129] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.882344] kernel: devtmpfs: initialized
[    0.887409] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.887427] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.888192] kernel: PM: RTC time: 10:52:32, date: 2023-03-31
[    0.889005] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.889717] kernel: audit: initializing netlink subsys (disabled)
[    0.889778] kernel: audit: type=2000 audit(1680259952.983:1): state=initialized audit_enabled=0 res=1
[    0.890383] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.890389] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.890459] kernel: cpuidle: using governor menu
[    0.890459] kernel: ACPI: bus type PCI registered
[    0.891112] kernel: PCI: Using configuration type 1 for base access
[    0.915389] kernel: Kprobes globally optimized
[    0.915458] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.916109] kernel: cryptomgr_test (26) used greatest stack depth: 30608 bytes left
[    0.924033] kernel: ACPI: Added _OSI(Module Device)
[    0.924071] kernel: ACPI: Added _OSI(Processor Device)
[    0.924098] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.924126] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.924172] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.924214] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.924257] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.959565] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.964450] kernel: ACPI: Interpreter enabled
[    0.964630] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.964641] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.965076] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.966752] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    1.000068] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    1.000106] kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    1.000225] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    1.000558] kernel: PCI host bridge to bus 0000:00
[    1.000568] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    1.000584] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    1.000599] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    1.000615] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    1.000630] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    1.000654] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    1.002791] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.005554] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.007267] kernel: pci 0000:00:01.1: [8086:7010----- is restarting 0
---- dfs_name glusterfs is_dfs_client 1
] type 00 class 0x010180
[    1.009419] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc0c0-0xc0cf]
[    1.010798] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.010814] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    1.010825] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.010837] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.013252] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.013687] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.013719] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.016192] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.017799] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.020011] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.023006] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-0xfeb8ffff pref]
[    1.025289] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.026001] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc080-0xc09f]
[    1.030777] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    1.036166] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.037655] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc0a0-0xc0bf]
[    1.038737] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.042007] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.043004] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.048220] kernel: pci 0000:00:05.0: [1af4:1001] type 00 class 0x010000
[    1.050010] kernel: pci 0000:00:05.0: reg 0x10: [io  0xc000-0xc07f]
[    1.052009] kernel: pci 0000:00:05.0: reg 0x14: [mem 0xfeb92000-0xfeb92fff]
[    1.057007] kernel: pci 0000:00:05.0: reg 0x20: [mem 0xfe208000-0xfe20bfff 64bit pref]
[    1.064484] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.065915] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.068802] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.077368] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.078707] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.080533] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe20c000-0xfe20c3ff 64bit pref]
[    1.087479] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.088499] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb95000-0xfeb950ff]
[    1.090478] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.099219] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    1.100105] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    1.100958] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    1.101813] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    1.102338] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    1.104188] kernel: iommu: Default domain type: Translated 
[    1.104199] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    1.104310] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.104310] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.104310] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.104310] kernel: vgaarb: loaded
[    1.105093] kernel: SCSI subsystem initialized
[    1.105183] kernel: libata version 3.00 loaded.
[    1.105299] kernel: ACPI: bus type USB registered
[    1.105436] kernel: usbcore: registered new interface driver usbfs
[    1.105512] kernel: usbcore: registered new interface driver hub
[    1.105566] kernel: usbcore: registered new device driver usb
[    1.105710] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.105718] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.105752] kernel: PTP clock support registered
[    1.106212] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.107435] kernel: NetLabel: Initializing
[    1.107444] kernel: NetLabel:  domain hash size = 128
[    1.107454] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.107637] kernel: NetLabel:  unlabeled traffic allowed by default
[    1.107792] kernel: PCI: Using ACPI for IRQ routing
[    1.108001] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.108195] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.108216] kernel: e820: reserve RAM buffer [mem 0xbffdd000-0xbfffffff]
[    1.108522] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.108555] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.112168] kernel: clocksource: Switched to clocksource kvm-clock
[    1.269056] kernel: VFS: Disk quotas dquot_6.6.0
[    1.269132] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.269436] kernel: pnp: PnP ACPI init
[    1.270274] kernel: pnp 00:03: [dma 2]
[    1.273174] kernel: pnp: PnP ACPI: found 6 devices
[    1.287781] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.287894] kernel: NET: Registered PF_INET protocol family
[    1.288548] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    1.291675] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.292398] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.293338] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    1.294414] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.294515] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.294667] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, li----- is restarting 0
---- dfs_name glusterfs is_dfs_client 0
near)
[    1.294955] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    1.296207] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.296232] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.296249] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.296271] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.296291] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.296654] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.296685] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.296732] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.296887] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.297111] kernel: PCI: CLS 0 bytes, default 64
[    1.297153] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.297160] kernel: software IO TLB: mappbefore receiving handshake request
ed [mem 0x00000000bbfdd000-0x00000000bffdd000] (64MB)
[    1.297588] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    1.297622] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    1.297666] kernel: clocksource: Switched to clocksource tsc
[    1.303048] kernel: Initialise system trusted keyrings
[    1.303237] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.323483] kernel: fuse: init (API version 7.34)
[    1.338120] kernel: Key type asymmetric registered
[    1.338133] kernel: Asymmetric key parser 'x509' registered
[    1.338202] kernel: cryptomgr_test (54) used greatest stack depth: 30544 bytes left
[    1.338428] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.338440] kernel: io scheduler mq-deadline registered
[    1.338449] kernel: io scheduler kyber registered
[    1.340314] kernel: input: Power Button as /devices/L----- is restarting 0
---- dfs_name glusterfs is_dfs_client 0
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #8 SMP Fri Jun 3 16:18:40 CEST 2022
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.38 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu:NXSYSTM:00/LNXPWRBN:00/input/input0
[    1.340709] kernel: ACPI: button: Power Button [PWRF]
[    2.310647] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    3.261448] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    4.281360] kernel: ACPI: \_SB_.LNKA: Enabled at IRQ 10
[    4.283353] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    4.283570] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    4.287664] kernel: Non-volatile memory driver v1.3
[    4.287891] kernel: Linux agpgart interface v0.103
[    4.307421] kernel: loop: module loaded
[    4.309041] kernel: virtio_blk virtio2: [vda] 1024000 512-byte logical blocks (524 MB/500 MiB)
[    4.314086] kernel: ata_piix 0000:00:01.1: version 2.13
[    4.317579] kernel: scsi host0: ata_piix
[    4.318756] kernel: scsi host1: ata_piix
[    4.319205] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc0c0 irq 14
[    4.319225] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc0c8 irq 15
[    4.320718] kernel: libphy: Fixed MDIO Bus: probed
[    4.324840] kernel: e100: Intel(R) PRO/100 Network Driver
[    4.324848] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    4.324904] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    4.324910] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    4.324981] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    4.324985] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    4.325088] kernel: sky2: driver version 1.30
[    4.325709] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    4.325717] kernel: ehci-pci: EHCI PCI platform driver
[    4.325763] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    4.325778] kernel: ohci-pci: OHCI PCI platform driver
[    4.325823] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    4.326107] kernel: usbcore: registered new interface driver usblp
[    4.326163] kernel: usbcore: registered new interface xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdffff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffe0000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0x driver usb-storage
[    4.326307] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    4.326933] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    4.326953] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    4.327821] kernel: rtc_cmos 00:00: RTC can wake from S4
[    4.328445] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    4.330613] kernel: rtc_cmos 00:00: registered as rtc0
[    4.330706] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    4.331628] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    4.331646] kernel: intel_pstate: CPU model not supported
[    4.331785] kernel: hid: raw HID events driver (C) Jiri Kosina
[    4.332636] kernel: usbcore: registered new interface driver usbhid
[    4.332644] kernel: usbhid: USB HID core driver
[    4.333453] kernel: netem: version 1.3
[    4.337215] kernel: Initializing XFRunlink FIFO failed: No such file or directory
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #8 SMP Fri Jun 3 16:18:40 CEST 2022
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.36 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu:00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 5b58001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 485843002 cycles
[    0.000010] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000024] kernel: tsc: Detected 2899.988 MHz processor
[    0.006685] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.006703] kernel: e820: remove [mem 0x000a0000-0x000fffM netlink socket
[    4.338372] kernel: NET: Registered PF_INET6 protocol family
[    4.339452] kernel: Segment Routing with IPv6
[    4.339486] kernel: In-situ OAM (IOAM) with IPv6
[    4.339674] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    4.340293] kernel: NET: Registered PF_PACKET protocol family
[    4.340433] kernel: 9pnet: Installing 9P2000 support
[    4.340485] kernel: Key type dns_resolver registered
[    4.340505] kernel: Key type ceph registered
[    4.341328] kernel: libceph: loaded (mon/osd proto 15/24)
[    4.342023] kernel: IPI shorthand broadcast: enabled
[    4.342078] kernel: sched_clock: Marking stable (4336296323, 5703333)->(4391175382, -49175726)
[    4.342540] kernel: registered taskstats version 1
[    4.342547] kernel: Loading compiled-in X.509 certificates
[    4.344735] kernel: PM:   Magic number: 15:709:882
[    4.344834] kernel: printk: console [netcon0] enabled
[    4.344842] kernel: netconsole: network logging started
[    4.477833] k xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdcfff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffdd000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0xernel: ata2.01: NODEV after polling detection
[    4.478159] kernel: ata1.01: NODEV after polling detection
[    4.478526] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    4.478970] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    4.479054] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    4.481231] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    4.483348] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    4.483358] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.483411] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    4.483438] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    4.483524] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.484939] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    4.489709] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    4.507397] kern00000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 5b58001, primary cpu clock
[    0.000002] kernel: kvm-clock: using sched offset of 511372054 cycles
[    0.000010] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000023] kernel: tsc: Detected 2899.988 MHz processor
[    0.007376] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.007401] kernel: e820: remove [mem 0x000a0000-0x000fffff] usable
[    0.006721] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.006785] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.006797] kernel: last_pfn = 0xbffe0 max_arch_pfn = 0x10000000000
[    0.015375] kernel: found SMP MP-table at [mem 0x000f5c80-0x000f5c8f]
[    0.015490] kernel: Using GB pages for direct mapping
[    0.016690] kernel: ACPI: Early table checksum verification disabled
[    0.016706] kernel: ACPI: RSDP 0x00000000000F5A50 000014 (v00 BOCHS )
[    0.016730] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.016757] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.016787] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.016810] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.016828] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[   el: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.507453] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.529136] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    4.530537] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.951302] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.967201] kernel: IP-Config: Guessing netmask 255.255.255.0
[    4.967230] kernel: IP-Config: Complete:
[    4.967240] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:23, ipaddr=192.168.0.35, mask=255.255.255.0, gw=255.255.255.255
[    4.967307] kernel:      host=192.168.0.35, domain=, nis-domain=(none)
[    4.967329] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    4.967956] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    4.969728] kernel: kworker/u4:1 (69) used greatest stack depth: 28680 bytes left
[    4.974658] kernel: cfg80211: Loaded X.509fsync test_dir /root/req 5
 0.016851] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.016872] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.016882] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.016891] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.016900] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.016908] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.017823] kernel: No NUMA configuration found
[    0.017829] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.017846] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.017980] kernel: Zone ranges:
[    0.017984] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.017996] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.018007] kernel:   Normal   [mem 0x00000001000000req.flags ea2
ff] usable
[    0.007421] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.007489] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.007502] kernel: last_pfn = 0xbffdd max_arch_pfn = 0x10000000000
[    0.016147] kernel: found SMP MP-table at [mem 0x000f5c70-0x000f5c7f]
[    0.016269] kernel: Using GB pages for direct mapping
[    0.017461] kernel: ACPI: Early table checksum verification disabled
[    0.017478] kernel: ACPI: RSDP 0x00000000000F5A40 000014 (v00 BOCHS )
[    0.017501] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.017529] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.017558] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.017582] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.017599] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[    cert 'sforshee: 00b28ddf47aef9cea7'
[    4.974710] kernel: ALSA device list:
[    4.974722] kernel:   No soundcards found.
[    4.975455] kernel: md: Waiting for all devices to be available before autodetect
[    4.975473] kernel: md: If you don't use raid, use raid=noautodetect
[    4.975490] kernel: md: Autodetecting RAID arrays.
[    4.975506] kernel: md: autorun ...
[    4.975520] kernel: md: ... autorun DONE.
[    4.976662] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    4.976708] kernel: cfg80211: failed to load regulatory.db
[    5.002342] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    5.002430] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    5.003355] kernel: devtmpfs: mounted
[    5.004788] kernel: Freeing unused kernel image (initmem) memory: 2068K
[    5.004804] kernel: Write protecting the kernel read-only data: 57344k
[    5.007698] kernel: Fre 0.017623] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.017644] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.017654] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.017663] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.017672] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.017681] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.018601] kernel: No NUMA configuration found
[    0.018607] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.018625] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.018762] kernel: Zone ranges:
[    0.018766] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.018778] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.018789] kernel:   Normal   [mem 0x00000001000000----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
unlink FIFO failed: No such file or directory
00-0x00000002bfffffff]
[    0.018017] kernel: Movable zone start for each node
[    0.018021] kernel: Early memory node ranges
[    0.018024] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.018033] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdffff]
[    0.018043] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.018055] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.018515] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.018653] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.123522] kernel: On node 0, zone Normal: 32 pages in unavailable ranges
[    0.511745] kernel: kasan: KernelAddressSanitizer initialized
[    0.512210] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.512246] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.512318] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.512353] kernel: ACPI: INT_SRC_OVR (b----- uclient_cover_open write to pipe 4
eing unused kernel image (text/rodata gap) memory: 2032K
[    5.008470] kernel: Freeing unused kernel image (rodata/data gap) memory: 988K
[    5.008504] kernel: Run /sbin/init as init process
[    5.008513] kernel:   with arguments:
[    5.008518] kernel:     /sbin/init
[    5.008525] kernel:     nokaslr
[    5.008532] kernel:   with environment:
[    5.008538] kernel:     HOME=/
[    5.008545] kernel:     TERM=linux
[    5.082058] kernel: random: fast init done
[    5.177077] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    5.177378] systemd[1]: Detected virtualization kvm.
[    5.177399] systemd[1]: Detected architecture x86-64.
[    5.189453] systemd[1]: Set hostname to <dfs-fuzzing>.
[    5.254969] kernel: netplan (77) used greatest stack depth: 26520 bytes left
[    5.312975] kernel: sy00-0x00000002bfffffff]
[    0.018799] kernel: Movable zone start for each node
[    0.018803] kernel: Early memory node ranges
[    0.018806] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.018815] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdcfff]
[    0.018825] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.018837] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.019397] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.019474] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.112499] kernel: On node 0, zone Normal: 35 pages in unavailable ranges
[    0.547325] kernel: kasan: KernelAddressSanitizer initialized
[    0.547939] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.547976] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.548050] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.548074] kernel: ACPI: INT_SRC_OVR (b----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
[    0.000000] kernel: Linux version 5.15.0+ (tlyu@IC-RS3-DPC07) (gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0, GNU ld (GNU Binutils for Ubuntu) 2.34) #8 SMP Fri Jun 3 16:18:40 CEST 2022
[    0.000000] kernel: Command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.37 quiet nokaslr
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x020: 'AVX-512 opmask'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x040: 'AVX-512 Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x080: 'AVX-512 ZMM_Hi256'
[    0.000000] kernel: x86/fpu: Supporting XSAVE feature 0x200: 'Protection Keys User registers'
[    0.000000] kernel: x86/fpu: xstate_offset[2]:  576, xstate_sizes[2]:  256
[    0.000000] kernel: x86/fpu:----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
stemd-system- (87) used greatest stack depth: 26296 bytes left
[    5.353086] kernel: systemd-sysv-ge (88) used greatest stack depth: 25912 bytes left
[    5.357044] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    5.468249] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    5.500618] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    5.500647] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    5.501629] systemd[1]: Created slice system-modprobe.slice.
[    5.502053] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    5.502364] systemd[1]: Created slice User and Session Slice.
[    5.502558] systemd[1]: Started Dispatch Password Requests to Console Directory Wa----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
 xstate_offset[5]:  832, xstate_sizes[5]:   64
[    0.000000] kernel: x86/fpu: xstate_offset[6]:  896, xstate_sizes[6]:  512
[    0.000000] kernel: x86/fpu: xstate_offset[7]: 1408, xstate_sizes[7]: 1024
[    0.000000] kernel: x86/fpu: xstate_offset[9]: 2432, xstate_sizes[9]:    8
[    0.000000] kernel: x86/fpu: Enabled xstate features 0x2e7, context size is 2440 bytes, using 'compacted' format.
[    0.000000] kernel: signal: max sigframe size: 3632
[    0.000000] kernel: BIOS-provided physical RAM map:
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000000000-0x000000000009fbff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x000000000009fc00-0x000000000009ffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000000f0000-0x00000000000fffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000000100000-0x00000000bffdcfff] usable
[    0.000000] kernel: BIOS-e820: [mem 0x00000000bffdd000-0x00000000bfffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000feffc000-0xtch.
[    5.502719] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    5.503409] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    5.503457] systemd[1]: Reached target Local Encrypted Volumes.
[    5.503481] systemd[1]: Reached target Paths.
[    5.503495] systemd[1]: Reached target Remote File Systems.
[    5.503509] systemd[1]: Reached target Slices.
[    5.503524] systemd[1]: Reached target Swap.
[    5.503728] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    5.504051] systemd[1]: Listening on Syslog Socket.
[    5.504191] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    5.504667] systemd[1]: Listening on Journal Audit Socket.
[    5.504943] systemd[1]: Listening on Journal Socket (/dev/log).
[    5.505751] systemd[1]: Listening on Journal Socket.
[    5.506124] systemd[1]: Listening on udev Control Socket.
[    5.506330] systemd[1]: Listening on udev Kernel Socket.
[    5.509629] ----- uclient_cover_open write to pipe 4
us 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.548093] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.548109] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.548130] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.548147] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.548178] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.548187] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.548206] kernel: TSC deadline timer available
[    0.548213] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.548261] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.548273] kernel: kvm-guest: setup PV sched yield
[    0.548338] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.548357] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.548369] kernel: PM: hibernation: Registered nosav----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
----- uclient_cover_open write to pipe 4
systemd[1]: Mounting Huge Pages File System...
[    5.512078] systemd[1]: Mounting POSIX Message Queue File System...
[    5.514591] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    5.516767] systemd[1]: Mounting /sys/kernel/config...
[    5.519520] systemd[1]: Mounting /sys/kernel/debug...
[    5.522134] systemd[1]: Mounting Kernel Trace File System...
[    5.527043] systemd[1]: Starting Journal Service...
[    5.542336] systemd[1]: Starting Set the console keyboard layout...
[    5.542401] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    5.542482] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    5.542922] kernel: mount (90) used greatest stack depth: 25752 bytes left
[    5.558560] systemd[1]: Starting Load Kernel Modules...
[    5.561121] systemd[1]: Starting Remount Root and Kernel File Systems...
[    5.563076] systemd[1]: Starting udev Coldplug all Devices...
[    5.56822300000000feffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x00000000fffc0000-0x00000000ffffffff] reserved
[    0.000000] kernel: BIOS-e820: [mem 0x0000000100000000-0x00000002bfffffff] usable
[    0.000000] kernel: NX (Execute Disable) protection: active
[    0.000000] kernel: SMBIOS 2.8 present.
[    0.000000] kernel: DMI: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.13.0-1ubuntu1.1 04/01/2014
[    0.000000] kernel: Hypervisor detected: KVM
[    0.000000] kernel: kvm-clock: Using msrs 4b564d01 and 4b564d00
[    0.000000] kernel: kvm-clock: cpu 0, msr 5b58001, primary cpu clock
[    0.000003] kernel: kvm-clock: using sched offset of 483220846 cycles
[    0.000015] kernel: clocksource: kvm-clock: mask: 0xffffffffffffffff max_cycles: 0x1cd42e4dffb, max_idle_ns: 881590591483 ns
[    0.000035] kernel: tsc: Detected 2899.988 MHz processor
[    0.009561] kernel: e820: update [mem 0x00000000-0x00000fff] usable ==> reserved
[    0.009600] kernel: e820: remove [mem 0x000a0000-0x000fffus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.512371] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.512382] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.512393] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.512404] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.512425] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.512431] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.512445] kernel: TSC deadline timer available
[    0.512452] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.512501] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.512513] kernel: kvm-guest: setup PV sched yield
[    0.512577] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.512595] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.512607] kernel: PM: hibernation: Registered nosave memory: [mem 0x000a0000-0x000effff]
[    0.548381] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.548399] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffdd000-0xbfffffff]
[    0.548410] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.548422] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.548434] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.548446] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.548461] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.548472] kernel: Booting paravirtualized kernel on KVM
[    0.548482] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.567689] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.568681] kernel: percpu: Embedde] systemd[1]: Mounted Huge Pages File System.
[    5.568736] systemd[1]: Mounted POSIX Message Queue File System.
[    5.576407] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    5.576931] systemd[1]: Mounted /sys/kernel/config.
[    5.577416] systemd[1]: Mounted /sys/kernel/debug.
[    5.577886] systemd[1]: Mounted Kernel Trace File System.
[    5.582907] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    5.603409] systemd[1]: Finished Load Kernel Modules.
[    5.614840] systemd[1]: Mounting FUSE Control File System...
[    5.621058] systemd[1]: Starting Apply Kernel Variables...
[    5.654824] systemd[1]: Mounted FUSE Control File System.
[    5.660969] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    5.666902] systemd[1]: Finished Remount Root and Kernel File Systems.
[    5.668244] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    5.668300] systemd[1]: Condition check resulted in ff] usable
[    0.009626] kernel: last_pfn = 0x2c0000 max_arch_pfn = 0x10000000000
[    0.009705] kernel: x86/PAT: Configuration [0-7]: WB  WC  UC- UC  WB  WP  UC- WT  
[    0.009722] kernel: last_pfn = 0xbffdd max_arch_pfn = 0x10000000000
[    0.020609] kernel: found SMP MP-table at [mem 0x000f5c70-0x000f5c7f]
[    0.020791] kernel: Using GB pages for direct mapping
[    0.022740] kernel: ACPI: Early table checksum verification disabled
[    0.022765] kernel: ACPI: RSDP 0x00000000000F5A40 000014 (v00 BOCHS )
[    0.022803] kernel: ACPI: RSDT 0x00000000BFFE15C9 000030 (v01 BOCHS  BXPCRSDT 00000001 BXPC 00000001)
[    0.022846] kernel: ACPI: FACP 0x00000000BFFE149D 000074 (v01 BOCHS  BXPCFACP 00000001 BXPC 00000001)
[    0.022893] kernel: ACPI: DSDT 0x00000000BFFE0040 00145D (v01 BOCHS  BXPCDSDT 00000001 BXPC 00000001)
[    0.022931] kernel: ACPI: FACS 0x00000000BFFE0000 000040
[    0.022959] kernel: ACPI: APIC 0x00000000BFFE1511 000080 (v01 BOCHS  BXPCAPIC 00000001 BXPC 00000001)
[   d 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.568738] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.568764] kernel: pcpu-alloc: [0] 0 1 
[    0.568919] kernel: kvm-guest: setup async PF for cpu 0
[    0.568935] kernel: kvm-guest: stealtime: cpu 0, msr 26501f140
[    0.568952] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580189
[    0.568965] kernel: Policy zone: Normal
[    0.568973] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.36 quiet nokaslr
[    0.569456] kernel: Unknown command line parameters: nokaslr
[    0.574825] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.577422] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.577555] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.839860] kernel: Memory: 8817340K/10485228K available (47117K kernel code, 10298K rwdata, 7204K rodata, 2068K in----- executor 3 do_sandbox_none at begining
----- executor 3 do_sandbox_none before fork()
e memory: [mem 0x000a0000-0x000effff]
[    0.512619] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.512635] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffe0000-0xbfffffff]
[    0.512647] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.512659] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.512671] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.512683] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.512699] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.512707] kernel: Booting paravirtualized kernel on KVM
[    0.512714] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.529862] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.530559] kernel: percpu: EmbeddePlatform Persistent Storage Archival being skipped.
[    5.670842] systemd[1]: Starting Load/Save Random Seed...
[    5.682416] systemd[1]: Starting Create System Users...
[    5.734763] systemd[1]: Finished Apply Kernel Variables.
[    5.750933] kernel: systemd-sysuser (112) used greatest stack depth: 25608 bytes left
[    5.753177] systemd[1]: Finished Create System Users.
[    5.757094] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.804977] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.807518] systemd[1]: Starting udev Kernel Device Manager...
[    5.934312] systemd[1]: Started udev Kernel Device Manager.
[    6.145303] kernel: keyboard-setup. (97) used greatest stack depth: 25560 bytes left
[    6.153847] systemd[1]: Finished Set the console keyboard layout.
[    6.154552] systemd[1]: Reached target Local File Systems (Pre).
[    6.154590] systemd[1]: Reached target Local File Systems.
[    6.179227] systemd[1]: Starting Set console font and ke 0.022997] kernel: ACPI: HPET 0x00000000BFFE1591 000038 (v01 BOCHS  BXPCHPET 00000001 BXPC 00000001)
[    0.023033] kernel: ACPI: Reserving FACP table memory at [mem 0xbffe149d-0xbffe1510]
[    0.023049] kernel: ACPI: Reserving DSDT table memory at [mem 0xbffe0040-0xbffe149c]
[    0.023064] kernel: ACPI: Reserving FACS table memory at [mem 0xbffe0000-0xbffe003f]
[    0.023079] kernel: ACPI: Reserving APIC table memory at [mem 0xbffe1511-0xbffe1590]
[    0.023094] kernel: ACPI: Reserving HPET table memory at [mem 0xbffe1591-0xbffe15c8]
[    0.024815] kernel: No NUMA configuration found
[    0.024827] kernel: Faking a node at [mem 0x0000000000000000-0x00000002bfffffff]
[    0.024855] kernel: NODE_DATA(0) allocated [mem 0x2bfffa000-0x2bfffdfff]
[    0.025060] kernel: Zone ranges:
[    0.025068] kernel:   DMA      [mem 0x0000000000001000-0x0000000000ffffff]
[    0.025087] kernel:   DMA32    [mem 0x0000000001000000-0x00000000ffffffff]
[    0.025104] kernel:   Normal   [mem 0x00000001000000it, 2860K bss, 1667688K reserved, 0K cma-reserved)
[    0.840108] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.840739] kernel: rcu: Hierarchical RCU implementation.
[    0.840745] kernel: rcu:         RCU event tracing is enabled.
[    0.840749] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.840759] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.840766] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.850029] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.850427] kernel: random: get_random_bytes called from start_kernel+0x22b/0x456 with crng_init=0
[    0.854979] kernel: Console: colour VGA+ 80x25
[    0.855114] kernel: printk: console [ttyS0] enabled
[    0.855169] kernel: ACPI: Core revision 20210730
[    0.855534] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.855697] kernel: APIexecutor 1 finishes userspace_cover_open
before receiving handshake request
d 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.530599] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.530616] kernel: pcpu-alloc: [0] 0 1 
[    0.530724] kernel: kvm-guest: setup async PF for cpu 0
[    0.530735] kernel: kvm-guest: stealtime: cpu 0, msr 26501f140
[    0.530747] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580192
[    0.530755] kernel: Policy zone: Normal
[    0.530761] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.38 quiet nokaslr
[    0.531086] kernel: Unknown command line parameters: nokaslr
[    0.535916] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.538363] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.538537] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.812899] kernel: Memory: 8817352K/10485240K available (47117K kernel code, 10298K rwdata, 7204K rodata, 2068K inymap...
[    6.179365] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    6.222259] kernel: random: crng init done
[    6.231336] systemd[1]: Finished Load/Save Random Seed.
[    6.232297] systemd[1]: Condition check resulted in Store a System Token in an EFI Variable being skipped.
[    6.268394] systemd[1]: Finished Set console font and keymap.
[    6.462125] systemd[1]: Found device /dev/ttyS0.
[    6.554566] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    6.583411] systemd[1]: Finished udev Coldplug all Devices.
[    6.739391] systemd[1]: Started Journal Service.
00-0x00000002bfffffff]
[    0.025122] kernel: Movable zone start for each node
[    0.025129] kernel: Early memory node ranges
[    0.025134] kernel:   node   0: [mem 0x0000000000001000-0x000000000009efff]
[    0.025149] kernel:   node   0: [mem 0x0000000000100000-0x00000000bffdcfff]
[    0.025165] kernel:   node   0: [mem 0x0000000100000000-0x00000002bfffffff]
[    0.025185] kernel: Initmem setup node 0 [mem 0x0000000000001000-0x00000002bfffffff]
[    0.025694] kernel: On node 0, zone DMA: 1 pages in unavailable ranges
[    0.025883] kernel: On node 0, zone DMA: 97 pages in unavailable ranges
[    0.158914] kernel: On node 0, zone Normal: 35 pages in unavailable ranges
[    0.585121] kernel: kasan: KernelAddressSanitizer initialized
[    0.585570] kernel: ACPI: PM-Timer IO Port: 0x608
[    0.585595] kernel: ACPI: LAPIC_NMI (acpi_id[0xff] dfl dfl lint[0x1])
[    0.585651] kernel: IOAPIC[0]: apic_id 0, version 17, address 0xfec00000, GSI 0-23
[    0.585668] kernel: ACPI: INT_SRC_OVR (bC: Switch to symmetric I/O mode setup
[    0.855708] kernel: kvm-guest: setup PV IPIs
[    0.857390] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.857444] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.857478] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.857498] kernel: pid_max: default: 32768 minimum: 301
[    0.857641] kernel: LSM: Security Framework initializing
[    0.858496] kernel: SELinux:  Initializing.
[    0.858711] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.859288] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.860553] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0.860829] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.860842] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.860892] kernel:it, 2860K bss, 1667688K reserved, 0K cma-reserved)
[    0.813163] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.813885] kernel: rcu: Hierarchical RCU implementation.
[    0.813892] kernel: rcu:         RCU event tracing is enabled.
[    0.813896] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.813906] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.813912] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.824082] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.824557] kernel: random: get_random_bytes called from start_kernel+0x22b/0x456 with crng_init=0
[    0.829651] kernel: Console: colour VGA+ 80x25
[    0.829795] kernel: printk: console [ttyS0] enabled
[    0.829852] kernel: ACPI: Core revision 20210730
[    0.830144] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.830290] kernel: APIus 0 bus_irq 0 global_irq 2 dfl dfl)
[    0.585680] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 5 global_irq 5 high level)
[    0.585691] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 high level)
[    0.585705] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 10 global_irq 10 high level)
[    0.585716] kernel: ACPI: INT_SRC_OVR (bus 0 bus_irq 11 global_irq 11 high level)
[    0.585737] kernel: ACPI: Using ACPI (MADT) for SMP configuration information
[    0.585742] kernel: ACPI: HPET id: 0x8086a201 base: 0xfed00000
[    0.585756] kernel: TSC deadline timer available
[    0.585761] kernel: smpboot: Allowing 2 CPUs, 0 hotplug CPUs
[    0.585802] kernel: kvm-guest: KVM setup pv remote TLB flush
[    0.585810] kernel: kvm-guest: setup PV sched yield
[    0.585857] kernel: PM: hibernation: Registered nosave memory: [mem 0x00000000-0x00000fff]
[    0.585870] kernel: PM: hibernation: Registered nosave memory: [mem 0x0009f000-0x0009ffff]
[    0.585878] kernel: PM: hibernation: Registered nosavC: Switch to symmetric I/O mode setup
[    0.830299] kernel: kvm-guest: setup PV IPIs
[    0.831589] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.831632] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.831658] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.831672] kernel: pid_max: default: 32768 minimum: 301
[    0.831767] kernel: LSM: Security Framework initializing
[    0.831802] kernel: SELinux:  Initializing.
[    0.831945] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.832662] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.833716] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0.833926] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.833935] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.833970] kernel: Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.860916] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.860924] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.860939] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.860957] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.860969] kernel: TAA: Mitigation: TSX disabled
[    0.890493] kernel: Freeing SMP alternatives memory: 40K
[    0.890738] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.891011] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.891159] kernel: ... version:                2
[    0.891164] kernel: ... bit width:              48
[    0.891169] kernel: ... generic registers:      8
[    0.891174] kernele memory: [mem 0x000a0000-0x000effff]
[    0.585886] kernel: PM: hibernation: Registered nosave memory: [mem 0x000f0000-0x000fffff]
[    0.585898] kernel: PM: hibernation: Registered nosave memory: [mem 0xbffdd000-0xbfffffff]
[    0.585905] kernel: PM: hibernation: Registered nosave memory: [mem 0xc0000000-0xfeffbfff]
[    0.585913] kernel: PM: hibernation: Registered nosave memory: [mem 0xfeffc000-0xfeffffff]
[    0.585920] kernel: PM: hibernation: Registered nosave memory: [mem 0xff000000-0xfffbffff]
[    0.585928] kernel: PM: hibernation: Registered nosave memory: [mem 0xfffc0000-0xffffffff]
[    0.585938] kernel: [mem 0xc0000000-0xfeffbfff] available for PCI devices
[    0.585945] kernel: Booting paravirtualized kernel on KVM
[    0.585952] kernel: clocksource: refined-jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1910969940391419 ns
[    0.602745] kernel: setup_percpu: NR_CPUS:64 nr_cpumask_bits:64 nr_cpu_ids:2 nr_node_ids:1
[    0.603475] kernel: percpu: Embedde Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.833985] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.833991] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.834000] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.834011] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.834019] kernel: TAA: Mitigation: TSX disabled
[    0.859693] kernel: Freeing SMP alternatives memory: 40K
[    0.859973] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.860253] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.860928] kernel: ... version:                2
[    0.860949] kernel: ... bit width:              48
[    0.860967] kernel: ... generic registers:      8
[    0.861001] kernelexecutor 2 finishes userspace_cover_open
before receiving handshake request
: ... value mask:             0000ffffffffffff
[    0.891180] kernel: ... max period:             00007fffffffffff
[    0.891185] kernel: ... fixed-purpose events:   3
[    0.891190] kernel: ... event mask:             00000007000000ff
[    0.891413] kernel: rcu: Hierarchical SRCU implementation.
[    0.892619] kernel: smp: Bringing up secondary CPUs ...
[    0.892849] kernel: x86: Booting SMP configuration:
[    0.892855] kernel: .... node  #0, CPUs:      #1
[    0.007116] kernel: kvm-clock: cpu 1, msr 5b58041, secondary cpu clock
[    0.007116] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.894551] kernel: kvm-guest: setup async PF for cpu 1
[    0.894586] kernel: kvm-guest: stealtime: cpu 1, msr 26511f140
[    0.894648] kernel: smp: Brought up 1 node, 2 CPUs
[    0.894648] kernel: smpboot: Max logical packages: 2
[    0.894648] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.895831] kernel: devtmpfs: initialized
[    0.900906] kerned 56 pages/cpu s191576 r8192 d29608 u1048576
[    0.603515] kernel: pcpu-alloc: s191576 r8192 d29608 u1048576 alloc=1*2097152
[    0.603533] kernel: pcpu-alloc: [0] 0 1 
[    0.603644] kernel: kvm-guest: setup async PF for cpu 0
[    0.603655] kernel: kvm-guest: stealtime: cpu 0, msr 26501f140
[    0.603667] kernel: Built 1 zonelists, mobility grouping on.  Total pages: 2580189
[    0.603676] kernel: Policy zone: Normal
[    0.603681] kernel: Kernel command line: root=/dev/sda console=ttyS0 net.ifnames=0 ip=192.168.0.37 quiet nokaslr
[    0.604011] kernel: Unknown command line parameters: nokaslr
[    0.610272] kernel: Dentry cache hash table entries: 2097152 (order: 12, 16777216 bytes, linear)
[    0.612885] kernel: Inode-cache hash table entries: 1048576 (order: 11, 8388608 bytes, linear)
[    0.613059] kernel: mem auto-init: stack:off, heap alloc:off, heap free:off
[    0.881741] kernel: Memory: 8817340K/10485228K available (47117K kernel code, 10298K rwdata, 7204K rodata, 2068K in: ... value mask:             0000ffffffffffff
[    0.861034] kernel: ... max period:             00007fffffffffff
[    0.861065] kernel: ... fixed-purpose events:   3
[    0.861092] kernel: ... event mask:             00000007000000ff
[    0.861937] kernel: rcu: Hierarchical SRCU implementation.
[    0.868416] kernel: smp: Bringing up secondary CPUs ...
[    0.869585] kernel: x86: Booting SMP configuration:
[    0.869610] kernel: .... node  #0, CPUs:      #1
[    0.007170] kernel: kvm-clock: cpu 1, msr 5b58041, secondary cpu clock
[    0.007170] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.871717] kernel: kvm-guest: setup async PF for cpu 1
[    0.871755] kernel: kvm-guest: stealtime: cpu 1, msr 26511f140
[    0.871797] kernel: smp: Brought up 1 node, 2 CPUs
[    0.871797] kernel: smpboot: Max logical packages: 2
[    0.871797] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.874285] kernel: devtmpfs: initialized
[    0.885747] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.900927] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.901900] kernel: PM: RTC time: 10:52:32, date: 2023-03-31
[    0.902614] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.903328] kernel: audit: initializing netlink subsys (disabled)
[    0.903479] kernel: audit: type=2000 audit(1680259953.040:1): state=initialized audit_enabled=0 res=1
[    0.904028] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.904035] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.904105] kernel: cpuidle: using governor menu
[    0.904105] kernel: ACPI: bus type PCI registered
[    0.904782] kernel: PCI: Using configuration type 1 for base access
[    0.926150] kernel: Kprobes globally optimized
[    0.926499] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.926606] kernel: cryptomgr_test (fsync test_dir /root/req 7
req.flags ea2
----- executor 1 do_sandbox_none at begining
----- executor 1 do_sandbox_none before fork()
it, 2860K bss, 1667688K reserved, 0K cma-reserved)
[    0.881988] kernel: SLUB: HWalign=64, Order=0-3, MinObjects=0, CPUs=2, Nodes=1
[    0.882601] kernel: rcu: Hierarchical RCU implementation.
[    0.882608] kernel: rcu:         RCU event tracing is enabled.
[    0.882612] kernel: rcu:         RCU restricting CPUs from NR_CPUS=64 to nr_cpu_ids=2.
[    0.882621] kernel: rcu: RCU calculated value of scheduler-enlistment delay is 100 jiffies.
[    0.882628] kernel: rcu: Adjusting geometry for rcu_fanout_leaf=16, nr_cpu_ids=2
[    0.892938] kernel: NR_IRQS: 4352, nr_irqs: 440, preallocated irqs: 16
[    0.893332] kernel: random: get_random_bytes called from start_kernel+0x22b/0x456 with crng_init=0
[    0.897312] kernel: Console: colour VGA+ 80x25
[    0.897435] kernel: printk: console [ttyS0] enabled
[    0.897485] kernel: ACPI: Core revision 20210730
[    0.897757] kernel: clocksource: hpet: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 19112604467 ns
[    0.897874] kernel: API26) used greatest stack depth: 30608 bytes left
[    0.928556] kernel: ACPI: Added _OSI(Module Device)
[    0.928564] kernel: ACPI: Added _OSI(Processor Device)
[    0.928570] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.928576] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.928585] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.928594] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.928602] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.944845] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.949676] kernel: ACPI: Interpreter enabled
[    0.949782] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.949789] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.950274] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.951700] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.984787] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.984823]l: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.885810] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.886838] kernel: PM: RTC time: 10:52:32, date: 2023-03-31
[    0.889073] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.892347] kernel: audit: initializing netlink subsys (disabled)
[    0.892735] kernel: audit: type=2000 audit(1680259952.559:1): state=initialized audit_enabled=0 res=1
[    0.894672] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.894699] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.894936] kernel: cpuidle: using governor menu
[    0.896009] kernel: ACPI: bus type PCI registered
[    0.896914] kernel: PCI: Using configuration type 1 for base access
[    0.929774] kernel: Kprobes globally optimized
[    0.929843] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.929843] kernel: cryptomgr_test (C: Switch to symmetric I/O mode setup
[    0.897881] kernel: kvm-guest: setup PV IPIs
[    0.898981] kernel: ..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
[    0.899019] kernel: clocksource: tsc-early: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    0.899042] kernel: Calibrating delay loop (skipped) preset value.. 5799.97 BogoMIPS (lpj=2899988)
[    0.899056] kernel: pid_max: default: 32768 minimum: 301
[    0.899141] kernel: LSM: Security Framework initializing
[    0.899174] kernel: SELinux:  Initializing.
[    0.899308] kernel: Mount-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.899776] kernel: Mountpoint-cache hash table entries: 32768 (order: 6, 262144 bytes, linear)
[    0.901133] kernel: x86/cpu: User Mode Instruction Prevention (UMIP) activated
[    0.901362] kernel: Last level iTLB entries: 4KB 0, 2MB 0, 4MB 0
[    0.901372] kernel: Last level dTLB entries: 4KB 0, 2MB 0, 4MB 0, 1GB 0
[    0.901404] kernel:fsync test_dir /root/req 3
req.flags ea2
----- executor 2 do_sandbox_none at begining
----- executor 2 do_sandbox_none before fork()
 kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.984940] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.985258] kernel: PCI host bridge to bus 0000:00
[    0.985269] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.985285] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.985300] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.985315] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.985330] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.985347] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.986883] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    0.989165] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    0.990814] kernel: pci 0000:00:01.1: [8086:701026) used greatest stack depth: 30608 bytes left
[    0.932942] kernel: ACPI: Added _OSI(Module Device)
[    0.932956] kernel: ACPI: Added _OSI(Processor Device)
[    0.932964] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.932971] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.932988] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.932998] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.933010] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.955841] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.960568] kernel: ACPI: Interpreter enabled
[    0.960676] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.960684] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.961258] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.962583] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    0.995979] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    0.996018] Spectre V1 : Mitigation: usercopy/swapgs barriers and __user pointer sanitization
[    0.901418] kernel: Spectre V2 : Mitigation: Enhanced IBRS
[    0.901423] kernel: Spectre V2 : Spectre v2 / SpectreRSB mitigation: Filling RSB on context switch
[    0.901432] kernel: Spectre V2 : mitigation: Enabling conditional Indirect Branch Prediction Barrier
[    0.901443] kernel: Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl and seccomp
[    0.901451] kernel: TAA: Mitigation: TSX disabled
[    0.927462] kernel: Freeing SMP alternatives memory: 40K
[    0.928033] kernel: smpboot: CPU0: Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz (family: 0x6, model: 0x6a, stepping: 0x6)
[    0.928033] kernel: Performance Events: Icelake events, 32-deep LBR, full-width counters, Intel PMU driver.
[    0.928133] kernel: ... version:                2
[    0.928142] kernel: ... bit width:              48
[    0.928148] kernel: ... generic registers:      8
[    0.928155] kernel] type 00 class 0x010180
[    0.992946] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc0c0-0xc0cf]
[    0.993998] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    0.994019] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    0.994036] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    0.994052] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    0.997312] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    0.997787] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    0.997818] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.000463] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.001479] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.003478] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.007478] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000- kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    0.996228] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    0.996713] kernel: PCI host bridge to bus 0000:00
[    0.996728] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    0.996751] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    0.996771] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    0.996790] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    0.996814] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    0.996836] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    0.998539] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.000792] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.002441] kernel: pci 0000:00:01.1: [8086:7010: ... value mask:             0000ffffffffffff
[    0.928163] kernel: ... max period:             00007fffffffffff
[    0.928171] kernel: ... fixed-purpose events:   3
[    0.928178] kernel: ... event mask:             00000007000000ff
[    0.928407] kernel: rcu: Hierarchical SRCU implementation.
[    0.929893] kernel: smp: Bringing up secondary CPUs ...
[    0.930132] kernel: x86: Booting SMP configuration:
[    0.930137] kernel: .... node  #0, CPUs:      #1
[    0.005777] kernel: kvm-clock: cpu 1, msr 5b58041, secondary cpu clock
[    0.005777] kernel: smpboot: CPU 1 Converting physical 0 to logical die 1
[    0.932090] kernel: kvm-guest: setup async PF for cpu 1
[    0.932115] kernel: kvm-guest: stealtime: cpu 1, msr 26511f140
[    0.932148] kernel: smp: Brought up 1 node, 2 CPUs
[    0.932148] kernel: smpboot: Max logical packages: 2
[    0.932148] kernel: smpboot: Total of 2 processors activated (11599.95 BogoMIPS)
[    0.933309] kernel: devtmpfs: initialized
[    0.938452] kernel: clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 1911260446275000 ns
[    0.938472] kernel: futex hash table entries: 512 (order: 3, 32768 bytes, linear)
[    0.939156] kernel: PM: RTC time: 10:52:32, date: 2023-03-31
[    0.940170] kernel: NET: Registered PF_NETLINK/PF_ROUTE protocol family
[    0.940889] kernel: audit: initializing netlink subsys (disabled)
[    0.940952] kernel: audit: type=2000 audit(1680259953.077:1): state=initialized audit_enabled=0 res=1
[    0.941579] kernel: thermal_sys: Registered thermal governor 'step_wise'
[    0.941586] kernel: thermal_sys: Registered thermal governor 'user_space'
[    0.941658] kernel: cpuidle: using governor menu
[    0.942043] kernel: ACPI: bus type PCI registered
[    0.942730] kernel: PCI: Using configuration type 1 for base access
[    0.963564] kernel: Kprobes globally optimized
[    0.964147] kernel: HugeTLB registered 2.00 MiB page size, pre-allocated 0 pages
[    0.964174] kernel: cryptomgr_test (0xfeb8ffff pref]
[    1.010356] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.010867] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc080-0xc09f]
[    1.013960] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    1.019454] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.020475] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc0a0-0xc0bf]
[    1.021475] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.025124] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.026078] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.030206] kernel: pci 0000:00:05.0: [1af4:1001] type 00 class 0x010000
[    1.031158] kernel: pci 0000:00:05.0: reg 0x10: [io  0xc000-0xc07f]
[    1.032163] kernel: pci 0000:00:05.0: reg 0x14: [mem 0xfeb92000-0xfeb92fff]
[    1.036151] kernel: pci 0000:00:05.0: reg 0x20: [mem 0xfe208000-0xfe20bfff 64bit pref]
[    1.041198] kernel: pci 00] type 00 class 0x010180
[    1.004656] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc040-0xc04f]
[    1.005608] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.005624] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    1.005636] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.005647] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.008670] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.009134] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.009161] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.011655] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.012661] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.014024] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.018109] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-26) used greatest stack depth: 30608 bytes left
[    0.967197] kernel: ACPI: Added _OSI(Module Device)
[    0.967197] kernel: ACPI: Added _OSI(Processor Device)
[    0.967197] kernel: ACPI: Added _OSI(3.0 _SCP Extensions)
[    0.967197] kernel: ACPI: Added _OSI(Processor Aggregator Device)
[    0.967197] kernel: ACPI: Added _OSI(Linux-Dell-Video)
[    0.967197] kernel: ACPI: Added _OSI(Linux-Lenovo-NV-HDMI-Audio)
[    0.967197] kernel: ACPI: Added _OSI(Linux-HPI-Hybrid-Graphics)
[    0.984806] kernel: ACPI: 1 ACPI AML tables successfully acquired and loaded
[    0.988872] kernel: ACPI: Interpreter enabled
[    0.988976] kernel: ACPI: PM: (supports S0 S3 S4 S5)
[    0.988983] kernel: ACPI: Using IOAPIC for interrupt routing
[    0.989064] kernel: PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
[    0.990141] kernel: ACPI: Enabled 2 GPEs in block 00 to 0F
[    1.032933] kernel: ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
[    1.032969]00:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.042104] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.044483] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.051203] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.051906] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.053907] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe20c000-0xfe20c3ff 64bit pref]
[    1.060070] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.061041] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb95000-0xfeb950ff]
[    1.063483] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.074517] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    1.076050] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    1.077550] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    1.079052] kernel: ACPI: PCI: Interrupt link LNKD configured 0xfeb8ffff pref]
[    1.020741] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.021657] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc000-0xc01f]
[    1.024582] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    1.030422] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.031286] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc020-0xc03f]
[    1.032349] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.035671] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.037079] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.039792] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.040661] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb92000-0xfeb920ff]
[    1.041999] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.046697] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.047462] kernel: p kernel: acpi PNP0A03:00: _OSC: OS supports [ASPM ClockPM Segments MSI HPX-Type3]
[    1.033091] kernel: acpi PNP0A03:00: fail to add MMCONFIG information, can't access extended PCI configuration space under this bridge.
[    1.033404] kernel: PCI host bridge to bus 0000:00
[    1.033415] kernel: pci_bus 0000:00: root bus resource [io  0x0000-0x0cf7 window]
[    1.033431] kernel: pci_bus 0000:00: root bus resource [io  0x0d00-0xffff window]
[    1.033445] kernel: pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff window]
[    1.033461] kernel: pci_bus 0000:00: root bus resource [mem 0xc0000000-0xfebfffff window]
[    1.033476] kernel: pci_bus 0000:00: root bus resource [mem 0x2c0000000-0x33fffffff window]
[    1.033492] kernel: pci_bus 0000:00: root bus resource [bus 00-ff]
[    1.035404] kernel: pci 0000:00:00.0: [8086:1237] type 00 class 0x060000
[    1.038397] kernel: pci 0000:00:01.0: [8086:7000] type 00 class 0x060100
[    1.040041] kernel: pci 0000:00:01.1: [8086:7010for IRQ 11
[    1.079680] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    1.082321] kernel: iommu: Default domain type: Translated 
[    1.082333] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    1.082526] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.082543] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.082568] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.082581] kernel: vgaarb: loaded
[    1.083505] kernel: SCSI subsystem initialized
[    1.083608] kernel: libata version 3.00 loaded.
[    1.083833] kernel: ACPI: bus type USB registered
[    1.083998] kernel: usbcore: registered new interface driver usbfs
[    1.084088] kernel: usbcore: registered new interface driver hub
[    1.084166] kernel: usbcore: registered new device driver usb
[    1.084518] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.084527] kernel: pps_core: Software ver. 5.3.6 - Copyrci 0000:00:11.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.048656] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe208000-0xfe2083ff 64bit pref]
[    1.054592] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.055665] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.058197] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.069693] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    1.071351] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    1.072969] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    1.074590] kernel: ACPI: PCI: Interrupt link LNKD configured for IRQ 11
[    1.075260] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    1.078208] kernel: iommu: Default domain type: Translated 
[    1.078221] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    1.078374] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.078374]] type 00 class 0x010180
[    1.042040] kernel: pci 0000:00:01.1: reg 0x20: [io  0xc0c0-0xc0cf]
[    1.043014] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x10: [io  0x01f0-0x01f7]
[    1.043029] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x14: [io  0x03f6]
[    1.043039] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x18: [io  0x0170-0x0177]
[    1.043051] kernel: pci 0000:00:01.1: legacy IDE quirk: reg 0x1c: [io  0x0376]
[    1.045538] kernel: pci 0000:00:01.3: [8086:7113] type 00 class 0x068000
[    1.046340] kernel: pci 0000:00:01.3: quirk: [io  0x0600-0x063f] claimed by PIIX4 ACPI
[    1.046364] kernel: pci 0000:00:01.3: quirk: [io  0x0700-0x070f] claimed by PIIX4 SMB
[    1.048449] kernel: pci 0000:00:02.0: [1234:1111] type 00 class 0x030000
[    1.049425] kernel: pci 0000:00:02.0: reg 0x10: [mem 0xfd000000-0xfdffffff pref]
[    1.051046] kernel: pci 0000:00:02.0: reg 0x18: [mem 0xfeb90000-0xfeb90fff]
[    1.056891] kernel: pci 0000:00:02.0: reg 0x30: [mem 0xfeb80000-ight 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.084566] kernel: PTP clock support registered
[    1.084731] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.086216] kernel: NetLabel: Initializing
[    1.086223] kernel: NetLabel:  domain hash size = 128
[    1.086231] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.086372] kernel: NetLabel:  unlabeled traffic allowed by default
[    1.086593] kernel: PCI: Using ACPI for IRQ routing
[    1.086593] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.086731] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.086756] kernel: e820: reserve RAM buffer [mem 0xbffdd000-0xbfffffff]
[    1.087111] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.087155] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.090727] kernel: clocksource: Switched to clocksource kvm-clock
[    1.231129] kernel: VFS: Disk quotas dquot_6.6.0
[    1.231203] kernel: VFS: Dquot-cache h kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.078374] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.078662] kernel: vgaarb: loaded
[    1.079325] kernel: SCSI subsystem initialized
[    1.079712] kernel: libata version 3.00 loaded.
[    1.079895] kernel: ACPI: bus type USB registered
[    1.080002] kernel: usbcore: registered new interface driver usbfs
[    1.080064] kernel: usbcore: registered new interface driver hub
[    1.080107] kernel: usbcore: registered new device driver usb
[    1.080215] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.080222] kernel: pps_core: Software ver. 5.3.6 - Copyright 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.080247] kernel: PTP clock support registered
[    1.080364] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.081325] kernel: NetLabel: Initializing
[    1.081330] kernel: NetLabel:  domain hash size = 128
[    1.081335] kernel: NetLabel:ash table entries: 512 (order 0, 4096 bytes)
[    1.231525] kernel: pnp: PnP ACPI init
[    1.232746] kernel: pnp 00:03: [dma 2]
[    1.235921] kernel: pnp: PnP ACPI: found 6 devices
[    1.254864] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.255032] kernel: NET: Registered PF_INET protocol family
[    1.255699] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    1.261951] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.262492] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.263634] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    1.264734] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.264840] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.264995] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, libefore receive testcase: 0 1
  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.081422] kernel: NetLabel:  unlabeled traffic allowed by default
[    1.081658] kernel: PCI: Using ACPI for IRQ routing
[    1.081665] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.081807] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.081823] kernel: e820: reserve RAM buffer [mem 0xbffe0000-0xbfffffff]
[    1.082070] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.082095] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.087801] kernel: clocksource: Switched to clocksource kvm-clock
[    1.235904] kernel: VFS: Disk quotas dquot_6.6.0
[    1.235959] kernel: VFS: Dquot-cache hash table entries: 512 (order 0, 4096 bytes)
[    1.236189] kernel: pnp: PnP ACPI init
[    1.237029] kernel: pnp 00:03: [dma 2]
[    1.239959] kernel: pnp: PnP ACPI: found 6 devices
[    1.258183] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.258300] kernel: Nnear)
[    1.265280] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    1.266176] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.266195] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.266208] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.266222] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.266236] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.266594] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.266615] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.266645] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.266742] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.266873] kernel: PCI: CLS 0 bytes, default 64
[    1.266913] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.266921] kernel: software IO TLB: mapped [mem 0x00000000bbfdd000-0x00000000bffdd000] (64MB)
[    1.267378] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    1.267413] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    1.267450] kernel: clocksource: Switched to clocksource tsc
[    1.272624] kernel: Initialise system trusted keyrings
[    1.272749] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.291068] kernel: fuse: init (API version 7.34)
[    1.303179] kernel: Key type asymmetric registered
[    1.303189] kernel: Asymmetric key parser 'x509' registered
[    1.303370] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.303378] kernel: io scheduler mq-deadline registered
[    1.303384] kernel: io scheduler kyber registered
[    1.304505] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.304729] kernel: ACPI: button: Power Button [PWRF]
[    2.272235] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    3.273253] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    4.323564] kernel: ACPI: \_SB_.LNKA: Enabled at IRQ 10
[    4.325027] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    4.325228] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    4.328802] kernel: Non-volatile memory driver v1.3
[    4.329085] kernel: Linux agpgart interface v0.103
[    4.343666] kernel: loop: module loaded
[    4.344904] kernel: virtio_blk virtio2: [vda] 1024000 512-byte logical blocks (524 MB/500 MiB)
[    4.348972] kernel: ata_piix 0000:00:01.1: version 2.13
[    4.351754] kernel: scsi host0: ata_piix
[    4.352662] kernel: scsi host1: ata_piix
[    4.353008] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc0c0 irq 14
[    4.353023] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc0c8 irq 15
[    4.354247] kernel: libphy: Fixed MDIO Bus: probed
[    4.358251] kernel: e10xfeb8ffff pref]
[    1.062423] kernel: pci 0000:00:03.0: [1af4:1005] type 00 class 0x00ff00
[    1.063711] kernel: pci 0000:00:03.0: reg 0x10: [io  0xc080-0xc09f]
[    1.069047] kernel: pci 0000:00:03.0: reg 0x20: [mem 0xfe200000-0xfe203fff 64bit pref]
[    1.077765] kernel: pci 0000:00:04.0: [1af4:1000] type 00 class 0x020000
[    1.078823] kernel: pci 0000:00:04.0: reg 0x10: [io  0xc0a0-0xc0bf]
[    1.079863] kernel: pci 0000:00:04.0: reg 0x14: [mem 0xfeb91000-0xfeb91fff]
[    1.084759] kernel: pci 0000:00:04.0: reg 0x20: [mem 0xfe204000-0xfe207fff 64bit pref]
[    1.086046] kernel: pci 0000:00:04.0: reg 0x30: [mem 0xfeb00000-0xfeb7ffff pref]
[    1.091600] kernel: pci 0000:00:05.0: [1af4:1001] type 00 class 0x010000
[    1.092972] kernel: pci 0000:00:05.0: reg 0x10: [io  0xc000-0xc07f]
[    1.095043] kernel: pci 0000:00:05.0: reg 0x14: [mem 0xfeb92000-0xfeb92fff]
[    1.101032] kernel: pci 0000:00:05.0: reg 0x20: [mem 0xfe208000-0xfe20bfff 64bit pref]
[    1.107061] kernel: pci 0000:00:10.0: [1af4:1110] type 00 class 0x050000
[    1.108048] kernel: pci 0000:00:10.0: reg 0x10: [mem 0xfeb93000-0xfeb930ff]
[    1.109468] kernel: pci 0000:00:10.0: reg 0x18: [mem 0xfe000000-0xfe0fffff 64bit pref]
[    1.114077] kernel: pci 0000:00:11.0: [1af4:1110] type 00 class 0x050000
[    1.115737] kernel: pci 0000:00:11.0: reg 0x10: [mem 0xfeb94000-0xfeb940ff]
[    1.117042] kernel: pci 0000:00:11.0: reg 0x18: [mem 0xfe20c000-0xfe20c3ff 64bit pref]
[    1.122587] kernel: pci 0000:00:12.0: [1af4:1110] type 00 class 0x050000
[    1.124484] kernel: pci 0000:00:12.0: reg 0x10: [mem 0xfeb95000-0xfeb950ff]
[    1.126039] kernel: pci 0000:00:12.0: reg 0x18: [mem 0xfe100000-0xfe1fffff 64bit pref]
[    1.134505] kernel: ACPI: PCI: Interrupt link LNKA configured for IRQ 10
[    1.135382] kernel: ACPI: PCI: Interrupt link LNKB configured for IRQ 10
[    1.136249] kernel: ACPI: PCI: Interrupt link LNKC configured for IRQ 11
[    1.137103] kernel: ACPI: PCI: Interrupt link LNKD configured before receive testcase: 0 1
ET: Registered PF_INET protocol family
[    1.259011] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    1.263218] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.263817] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.264788] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    1.266242] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.266354] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.266508] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.266809] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    1.267689] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.267706] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.267720] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff wind00: Intel(R) PRO/100 Network Driver
[    4.358260] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    4.358335] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    4.358343] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    4.358442] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    4.358448] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    4.358589] kernel: sky2: driver version 1.30
[    4.359276] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    4.359285] kernel: ehci-pci: EHCI PCI platform driver
[    4.359348] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    4.359368] kernel: ohci-pci: OHCI PCI platform driver
[    4.359430] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    4.359822] kernel: usbcore: registered new interface driver usblp
[    4.359901] kernel: usbcore: registered new interface driver usb-storage
[    4.360098] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    4.360855] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    4.360880] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    4.361924] kernel: rtc_cmos 00:00: RTC can wake from S4
[    4.362611] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    4.365573] kernel: rtc_cmos 00:00: registered as rtc0
[    4.365704] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    4.366791] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    4.366814] kernel: intel_pstate: CPU model not supported
[    4.367012] kernel: hid: raw HID events driver (C) Jiri Kosina
[    4.368198] kernel: usbcore: registered new interface driver usbhid
[    4.368208] kernel: usbhid: USB HID core driver
[    4.369140] kernel: netem: version 1.3
[    4.373708] kernel: Initializing XFRM netlink socket
[    4.374836] kernel: NET: Registered PF_INET6 protocol family
[    4for IRQ 11
[    1.137464] kernel: ACPI: PCI: Interrupt link LNKS configured for IRQ 9
[    1.139026] kernel: iommu: Default domain type: Translated 
[    1.139038] kernel: iommu: DMA domain TLB invalidation policy: lazy mode 
[    1.139154] kernel: pci 0000:00:02.0: vgaarb: setting as boot VGA device
[    1.139154] kernel: pci 0000:00:02.0: vgaarb: VGA device added: decodes=io+mem,owns=io+mem,locks=none
[    1.139154] kernel: pci 0000:00:02.0: vgaarb: bridge control possible
[    1.139154] kernel: vgaarb: loaded
[    1.139515] kernel: SCSI subsystem initialized
[    1.139592] kernel: libata version 3.00 loaded.
[    1.140074] kernel: ACPI: bus type USB registered
[    1.140176] kernel: usbcore: registered new interface driver usbfs
[    1.140232] kernel: usbcore: registered new interface driver hub
[    1.140272] kernel: usbcore: registered new device driver usb
[    1.140381] kernel: pps_core: LinuxPPS API ver. 1 registered
[    1.140387] kernel: pps_core: Software ver. 5.3.6 - Copyrow]
[    1.267734] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.267749] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.268065] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.268086] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.268115] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.268214] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.268326] kernel: PCI: CLS 0 bytes, default 64
[    1.268356] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.268360] kernel: software IO TLB: mapped [mem 0x00000000bbfe0000-0x00000000bffe0000] (64MB)
[    1.268927] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    1.268957] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    1.269002] kernel: clocksource: S.376496] kernel: Segment Routing with IPv6
[    4.376544] kernel: In-situ OAM (IOAM) with IPv6
[    4.376811] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    4.377686] kernel: NET: Registered PF_PACKET protocol family
[    4.377884] kernel: 9pnet: Installing 9P2000 support
[    4.377957] kernel: Key type dns_resolver registered
[    4.377985] kernel: Key type ceph registered
[    4.379212] kernel: libceph: loaded (mon/osd proto 15/24)
[    4.380373] kernel: IPI shorthand broadcast: enabled
[    4.380448] kernel: sched_clock: Marking stable (4373978720, 6116386)->(4419246788, -39151682)
[    4.381190] kernel: registered taskstats version 1
[    4.381199] kernel: Loading compiled-in X.509 certificates
[    4.384516] kernel: PM:   Magic number: 15:709:882
[    4.384636] kernel: printk: console [netcon0] enabled
[    4.384646] kernel: netconsole: network logging started
[    4.505391] kernel: ata2.01: NODEV after polling detection
[    4.506046] kernel: ata2.00: ATAPI: QEwitched to clocksource tsc
[    1.273618] kernel: Initialise system trusted keyrings
[    1.273837] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.296318] kernel: fuse: init (API version 7.34)
[    1.309504] kernel: Key type asymmetric registered
[    1.309520] kernel: Asymmetric key parser 'x509' registered
[    1.309709] kernel: cryptomgr_test (55) used greatest stack depth: 30544 bytes left
[    1.309818] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.309836] kernel: io scheduler mq-deadline registered
[    1.309845] kernel: io scheduler kyber registered
[    1.311192] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.311424] kernel: ACPI: button: Power Button [PWRF]
[    2.444523] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    3.498814] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    3.500950] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    3.501162] kernel: 00:ight 2005-2007 Rodolfo Giometti <giometti@linux.it>
[    1.140412] kernel: PTP clock support registered
[    1.140517] kernel: Advanced Linux Sound Architecture Driver Initialized.
[    1.141422] kernel: NetLabel: Initializing
[    1.141427] kernel: NetLabel:  domain hash size = 128
[    1.141432] kernel: NetLabel:  protocols = UNLABELED CIPSOv4 CALIPSO
[    1.141517] kernel: NetLabel:  unlabeled traffic allowed by default
[    1.141596] kernel: PCI: Using ACPI for IRQ routing
[    1.141596] kernel: PCI: pci_cache_line_size set to 64 bytes
[    1.141596] kernel: e820: reserve RAM buffer [mem 0x0009fc00-0x0009ffff]
[    1.141596] kernel: e820: reserve RAM buffer [mem 0xbffdd000-0xbfffffff]
[    1.142096] kernel: hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
[    1.142121] kernel: hpet0: 3 comparators, 64-bit 100.000000 MHz counter
[    1.146191] kernel: clocksource: Switched to clocksource kvm-clock
[    1.301231] kernel: VFS: Disk quotas dquot_6.6.0
[    1.301304] kernel: VFS: Dquot-cache hMU DVD-ROM, 2.5+, max UDMA/100
[    4.513297] kernel: ata1.01: NODEV after polling detection
[    4.513970] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    4.514023] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    4.515727] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    4.517661] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.517685] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    4.517746] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    4.517771] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    4.517844] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.519073] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    4.522170] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    4.541179] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.541241] kernel:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    3.504557] kernel: Non-volatile memory driver v1.3
[    3.505111] kernel: Linux agpgart interface v0.103
[    3.516294] kernel: loop: module loaded
[    3.516928] kernel: ata_piix 0000:00:01.1: version 2.13
[    3.519163] kernel: scsi host0: ata_piix
[    3.519865] kernel: scsi host1: ata_piix
[    3.520101] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc040 irq 14
[    3.520114] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc048 irq 15
[    3.521004] kernel: libphy: Fixed MDIO Bus: probed
[    3.523712] kernel: e100: Intel(R) PRO/100 Network Driver
[    3.523720] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    3.523773] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    3.523779] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    3.523850] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    3.523855] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    ash table entries: 512 (order 0, 4096 bytes)
[    1.301611] kernel: pnp: PnP ACPI init
[    1.302756] kernel: pnp 00:03: [dma 2]
[    1.307007] kernel: pnp: PnP ACPI: found 6 devices
[    1.329278] kernel: clocksource: acpi_pm: mask: 0xffffff max_cycles: 0xffffff, max_idle_ns: 2085701024 ns
[    1.329414] kernel: NET: Registered PF_INET protocol family
[    1.330056] kernel: IP idents hash table entries: 262144 (order: 9, 2097152 bytes, linear)
[    1.335202] kernel: tcp_listen_portaddr_hash hash table entries: 8192 (order: 5, 131072 bytes, linear)
[    1.335775] kernel: TCP established hash table entries: 131072 (order: 8, 1048576 bytes, linear)
[    1.337258] kernel: TCP bind hash table entries: 65536 (order: 8, 1048576 bytes, linear)
[    1.338633] kernel: TCP: Hash tables configured (established 131072 bind 65536)
[    1.338754] kernel: UDP hash table entries: 8192 (order: 6, 262144 bytes, linear)
[    1.338977] kernel: UDP-Lite hash table entries: 8192 (order: 6, 262144 bytes, li cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.564584] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    4.566725] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.985826] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.999526] kernel: IP-Config: Guessing netmask 255.255.255.0
[    4.999544] kernel: IP-Config: Complete:
[    4.999551] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:24, ipaddr=192.168.0.36, mask=255.255.255.0, gw=255.255.255.255
[    4.999578] kernel:      host=192.168.0.36, domain=, nis-domain=(none)
[    4.999590] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    4.999867] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    5.000399] kernel: kworker/u4:1 (68) used greatest stack depth: 28680 bytes left
[    5.002859] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    5.002893] kernel: ALSA device list:
[    5.003.523941] kernel: sky2: driver version 1.30
[    3.524869] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    3.524878] kernel: ehci-pci: EHCI PCI platform driver
[    3.524925] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    3.524940] kernel: ohci-pci: OHCI PCI platform driver
[    3.524982] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    3.525258] kernel: usbcore: registered new interface driver usblp
[    3.525312] kernel: usbcore: registered new interface driver usb-storage
[    3.525453] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNP0f13:MOU] at 0x60,0x64 irq 1,12
[    3.527283] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    3.527316] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    3.529895] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    3.532338] kernel: rtc_cmos 00:00: RTC can wake from S4
[    3.537575] kernel: rtc_cmos 00:00: registered as rtc0
[near)
[    1.339404] kernel: NET: Registered PF_UNIX/PF_LOCAL protocol family
[    1.340540] kernel: pci_bus 0000:00: resource 4 [io  0x0000-0x0cf7 window]
[    1.340560] kernel: pci_bus 0000:00: resource 5 [io  0x0d00-0xffff window]
[    1.340577] kernel: pci_bus 0000:00: resource 6 [mem 0x000a0000-0x000bffff window]
[    1.340594] kernel: pci_bus 0000:00: resource 7 [mem 0xc0000000-0xfebfffff window]
[    1.340612] kernel: pci_bus 0000:00: resource 8 [mem 0x2c0000000-0x33fffffff window]
[    1.341053] kernel: pci 0000:00:01.0: PIIX3: Enabling Passive Release
[    1.341079] kernel: pci 0000:00:00.0: Limiting direct PCI/PCI transfers
[    1.341116] kernel: pci 0000:00:01.0: Activating ISA DMA hang workarounds
[    1.341233] kernel: pci 0000:00:02.0: Video device with shadowed ROM at [mem 0x000c0000-0x000dffff]
[    1.341390] kernel: PCI: CLS 0 bytes, default 64
[    1.341430] kernel: PCI-DMA: Using software bounce buffering for IO (SWIOTLB)
[    1.341436] kernel: software IO TLB: mappbefore receive testcase: 0 1
    3.537917] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    3.540312] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    3.540373] kernel: intel_pstate: CPU model not supported
[    3.540913] kernel: hid: raw HID events driver (C) Jiri Kosina
[    3.543602] kernel: usbcore: registered new interface driver usbhid
[    3.543623] kernel: usbhid: USB HID core driver
[    3.545199] kernel: netem: version 1.3
[    3.552148] kernel: Initializing XFRM netlink socket
[    3.553479] kernel: NET: Registered PF_INET6 protocol family
[    3.557004] kernel: Segment Routing with IPv6
[    3.557064] kernel: In-situ OAM (IOAM) with IPv6
[    3.557420] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    3.558507] kernel: NET: Registered PF_PACKET protocol family
[    3.558789] kernel: 9pnet: Installing 9P2000 support
[    3.558873] kernel: Key type dns_resolver registered
[    3.558912] kernel: Key type ceph reed [mem 0x00000000bbfdd000-0x00000000bffdd000] (64MB)
[    1.341892] kernel: RAPL PMU: API unit is 2^-32 Joules, 0 fixed counters, 10737418240 ms ovfl timer
[    1.341925] kernel: clocksource: tsc: mask: 0xffffffffffffffff max_cycles: 0x29cd37d08b9, max_idle_ns: 440795327070 ns
[    1.341971] kernel: clocksource: Switched to clocksource tsc
[    1.346545] kernel: Initialise system trusted keyrings
[    1.346716] kernel: workingset: timestamp_bits=56 max_order=22 bucket_order=0
[    1.370502] kernel: fuse: init (API version 7.34)
[    1.386866] kernel: Key type asymmetric registered
[    1.386883] kernel: Asymmetric key parser 'x509' registered
[    1.387163] kernel: Block layer SCSI generic (bsg) driver version 0.4 loaded (major 251)
[    1.387174] kernel: io scheduler mq-deadline registered
[    1.387183] kernel: io scheduler kyber registered
[    1.388889] kernel: input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input0
[    1.389255] kernel: ACPI: button: Power Button [PWRF]
[    2.367840] kernel: ACPI: \_SB_.LNKC: Enabled at IRQ 11
[    3.324002] kernel: ACPI: \_SB_.LNKD: Enabled at IRQ 10
[    4.316318] kernel: ACPI: \_SB_.LNKA: Enabled at IRQ 10
[    4.317641] kernel: Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
[    4.317837] kernel: 00:05: ttyS0 at I/O 0x3f8 (irq = 4, base_baud = 115200) is a 16550A
[    4.319602] kernel: Non-volatile memory driver v1.3
[    4.319713] kernel: Linux agpgart interface v0.103
[    4.330808] kernel: loop: module loaded
[    4.331763] kernel: virtio_blk virtio2: [vda] 1024000 512-byte logical blocks (524 MB/500 MiB)
[    4.335082] kernel: ata_piix 0000:00:01.1: version 2.13
[    4.337470] kernel: scsi host0: ata_piix
[    4.338511] kernel: scsi host1: ata_piix
[    4.338883] kernel: ata1: PATA max MWDMA2 cmd 0x1f0 ctl 0x3f6 bmdma 0xc0c0 irq 14
[    4.338901] kernel: ata2: PATA max MWDMA2 cmd 0x170 ctl 0x376 bmdma 0xc0c8 irq 15
[    4.340710] kernel: libphy: Fixed MDIO Bus: probed
[    4.343583] kernel: e1gistered
[    3.559907] kernel: libceph: loaded (mon/osd proto 15/24)
[    3.561096] kernel: IPI shorthand broadcast: enabled
[    3.561195] kernel: sched_clock: Marking stable (3554494849, 6170050)->(3643946278, -83281379)
[    3.562124] kernel: registered taskstats version 1
[    3.562138] kernel: Loading compiled-in X.509 certificates
[    3.564851] kernel: PM:   Magic number: 15:709:882
[    3.564963] kernel: printk: console [netcon0] enabled
[    3.564972] kernel: netconsole: network logging started
[    3.679193] kernel: ata1.01: NODEV after polling detection
[    3.679772] kernel: ata2.01: NODEV after polling detection
[    3.680321] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    3.680367] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    3.680895] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    3.683498] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    3.685467] kernel: sd 0:0:0:0: Attached scsi gene00: Intel(R) PRO/100 Network Driver
[    4.343591] kernel: e100: Copyright(c) 1999-2006 Intel Corporation
[    4.343646] kernel: e1000: Intel(R) PRO/1000 Network Driver
[    4.343652] kernel: e1000: Copyright (c) 1999-2006 Intel Corporation.
[    4.343730] kernel: e1000e: Intel(R) PRO/1000 Network Driver
[    4.343735] kernel: e1000e: Copyright(c) 1999 - 2015 Intel Corporation.
[    4.343826] kernel: sky2: driver version 1.30
[    4.344284] kernel: ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
[    4.344292] kernel: ehci-pci: EHCI PCI platform driver
[    4.344337] kernel: ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
[    4.344352] kernel: ohci-pci: OHCI PCI platform driver
[    4.344395] kernel: uhci_hcd: USB Universal Host Controller Interface driver
[    4.344666] kernel: usbcore: registered new interface driver usblp
[    4.344720] kernel: usbcore: registered new interface driver usb-storage
[    4.344863] kernel: i8042: PNP: PS/2 Controller [PNP0303:KBD,PNPric sg0 type 0
[    3.686568] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    3.686730] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    3.686784] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    3.687219] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    3.687579] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    3.694783] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    3.710100] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    3.710142] kernel: cdrom: Uniform CD-ROM driver Revision: 3.20
[    3.729416] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    3.730184] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.161578] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.176704] kernel: IP-Config: Guessing netmask 255.255.255.0
[    4.176719] kernel: IP-Config: Complete:
[    4.176725] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:26, ipaddr=192.168.0.38, mask=255.255.255.0, gw=255.255.255.255
[    4.176752] kernel:      host=192.168.0.38, domain=, nis-domain=(none)
[    4.176764] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    4.177044] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    4.177762] kernel: kworker/u4:1 (69) used greatest stack depth: 28680 bytes left
[    4.180406] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    4.180436] kernel: ALSA device list:
[    4.180443] kernel:   No soundcards found.
[    4.180934] kernel: md: Waiting for all devices to be available before autodetect
[    4.180943] kernel: md: If you don't use raid, use raid=noautodetect
[    4.180951] kernel: md: Autodetecting RAID arrays.
[    4.180957] kernel: md: autorun ...
[    4.180963] kernel: md: ... autorun DONE.
[    4.181724] kernel: platform regulatory.0: Direct f0f13:MOU] at 0x60,0x64 irq 1,12
[    4.345664] kernel: serio: i8042 KBD port at 0x60,0x64 irq 1
[    4.345691] kernel: serio: i8042 AUX port at 0x60,0x64 irq 12
[    4.347208] kernel: input: AT Translated Set 2 keyboard as /devices/platform/i8042/serio0/input/input1
[    4.347992] kernel: rtc_cmos 00:00: RTC can wake from S4
[    4.349604] kernel: rtc_cmos 00:00: registered as rtc0
[    4.349695] kernel: rtc_cmos 00:00: alarms up to one day, y3k, 114 bytes nvram, hpet irqs
[    4.350379] kernel: device-mapper: ioctl: 4.45.0-ioctl (2021-03-22) initialised: dm-devel@redhat.com
[    4.350397] kernel: intel_pstate: CPU model not supported
[    4.350537] kernel: hid: raw HID events driver (C) Jiri Kosina
[    4.351365] kernel: usbcore: registered new interface driver usbhid
[    4.351372] kernel: usbhid: USB HID core driver
[    4.351945] kernel: netem: version 1.3
[    4.355139] kernel: Initializing XFRM netlink socket
[    4.355929] kernel: NET: Registered PF_INET6 protocol family
[    4irmware load for regulatory.db failed with error -2
[    4.181750] kernel: cfg80211: failed to load regulatory.db
[    4.206046] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    4.206143] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    4.207081] kernel: devtmpfs: mounted
[    4.208736] kernel: Freeing unused kernel image (initmem) memory: 2068K
[    4.208763] kernel: Write protecting the kernel read-only data: 57344k
[    4.211791] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    4.212577] kernel: Freeing unused kernel image (rodata/data gap) memory: 988K
[    4.212610] kernel: Run /sbin/init as init process
[    4.212617] kernel:   with arguments:
[    4.212623] kernel:     /sbin/init
[    4.212630] kernel:     nokaslr
[    4.212636] kernel:   with environment:
[    4.212642] kernel:     HOME=/
[    4.212663] kernel:     TERM=linux
[    4.257556] kernel: random: fast init done
[    .357414] kernel: Segment Routing with IPv6
[    4.357447] kernel: In-situ OAM (IOAM) with IPv6
[    4.357636] kernel: sit: IPv6, IPv4 and MPLS over IPv4 tunneling driver
[    4.358258] kernel: NET: Registered PF_PACKET protocol family
[    4.358398] kernel: 9pnet: Installing 9P2000 support
[    4.358452] kernel: Key type dns_resolver registered
[    4.358471] kernel: Key type ceph registered
[    4.358868] kernel: libceph: loaded (mon/osd proto 15/24)
[    4.359928] kernel: IPI shorthand broadcast: enabled
[    4.360007] kernel: sched_clock: Marking stable (4354589840, 4777209)->(4402080784, -42713735)
[    4.360735] kernel: registered taskstats version 1
[    4.360745] kernel: Loading compiled-in X.509 certificates
[    4.363538] kernel: PM:   Magic number: 15:709:882
[    4.363641] kernel: printk: console [netcon0] enabled
[    4.363648] kernel: netconsole: network logging started
[    4.498943] kernel: ata2.01: NODEV after polling detection
[    4.499848] kernel: ata1.01: NODEV aft4.375854] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    4.376165] systemd[1]: Detected virtualization kvm.
[    4.376188] systemd[1]: Detected architecture x86-64.
[    4.387193] systemd[1]: Set hostname to <dfs-fuzzing>.
[    4.461814] kernel: netplan (77) used greatest stack depth: 26024 bytes left
[    4.537936] kernel: systemd-sysv-ge (88) used greatest stack depth: 25912 bytes left
[    4.573704] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    4.716457] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    4.763384] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but ther polling detection
[    4.500593] kernel: ata2.00: ATAPI: QEMU DVD-ROM, 2.5+, max UDMA/100
[    4.501295] kernel: ata1.00: ATA-7: QEMU HARDDISK, 2.5+, max UDMA/100
[    4.501378] kernel: ata1.00: 88078336 sectors, multi 16: LBA48 
[    4.504343] kernel: scsi 0:0:0:0: Direct-Access     ATA      QEMU HARDDISK    2.5+ PQ: 0 ANSI: 5
[    4.506706] kernel: sd 0:0:0:0: Attached scsi generic sg0 type 0
[    4.507136] kernel: sd 0:0:0:0: [sda] 88078336 512-byte logical blocks: (45.1 GB/42.0 GiB)
[    4.507239] kernel: sd 0:0:0:0: [sda] Write Protect is off
[    4.507289] kernel: sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
[    4.508162] kernel: scsi 1:0:0:0: CD-ROM            QEMU     QEMU DVD-ROM     2.5+ PQ: 0 ANSI: 5
[    4.509003] kernel: sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
[    4.516860] kernel: sd 0:0:0:0: [sda] Attached SCSI disk
[    4.528164] kernel: sr 1:0:0:0: [sr0] scsi3-mmc drive: 4x/4x cd/rw xa/form2 tray
[    4.528223] kernel:e local system does not support BPF/cgroup firewalling.
[    4.763407] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    4.764200] systemd[1]: Created slice system-modprobe.slice.
[    4.764605] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    4.764975] systemd[1]: Created slice User and Session Slice.
[    4.765176] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    4.765337] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    4.765913] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    4.765960] systemd[1]: Reached target Local Encrypted Volumes.
[    4.765984] systemd[1]: Reached target Paths.
[    4.765999] systemd[1]: Reached target Remote File Systems.
[    4.766013] systemd[1]: Reached target Slices.
[    4.766029] systemd[1]: Reached target Swap.
[    4.766232] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    4.76653 cdrom: Uniform CD-ROM driver Revision: 3.20
[    4.549654] kernel: sr 1:0:0:0: Attached scsi CD-ROM sr0
[    4.550662] kernel: sr 1:0:0:0: Attached scsi generic sg1 type 5
[    4.970867] kernel: input: ImExPS/2 Generic Explorer Mouse as /devices/platform/i8042/serio1/input/input3
[    4.984082] kernel: IP-Config: Guessing netmask 255.255.255.0
[    4.984099] kernel: IP-Config: Complete:
[    4.984105] kernel:      device=eth0, hwaddr=e6:c8:ff:09:76:25, ipaddr=192.168.0.37, mask=255.255.255.0, gw=255.255.255.255
[    4.984130] kernel:      host=192.168.0.37, domain=, nis-domain=(none)
[    4.984141] kernel:      bootserver=255.255.255.255, rootserver=255.255.255.255, rootpath=
[    4.984405] kernel: cfg80211: Loading compiled-in X.509 certificates for regulatory database
[    4.984988] kernel: kworker/u4:1 (69) used greatest stack depth: 28680 bytes left
[    4.987381] kernel: cfg80211: Loaded X.509 cert 'sforshee: 00b28ddf47aef9cea7'
[    4.987410] kernel: ALSA device list:
[    4.982901] kernel:   No soundcards found.
[    5.003822] kernel: md: Waiting for all devices to be available before autodetect
[    5.003833] kernel: md: If you don't use raid, use raid=noautodetect
[    5.003841] kernel: md: Autodetecting RAID arrays.
[    5.003847] kernel: md: autorun ...
[    5.003853] kernel: md: ... autorun DONE.
[    5.004602] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    5.004630] kernel: cfg80211: failed to load regulatory.db
[    5.027953] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    5.028064] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    5.029007] kernel: devtmpfs: mounted
[    5.030651] kernel: Freeing unused kernel image (initmem) memory: 2068K
[    5.030670] kernel: Write protecting the kernel read-only data: 57344k
[    5.033789] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    5.034609] kernel: Freeing8] systemd[1]: Listening on Syslog Socket.
[    4.766690] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    4.767142] systemd[1]: Listening on Journal Audit Socket.
[    4.767466] systemd[1]: Listening on Journal Socket (/dev/log).
[    4.768040] systemd[1]: Listening on Journal Socket.
[    4.768491] systemd[1]: Listening on udev Control Socket.
[    4.768841] systemd[1]: Listening on udev Kernel Socket.
[    4.772045] systemd[1]: Mounting Huge Pages File System...
[    4.774150] systemd[1]: Mounting POSIX Message Queue File System...
[    4.776346] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    4.778178] systemd[1]: Mounting /sys/kernel/config...
[    4.780401] systemd[1]: Mounting /sys/kernel/debug...
[    4.782844] systemd[1]: Mounting Kernel Trace File System...
[    4.787106] systemd[1]: Starting Journal Service...
[    4.800442] systemd[1]: Starting Set the console keyboard layout...
[    4.800527] systemd[1]: Condition check resulted in Create list of stat7417] kernel:   No soundcards found.
[    4.987853] kernel: md: Waiting for all devices to be available before autodetect
[    4.987862] kernel: md: If you don't use raid, use raid=noautodetect
[    4.987869] kernel: md: Autodetecting RAID arrays.
[    4.987875] kernel: md: autorun ...
[    4.987880] kernel: md: ... autorun DONE.
[    4.988619] kernel: platform regulatory.0: Direct firmware load for regulatory.db failed with error -2
[    4.988645] kernel: cfg80211: failed to load regulatory.db
[    5.023324] kernel: EXT4-fs (sda): mounted filesystem with ordered data mode. Opts: (null). Quota mode: none.
[    5.023422] kernel: VFS: Mounted root (ext4 filesystem) readonly on device 8:0.
[    5.024460] kernel: devtmpfs: mounted
[    5.025907] kernel: Freeing unused kernel image (initmem) memory: 2068K
[    5.025925] kernel: Write protecting the kernel read-only data: 57344k
[    5.028681] kernel: Freeing unused kernel image (text/rodata gap) memory: 2032K
[    5.029562] kernel: Freeing unused kernel image (rodata/data gap) memory: 988K
[    5.034655] kernel: Run /sbin/init as init process
[    5.034664] kernel:   with arguments:
[    5.034670] kernel:     /sbin/init
[    5.034677] kernel:     nokaslr
[    5.034683] kernel:   with environment:
[    5.034689] kernel:     HOME=/
[    5.034696] kernel:     TERM=linux
[    5.092468] kernel: random: fast init done
[    5.177435] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    5.177758] systemd[1]: Detected virtualization kvm.
[    5.177778] systemd[1]: Detected architecture x86-64.
[    5.187604] systemd[1]: Set hostname to <dfs-fuzzing>.
[    5.215809] kernel: ext4lazyinit (74) used greatest stack depth: 27144 bytes left
[    5.261772] kernel: netplan (77) used greatest stack depth: 26520 bytes left
[    5.317666] kernel: syst unused kernel image (rodata/data gap) memory: 988K
[    5.029604] kernel: Run /sbin/init as init process
[    5.029614] kernel:   with arguments:
[    5.029620] kernel:     /sbin/init
[    5.029628] kernel:     nokaslr
[    5.029635] kernel:   with environment:
[    5.029642] kernel:     HOME=/
[    5.029650] kernel:     TERM=linux
[    5.066131] kernel: random: fast init done
[    5.152141] systemd[1]: systemd 245.4-4ubuntu3 running in system mode. (+PAM +AUDIT +SELINUX +IMA +APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 +SECCOMP +BLKID +ELFUTILS +KMOD +IDN2 -IDN +PCRE2 default-hierarchy=hybrid)
[    5.152409] systemd[1]: Detected virtualization kvm.
[    5.152428] systemd[1]: Detected architecture x86-64.
[    5.161813] systemd[1]: Set hostname to <dfs-fuzzing>.
[    5.254507] kernel: systemd-bless-b (78) used greatest stack depth: 26968 bytes left
[    5.258753] kernel: netplan (77) used greatest stack depth: 26504 bytes left
[    5.312793] kernel: sic device nodes for the current kernel being skipped.
[    4.800666] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    4.816900] systemd[1]: Starting Load Kernel Modules...
[    4.823823] kernel: mount (90) used greatest stack depth: 25736 bytes left
[    4.834187] systemd[1]: Starting Remount Root and Kernel File Systems...
[    4.839569] systemd[1]: Starting udev Coldplug all Devices...
[    4.842302] systemd[1]: Mounted Huge Pages File System.
[    4.842807] systemd[1]: Mounted POSIX Message Queue File System.
[    4.843276] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    4.852014] systemd[1]: Mounted /sys/kernel/config.
[    4.852518] systemd[1]: Mounted /sys/kernel/debug.
[    4.853005] systemd[1]: Mounted Kernel Trace File System.
[    4.855634] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    4.859686] systemd[1]: Finished Load Kernel Modules.
[    4.862355] systemd[1]: Mounting FUSE Control File Syemd-run-gen (86) used greatest stack depth: 26296 bytes left
[    5.368561] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    5.372986] kernel: systemd-sysv-ge (88) used greatest stack depth: 25912 bytes left
[    5.375260] kernel: (sd-executor) (76) used greatest stack depth: 25896 bytes left
[    5.504628] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    5.547334] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    5.547384] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    5.549546] systemd[1]: Created slice system-modprobe.slice.
[    5.551190] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    5.552269] systemd[1]: Created slice User and Session Slice.
[    5.552808] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    5.553235] systemd[1]: Started Forward Password Requests to Wall Directory Watch.
[    5.554754] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    5.554876] systemd[1]: Reached target Local Encrypted Volumes.
[    5.554930] systemd[1]: Reached target Paths.
[    5.554971] systemd[1]: Reached target Remote File Systems.
[    5.555006] systemd[1]: Reached target Slices.
[    5.555048] systemd[1]: Reached target Swap.
[    5.555589] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    5.556398] systemd[1]: Listening on Syslog Socket.
[    5.556788] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    5.557681] systemd[1]: Listening on Journal Audit Socket.
[    5.558176] systemd[1]: Listening on Journal Socket (/dev/log).
[    5.558810] systemd[1]: Listening on Journal Socket.
[    5.559376] systemd[1]: Listening on udev Controlstem...
[    4.866403] systemd[1]: Starting Apply Kernel Variables...
[    4.887666] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    4.894542] systemd[1]: Mounted FUSE Control File System.
[    4.901358] systemd[1]: Finished Remount Root and Kernel File Systems.
[    4.904134] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    4.904204] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    4.906690] systemd[1]: Starting Load/Save Random Seed...
[    4.910422] systemd[1]: Starting Create System Users...
[    4.956170] systemd[1]: Finished Apply Kernel Variables.
[    4.963046] systemd[1]: Finished Create System Users.
[    4.965835] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.016144] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.020237] systemd[1]: Starting udev Kernel Device Manager...
[    5.141666] systemd[1]: Started udev Kernel Device Manageystemd-sysv-ge (88) used greatest stack depth: 25912 bytes left
[    5.345243] kernel: IPv6: ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[    5.466776] systemd[1]: /lib/systemd/system/dbus.socket:5: ListenStream= references a path below legacy directory /var/run/, updating /var/run/dbus/system_bus_socket → /run/dbus/system_bus_socket; please update the unit file accordingly.
[    5.526657] systemd[1]: system-modprobe.slice: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[    5.526738] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[    5.530098] systemd[1]: Created slice system-modprobe.slice.
[    5.531490] systemd[1]: Created slice system-serial\x2dgetty.slice.
[    5.532501] systemd[1]: Created slice User and Session Slice.
[    5.533139] systemd[1]: Started Dispatch Password Requests to Console Directory Watch.
[    5.533628] systemd[1]: Started Forward Password Requests to Wall Directory Watr.
[    5.241875] kernel: keyboard-setup. (97) used greatest stack depth: 25448 bytes left
[    5.243092] systemd[1]: Finished Set the console keyboard layout.
[    5.243575] systemd[1]: Reached target Local File Systems (Pre).
[    5.243609] systemd[1]: Reached target Local File Systems.
[    5.255346] systemd[1]: Starting Set console font and keymap...
[    5.255476] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    5.371317] kernel: random: crng init done
[    5.377947] systemd[1]: Finished Load/Save Random Seed.
[    5.378466] systemd[1]: Condition check resulted in Store a System Token in an EFI Variable being skipped.
[    5.396207] systemd[1]: Finished Set console font and keymap.
[    5.675271] systemd[1]: Found device /dev/ttyS0.
[    5.748234] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    5.780726] systemd[1]: Finished udev Coldplug all Devices.
[    5.890172] systemd[1]: Started Journal Servi Socket.
[    5.559757] systemd[1]: Listening on udev Kernel Socket.
[    5.564672] systemd[1]: Mounting Huge Pages File System...
[    5.569032] systemd[1]: Mounting POSIX Message Queue File System...
[    5.571854] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    5.574288] systemd[1]: Mounting /sys/kernel/config...
[    5.576749] systemd[1]: Mounting /sys/kernel/debug...
[    5.579925] systemd[1]: Mounting Kernel Trace File System...
[    5.584280] systemd[1]: Starting Journal Service...
[    5.599916] kernel: mount (90) used greatest stack depth: 25752 bytes left
[    5.600206] systemd[1]: Starting Set the console keyboard layout...
[    5.600261] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    5.600338] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    5.615193] systemd[1]: Starting Load Kernel Modules...
[    5.618152] systemd[1]: Starting Remount Root and Kernel File Systech.
[    5.535450] systemd[1]: Set up automount Arbitrary Executable File Formats File System Automount Point.
[    5.535641] systemd[1]: Reached target Local Encrypted Volumes.
[    5.535708] systemd[1]: Reached target Paths.
[    5.535751] systemd[1]: Reached target Remote File Systems.
[    5.535788] systemd[1]: Reached target Slices.
[    5.535852] systemd[1]: Reached target Swap.
[    5.536731] systemd[1]: Listening on Device-mapper event daemon FIFOs.
[    5.537811] systemd[1]: Listening on Syslog Socket.
[    5.538136] systemd[1]: Listening on initctl Compatibility Named Pipe.
[    5.539097] systemd[1]: Listening on Journal Audit Socket.
[    5.540299] systemd[1]: Listening on Journal Socket (/dev/log).
[    5.540796] systemd[1]: Listening on Journal Socket.
[    5.541257] systemd[1]: Listening on udev Control Socket.
[    5.541530] systemd[1]: Listening on udev Kernel Socket.
[    5.544508] systemd[1]: Mounting Huge Pages File System...
[    5.547569] systemd[1]: Mounting POSIce.
X Message Queue File System...
[    5.550426] systemd[1]: Mounting /proc/sys/fs/binfmt_misc...
[    5.552405] systemd[1]: Mounting /sys/kernel/config...
[    5.554287] systemd[1]: Mounting /sys/kernel/debug...
[    5.556761] systemd[1]: Mounting Kernel Trace File System...
[    5.560983] systemd[1]: Starting Journal Service...
[    5.572628] systemd[1]: Starting Set the console keyboard layout...
[    5.572752] systemd[1]: Condition check resulted in Create list of static device nodes for the current kernel being skipped.
[    5.572884] systemd[1]: Condition check resulted in Load Kernel Module drm being skipped.
[    5.582326] systemd[1]: Starting Load Kernel Modules...
[    5.588846] systemd[1]: Starting Remount Root and Kernel File Systems...
[    5.597808] kernel: mount (90) used greatest stack depth: 25752 bytes left
[    5.607281] systemd[1]: Starting udev Coldplug all Devices...
[    5.611142] systemd[1]: Mounted Huge Pages File System.
[    5.611674] systemd[1]: Mounted POSIX Message Queue File System.
[    5.612168] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    5.612650] systemd[1]: Mounted /sys/kernel/config.
[    5.613265] systemd[1]: Mounted /sys/kernel/debug.
[    5.614090] systemd[1]: Mounted Kernel Trace File System.
[    5.622648] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    5.646786] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    5.658784] systemd[1]: Finished Load Kernel Modules.
[    5.661780] systemd[1]: Finished Remount Root and Kernel File Systems.
[    5.669016] systemd[1]: Mounting FUSE Control File System...
[    5.671015] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    5.671169] systemd[1]: Condition check resulted in Platform Persistent Storage Archival being skipped.
[    5.676680] systemd[1]: Starting Load/Save Random Seed...
[    5.681543] systemd[1]: Starting Apply Kernel Variables...
[    5.686810] systemd[1]: Startingms...
[    5.625957] systemd[1]: Starting udev Coldplug all Devices...
[    5.632914] systemd[1]: Mounted Huge Pages File System.
[    5.633498] systemd[1]: Mounted POSIX Message Queue File System.
[    5.633993] systemd[1]: Mounted /proc/sys/fs/binfmt_misc.
[    5.641578] systemd[1]: Mounted /sys/kernel/config.
[    5.642125] systemd[1]: Mounted /sys/kernel/debug.
[    5.642625] systemd[1]: Mounted Kernel Trace File System.
[    5.648654] systemd[1]: Condition check resulted in Set Up Additional Binary Formats being skipped.
[    5.652767] systemd[1]: Finished Load Kernel Modules.
[    5.662342] systemd[1]: Mounting FUSE Control File System...
[    5.667842] kernel: EXT4-fs (sda): re-mounted. Opts: (null). Quota mode: none.
[    5.672952] systemd[1]: Starting Apply Kernel Variables...
[    5.690919] systemd[1]: Finished Remount Root and Kernel File Systems.
[    5.699821] systemd[1]: Condition check resulted in Rebuild Hardware Database being skipped.
[    5.699902] systemd[1]: Condi Create System Users...
[    5.718897] systemd[1]: Mounted FUSE Control File System.
[    5.766016] kernel: systemd-sysuser (111) used greatest stack depth: 25608 bytes left
[    5.770835] systemd[1]: Finished Create System Users.
[    5.778938] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.789748] systemd[1]: Finished Apply Kernel Variables.
[    5.857979] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.870279] systemd[1]: Starting udev Kernel Device Manager...
[    6.007980] systemd[1]: Started udev Kernel Device Manager.
[    6.160515] kernel: keyboard-setup. (97) used greatest stack depth: 25560 bytes left
[    6.163676] systemd[1]: Finished Set the console keyboard layout.
[    6.164473] systemd[1]: Reached target Local File Systems (Pre).
[    6.164517] systemd[1]: Reached target Local File Systems.
[    6.176464] systemd[1]: Starting Set console font and keymap...
[    6.176674] systemd[1]: Condition check resulted in Commit a transient machition check resulted in Platform Persistent Storage Archival being skipped.
[    5.708022] systemd[1]: Starting Load/Save Random Seed...
[    5.717824] systemd[1]: Starting Create System Users...
[    5.722426] systemd[1]: Mounted FUSE Control File System.
[    5.754007] systemd[1]: Finished Apply Kernel Variables.
[    5.764153] kernel: systemd-sysuser (112) used greatest stack depth: 25608 bytes left
[    5.765349] systemd[1]: Finished Create System Users.
[    5.770050] systemd[1]: Starting Create Static Device Nodes in /dev...
[    5.833024] systemd[1]: Finished Create Static Device Nodes in /dev.
[    5.836795] systemd[1]: Starting udev Kernel Device Manager...
[    5.858608] kernel: keyboard-setup. (97) used greatest stack depth: 25560 bytes left
[    5.859867] systemd[1]: Finished Set the console keyboard layout.
[    5.860684] systemd[1]: Reached target Local File Systems (Pre).
[    5.860720] systemd[1]: Reached target Local File Systems.
[    5.863654] systemd[1]: Starting Sene-id on disk being skipped.
[    6.242566] kernel: random: crng init done
[    6.257553] systemd[1]: Finished Load/Save Random Seed.
[    6.258085] systemd[1]: Condition check resulted in Store a System Token in an EFI Variable being skipped.
[    6.352871] systemd[1]: Finished Set console font and keymap.
[    6.471339] systemd[1]: Found device /dev/ttyS0.
[    6.534790] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    6.613847] systemd[1]: Finished udev Coldplug all Devices.
[    6.741375] systemd[1]: Started Journal Service.
[    8.383217] kernel: systemctl (195) used greatest stack depth: 25032 bytes left
t console font and keymap...
[    5.863820] systemd[1]: Condition check resulted in Commit a transient machine-id on disk being skipped.
[    5.900628] systemd[1]: Finished Set console font and keymap.
[    5.946731] systemd[1]: Started udev Kernel Device Manager.
[    6.306133] kernel: random: crng init done
[    6.315117] systemd[1]: Finished Load/Save Random Seed.
[    6.315989] systemd[1]: Condition check resulted in Store a System Token in an EFI Variable being skipped.
[    6.649853] systemd[1]: Found device /dev/ttyS0.
[    6.693748] systemd[1]: Listening on Load/Save RF Kill Switch Status /dev/rfkill Watch.
[    6.735013] systemd[1]: Finished udev Coldplug all Devices.
[    6.831668] systemd[1]: Started Journal Service.
---- executor 0 config DFS: Warning: Permanently added '192.168.0.36' (ECDSA) to the list of known hosts.

---- executor 0 config DFS: Warning: Permanently added '192.168.0.37' (ECDSA) to the list of known hosts.

-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 2 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 2 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 2 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 2 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 2 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 2 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 2 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 2 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 2 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 2 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 2 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 2 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 2 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
-----executor 2 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
Node-0:/root/daemon-log.388
-----executor 2 collect shmids 31
----- directly resend shmid 31
Node-1:/root/daemon-log.364
---- executor 0 config DFS: gluster peer probe 192.168.0.36

Node-2:/root/daemon-log.364
---- executor 0 config DFS: call atexit in pid 359 tid 359

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 34, thread 359, pid 359, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 35, thread 421, pid 359, value 1

---- executor 0 config DFS: gluster peer probe 192.168.0.37

---- executor 0 config DFS: call atexit in pid 422 tid 422

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 36, thread 422, pid 422, value 1

---- executor 0 config DFS: execvp hook

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 36, thread 422, pid 422

-----executor 0 collect shmids 36
----- directly resend shmid 36
---- executor 0 config DFS: call atexit in pid 374 tid 374

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 37, thread 374, pid 374, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 38, thread 423, pid 374, value 1

---- executor 0 config DFS: call atexit in pid 424 tid 424

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 39, thread 424, pid 424, value 1

---- executor 0 config DFS: execvp hook

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 39, thread 424, pid 424

-----executor 0 collect shmids 39
----- directly resend shmid 39
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 40, thread 425, pid 359, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 41, thread 426, pid 359, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 42, thread 427, pid 359, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 43, thread 428, pid 374, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 44, thread 429, pid 374, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 45, thread 430, pid 374, value 1

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 40, thread 425, pid 359

-----executor 0 collect shmids 34
----- directly resend shmid 34
---- executor 0 config DFS: peer probe: success

-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
-----executor 0 collect shmids 37
----- directly resend shmid 37
---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 43, thread 428, pid 374

-----executor 0 collect shmids 38
----- directly resend shmid 38
---- executor 0 config DFS: peer probe: success

-----executor 0 collect shmids 43
----- directly resend shmid 43
-----executor 0 collect shmids 44
----- directly resend shmid 44
-----executor 0 collect shmids 45
----- directly resend shmid 45
==388==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==364==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==364==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
---- executor 0 config DFS: call atexit in pid 432 tid 432

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 46, thread 432, pid 432, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 47, thread 433, pid 432, value 1

---- executor 0 config DFS: call atexit in pid 434 tid 434

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 48, thread 434, pid 434, value 1

---- executor 0 config DFS: execvp hook

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 48, thread 434, pid 434

-----executor 0 collect shmids 48
----- directly resend shmid 48
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 49, thread 435, pid 432, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 50, thread 436, pid 432, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 51, thread 437, pid 432, value 1

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 49, thread 435, pid 432

-----executor 0 collect shmids 46
----- directly resend shmid 46
---- executor 0 config DFS: Number of Peers: 2

---- executor 0 config DFS: 

---- executor 0 config DFS: Hostname: 192.168.0.36

---- executor 0 config DFS: Uuid: 320bcd52-eebc-4364-87b4-688bf6f87f08

---- executor 0 config DFS: State: Peer in Cluster (Connected)

---- executor 0 config DFS: 

---- executor 0 config DFS: Hostname: 192.168.0.37

---- executor 0 config DFS: Uuid: eb3387c2-7a17-445b-8095-963179e297b8

---- executor 0 config DFS: State: Peer in Cluster (Connected)

-----executor 0 collect shmids 47
----- directly resend shmid 47
-----executor 0 collect shmids 49
----- directly resend shmid 49
-----executor 0 collect shmids 50
----- directly resend shmid 50
-----executor 0 collect shmids 51
----- directly resend shmid 51
---- executor 0 config DFS: gluster volume create test-volume disperse 3 redundancy 1 192.168.0.35:/root/glusterfs-server 192.168.0.36:/root/glusterfs-server 192.168.0.37:/root/glusterfs-server force

---- executor 0 config DFS: call atexit in pid 438 tid 438

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 52, thread 438, pid 438, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 53, thread 439, pid 438, value 1

---- executor 0 config DFS: call atexit in pid 440 tid 440

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 54, thread 440, pid 440, value 1

---- executor 0 config DFS: execvp hook

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 54, thread 440, pid 440

-----executor 0 collect shmids 54
----- directly resend shmid 54
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 55, thread 441, pid 438, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 56, thread 442, pid 438, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 57, thread 443, pid 438, value 1

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 55, thread 441, pid 438

-----executor 0 collect shmids 52
----- directly resend shmid 52
---- executor 0 config DFS: volume create: test-volume: success: please start the volume to access data

-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 55
----- directly resend shmid 55
-----executor 0 collect shmids 56
----- directly resend shmid 56
-----executor 0 collect shmids 57
----- directly resend shmid 57
---- executor 0 config DFS: call atexit in pid 457 tid 457

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 58, thread 457, pid 457, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 59, thread 458, pid 457, value 1

---- executor 0 config DFS: call atexit in pid 459 tid 459

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 60, thread 459, pid 459, value 1

-----executor 0 collect shmids 60
----- directly resend shmid 60
---- executor 0 config DFS: execvp hook

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 60, thread 459, pid 459

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 61, thread 460, pid 457, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 62, thread 461, pid 457, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 63, thread 462, pid 457, value 1

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 61, thread 460, pid 457

-----executor 0 collect shmids 58
----- directly resend shmid 58
---- executor 0 config DFS: volume start: test-volume: success

-----executor 0 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 61
----- directly resend shmid 61
-----executor 0 collect shmids 62
----- directly resend shmid 62
-----executor 0 collect shmids 63
----- directly resend shmid 63
---- executor 0 config DFS: call atexit in pid 495 tid 495

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 92, thread 495, pid 495, value 1

Node-2:/root/daemon-log.412
Node-0:/root/daemon-log.464
Node-1:/root/daemon-log.411
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 93, thread 504, pid 495, value 1

---- executor 0 config DFS: call atexit in pid 506 tid 506

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 94, thread 506, pid 506, value 1

---- executor 0 config DFS: execvp hook

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 94, thread 506, pid 506

-----executor 0 collect shmids 94
----- directly resend shmid 94
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 95, thread 512, pid 495, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 96, thread 513, pid 495, value 1

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: retrieve shmid 97, thread 514, pid 495, value 1

---- executor 0 config DFS: proc_exit destr_fn

---- executor 0 config DFS: destr_fn: before unspec_area == NULL, shmid 95, thread 512, pid 495

-----executor 0 collect shmids 92
----- directly resend shmid 92
---- executor 0 config DFS: volume set: success

-----executor 0 collect shmids 93
----- directly resend shmid 93
-----executor 0 collect shmids 95
----- directly resend shmid 95
-----executor 0 collect shmids 96
----- directly resend shmid 96
-----executor 0 collect shmids 97
----- directly resend shmid 97
---- executor 0 config DFS: mount finished

---- executor 0 config DFS: Warning: Permanently added '192.168.0.38' (ECDSA) to the list of known hosts.

==412==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==411==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==464==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: fork hook

---- executor 0 config DFS: fork hook

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

---- executor 0 config DFS: executor __sanitizer_cov_trace_pc: no pipe file

Node-3:/root/daemon-log.416
fsync test_dir /root/req 6
req.flags ea2
----- executor 0 do_sandbox_none at begining
----- executor 0 do_sandbox_none before fork()
2023/03/31 10:53:01 ----- before executor 0 handshake recv reply &{0}
2023/03/31 10:53:01 ----- after executor 0 handshake recv reply &{195948557} at 16
2023/03/31 10:53:01 ----- handshake 0 finished <- nil
2023/03/31 10:53:01 ----- before executor 1 handshake recv reply &{195948557}
2023/03/31 10:53:01 ----- after executor 1 handshake recv reply &{195948557} at 16
2023/03/31 10:53:01 ----- handshake 1 finished <- nil
2023/03/31 10:53:01 ----- before executor 2 handshake recv reply &{195948557}
2023/03/31 10:53:01 ----- after executor 2 handshake recv reply &{195948557} at 16
2023/03/31 10:53:01 ----- handshake 2 finished <- nil
2023/03/31 10:53:01 ----- before executor 3 handshake recv reply &{195948557}
2023/03/31 10:53:01 ----- after executor 3 handshake recv reply &{195948557} at 16
2023/03/31 10:53:01 ----- handshake 3 finished <- nil
2023/03/31 10:53:01 ----- handshake timeout
2023/03/31 10:53:01 ----- handshake return
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1336, prog_size 7848
-----finish removing dir
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 8
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-0 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-0
receive_execute: 0, 29
receive_execute: 11510, 30
receive_execute: 11501, 30
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 11510, 37
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 10711, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 10711, flag collect 0
----- executor 3 signal number : 1583
----- completed 2
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3224, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 3224, flag collect 0
----- executor 3 signal number : 293
----- completed 4
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 9610, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 9610, flag collect 0
----- executor 3 signal number : 1226
----- completed 14
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3218, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 3218, flag collect 0
----- executor 3 signal number : 12
----- completed 16
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 3361, pid 428, write pid:429
----- executor 3 executes write_coverage_signal cov->size 3361, flag collect 0
----- executor 3 signal number : 260
----- completed 20
execute_one loop: 0, 0, 23
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 1
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
cover_reset in execute_call
execute_one loop: 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 111, 4, 0
execute_one time: 2, 116
executor 2 write_server_output
executor 1 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 18803, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 14601, flag collect 0
2023/03/31 10:53:01 for select break: 1
----- executor 1 executes write_coverage_signal cov->size 18782, flag collect 0
2023/03/31 10:53:01 --------- executor 3 receive reply, reply.done 1
----- executor 0 signal number : 458
----- executor 0 executes write_coverage_signal cov->size 4178, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 459
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 30583, flag collect 0
----- executor 1 signal number : 4263
----- executor 1 executes write_coverage_signal cov->size 99, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 27012, flag collect 0
----- executor 1 signal number : 2078
----- executor 1 executes write_coverage_signal cov->size 6119, flag collect 0
----- executor 1 signal number : 353
----- executor 2 signal number : 3970
----- executor 2 executes write_coverage_signal cov->size 99, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 2 signal number : 36
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 27017, flag collect 0
----- executor 2 signal number : 2067
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 4263
----- executor 0 executes write_coverage_signal cov->size 99, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 20223, flag collect 0
----- executor 0 signal number : 1950
----- executor 0 executes write_coverage_signal cov->size 6771, flag collect 0
----- executor 0 signal number : 111
executor 0 server cover_cnt 6 output_pos_value 6817
time breakdown 3: 11547, 130, 0
before receive testcase: 0 1
executor 1 server cover_cnt 6 output_pos_value 7191
----- executor 2 signal number : 1833
executor 2 server cover_cnt 7 output_pos_value 8405
2023/03/31 10:53:01 for select break: 1
2023/03/31 10:53:01 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 29, 142, 0
before receive testcase: 0 0
2023/03/31 10:53:01 for select break: 1
2023/03/31 10:53:01 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 11531, 143, 0
before receive testcase: 0 0
2023/03/31 10:53:01 for select break: 1
2023/03/31 10:53:01 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:01 wg wait finish
2023/03/31 10:53:01 ------ all executors finish execution
2023/03/31 10:53:01 exec time: 175
2023/03/31 10:53:01 ----- PS len: 4
2023/03/31 10:53:01 [CLIENT] executor 3 has 20 replies
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 11540, 145, 0
before receive testcase: 0 0
2023/03/31 10:53:01 fuzzer receive 1583 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 293 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 1226 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 12 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:01 fuzzer receive 260 signal and 0 cover from executor 3
2023/03/31 10:53:01 [SERVER] executor 0 has 6 replies
2023/03/31 10:53:01 ------- fuzzer executor 0 receive 458 signal and 0 cover from userspace component
2023/03/31 10:53:01 [SERVER] executor 1 has 6 replies
2023/03/31 10:53:01 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 1 receive 459 signal and 0 cover from userspace component
2023/03/31 10:53:01 [SERVER] executor 2 has 7 replies
2023/03/31 10:53:01 ------- fuzzer executor 1 receive 4263 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 0 receive 4263 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 0 receive 1950 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 0 receive 111 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 1 receive 2078 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 1 receive 353 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 3970 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 36 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 2067 signal and 0 cover from userspace component
2023/03/31 10:53:01 ------- fuzzer executor 2 receive 1833 signal and 0 cover from userspace component
2023/03/31 10:53:01 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:01 ----- no new client coverage: false, true
2023/03/31 10:53:01 mutate testcase with failures
2023/03/31 10:53:01 ----- insertCall()
2023/03/31 10:53:01 ----- insertCall()
2023/03/31 10:53:01 ----- insertCall()
2023/03/31 10:53:01 ----- insertCall()
2023/03/31 10:53:01 ----- mutateFailPos()
2023/03/31 10:53:01 insert call 0 at pos 0
2023/03/31 10:53:01 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:01 disable threaded and collide
2023/03/31 10:53:01 prog length: 6
2023/03/31 10:53:01 prog length: 22
2023/03/31 10:53:01 HasCrashFail:true HasNetFail:false
10:53:01 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x2040, 0x8a)
r1 = openat(r0, &(0x7f00000002c0)='./file0\x00', 0x0, 0x310)
chmod(&(0x7f0000000080)='./file0\x00', 0x18)
readlink(&(0x7f00000000c0)='./file0\x00', &(0x7f0000000c40)=""/234, 0xea)
truncate(&(0x7f0000000200)='./file0/file0\x00', 0xfffffffffffbfff8)
lsetxattr$security_evm(&(0x7f0000000240)='./file0\x00', &(0x7f0000000280), &(0x7f0000001200)=ANY=[@ANYBLOB="03010f3c54d3d200777d8b71e296e56dda9476e5720bac0394917d71a96cb7b48225e8ba136bdc96a3954f86d62c2d5c70d9b1224c335844836dd442c40685c374dbba01bf7261084a6b8a2bb48c587543e12d11512de045ebf781e2c502e40c73a781ddec5e0560aa466f226294248a63e28600972d72a886320f0b30a394b930c2f8144ebb6d8f4d32090000000f32943d06685a2e1e1c40bf3aaa8e7b198026d5878ce4a0d40066dc607dc73484dbec9bd0032a6cf11fcdf4cbcb658aa396d5c24785fb1f8efc9e96992606e612ce8b7df7c79b2a7f23cb7cf21fb2eb3b000000005547cec14b07dba7f04b1808a978be25431ff370991280f7af3fc4f2e812053da7fda82af9137ba3e4f8151bc3071b8b3667260ea1f9e53ad2b9d5c4145e4c806ffd3571f7c935ba03928d466d801e4c5aff4d08f122b55c3c39c07d72bbdae15843af6d71f3f005937ff6642b37fc61fdaa119cd7106e04c941de6c1e368bc2404a54f6cbf55eac26bf88e2e0df983f170460f8eac28ddcab7cbad787822f1bada5f9c698673d3fa79b2ba25e0f88b48b688d3226762c3649198f"], 0x80, 0x2)
readlinkat(r0, &(0x7f0000000340)='./file0\x00', &(0x7f0000000100)=""/235, 0xeb)
setxattr$incfs_id(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0), &(0x7f0000000500)={'0000000000000000000000000000000', 0x31}, 0x20, 0x1)
chmod(&(0x7f0000000540)='./file0\x00', 0x100)
chdir(&(0x7f0000000580)='./file0\x00')
readlinkat(r1, &(0x7f00000005c0)='./file0\x00', &(0x7f0000000600)=""/217, 0xd9)
setxattr$security_smack_transmute(&(0x7f0000000700)='./file0/file2\x00', &(0x7f0000000780), &(0x7f0000000c00), 0x4, 0x3)
lsetxattr$security_selinux(&(0x7f00000007c0)='./file0/file0\x00', &(0x7f0000000800), &(0x7f0000000840)='system_u:object_r:syslogd_var_lib_t:s0\x00', 0x27, 0x1)
setxattr$trusted_overlay_redirect(&(0x7f0000000880)='./file0/file0\x00', &(0x7f00000008c0), &(0x7f0000000900)='./file0\x00', 0x8, 0x0)
r2 = open(&(0x7f0000000940)='./file0\x00', 0x2ad01, 0x42)
setxattr$smack_xattr_label(&(0x7f0000000980)='./file0/file0\x00', &(0x7f00000009c0)='security.SMACK64\x00', &(0x7f0000000e80)=ANY=[@ANYBLOB='security.evo\x00\x00', @ANYRES64, @ANYBLOB="38c99c121660a7e165b8e79fe73bd016f5227d98e0e2ab974e11f3bfb6caf94154f388c2390d76d1b7713573a19e48ebd30c3dbdfe7b9b4faf68d65498c3ca2f835a7c9333a504ade40fb244a1cb4e113f725f841dd9e50ea6e4d1ac9063241c8b5b495cabb0f5bee24ba9", @ANYRESHEX=r1, @ANYRESHEX=r2, @ANYRES64=r0, @ANYRES16, @ANYRES16=r1, @ANYRESOCT=0x0, @ANYRES64, @ANYRESDEC], 0xe, 0x0)
faccessat(r1, &(0x7f0000000a40)='./file0/file2\x00', 0x80)
lsetxattr(&(0x7f0000000a80)='./file0/file0\x00', &(0x7f0000000ac0)=@known='trusted.syz\x00', &(0x7f0000000b00)='a\x00', 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
unlink(&(0x7f0000000b40)='./file0/file0\x00')
lremovexattr(&(0x7f0000000b80)='./file0\x00', &(0x7f0000000bc0)=@known='trusted.overlay.redirect\x00')
---

end of program
----- executor 0 receive testcase
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
executor 1: prog_data_offset 1560, prog_size 8
executor 3: prog_data_offset 1576, prog_size 5088
remove dir: /root/glusterfs-client/dfs-0-0
remove dir time 28
-----finish removing dir
receive_execute: 8, 65
receive_execute: 9, 66
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-1 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-1
receive_execute: 11, 65
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
receive_execute: 16, 70
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1382, flag collect 0
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 7948, flag collect 0
----- executor 0 signal number : 1539
----- executor 0 executes write_coverage_signal cov->size 3106, flag collect 0
----- executor 0 signal number : 477
executor 0 server cover_cnt 3 output_pos_value 2481
-----executor 0 collect shmids 64
----- directly resend shmid 64
-----executor 0 collect shmids 65
----- directly resend shmid 65
-----executor 0 collect shmids 66
----- directly resend shmid 66
-----executor 0 collect shmids 67
----- directly resend shmid 67
-----executor 0 collect shmids 68
----- directly resend shmid 68
-----executor 0 collect shmids 69
----- directly resend shmid 69
-----executor 0 collect shmids 70
----- directly resend shmid 70
-----executor 0 collect shmids 71
----- directly resend shmid 71
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 51, 0, 1
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 10112, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 10112, flag collect 0
----- executor 3 signal number : 1587
----- completed 2
execute_call 0, 65, 0, 1
execute_one loop: 0, 0, 67
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3426, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 3426, flag collect 0
----- executor 3 signal number : 560
----- completed 4
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 1485, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 1485, flag collect 0
----- executor 3 signal number : 195
----- completed 7
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2749, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 2749, flag collect 0
----- executor 3 signal number : 3
----- completed 9
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 1263, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 1263, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_call 0, 15, 0, 0
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2567, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 2567, flag collect 0
----- executor 3 signal number : 212
----- completed 16
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 139, 0, 0
execute_one loop: 0, 0, 139
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==416==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2955, 0, 0
execute_one loop: 0, 0, 2955
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
executor 0, execute_one inner time: 1, 3151, 0
execute_one time: 1, 3152
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2956, 0, 0
execute_one loop: 0, 0, 2956
cover_reset in execute_call
----- executor 3 write_call_output, size 10648, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 10648, flag collect 0
----- executor 3 signal number : 304
----- completed 21
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 4262, pid 434, write pid:434
----- executor 3 executes write_coverage_signal cov->size 4262, flag collect 0
----- executor 3 signal number : 137
----- completed 22
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
Node-0:/root/daemon-log.560
executor 3, execute_one inner time: 1, 3182, 7
execute_one time: 2, 3190
2023/03/31 10:53:05 for select break: 1
2023/03/31 10:53:05 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 696, flag collect 0
executor 0 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 696, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 signal number : 330
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 330
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 552
----- executor 1 signal number : 591
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 2916
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4327, flag collect 0
----- executor 1 signal number : 383
----- executor 1 executes write_coverage_signal cov->size 30474, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 423
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 97
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 221
----- executor 2 signal number : 2740
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 1 signal number : 2539
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 2772, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 67, flag collect 0
----- executor 1 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 877, flag collect 0
----- executor 1 signal number : 145
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1136, flag collect 0
----- executor 1 signal number : 242
----- executor 1 executes write_coverage_signal cov->size 5734, flag collect 0
----- executor 0 signal number : 370
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 557
----- executor 0 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1688
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 795
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
time breakdown 3: 86, 3196, 0
before receive testcase: 0 0
----- executor 1 signal number : 2862
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 2545
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 67, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 877, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 142
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3130, flag collect 0
executor 1 server cover_cnt 17 output_pos_value 12766
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 279
----- executor 2 executes write_coverage_signal cov->size 3715, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 311
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 99
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 1595
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:05 for select break: 1
2023/03/31 10:53:05 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1639
----- executor 0 executes write_coverage_signal cov->size 1244, flag collect 0
----- executor 2 signal number : 2809
----- executor 0 signal number : 113
----- executor 0 executes write_coverage_signal cov->size 1382, flag collect 0
executor 2 server cover_cnt 16 output_pos_value 12224
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 7948, flag collect 0
----- executor 0 signal number : 140
----- executor 0 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 0 signal number : 36
----- executor 0 executes write_coverage_signal cov->size 3106, flag collect 0
----- executor 0 signal number : 46
executor 0 server cover_cnt 42 output_pos_value 5980
time breakdown 1: 75, 3208, 0
before receive testcase: 0 0
2023/03/31 10:53:05 for select break: 1
2023/03/31 10:53:05 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:05 for select break: 1
2023/03/31 10:53:05 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:05 wg wait finish
2023/03/31 10:53:05 ------ all executors finish execution
2023/03/31 10:53:05 exec time: 3280
2023/03/31 10:53:05 ----- PS len: 4
2023/03/31 10:53:05 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 [SERVER] executor 1 has 17 replies
2023/03/31 10:53:05 fuzzer receive 1587 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 330 signal and 0 cover from userspace component
2023/03/31 10:53:05 fuzzer receive 560 signal and 0 cover from executor 3
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 [SERVER] executor 2 has 16 replies
2023/03/31 10:53:05 [SERVER] executor 0 has 42 replies
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 1539 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 477 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 330 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 2916 signal and 0 cover from userspace component
2023/03/31 10:53:05 fuzzer receive 195 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 3 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 383 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 423 signal and 0 cover from userspace component
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 212 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 2740 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 795 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 552 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 2545 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 97 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 142 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 279 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 311 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 1595 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 2 receive 2809 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 370 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 fuzzer receive 304 signal and 0 cover from executor 3
2023/03/31 10:53:05 fuzzer receive 137 signal and 0 cover from executor 3
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 99 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 1639 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 2539 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 113 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 140 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 145 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 242 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 557 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 1688 signal and 0 cover from userspace component
2023/03/31 10:53:05 ------- fuzzer executor 1 receive 2862 signal and 0 cover from userspace component
time breakdown 0: 76, 3214, 0
before receive testcase: 0 1
time breakdown 2: 73, 3214, 0
before receive testcase: 0 0
Node-1:/root/daemon-log.427
Node-2:/root/daemon-log.428
2023/03/31 10:53:05 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:05 ----- no new client coverage: false, true
2023/03/31 10:53:05 mutate testcase with failures
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- mutateArg()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- mutateArg()
2023/03/31 10:53:05 ----- mutateFailPos()
2023/03/31 10:53:05 insert call 11 at pos 12
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- insertCall()
2023/03/31 10:53:05 ----- mutateArg()
2023/03/31 10:53:05 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:05 disable threaded and collide
2023/03/31 10:53:05 prog length: 6
2023/03/31 10:53:05 prog length: 22
2023/03/31 10:53:05 HasCrashFail:true HasNetFail:false
10:53:05 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$security_smack_transmute(&(0x7f0000000000)='\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x3)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x400280, 0x62)
symlink(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000140)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0xffffffffffffffff)
unlink(&(0x7f00000001c0)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000200)='./file0/file0\x00', &(0x7f0000000240)='security.SMACK64IPOUT\x00', &(0x7f0000000580)=ANY=[@ANYBLOB="5452dadc9ce34d168fef9e055a56e9f1"], 0x5, 0x0)
faccessat(r0, &(0x7f00000002c0)='./file0\x00', 0x91)
r1 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x400400, 0x8)
chdir(&(0x7f0000000340)='./file0\x00')
setxattr$trusted_overlay_origin(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400), 0x2, 0x2)
faccessat(r1, &(0x7f0000000440)='./file0\x00', 0x74)
syz_failure_sync(0x1, 0x3)
rename(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)='./file0\x00')
truncate(&(0x7f0000000500)='./file0\x00', 0x7)
rmdir(&(0x7f0000000540)='./file1\x00')
lsetxattr$security_evm(&(0x7f0000000900)='./file0/file0\x00', &(0x7f00000005c0), &(0x7f0000000600)=@sha1={0x1, "1a8a3cd1296f449d4dccf75d0e3e0ded3adcfea2"}, 0x15, 0x1)
setxattr$trusted_overlay_redirect(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680), &(0x7f00000006c0)='./file0\x00', 0x8, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000700))
lremovexattr(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)=@random={'user.', '}($-@[x\'#-\xc1\'![%\x00'})
setxattr$incfs_size(&(0x7f00000007c0)='.\x00', &(0x7f0000000800), &(0x7f0000000840)=0x5, 0x8, 0x1)
setxattr$system_posix_acl(&(0x7f0000000880)='./file0\x00', &(0x7f00000008c0)='system.posix_acl_default\x00', &(0x7f0000000ac0)={{}, {0x1, 0x5}, [{0x2, 0x6}, {0x2, 0x2, 0xee01}, {0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x4, 0xee00}, {0x2, 0x1, 0xee00}, {}], {0x4, 0x7}, [{0x8, 0x1}], {0x10, 0x2}, {0x20, 0x2}}, 0x5c, 0x2)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5296
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-1
remove dir time 39
-----finish removing dir
receive_execute: 15, 83
receive_execute: 15, 83
receive_execute: 20, 83
mkdir time 43
executor 3 create dir /root/glusterfs-client/dfs-0-2 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-2
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 2
receive_execute: 28, 89
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 8801, flag collect 0
----- executor 0 signal number : 939
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 4 output_pos_value 968
-----executor 0 collect shmids 0
----- directly resend shmid 0
execute_call 0, 42, 0, 0
execute_one loop: 0, 0, 42
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 42, 0, 1
execute_one loop: 0, 0, 43
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 35
----- directly resend shmid 35
-----executor 0 collect shmids 36
----- directly resend shmid 36
-----executor 0 collect shmids 37
----- directly resend shmid 37
-----executor 0 collect shmids 38
----- directly resend shmid 38
-----executor 0 collect shmids 39
----- directly resend shmid 39
-----executor 0 collect shmids 40
----- directly resend shmid 40
-----executor 0 collect shmids 41
----- directly resend shmid 41
-----executor 0 collect shmids 42
----- directly resend shmid 42
----- executor 3 write_call_output, size 8554, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 8554, flag collect 0
----- executor 3 signal number : 1470
----- completed 4
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 4566, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 4566, flag collect 0
----- executor 3 signal number : 614
----- completed 5
execute_call 0, 15, 0, 2
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 2549, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 2549, flag collect 0
----- executor 3 signal number : 136
----- completed 6
execute_call 0, 16, 0, 1
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 6658, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6658, flag collect 0
----- executor 3 signal number : 6
----- completed 7
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5728, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5728, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 79, 0, 0
execute_one loop: 0, 0, 79
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==560==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
==428==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==427==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2780, 0, 0
execute_one loop: 0, 0, 2780
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2910, 0
execute_one time: 1, 2911
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 2781, 0, 1
execute_one loop: 0, 0, 2782
cover_reset in execute_call
----- executor 3 write_call_output, size 8630, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 8630, flag collect 0
----- executor 3 signal number : 210
----- completed 14
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 16
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 2
----- completed 17
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 18
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 20
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 2766, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 2766, flag collect 0
----- executor 3 signal number : 194
----- completed 21
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 6656, pid 435, write pid:435
----- executor 3 executes write_coverage_signal cov->size 6656, flag collect 0
----- executor 3 signal number : 7
----- completed 22
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 1, 2956, 0
execute_one time: 4, 2957
2023/03/31 10:53:08 for select break: 1
2023/03/31 10:53:08 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 19118, flag collect 0
----- executor 2 signal number : 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 0 signal number : 546
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 19119, flag collect 0
----- executor 1 signal number : 2100
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 6698, flag collect 0
----- executor 1 signal number : 289
----- executor 1 executes write_coverage_signal cov->size 19413, flag collect 0
----- executor 0 signal number : 59
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 221
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 2100
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1870, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 23573, flag collect 0
----- executor 1 signal number : 2913
----- executor 1 executes write_coverage_signal cov->size 696, flag collect 0
----- executor 1 signal number : 187
----- executor 0 signal number : 2342
----- executor 0 executes write_coverage_signal cov->size 9272, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 117, 2964, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1526, flag collect 0
----- executor 1 signal number : 312
----- executor 1 executes write_coverage_signal cov->size 3145, flag collect 0
----- executor 1 signal number : 425
----- executor 1 executes write_coverage_signal cov->size 14423, flag collect 0
----- executor 0 signal number : 182
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1102, flag collect 0
----- executor 0 signal number : 161
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2506, flag collect 0
----- executor 1 signal number : 1036
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 281
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 467
executor 0 server cover_cnt 45 output_pos_value 5382
----- executor 2 signal number : 3302
----- executor 2 executes write_coverage_signal cov->size 696, flag collect 0
----- executor 1 signal number : 731
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 185
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3543, flag collect 0
----- executor 2 signal number : 435
----- executor 2 executes write_coverage_signal cov->size 1153, flag collect 0
----- executor 2 signal number : 127
----- executor 2 executes write_coverage_signal cov->size 2836, flag collect 0
----- executor 1 signal number : 1516
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 433
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 996
----- executor 2 signal number : 1095
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 15 output_pos_value 10566
2023/03/31 10:53:08 for select break: 1
2023/03/31 10:53:08 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 98, 2975, 0
before receive testcase: 0 0
----- executor 2 signal number : 1019
executor 2 server cover_cnt 14 output_pos_value 9042
2023/03/31 10:53:08 for select break: 1
2023/03/31 10:53:08 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:53:08 for select break: 1
2023/03/31 10:53:08 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:08 wg wait finish
2023/03/31 10:53:08 ------ all executors finish execution
2023/03/31 10:53:08 exec time: 3061
2023/03/31 10:53:08 ----- PS len: 4
2023/03/31 10:53:08 [SERVER] executor 0 has 45 replies
2023/03/31 10:53:08 [SERVER] executor 1 has 15 replies
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 939 signal and 0 cover from userspace component
2023/03/31 10:53:08 [SERVER] executor 2 has 14 replies
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:08 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 98, 2979, 0
2023/03/31 10:53:08 fuzzer receive 1470 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 614 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 2100 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 546 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 59 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 289 signal and 0 cover from userspace component
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 210 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 194 signal and 0 cover from executor 3
2023/03/31 10:53:08 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 2100 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 3302 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 185 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 435 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 127 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 433 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 1095 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 2 receive 1019 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 2913 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 187 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 312 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 425 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 1036 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 731 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 1516 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 1 receive 996 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 2342 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 182 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 161 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 281 signal and 0 cover from userspace component
2023/03/31 10:53:08 ------- fuzzer executor 0 receive 467 signal and 0 cover from userspace component
time breakdown 1: 103, 2977, 0
before receive testcase: 0 0
2023/03/31 10:53:08 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:08 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/31 10:53:08 mutate testcase with failures
2023/03/31 10:53:08 ----- insertCall()
2023/03/31 10:53:08 ----- insertCall()
2023/03/31 10:53:08 ----- insertCall()
2023/03/31 10:53:08 ----- insertCall()
2023/03/31 10:53:08 ----- mutateArg()
2023/03/31 10:53:08 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:08 disable threaded and collide
2023/03/31 10:53:08 prog length: 6
2023/03/31 10:53:08 prog length: 22
2023/03/31 10:53:08 HasCrashFail:true HasNetFail:false
10:53:08 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', ']-('}, &(0x7f00000000c0)=""/59, 0x3b)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000100)={'#! ', './file0', [{}, {0x20, '!-},(#]([@{('}, {0x20, 'os2.'}, {}, {0x20, 'os2.'}], 0xa, "a8056403b530cc5ad0b5ade1f1c3ca9fe4a27f4a3faffff2410286e05c63ce282b433a4c04f498d0d6fbb18a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1"}, 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)={0x0, 0xfb, 0xad, 0x1, 0x1f, "4157a50ac27c34a9839eb4785a41f4d8", "c9af46960cdba287326efe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce9b0474e2d48dff3c48fb278ff2a4f64d6886b5e5211e96ed25c7a717e917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac61e3c2842a35f02865b232d846ec0c19d56c9142ac17adddcfa0067755f9d42d29d721"}, 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "669f9a"}, 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x16)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file1\x00', &(0x7f0000001900), &(0x7f0000001940), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file0/file0\x00', 0xffffffffffffffff, &(0x7f0000001b80)='./file1\x00', 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5456
remove dir: /root/glusterfs-client/dfs-0-2
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 22
-----finish removing dir
receive_execute: 4, 54
receive_execute: 10, 53
receive_execute: 7, 54
mkdir time 30
executor 3 create dir /root/glusterfs-client/dfs-0-3 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-3
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 15, 58
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 1 write_server_output
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- executor 1 executes write_coverage_signal cov->size 2767, flag collect 0
output_pos: 1, output_pos_value 1
----- executor 1 signal number : 456
----- executor 1 executes write_coverage_signal cov->size 4685, flag collect 0
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 6, 2
----- executor 1 signal number : 1234
----- executor 1 executes write_coverage_signal cov->size 6390, flag collect 0
----- executor 1 signal number : 708
----- executor 1 executes write_coverage_signal cov->size 10955, flag collect 0
----- executor 1 signal number : 777
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 5 output_pos_value 3191
Node-0:/root/daemon-log.613
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 6
----- directly resend shmid 6
-----executor 1 collect shmids 32
----- directly resend shmid 32
-----executor 1 collect shmids 33
----- directly resend shmid 33
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 74, 0, 1
execute_one loop: 0, 0, 75
cover_reset in execute_call
execute_call 0, 73, 0, 0
execute_one loop: 0, 0, 73
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 5824, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 2
execute_call 0, 45, 0, 1
execute_one loop: 0, 0, 46
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 76, 0, 0
execute_one loop: 0, 0, 76
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 56
----- directly resend shmid 56
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
==613==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
Node-0:/root/daemon-log.649
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
==649==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.667
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 2954, 0, 0
execute_one loop: 0, 0, 2954
cover_reset in execute_call
execute_call 0, 2953, 0, 0
execute_one loop: 0, 0, 2953
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3107, 0
execute_one time: 2, 3107
----- executor 3 write_call_output, size 8888, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 8888, flag collect 0
----- executor 3 signal number : 381
----- completed 16
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 8372, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 8372, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8367, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 8367, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
2023/03/31 10:53:11 for select break: 1
2023/03/31 10:53:11 --------- executor 3 receive reply, reply.done 1
----- executor 3 write_call_output, size 8398, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 436, write pid:436
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3147, 0
execute_one time: 2, 3147
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1343, flag collect 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 767, flag collect 0
----- executor 0 signal number : 320
----- executor 0 executes write_coverage_signal cov->size 160, flag collect 0
----- executor 0 signal number : 91
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 550
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1555
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 73, 3150, 0
before receive testcase: 0 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2570
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 3780, flag collect 0
----- executor 0 signal number : 2154
----- executor 0 executes write_coverage_signal cov->size 80, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 0
----- executor 0 signal number : 450
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 1916, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 90
----- executor 2 executes write_coverage_signal cov->size 127, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 97
----- executor 1 executes write_coverage_signal cov->size 721, flag collect 0
----- executor 1 signal number : 230
----- executor 1 executes write_coverage_signal cov->size 651, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 337, flag collect 0
----- executor 1 signal number : 225
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 137, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1064
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 500
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 1 signal number : 26
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 587
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 754
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1460
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2222
----- executor 1 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 1 signal number : 130
----- executor 1 executes write_coverage_signal cov->size 2767, flag collect 0
----- executor 1 signal number : 33
----- executor 1 executes write_coverage_signal cov->size 4685, flag collect 0
----- executor 1 signal number : 156
----- executor 1 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 2 signal number : 1619
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 44
----- executor 1 executes write_coverage_signal cov->size 6390, flag collect 0
----- executor 1 signal number : 115
----- executor 1 executes write_coverage_signal cov->size 10955, flag collect 0
----- executor 0 signal number : 1264
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 218
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 0
executor 1 server cover_cnt 46 output_pos_value 7877
----- executor 0 signal number : 2527
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 175, flag collect 0
----- executor 0 signal number : 14
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 674, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 690, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 0 signal number : 160
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 0 signal number : 32
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 20
----- executor 0 executes write_coverage_signal cov->size 542, flag collect 0
----- executor 0 signal number : 48
----- executor 2 signal number : 1249
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 238, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 1682, flag collect 0
----- executor 2 signal number : 152
----- executor 2 executes write_coverage_signal cov->size 23161, flag collect 0
----- executor 2 signal number : 1680
----- executor 2 executes write_coverage_signal cov->size 13944, flag collect 0
----- executor 2 signal number : 362
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 0 signal number : 89
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 29606, flag collect 0
2023/03/31 10:53:11 for select break: 1
2023/03/31 10:53:11 --------- executor 1 receive reply, reply.done 1
Node-1:/root/daemon-log.490
time breakdown 1: 61, 3162, 0
before receive testcase: 0 0
----- executor 2 signal number : 1737
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2119
----- executor 0 executes write_coverage_signal cov->size 15719, flag collect 0
----- executor 2 signal number : 975
----- executor 2 executes write_coverage_signal cov->size 20314, flag collect 0
----- executor 2 signal number : 1156
----- executor 2 executes write_coverage_signal cov->size 20775, flag collect 0
----- executor 0 signal number : 515
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 780
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 520
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1540
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1938
----- executor 0 executes write_coverage_signal cov->size 29862, flag collect 0
----- executor 2 signal number : 646
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1851
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1542
executor 2 server cover_cnt 26 output_pos_value 19283
----- executor 0 signal number : 1598
----- executor 0 executes write_coverage_signal cov->size 25506, flag collect 0
----- executor 0 signal number : 1171
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1060
2023/03/31 10:53:11 for select break: 1
2023/03/31 10:53:11 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 38 output_pos_value 21803
time breakdown 2: 58, 3170, 0
before receive testcase: 0 0
2023/03/31 10:53:11 for select break: 1
2023/03/31 10:53:11 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:11 wg wait finish
2023/03/31 10:53:11 ------ all executors finish execution
2023/03/31 10:53:11 exec time: 3226
2023/03/31 10:53:11 ----- PS len: 4
2023/03/31 10:53:11 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:11 [SERVER] executor 0 has 38 replies
2023/03/31 10:53:11 [SERVER] executor 1 has 46 replies
2023/03/31 10:53:11 [SERVER] executor 2 has 26 replies
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 2570 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 90 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1064 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 754 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1619 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1249 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 152 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 456 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1680 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 362 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1737 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 975 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 1234 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1156 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 780 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1540 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 646 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 708 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 777 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 2 receive 1542 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 320 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 91 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1555 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 2154 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 450 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 550 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 97 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 230 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 225 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 500 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 2222 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 130 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 33 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 381 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 156 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 115 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 218 signal and 0 cover from userspace component
2023/03/31 10:53:11 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:11 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 587 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1460 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1264 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 2527 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 160 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 32 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 20 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 48 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 89 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 2119 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 515 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 520 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1938 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1851 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1598 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1171 signal and 0 cover from userspace component
2023/03/31 10:53:11 ------- fuzzer executor 0 receive 1060 signal and 0 cover from userspace component
2023/03/31 10:53:11 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:11 ----- no new client coverage: false, true
time breakdown 0: 63, 3173, 0
before receive testcase: 0 0
2023/03/31 10:53:11 mutate testcase with failures
2023/03/31 10:53:11 ----- insertCall()
2023/03/31 10:53:11 ----- insertCall()
2023/03/31 10:53:11 ----- insertCall()
2023/03/31 10:53:11 ----- insertCall()
2023/03/31 10:53:11 ----- insertCall()
2023/03/31 10:53:11 ----- mutateArg()
2023/03/31 10:53:11 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:11 disable threaded and collide
2023/03/31 10:53:11 prog length: 6
2023/03/31 10:53:11 prog length: 22
2023/03/31 10:53:11 HasCrashFail:true HasNetFail:false
10:53:11 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='u:object_r:app_data_file:s0:c512,c768\x00', 0x26, 0x2)
chdir(&(0x7f00000000c0)='./file0\x00')
rmdir(&(0x7f0000000100)='./file0\x00')
chdir(&(0x7f0000000140)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0xe9, 0x4, 0x80, "053120665ef05ff6368b650c5e608200", "f92e034868b78a4b5bf640b20cb73bbee2c2c97379fc66733b31c2ee842382b83d1ffbea9e16c54b6ae679e5257e29d65e988dc6846d4417fd52af8df9e7a7337bb7923c115a97ef005da7298393fa0bed47a21dfe94439ac4353b5c4d693df11a8f6f0e77d8f7fe180c4d3a416b2904906b7ddd592b0e7efd7fccccd06ae9e244eb781f0c0c18e91c8a493c4a9afae5d57511cd7f07132c17e7371457b1db4f0aebafb8b4041615dfe7af059e2cdaa9cb678ae33b181f283017d7b1a0a0a05fa7eb301f1d0e041ef5e26285c76e9f62cf44ddfd"}, 0xe9, 0x1)
lsetxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=@random={'osx.', 'u:object_r:app_data_file:s0:c512,c768\x00'}, &(0x7f0000000380)='security.selinux\x00', 0x11, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)=ANY=[@ANYBLOB="00fb0e01255b3f26bdccb6569e7e3fc31aac76d6744e9e4a5506cc872087ba6235cb42045e4e1576d95883fa144e53aa6119c3bface808f017df5425b5f7efbb32889f85f0944bb14c3b01640539d8833000000000a782d9dca65c711c00221a12376041307939ef12d2cd829273a3c54e759d9359fafa3660c590c5810c52851c4ff545d159614e4800be88c1b5a059c31c4add028e7d4b574b45e4b47639723471c6f9a72f3e51dd9ebc10286d83c92a7e1ad04e2f286c38979f4245ba7b5a4b286251a9604f5b8640a28efab1b28a2a719f36d8a837bc3a7beb8f25f050a1408a319a8b3420d6b14c43a00e4a2d21ce492ebe02b8ce81f5e543e6f7087c282483fcd42aeb82d9820c3c296797"], 0x10e, 0x0)
setxattr$incfs_id(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)={'0000000000000000000000000000000', 0x30}, 0x20, 0x2)
stat(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f0000000780)=@v3={0x3000000, [{0x7, 0x1000}, {0x9, 0x7}], r0}, 0x18, 0x2)
syz_failure_sync(0x1, 0x3)
renameat(0xffffffffffffffff, &(0x7f00000007c0)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f0000000800)='./file0\x00')
setxattr$user(&(0x7f0000000840)='./file0/file0\x00', &(0x7f0000000880), &(0x7f00000008c0)='-*\xf2,\x00', 0x5, 0x3)
setxattr$incfs_id(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000940), &(0x7f0000000980)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
r1 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x521100, 0x10)
linkat(0xffffffffffffffff, &(0x7f00000009c0)='./file0/file0\x00', r1, &(0x7f0000000a40)='./file0/file0\x00', 0x400)
link(&(0x7f0000000a80)='./file0\x00', &(0x7f0000000ac0)='./file0\x00')
rmdir(&(0x7f0000000b00)='./file0/file0\x00')
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000b40), &(0x7f0000000b80)='./file0\x00', 0x8, 0x0)
lsetxattr$security_capability(&(0x7f0000000d00)='./file0/file0\x00', &(0x7f0000000c00), &(0x7f0000000bc0)=@v3={0x3000000, [{0xffff7fff, 0xc8}, {0x4, 0xb61a}], r0}, 0x18, 0x2)
link(&(0x7f0000000c80)='./file0/file0\x00', &(0x7f0000000cc0)='./file0/file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5752
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-3
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
opendir(/root/glusterfs-client/dfs-0-3) failedremove dir time 112
-----finish removing dir
receive_execute: 9, 141
receive_execute: 18, 140
receive_execute: 6, 140
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-4 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-4
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 24, 152
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2762, flag collect 0
----- executor 0 signal number : 456
----- executor 0 executes write_coverage_signal cov->size 16016, flag collect 0
----- executor 0 signal number : 2067
----- executor 0 executes write_coverage_signal cov->size 6237, flag collect 0
----- executor 0 signal number : 691
executor 0 server cover_cnt 3 output_pos_value 3224
-----executor 0 collect shmids 35
----- directly resend shmid 35
execute_call 0, 63, 0, 0
execute_one loop: 0, 0, 63
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 63, 0, 1
execute_one loop: 0, 0, 64
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 2
execute_call 0, 27, 0, 0
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4560, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4560, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4567, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4567, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4575, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4575, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4574, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4574, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 73, 0, 0
execute_one loop: 0, 0, 73
-----executor 1 collect shmids 58
----- directly resend shmid 58
-----executor 1 collect shmids 61
----- directly resend shmid 61
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
==667==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==490==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.524
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
==524==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.543
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 3042, 0, 0
execute_one loop: 0, 0, 3042
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 3042, 0, 0
execute_one loop: 0, 0, 3042
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3189, 0
execute_one time: 3, 3190
----- executor 3 write_call_output, size 8895, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 8895, flag collect 0
----- executor 3 signal number : 381
----- completed 14
execute_call 0, 8, 0, 2
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 7, 0, 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8392, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 8392, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8392, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 8392, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
Node-0:/root/daemon-log.691
----- executor 3 write_call_output, size 8392, pid 437, write pid:437
----- executor 3 executes write_coverage_signal cov->size 8392, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 0, 3230, 0
execute_one time: 2, 3231
2023/03/31 10:53:14 for select break: 1
2023/03/31 10:53:14 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 727, flag collect 0
----- executor 2 signal number : 318
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 1195, flag collect 0
----- executor 1 signal number : 366
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 617
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 signal number : 1221
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 545
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 472
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 2617
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 517, flag collect 0
----- executor 2 signal number : 99
----- executor 2 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2332
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 1 signal number : 4
----- executor 0 signal number : 97
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 221
----- executor 0 executes write_coverage_signal cov->size 153, flag collect 0
----- executor 0 signal number : 67
----- executor 0 executes write_coverage_signal cov->size 2783, flag collect 0
----- executor 0 signal number : 337
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2122, flag collect 0
----- executor 1 signal number : 295
----- executor 1 executes write_coverage_signal cov->size 4240, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 93
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1103
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 176, 3236, 0
before receive testcase: 0 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1469
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 674
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 510
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1984
----- executor 0 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 0 signal number : 133
----- executor 0 executes write_coverage_signal cov->size 2762, flag collect 0
----- executor 0 signal number : 34
----- executor 0 executes write_coverage_signal cov->size 16016, flag collect 0
----- executor 2 signal number : 1067
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1905
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1764
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 532, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1585, flag collect 0
----- executor 2 signal number : 146
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2332
----- executor 1 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 438, flag collect 0
----- executor 1 signal number : 17
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 674, flag collect 0
----- executor 1 signal number : 55
----- executor 1 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 1 signal number : 463
----- executor 1 executes write_coverage_signal cov->size 690, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1709
----- executor 2 executes write_coverage_signal cov->size 28980, flag collect 0
----- executor 1 signal number : 74
----- executor 1 executes write_coverage_signal cov->size 380, flag collect 0
----- executor 1 signal number : 27
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 543
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1940
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1645
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 320
----- executor 0 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 0 signal number : 51
----- executor 0 executes write_coverage_signal cov->size 6237, flag collect 0
----- executor 1 signal number : 841
----- executor 1 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 1 signal number : 135
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 106
executor 0 server cover_cnt 42 output_pos_value 7283
----- executor 2 signal number : 1177
----- executor 2 executes write_coverage_signal cov->size 501, flag collect 0
----- executor 1 signal number : 798
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 73
----- executor 2 executes write_coverage_signal cov->size 20400, flag collect 0
----- executor 2 signal number : 1021
----- executor 2 executes write_coverage_signal cov->size 24752, flag collect 0
----- executor 1 signal number : 2194
----- executor 1 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 1 signal number : 106
----- executor 1 executes write_coverage_signal cov->size 29611, flag collect 0
----- executor 2 signal number : 743
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1852
----- executor 1 executes write_coverage_signal cov->size 28158, flag collect 0
----- executor 2 signal number : 1505
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1602
----- executor 1 executes write_coverage_signal cov->size 24847, flag collect 0
----- executor 2 signal number : 604
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1150
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:14 for select break: 1
2023/03/31 10:53:14 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 967
----- executor 2 signal number : 1278
executor 2 server cover_cnt 26 output_pos_value 18821
executor 1 server cover_cnt 35 output_pos_value 23371
time breakdown 0: 147, 3261, 0
before receive testcase: 0 0
2023/03/31 10:53:14 for select break: 1
2023/03/31 10:53:14 for select break: 1
2023/03/31 10:53:14 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:14 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:53:14 wg wait finish
2023/03/31 10:53:14 ------ all executors finish execution
2023/03/31 10:53:14 exec time: 3406
2023/03/31 10:53:14 ----- PS len: 4
2023/03/31 10:53:14 [SERVER] executor 1 has 35 replies
time breakdown 2: 150, 3265, 0
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 366 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1221 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 472 signal and 0 cover from userspace component
2023/03/31 10:53:14 [SERVER] executor 0 has 42 replies
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 2332 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 295 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 93 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 456 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1469 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 510 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 2067 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 691 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 545 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1905 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 97 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 2332 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:14 [SERVER] executor 2 has 26 replies
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 318 signal and 0 cover from userspace component
2023/03/31 10:53:14 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 381 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 55 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 463 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 74 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 27 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 617 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1940 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 2617 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 841 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 135 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 798 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 99 signal and 0 cover from userspace component
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 2194 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 106 signal and 0 cover from userspace component
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1852 signal and 0 cover from userspace component
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1602 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 67 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 337 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1103 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 674 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 1150 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 1 receive 967 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1067 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1764 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 1984 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 146 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1709 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 133 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 34 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 320 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 51 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 0 receive 106 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 543 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1645 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1177 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 73 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1021 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 743 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1505 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 604 signal and 0 cover from userspace component
2023/03/31 10:53:14 ------- fuzzer executor 2 receive 1278 signal and 0 cover from userspace component
time breakdown 1: 158, 3265, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/31 10:53:14 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:14 ----- no new client coverage: false, true
2023/03/31 10:53:14 mutate testcase with failures
2023/03/31 10:53:14 ----- mutateArg()
2023/03/31 10:53:14 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:14 disable threaded and collide
2023/03/31 10:53:14 prog length: 6
2023/03/31 10:53:14 prog length: 22
2023/03/31 10:53:14 HasCrashFail:true HasNetFail:false
10:53:14 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='u:object_r:app_data_file:s0:c512,c768\x00', 0x26, 0x2)
chdir(&(0x7f00000000c0)='./file0\x00')
rmdir(&(0x7f0000000100)='./file0\x00')
chdir(&(0x7f0000000140)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0xe9, 0x4, 0x80, "053120665ef05ff6368b650c5e608200", "f92e034868b78a4b5bf640b20cb73bbee2c2c97379fc66733b31c2ee842382b83d1ffbea9e16c54b6ae679e5257e29d65e988dc6846d4417fd52af8df9e7a7337bb7923c115a97ef005da7298393fa0bed47a21dfe94439ac4353b5c4d693df11a8f6f0e77d8f7fe180c4d3a416b2904906b7ddd592b0e7efd7fccccd06ae9e244eb781f0c0c18e91c8a493c4a9afae5d57511cd7f07132c17e7371457b1db4f0aebafb8b4041615dfe7af059e2cdaa9cb678ae33b181f283017d7b1a0a0a05fa7eb301f1d0e041ef5e26285c76e9f62cf44ddfd"}, 0xe9, 0x1)
lsetxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=ANY=[@ANYBLOB="6f73782e753a4f626a6563745f723a6170705f646174615fde62edeb3a73303a633531322c6337363800"], &(0x7f0000000380)='security.selinux\x00', 0x11, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)={0x0, 0xfb, 0x10e, 0x1, 0x25, "5b3f26bdccb6569e7e3fc31aac76d674", "4e9e4a5506cc872087ba6235cb42045e4e1576d95883fa144e53aa6119c3bface808f017df5425b5f7efbb32889f85f0944bb14c3b01640539d88330be63102da782d9dca65c711c00221a12376041307939ef12d2cd829273a3c54e759d9359fafa3660c590c5810c52851c4ff545d159614e4800be88c1b5a059c31c4add028e7d4b574b45e4b47639723471c6f9a72f3e51dd9ebc10286d83c92a7e1ad04e2f286c38979f4245ba7b5a4b286251a9604f5b8640a28efab1b28a2a719f36d8a837bc3a7beb8f25f050a1408a319a8b3420d6b14c43a00e4a2d21ce492ebe02b8ce81f5e543e6f7087c282483fcd42aeb82d9820c3c296797"}, 0x10e, 0x0)
setxattr$incfs_id(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)={'0000000000000000000000000000000', 0x30}, 0x20, 0x2)
stat(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f0000000780)=@v3={0x3000000, [{0x7, 0x1000}, {0x9, 0x7}], r0}, 0x18, 0x2)
renameat(0xffffffffffffffff, &(0x7f00000007c0)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f0000000800)='./file0\x00')
setxattr$user(&(0x7f0000000840)='./file1\x00', &(0x7f0000000d00), &(0x7f00000008c0)='-*\xf2,\x00', 0x5, 0x1)
setxattr$incfs_id(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000940), &(0x7f0000000980)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
r1 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x521100, 0x10)
linkat(0xffffffffffffffff, &(0x7f00000009c0)='./file0/file0\x00', r1, &(0x7f0000000a40)='./file0/file0\x00', 0x400)
syz_failure_sync(0x1, 0x3)
link(&(0x7f0000000a80)='./file0\x00', &(0x7f0000000ac0)='./file0\x00')
rmdir(&(0x7f0000000b00)='./file0/file0\x00')
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000b40), &(0x7f0000000b80)='./file0\x00', 0x8, 0x0)
lsetxattr$security_capability(&(0x7f0000000bc0)='./file0\x00', &(0x7f0000000c00), &(0x7f0000000c40)=@v2={0x2000000, [{0x5, 0x3ff}, {0x90000000}]}, 0x14, 0x2)
link(&(0x7f0000000c80)='./file0/file0\x00', &(0x7f0000000cc0)='./file0/file0\x00')
---

end of program
----- executor 0 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5872
remove dir: /root/glusterfs-client/dfs-0-4
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
opendir(/root/glusterfs-client/dfs-0-4) failedremove dir time 135
-----finish removing dir
==543==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
receive_execute: 16, 168
receive_execute: 13, 168
receive_execute: 12, 168
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-5 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-5
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 30, 178
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 9, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 10
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3652, flag collect 0
----- executor 0 signal number : 844
----- executor 0 executes write_coverage_signal cov->size 83, flag collect 0
----- executor 0 signal number : 60
----- executor 0 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 0 signal number : 182
executor 0 server cover_cnt 3 output_pos_value 1096
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 34
----- directly resend shmid 34
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
-----executor 0 collect shmids 32
----- directly resend shmid 32
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 2
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 13
----- completed 3
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 56, 0, 0
execute_one loop: 0, 0, 56
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
==691==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 2740, 0, 0
execute_one loop: 0, 0, 2740
cover_reset in execute_call
execute_call 0, 2739, 0, 0
execute_one loop: 0, 0, 2739
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2856, 0
execute_one time: 2, 2856
----- executor 3 write_call_output, size 8634, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 8634, flag collect 0
----- executor 3 signal number : 325
----- completed 18
execute_call 0, 23, 0, 0
execute_one loop: 0, 0, 23
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 438, write pid:438
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 1, 2881, 0
execute_one time: 2, 2882
2023/03/31 10:53:17 for select break: 1
2023/03/31 10:53:17 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 208, 2885, 0
executor 1 write_server_output
executor 2 write_server_output
executor 0 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 67, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 signal number : 52
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 0 signal number : 530
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8456, flag collect 0
----- executor 2 signal number : 74
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 1835
----- executor 2 executes write_coverage_signal cov->size 19116, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 16228, flag collect 0
----- executor 0 signal number : 58
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 292
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 220
----- executor 0 executes write_coverage_signal cov->size 43, flag collect 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2576, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 509
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 2 signal number : 2056
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3907, flag collect 0
----- executor 2 signal number : 277
----- executor 2 executes write_coverage_signal cov->size 14382, flag collect 0
----- executor 2 signal number : 14
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 23
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 2007
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 731, flag collect 0
----- executor 1 signal number : 165
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 1
----- executor 2 signal number : 1825
----- executor 1 executes write_coverage_signal cov->size 2894, flag collect 0
----- executor 0 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 2 signal number : 13
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1017, flag collect 0
----- executor 2 signal number : 190
----- executor 0 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 8945, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 689
----- executor 2 executes write_coverage_signal cov->size 3356, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 216
----- executor 2 executes write_coverage_signal cov->size 4813, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 711
----- executor 2 executes write_coverage_signal cov->size 4322, flag collect 0
----- executor 2 signal number : 55
----- executor 2 executes write_coverage_signal cov->size 11344, flag collect 0
----- executor 1 signal number : 347
----- executor 0 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1724, flag collect 0
----- executor 1 signal number : 198
----- executor 2 signal number : 451
----- executor 1 executes write_coverage_signal cov->size 3802, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 554
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 497
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 433
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
executor 1 server cover_cnt 15 output_pos_value 5965
----- executor 2 signal number : 590
----- executor 0 signal number : 0
executor 2 server cover_cnt 17 output_pos_value 7714
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
2023/03/31 10:53:17 for select break: 1
----- executor 0 signal number : 0
2023/03/31 10:53:17 --------- executor 1 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
2023/03/31 10:53:17 for select break: 1
2023/03/31 10:53:17 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 181, 2906, 0
before receive testcase: 0 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1964
----- executor 0 executes write_coverage_signal cov->size 1111, flag collect 0
----- executor 0 signal number : 172
----- executor 0 executes write_coverage_signal cov->size 415, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 39 output_pos_value 4735
time breakdown 1: 181, 2905, 0
before receive testcase: 0 0
2023/03/31 10:53:17 for select break: 1
2023/03/31 10:53:17 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:17 wg wait finish
2023/03/31 10:53:17 ------ all executors finish execution
2023/03/31 10:53:17 exec time: 3078
2023/03/31 10:53:17 ----- PS len: 4
2023/03/31 10:53:17 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 [SERVER] executor 1 has 15 replies
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 52 signal and 0 cover from userspace component
2023/03/31 10:53:17 [SERVER] executor 0 has 39 replies
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 844 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 1835 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 60 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 182 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 530 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 58 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 220 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 292 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 509 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 23 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 2007 signal and 0 cover from userspace component
2023/03/31 10:53:17 [SERVER] executor 2 has 17 replies
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 165 signal and 0 cover from userspace component
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 325 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 347 signal and 0 cover from userspace component
2023/03/31 10:53:17 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 198 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 554 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 1 receive 433 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 74 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 2056 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 1825 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 190 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 689 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 216 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 711 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 55 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 451 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 497 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 2 receive 590 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 1964 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 172 signal and 0 cover from userspace component
2023/03/31 10:53:17 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/31 10:53:17 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:17 ----- no new client coverage: false, true
time breakdown 0: 184, 2910, 0
before receive testcase: 0 0
2023/03/31 10:53:17 mutate testcase with failures
2023/03/31 10:53:17 ----- insertCall()
2023/03/31 10:53:17 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:17 disable threaded and collide
2023/03/31 10:53:17 prog length: 6
2023/03/31 10:53:17 prog length: 22
2023/03/31 10:53:17 HasCrashFail:true HasNetFail:false
10:53:17 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
syz_failure_sync(0x0, 0x3)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', ']-('}, &(0x7f00000000c0)=""/59, 0x3b)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001bc0)=ANY=[@ANYBLOB="2321202e2f66696c65302020212d7d2c28235d285b407b28206f73322e20206f73322e0aa8056403b39dcc5ad0b5ade1f1c3ca9fe4a27f4a3faffff2410286e05c63ce282b433a4c04f498d0d6fbb18a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1ab95d369c722258d6e53f1addaaae787deea9f2d9e5f200385e0f682ef1a88d10e696de225f20a5891af9d31d9cfc64e15cbce5e1bf358d3722c22e45c11760eb422e0afbda9877cef11e3d39fcdb5cb2570a637cfca94085d1f8ea88221303511797a1251be8aa01d6318a8e2670f4306c5d138b25c86584089357c397ba0373431071e7923ec09432419811b2e5d7bb063ddd9ccb163f6269a37ded1f3acb28e85f086f853d526185b3cf64296103ac9ed84d1e453273140bdaf2903bc4db39a26"], 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)=ANY=[@ANYBLOB="00fbad011f4157a50ac27c34a9839eb4785a41f4d8d9af4696a287326ffe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce9b0474e2d48dff3c48fb278ff2a4f64d6886b5e5211e96ed25c7a717e917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b67f97cf5ac61e3c2842a35f02865b23280adddcfa0067755f9d42d29d72100"/173], 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=ANY=[@ANYBLOB='|'], 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file1\x00', &(0x7f0000001900), &(0x7f0000001940), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file0/file0\x00', 0xffffffffffffffff, &(0x7f0000001b80)='./file1\x00', 0x1000)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4976
remove dir: /root/glusterfs-client/dfs-0-5
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 29
-----finish removing dir
mkdir time 45
executor 3 create dir /root/glusterfs-client/dfs-0-6 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-6
receive_execute: 10, 74
receive_execute: 11, 74
receive_execute: 8, 73
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 21, 81
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8944, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8944, flag collect 0
----- executor 3 signal number : 1581
----- completed 1
execute_call 0, 17, 0, 1
execute_one loop: 0, 0, 18
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2055, flag collect 0
----- executor 1 signal number : 456
----- executor 1 executes write_coverage_signal cov->size 3475, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 23774, flag collect 0
----- executor 1 signal number : 2030
----- executor 1 executes write_coverage_signal cov->size 10250, flag collect 0
----- executor 1 signal number : 907
----- executor 1 executes write_coverage_signal cov->size 5476, flag collect 0
----- executor 1 signal number : 26
----- executor 1 executes write_coverage_signal cov->size 8554, flag collect 0
----- executor 1 signal number : 947
executor 1 server cover_cnt 6 output_pos_value 4387
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
Terminated
-----executor 1 collect shmids 4
----- directly resend shmid 4
execute_call 0, 67, 0, 0
execute_one loop: 0, 0, 67
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
cover_reset in execute_call
----- executor 3 write_call_output, size 3662, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 3662, flag collect 0
----- executor 3 signal number : 445
----- completed 3
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
Node-0:/root/daemon-log.751
----- executor 3 write_call_output, size 2757, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 2757, flag collect 0
----- executor 3 signal number : 328
----- completed 6
execute_call 0, 35, 0, 0
execute_one loop: 0, 0, 35
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 42, 0, 0
execute_one loop: 0, 0, 42
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
==751==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
Node-0:/root/daemon-log.786
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
==786==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.802
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2948, 0, 0
execute_one loop: 0, 0, 2948
cover_reset in execute_call
execute_call 0, 2948, 0, 0
execute_one loop: 0, 0, 2948
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3079, 0
execute_one time: 5, 3079
----- executor 3 write_call_output, size 8854, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8854, flag collect 0
----- executor 3 signal number : 183
----- completed 8
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 8362, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8362, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
Node-1:/root/daemon-log.570
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 439, write pid:439
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3178, 0
execute_one time: 2, 3178
time breakdown 3: 102, 3182, 0
2023/03/31 10:53:21 for select break: 1
2023/03/31 10:53:21 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
before receive testcase: 0 1
executor 1 write_server_output
----- executor 2 executes write_coverage_signal cov->size 1442, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 848, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 0 signal number : 320
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 319
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 554
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 620
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 89
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 1385
----- executor 1 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 4
----- executor 1 signal number : 221
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 156, flag collect 0
----- executor 1 signal number : 67
----- executor 1 executes write_coverage_signal cov->size 2837, flag collect 0
----- executor 1 signal number : 346
----- executor 2 signal number : 2835
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 1 signal number : 5
----- executor 2 signal number : 14
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 1 signal number : 26
----- executor 2 executes write_coverage_signal cov->size 1349, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 324
----- executor 1 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 984, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 2 signal number : 52
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 0
----- executor 1 signal number : 0
----- executor 2 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 2 signal number : 1119
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 2 signal number : 764
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 2702
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 0
----- executor 0 signal number : 437
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1439
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 69
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 934, flag collect 0
----- executor 0 signal number : 235
----- executor 2 signal number : 3304
----- executor 1 signal number : 1954
----- executor 1 executes write_coverage_signal cov->size 85, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 721, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 11
----- executor 2 signal number : 16
----- executor 0 signal number : 118
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 0 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 699, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 15
----- executor 1 signal number : 140
----- executor 1 executes write_coverage_signal cov->size 2055, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1790, flag collect 0
----- executor 1 signal number : 65
----- executor 1 executes write_coverage_signal cov->size 5563, flag collect 0
----- executor 2 signal number : 164
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 33
----- executor 1 executes write_coverage_signal cov->size 28668, flag collect 0
----- executor 0 signal number : 912
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1904
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 576
----- executor 1 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 1 signal number : 64
----- executor 0 signal number : 483
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 10996, flag collect 0
----- executor 1 signal number : 209
----- executor 1 executes write_coverage_signal cov->size 5476, flag collect 0
----- executor 1 signal number : 27
----- executor 1 executes write_coverage_signal cov->size 10339, flag collect 0
----- executor 2 signal number : 1116
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1451
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 343
executor 1 server cover_cnt 49 output_pos_value 9262
----- executor 2 signal number : 2113
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3013
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 441, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 2 signal number : 1034
----- executor 0 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 20587, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 0 signal number : 191
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:21 for select break: 1
2023/03/31 10:53:21 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1302
time breakdown 1: 85, 3203, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 20660, flag collect 0
----- executor 0 signal number : 31
----- executor 0 executes write_coverage_signal cov->size 542, flag collect 0
----- executor 0 signal number : 51
----- executor 2 signal number : 878
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1701
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2182
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1275
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 906
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2464
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2115
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1786
executor 2 server cover_cnt 27 output_pos_value 26625
----- executor 0 signal number : 304
----- executor 0 executes write_coverage_signal cov->size 30123, flag collect 0
2023/03/31 10:53:21 for select break: 1
2023/03/31 10:53:21 --------- executor 2 receive reply, reply.done 1
----- executor 0 signal number : 2018
----- executor 0 executes write_coverage_signal cov->size 25615, flag collect 0
----- executor 0 signal number : 1105
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 2: 84, 3210, 0
before receive testcase: 0 0
----- executor 0 signal number : 1639
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 800
executor 0 server cover_cnt 34 output_pos_value 23274
2023/03/31 10:53:21 for select break: 1
2023/03/31 10:53:21 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:21 wg wait finish
2023/03/31 10:53:21 ------ all executors finish execution
2023/03/31 10:53:21 exec time: 3304
2023/03/31 10:53:21 ----- PS len: 4
2023/03/31 10:53:21 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:21 [SERVER] executor 1 has 49 replies
2023/03/31 10:53:21 fuzzer receive 1581 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 445 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 456 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 328 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 183 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 2030 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 [SERVER] executor 0 has 34 replies
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 320 signal and 0 cover from userspace component
time breakdown 0: 81, 3230, 0
2023/03/31 10:53:21 [SERVER] executor 2 has 27 replies
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 319 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 2835 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 324 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 52 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1119 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 764 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1439 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 620 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 3304 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 164 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1904 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1116 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 1385 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 2113 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1034 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2702 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1302 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 878 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 437 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 69 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 235 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 118 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1701 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 912 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1275 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 483 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 1451 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 3013 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 2464 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 2 receive 1786 signal and 0 cover from userspace component
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 907 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 947 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 554 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 89 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 67 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 346 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 26 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 1954 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 140 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 65 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 33 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 576 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 64 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 209 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 27 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 191 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 1 receive 343 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 31 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 51 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2182 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 906 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2115 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 304 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 2018 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 1105 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 1639 signal and 0 cover from userspace component
2023/03/31 10:53:21 ------- fuzzer executor 0 receive 800 signal and 0 cover from userspace component
2023/03/31 10:53:21 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:21 ----- no new client coverage: false, true
2023/03/31 10:53:21 mutate testcase with failures
2023/03/31 10:53:21 ----- insertCall()
2023/03/31 10:53:21 ----- insertCall()
2023/03/31 10:53:21 ----- insertCall()
2023/03/31 10:53:21 ----- insertCall()
2023/03/31 10:53:21 ----- mutateArg()
2023/03/31 10:53:21 ----- insertCall()
2023/03/31 10:53:21 ----- insertCall()
2023/03/31 10:53:21 ----- mutateArg()
2023/03/31 10:53:21 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:21 disable threaded and collide
2023/03/31 10:53:21 prog length: 6
2023/03/31 10:53:21 prog length: 22
2023/03/31 10:53:21 HasCrashFail:true HasNetFail:false
10:53:21 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
r0 = open$dir(&(0x7f0000000000)='./file0\x00', 0x2040, 0x80)
r1 = openat(r0, &(0x7f00000002c0)='./file0\x00', 0x0, 0x310)
chmod(&(0x7f0000000080)='./file0\x00', 0x18)
readlink(&(0x7f0000000240)='./file0/file0\x00', &(0x7f0000000f80)=""/257, 0x3c)
truncate(&(0x7f0000000200)='./file0/file0\x00', 0xfffffffffffbfff8)
lsetxattr$security_evm(&(0x7f0000000180)='./file0\x00', &(0x7f0000000280), &(0x7f0000000d40)=ANY=[@ANYRESHEX], 0x80, 0x2)
readlinkat(r0, &(0x7f0000000340)='./file0\x00', &(0x7f0000000380)=""/224, 0xe0)
setxattr$incfs_id(&(0x7f0000000100)='./file0/file1\x00', &(0x7f00000004c0), &(0x7f0000000040)={'0000000000000000000000000000000', 0x2e}, 0x20, 0x7)
chmod(&(0x7f0000000540)='./file0\x00', 0x100)
chdir(&(0x7f0000000580)='./file0\x00')
readlinkat(r1, &(0x7f00000005c0)='./file0\x00', &(0x7f0000000600)=""/217, 0xd9)
setxattr$security_smack_transmute(&(0x7f0000000700)='./file0/file2\x00', &(0x7f0000000780), &(0x7f0000000c00), 0x4, 0x3)
lsetxattr$security_selinux(&(0x7f00000007c0)='./file0/file0\x00', &(0x7f0000000800), &(0x7f0000000840)='system_u:object_r:syslogd_var_lib_t:s0\x00', 0x27, 0x1)
setxattr$trusted_overlay_redirect(&(0x7f0000000880)='./file0/file0\x00', &(0x7f00000008c0), &(0x7f0000000900)='./file0\x00', 0x8, 0x0)
r2 = open(&(0x7f00000001c0)='./file0\x00', 0x40, 0x0)
setxattr$smack_xattr_label(&(0x7f0000000980)='./file0/file0\x00', &(0x7f00000009c0)='security.SMACK64\x00', &(0x7f0000000e80)=ANY=[@ANYBLOB='security.evo\x00\x00', @ANYRES64, @ANYBLOB="38c99c121660a7e165b8e79fdaa34b4f1e47dfdce0e2ab974e11f3bfb6caf94154f388c2390d76d1b7713573a1b748ca2f835a7c9333a5e40fb244a1cb29c767925f841dd9e50ea6e4d1ac906300000000495cabb0f5bee246a91e81453783e192735efac9b7e64ca22bac", @ANYRESHEX=r1, @ANYRESHEX=r2, @ANYRES64=r0, @ANYRES16, @ANYRES16=r1, @ANYRESOCT=0x0, @ANYRES64, @ANYRESDEC], 0xe, 0x0)
faccessat(r1, &(0x7f0000000a40)='./file0/file2\x00', 0x80)
lsetxattr(&(0x7f0000000a80)='./file0/file0\x00', &(0x7f0000000140)=ANY=[@ANYBLOB="5a7365722e0000a300"], &(0x7f0000000b00)='a\x00', 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
unlink(&(0x7f0000000b40)='./file0/file0\x00')
lremovexattr(&(0x7f0000000b80)='./file0\x00', &(0x7f0000000bc0)=@known='trusted.overlay.redirect\x00')
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4696
remove dir: /root/glusterfs-client/dfs-0-6
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
opendir(/root/glusterfs-client/dfs-0-6) failedremove dir time 100
-----finish removing dir
receive_execute: 35, 125
mkdir time 25
executor 3 create dir /root/glusterfs-client/dfs-0-7 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-7
receive_execute: 8, 125
receive_execute: 27, 125
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 49, 131
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 2694, flag collect 0
----- executor 0 signal number : 457
----- executor 0 executes write_coverage_signal cov->size 15991, flag collect 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
----- executor 0 signal number : 2049
----- executor 0 executes write_coverage_signal cov->size 6232, flag collect 0
output_pos: 1, output_pos_value 1
----- executor 0 signal number : 703
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 5
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 9, 3
executor 0 server cover_cnt 4 output_pos_value 3227
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
Terminated
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
-----executor 0 collect shmids 4
----- directly resend shmid 4
execute_call 0, 43, 0, 0
execute_one loop: 0, 0, 43
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 43, 0, 1
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 2
execute_call 0, 44, 0, 1
execute_one loop: 0, 0, 45
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 13
----- completed 4
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4572, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4572, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4575, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4575, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4575, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4575, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 4575, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4575, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4566, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4566, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 4559, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4559, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4556, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4556, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 4568, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4568, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 4574, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4574, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 7789, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 7789, flag collect 0
----- executor 3 signal number : 827
----- completed 17
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4581, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 4581, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 101, 0, 0
execute_one loop: 0, 0, 101
-----executor 1 collect shmids 53
----- directly resend shmid 53
-----executor 1 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
==802==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
==570==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.623
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
==623==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.604
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2953, 0, 0
execute_one loop: 0, 0, 2953
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3097, 0
execute_one time: 7, 3098
----- executor 3 write_call_output, size 0, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2954, 0, 0
execute_one loop: 0, 0, 2954
cover_reset in execute_call
----- executor 3 write_call_output, size 8865, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 8865, flag collect 0
----- executor 3 signal number : 333
----- completed 21
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
Node-0:/root/daemon-log.826
----- executor 3 write_call_output, size 8369, pid 441, write pid:441
----- executor 3 executes write_coverage_signal cov->size 8369, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
executor 3, execute_one inner time: 1, 3116, 0
execute_one time: 1, 3117
2023/03/31 10:53:24 for select break: 1
2023/03/31 10:53:24 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 128, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 774, flag collect 0
----- executor 2 signal number : 318
time breakdown 3: 180, 3121, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 29928, flag collect 0
----- executor 1 signal number : 54
----- executor 1 executes write_coverage_signal cov->size 71, flag collect 0
----- executor 1 signal number : 40
----- executor 0 signal number : 543
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 616
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2416
----- executor 2 executes write_coverage_signal cov->size 250, flag collect 0
----- executor 2 signal number : 85
----- executor 2 executes write_coverage_signal cov->size 1278, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1401
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 88
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 221
----- executor 0 executes write_coverage_signal cov->size 2772, flag collect 0
----- executor 1 signal number : 4
----- executor 2 signal number : 1515
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 376
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 284
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1387
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 0 signal number : 122
----- executor 0 executes write_coverage_signal cov->size 2694, flag collect 0
----- executor 0 signal number : 38
----- executor 0 executes write_coverage_signal cov->size 15991, flag collect 0
----- executor 1 signal number : 2293
----- executor 2 signal number : 1059
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 0 signal number : 261
----- executor 0 executes write_coverage_signal cov->size 804, flag collect 0
----- executor 0 signal number : 55
----- executor 0 executes write_coverage_signal cov->size 6232, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 1 signal number : 3
----- executor 0 signal number : 87
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 1
executor 0 server cover_cnt 44 output_pos_value 6575
----- executor 1 executes write_coverage_signal cov->size 1511, flag collect 0
----- executor 1 signal number : 348
----- executor 2 signal number : 1935
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1002, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1648, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 2996, flag collect 0
----- executor 2 signal number : 143
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1722
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:24 for select break: 1
2023/03/31 10:53:24 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 644
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1232
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1995
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 982
----- executor 2 signal number : 1191
----- executor 2 executes write_coverage_signal cov->size 501, flag collect 0
----- executor 2 signal number : 73
----- executor 2 executes write_coverage_signal cov->size 20690, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1097
----- executor 2 executes write_coverage_signal cov->size 25005, flag collect 0
----- executor 2 signal number : 820
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1613
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 559
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1163
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 133, 3133, 0
before receive testcase: 0 0
----- executor 1 signal number : 2635
----- executor 1 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 1141
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 843, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 674, flag collect 0
----- executor 2 signal number : 1479
----- executor 1 signal number : 55
----- executor 1 executes write_coverage_signal cov->size 674, flag collect 0
----- executor 1 signal number : 0
executor 2 server cover_cnt 27 output_pos_value 20392
----- executor 1 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 1 signal number : 467
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 69
----- executor 1 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 1 signal number : 48
----- executor 1 executes write_coverage_signal cov->size 320, flag collect 0
2023/03/31 10:53:24 for select break: 1
2023/03/31 10:53:24 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 24
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1901
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1076
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 1 signal number : 103
time breakdown 2: 152, 3142, 0
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 797
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2201
----- executor 1 executes write_coverage_signal cov->size 29349, flag collect 0
----- executor 1 signal number : 1875
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1654
----- executor 1 executes write_coverage_signal cov->size 24825, flag collect 0
----- executor 1 signal number : 1205
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 851
executor 1 server cover_cnt 34 output_pos_value 23089
2023/03/31 10:53:24 for select break: 1
2023/03/31 10:53:24 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:53:24 wg wait finish
2023/03/31 10:53:24 ------ all executors finish execution
2023/03/31 10:53:24 exec time: 3284
time breakdown 1: 161, 3158, 0
2023/03/31 10:53:24 ----- PS len: 4
2023/03/31 10:53:24 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:24 [SERVER] executor 1 has 34 replies
2023/03/31 10:53:24 [SERVER] executor 0 has 44 replies
2023/03/31 10:53:24 [SERVER] executor 2 has 27 replies
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 457 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 318 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 2049 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 54 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 703 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 543 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 88 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 616 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 40 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1401 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 2416 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 2293 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 348 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 85 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1232 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 982 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1515 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 284 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1613 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 2635 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 55 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 467 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 69 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 48 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 24 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1901 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1076 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 103 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 797 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 2201 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1875 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1654 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 1205 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 1 receive 851 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 376 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 827 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 333 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1059 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1935 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 143 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1722 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 644 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1995 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1191 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 73 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1097 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 820 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 559 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1163 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1141 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 2 receive 1479 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 1387 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 122 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 38 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 261 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 55 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 87 signal and 0 cover from userspace component
2023/03/31 10:53:24 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:53:24 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:24 ----- no new client coverage: false, true
2023/03/31 10:53:24 mutate testcase with failures
2023/03/31 10:53:24 ----- insertCall()
2023/03/31 10:53:24 ----- mutateArg()
2023/03/31 10:53:24 ----- insertCall()
2023/03/31 10:53:24 ----- mutateArg()
2023/03/31 10:53:24 ----- insertCall()
2023/03/31 10:53:24 ----- insertCall()
2023/03/31 10:53:24 ----- insertCall()
2023/03/31 10:53:24 ----- mutateArg()
2023/03/31 10:53:24 ----- insertCall()
2023/03/31 10:53:24 ----- mutateArg()
2023/03/31 10:53:24 ----- mutateArg()
2023/03/31 10:53:24 HasCrashFail: false, .HasNetFail: true
2023/03/31 10:53:24 disable threaded and collide
2023/03/31 10:53:24 prog length: 6
2023/03/31 10:53:24 prog length: 6
2023/03/31 10:53:24 prog length: 24
2023/03/31 10:53:24 HasCrashFail:false HasNetFail:true
10:53:24 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.36 -j DROP;iptables -A INPUT -s 192.168.0.37 -j DROP;iptables -A INPUT -s 192.168.0.38 -j DROP;iptables -A OUTPUT -d 192.168.0.36 -j DROP;iptables -A OUTPUT -d 192.168.0.37 -j DROP;iptables -A OUTPUT -d 192.168.0.38 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.35 -j DROP;iptables -A INPUT -s 192.168.0.37 -j DROP;iptables -A INPUT -s 192.168.0.38 -j DROP;iptables -A OUTPUT -d 192.168.0.35 -j DROP;iptables -A OUTPUT -d 192.168.0.37 -j DROP;iptables -A OUTPUT -d 192.168.0.38 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
---
fdatasync(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
r0 = fcntl$getown(0xffffffffffffffff, 0x9)
syz_failure_sync(0x1, 0x3)
fdatasync(0xffffffffffffffff)
r1 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$trusted_overlay_upper(r1, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x107, 0x3, 0x3f, "521019a2c5b97d53656528429b1da594", "32e85ece4c539d7c41f66d68f0244f76f47182728140eb670c80f43844f8c811d8915c69cd601716dbf4102de9ba8a4323a53b9360bafcadf05eed3209fd3414ba38bab588e375478aaef9bd127cfb505e14750d867591488ac6f95aef13f14d64f013950f7f36b3a0e27cfa19c81613ff38311a9eb40df34b4bc3f6bad212f0d9257742db13ab36f94756432bf46f151053d998b72dd070b8658ac22b92fb6bf150f6c6d8c96acfa6e6b9366882fb2fd2421477866def4e354d72df2a053d42f4c75dfe636d6bcc205c859726ca83d99ac4bac601cfd5539640960e7fb0357fdb335e718016ee2289a1b320bc1176743e58"}, 0x107, 0x3)
fsetxattr$trusted_overlay_opaque(r1, &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x3)
fsetxattr$smack_xattr_label(r1, &(0x7f0000000200)='security.SMACK64\x00', &(0x7f0000000240), 0x1, 0x2)
syz_failure_sync(0x2, 0x3)
r2 = openat(0xffffffffffffffff, &(0x7f0000001a40)='./file0\x00', 0x8000, 0x251)
fcntl$setown(r2, 0x8, r0)
syz_failure_sync(0x3, 0x3)
fcntl$setstatus(r2, 0x4, 0x800)
r3 = open(&(0x7f00000002c0)='./file0\x00', 0x800, 0x1c)
write$binfmt_elf64(r3, &(0x7f0000000300)=ANY=[@ANYBLOB=""/4984], 0x1378)
r4 = dup(r2)
fdatasync(r4)
r5 = open(&(0x7f0000001680)='./file0\x00', 0x2, 0x100)
fcntl$setpipe(r5, 0x407, 0x2)
pwritev(r1, &(0x7f00000019c0)=[{&(0x7f00000016c0)="92016f56353297063e65ac003a52c9e8069af300689ddbf901e0fef71208daeca056a9cfcdf8fc78a91ef0f7f13cbfd06dc7b8f0b1716366a4ca213f0a1b0b2ee676b8ef410161e10c4600d2632cd29b1bf55b50a2a9"}, {&(0x7f0000001740)="6cbe3c5b4f1e36e5d2a0a32e32a40250db1290c6d90320a7e81ba564e3a27bbcb30a2362a2afa862b1e576b6e520"}, {&(0x7f0000001780)="8b2ca39cb850a0b3f8ab593d626bb6b601afc7a1b89946b9d794c40691a1e83d266da1105cbcae0fc99d8e7c84ad353a5743747fc28ff2ba8659925bb024a3125e40cbd160d3e290b57d7cc7a33f83fcf2cd7dee3fbfbcdbabc65053734020f91877a308e28dfc7c8cfaf8ac095a52537a2b10d2e67e2ede2934127562af5100fd6280612d059bc199d6a78be781116614a892eaa2e671e982352b9004508a6b0912db823f1bf2c868de07e957da87861197645d72"}, {&(0x7f0000001840)="ff784c16240c75afb6131fd2fe91c39cfbce57ece5d4db8300a0333e19d690c3606ca1771781e78fc07a06ba222ee2f1559af51f62e2304b7803ef482fdeb5acb4238d5305a65b07138a5732"}, {&(0x7f00000018c0)="21bb48a314db4d67d84cf56c287bb23f74f3bcaf355f08ef6424158a00547c251b"}, {&(0x7f0000001900)="71c4ebc6bfbe7cb23eeee922b4e62d1cb87ea93598fcf4766f342026efb27212814b0399af0d4df6e8baa45b6b89192de72ca798ee3a0673693c05439ae934d4927d0a83db34"}, {&(0x7f0000001980)="bc17647e6138b453c9f8fc7b784da10efecff1662e67b61b0ce2eb1f31801363b5"}], 0x100000000000016d, 0xfffff001, 0x10a5)
fcntl$setstatus(r4, 0x4, 0x2400)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000001cc0))
fcntl$getown(0xffffffffffffffff, 0x9)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1872, prog_size 560
----- executor 2 receive testcase
executor 2: prog_data_offset 2432, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 2440, prog_size 9704
remove dir: /root/glusterfs-client/dfs-0-7
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 560
opendir(/root/glusterfs-client/dfs-0-7) failedremove dir time 124
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-8 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-8
receive_execute: 32, 151
receive_execute: 15, 151
receive_execute: 43, 149
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 46, 156
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
execute_call 0, 81, 0, 0
execute_one loop: 0, 0, 81
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 81, 0, 1
execute_one loop: 0, 0, 82
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
==604==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==826==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.889
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2095, 0
execute_one time: 3, 2095
execute_call 0, 2098, 0, 0
execute_one loop: 0, 0, 2098
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 2010, 0, 0
execute_one loop: 0, 0, 2010
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 40, 0, 0
execute_one loop: 0, 0, 40
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
==889==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.861
==861==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 4153, 0
execute_one time: 2, 4153
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 2015, 0, 0
execute_one loop: 0, 0, 2015
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 13592, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 13592, flag collect 0
----- executor 3 signal number : 1536
----- completed 15
execute_call 0, 26, 0, 1
execute_one loop: 0, 0, 27
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6910, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 6910, flag collect 0
----- executor 3 signal number : 2
----- completed 19
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 23
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 442, write pid:442
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 24
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 4181, 0
execute_one time: 1, 4181
2023/03/31 10:53:28 for select break: 1
2023/03/31 10:53:28 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 120, flag collect 0
----- executor 1 signal number : 52
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 724, flag collect 0
----- executor 0 signal number : 239
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5353, flag collect 0
----- executor 1 signal number : 1113
----- executor 1 executes write_coverage_signal cov->size 1271, flag collect 0
----- executor 1 signal number : 120
----- executor 1 executes write_coverage_signal cov->size 498, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 146, flag collect 0
----- executor 2 signal number : 93
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 5355, flag collect 0
----- executor 2 signal number : 1103
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 2589, flag collect 0
----- executor 2 signal number : 317
----- executor 2 executes write_coverage_signal cov->size 129, flag collect 0
----- executor 0 signal number : 956
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 89
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 27743, flag collect 0
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 288
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1172
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1837
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1441, flag collect 0
----- executor 0 signal number : 228
----- executor 0 executes write_coverage_signal cov->size 1805, flag collect 0
----- executor 0 signal number : 125
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1192
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 202, 4184, 0
before receive testcase: 0 0
----- executor 0 signal number : 398
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1263
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2196
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1087, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 1028, flag collect 0
----- executor 1 signal number : 182
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 152
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1627
----- executor 1 executes write_coverage_signal cov->size 32550, flag collect 0
----- executor 0 signal number : 520
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 412
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 706
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1710
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2082
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1264
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2778
----- executor 0 executes write_coverage_signal cov->size 775, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 57
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 0 signal number : 518
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1242
----- executor 1 executes write_coverage_signal cov->size 25910, flag collect 0
----- executor 0 signal number : 74
----- executor 0 executes write_coverage_signal cov->size 745, flag collect 0
----- executor 0 signal number : 25
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1274
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1717
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1145
----- executor 1 executes write_coverage_signal cov->size 25986, flag collect 0
----- executor 0 signal number : 759
----- executor 0 executes write_coverage_signal cov->size 16, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 877
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1059
----- executor 1 executes write_coverage_signal cov->size 27475, flag collect 0
----- executor 0 signal number : 805
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1153
----- executor 1 executes write_coverage_signal cov->size 26, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 7259, flag collect 0
----- executor 2 signal number : 2387
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1214, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 1317, flag collect 0
----- executor 2 signal number : 171
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1693
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 489
executor 1 server cover_cnt 25 output_pos_value 18156
----- executor 0 signal number : 1737
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1370
----- executor 0 executes write_coverage_signal cov->size 25403, flag collect 0
----- executor 0 signal number : 1114
----- executor 0 executes write_coverage_signal cov->size 25337, flag collect 0
----- executor 0 signal number : 966
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:28 for select break: 1
2023/03/31 10:53:28 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1647
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 785
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 929
----- executor 2 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1112
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1719
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 781
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1553
----- executor 2 executes write_coverage_signal cov->size 25476, flag collect 0
----- executor 0 signal number : 1126
executor 0 server cover_cnt 33 output_pos_value 24058
----- executor 2 signal number : 1375
----- executor 2 executes write_coverage_signal cov->size 30065, flag collect 0
----- executor 2 signal number : 947
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 166, 4206, 0
before receive testcase: 0 0
----- executor 2 signal number : 1089
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:28 for select break: 1
2023/03/31 10:53:28 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1369
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 819
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1663
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 901
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 192, 4212, 0
before receive testcase: 0 0
----- executor 2 signal number : 1294
executor 2 server cover_cnt 28 output_pos_value 22137
2023/03/31 10:53:28 for select break: 1
2023/03/31 10:53:28 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:28 wg wait finish
2023/03/31 10:53:28 ------ all executors finish execution
2023/03/31 10:53:28 exec time: 4370
2023/03/31 10:53:28 ----- PS len: 4
2023/03/31 10:53:28 [CLIENT] executor 3 has 24 replies
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 1536 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:28 [SERVER] executor 1 has 25 replies
2023/03/31 10:53:28 [SERVER] executor 0 has 33 replies
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 239 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 956 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 52 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 89 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:28 [SERVER] executor 2 has 28 replies
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 93 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1103 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 317 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1837 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 228 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1113 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 125 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1192 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 398 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 120 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 520 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 152 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1264 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 2387 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 171 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 412 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1647 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 929 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 288 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1719 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1553 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1375 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1172 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 947 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1710 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1263 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 2196 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 2778 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 182 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1089 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1627 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1369 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 819 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 706 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1663 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 901 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 2 receive 1294 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 2082 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1242 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1274 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1145 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 57 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 877 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 518 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1059 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 74 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 25 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 1153 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1717 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 759 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 805 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 1 receive 489 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1693 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1737 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1370 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1114 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 966 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 785 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1112 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 781 signal and 0 cover from userspace component
2023/03/31 10:53:28 ------- fuzzer executor 0 receive 1126 signal and 0 cover from userspace component
time breakdown 2: 183, 4218, 0
before receive testcase: 0 0
2023/03/31 10:53:28 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:28 ----- no new client coverage: false, true
2023/03/31 10:53:28 ----- enqueue testcases with server coveraged
2023/03/31 10:53:28 disable threaded and collide
2023/03/31 10:53:28 prog length: 6
2023/03/31 10:53:28 prog length: 6
2023/03/31 10:53:28 prog length: 24
2023/03/31 10:53:28 HasCrashFail:false HasNetFail:true
10:53:28 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.36 -j DROP;iptables -A INPUT -s 192.168.0.37 -j DROP;iptables -A INPUT -s 192.168.0.38 -j DROP;iptables -A OUTPUT -d 192.168.0.36 -j DROP;iptables -A OUTPUT -d 192.168.0.37 -j DROP;iptables -A OUTPUT -d 192.168.0.38 -j DROP;')
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_net_up()
syz_failure_send(0x1)
---
syz_failure_recv(0x2)
syz_failure_net_down(&(0x7f0000000000)='iptables -A INPUT -s 192.168.0.35 -j DROP;iptables -A INPUT -s 192.168.0.37 -j DROP;iptables -A INPUT -s 192.168.0.38 -j DROP;iptables -A OUTPUT -d 192.168.0.35 -j DROP;iptables -A OUTPUT -d 192.168.0.37 -j DROP;iptables -A OUTPUT -d 192.168.0.38 -j DROP;')
syz_failure_send(0x2)
syz_failure_recv(0x3)
syz_failure_net_up()
syz_failure_send(0x3)
---
---
fdatasync(0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
r0 = fcntl$getown(0xffffffffffffffff, 0x9)
syz_failure_sync(0x1, 0x3)
fdatasync(0xffffffffffffffff)
r1 = dup2(0xffffffffffffffff, 0xffffffffffffffff)
fsetxattr$trusted_overlay_upper(r1, &(0x7f0000000000), &(0x7f0000000040)={0x0, 0xfb, 0x107, 0x3, 0x3f, "521019a2c5b97d53656528429b1da594", "32e85ece4c539d7c41f66d68f0244f76f47182728140eb670c80f43844f8c811d8915c69cd601716dbf4102de9ba8a4323a53b9360bafcadf05eed3209fd3414ba38bab588e375478aaef9bd127cfb505e14750d867591488ac6f95aef13f14d64f013950f7f36b3a0e27cfa19c81613ff38311a9eb40df34b4bc3f6bad212f0d9257742db13ab36f94756432bf46f151053d998b72dd070b8658ac22b92fb6bf150f6c6d8c96acfa6e6b9366882fb2fd2421477866def4e354d72df2a053d42f4c75dfe636d6bcc205c859726ca83d99ac4bac601cfd5539640960e7fb0357fdb335e718016ee2289a1b320bc1176743e58"}, 0x107, 0x3)
fsetxattr$trusted_overlay_opaque(r1, &(0x7f0000000180), &(0x7f00000001c0), 0x2, 0x3)
fsetxattr$smack_xattr_label(r1, &(0x7f0000000200)='security.SMACK64\x00', &(0x7f0000000240), 0x1, 0x2)
syz_failure_sync(0x2, 0x3)
r2 = openat(0xffffffffffffffff, &(0x7f0000001a40)='./file0\x00', 0x8000, 0x251)
fcntl$setown(r2, 0x8, r0)
syz_failure_sync(0x3, 0x3)
fcntl$setstatus(r2, 0x4, 0x800)
r3 = open(&(0x7f00000002c0)='./file0\x00', 0x800, 0x1c)
write$binfmt_elf64(r3, &(0x7f0000000300)=ANY=[@ANYBLOB=""/4984], 0x1378)
r4 = dup(r2)
fdatasync(r4)
r5 = open(&(0x7f0000001680)='./file0\x00', 0x2, 0x100)
fcntl$setpipe(r5, 0x407, 0x2)
pwritev(r1, &(0x7f00000019c0)=[{&(0x7f00000016c0)="92016f56353297063e65ac003a52c9e8069af300689ddbf901e0fef71208daeca056a9cfcdf8fc78a91ef0f7f13cbfd06dc7b8f0b1716366a4ca213f0a1b0b2ee676b8ef410161e10c4600d2632cd29b1bf55b50a2a9"}, {&(0x7f0000001740)="6cbe3c5b4f1e36e5d2a0a32e32a40250db1290c6d90320a7e81ba564e3a27bbcb30a2362a2afa862b1e576b6e520"}, {&(0x7f0000001780)="8b2ca39cb850a0b3f8ab593d626bb6b601afc7a1b89946b9d794c40691a1e83d266da1105cbcae0fc99d8e7c84ad353a5743747fc28ff2ba8659925bb024a3125e40cbd160d3e290b57d7cc7a33f83fcf2cd7dee3fbfbcdbabc65053734020f91877a308e28dfc7c8cfaf8ac095a52537a2b10d2e67e2ede2934127562af5100fd6280612d059bc199d6a78be781116614a892eaa2e671e982352b9004508a6b0912db823f1bf2c868de07e957da87861197645d72"}, {&(0x7f0000001840)="ff784c16240c75afb6131fd2fe91c39cfbce57ece5d4db8300a0333e19d690c3606ca1771781e78fc07a06ba222ee2f1559af51f62e2304b7803ef482fdeb5acb4238d5305a65b07138a5732"}, {&(0x7f00000018c0)="21bb48a314db4d67d84cf56c287bb23f74f3bcaf355f08ef6424158a00547c251b"}, {&(0x7f0000001900)="71c4ebc6bfbe7cb23eeee922b4e62d1cb87ea93598fcf4766f342026efb27212814b0399af0d4df6e8baa45b6b89192de72ca798ee3a0673693c05439ae934d4927d0a83db34"}, {&(0x7f0000001980)="bc17647e6138b453c9f8fc7b784da10efecff1662e67b61b0ce2eb1f31801363b5"}], 0x100000000000016d, 0xfffff001, 0x10a5)
fcntl$setstatus(r4, 0x4, 0x2400)
fcntl$getownex(0xffffffffffffffff, 0x10, &(0x7f0000001cc0))
fcntl$getown(0xffffffffffffffff, 0x9)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 2440, prog_size 9704
----- executor 2 receive testcase
executor 2: prog_data_offset 2432, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 560
remove dir: /root/glusterfs-client/dfs-0-8
----- executor 1 receive testcase
executor 1: prog_data_offset 1872, prog_size 560
remove dir time 31
-----finish removing dir
receive_execute: 23, 60
receive_execute: 29, 60
receive_execute: 17, 60
mkdir time 29
executor 3 create dir /root/glusterfs-client/dfs-0-9 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-9
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 47, 65
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 0, 0, 0
executor 3 waits for recv msg
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 2
execute_call 0, 50, 0, 0
execute_one loop: 0, 0, 50
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 50, 0, 0
execute_one loop: 0, 0, 50
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2069, 0
execute_one time: 7, 2069
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 2018, 0, 0
execute_one loop: 0, 0, 2018
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 2075, 0, 0
execute_one loop: 0, 0, 2075
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 59, 0, 0
execute_one loop: 0, 0, 59
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
execute_call 0, 2017, 0, 0
execute_one loop: 0, 0, 2017
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 4150, 0
execute_one time: 1, 4150
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 13
execute_call 0, 2017, 0, 0
execute_one loop: 0, 0, 2017
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 10369, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 10369, flag collect 1
----- executor 3 cover number : 1187, signal number : 1483
----- completed 15
execute_call 0, 9, 0, 8
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 17
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6926, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 6926, flag collect 1
----- executor 3 cover number : 919, signal number : 2
----- completed 19
execute_call 0, 4, 0, 4
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 20
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 21
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 22
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 23
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 444, write pid:444
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 24
execute_call 0, 1, 0, 1
execute_one loop: 0, 0, 2
executor 3, execute_one inner time: 0, 4179, 0
execute_one time: 1, 4180
2023/03/31 10:53:33 for select break: 1
2023/03/31 10:53:33 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 4
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 1
----- executor 0 cover number : 46, signal number : 51
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 3, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1870, flag collect 1
----- executor 2 cover number : 65, signal number : 74
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 1 cover number : 66, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 116, signal number : 117
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 127, flag collect 1
----- executor 1 cover number : 67, signal number : 61
----- executor 2 cover number : 3, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 3931, flag collect 1
----- executor 0 cover number : 567, signal number : 629
----- executor 0 executes write_coverage_signal cov->size 2059, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 386, flag collect 1
----- executor 0 cover number : 409, signal number : 12
----- executor 0 executes write_coverage_signal cov->size 18883, flag collect 1
----- executor 2 cover number : 129, signal number : 138
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 1
----- executor 2 cover number : 66, signal number : 59
----- executor 2 executes write_coverage_signal cov->size 17459, flag collect 1
----- executor 1 cover number : 576, signal number : 630
----- executor 1 executes write_coverage_signal cov->size 12156, flag collect 1
time breakdown 3: 113, 4182, 0
before receive testcase: 0 0
----- executor 1 cover number : 1289, signal number : 1335
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 1 cover number : 17, signal number : 16
----- executor 1 executes write_coverage_signal cov->size 513, flag collect 1
----- executor 2 cover number : 410, signal number : 433
----- executor 2 executes write_coverage_signal cov->size 2561, flag collect 1
----- executor 1 cover number : 89, signal number : 29
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 1 cover number : 3, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8786, flag collect 1
----- executor 0 cover number : 1461, signal number : 1594
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 17, signal number : 16
----- executor 0 executes write_coverage_signal cov->size 65, flag collect 1
----- executor 0 cover number : 49, signal number : 15
----- executor 2 cover number : 567, signal number : 202
----- executor 2 executes write_coverage_signal cov->size 17692, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 3, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5925, flag collect 1
----- executor 0 cover number : 684, signal number : 609
----- executor 0 executes write_coverage_signal cov->size 2853, flag collect 1
----- executor 1 cover number : 684, signal number : 628
----- executor 1 executes write_coverage_signal cov->size 6735, flag collect 1
----- executor 0 cover number : 580, signal number : 6
executor 0 server cover_cnt 11 output_pos_value 6793
----- executor 1 cover number : 1113, signal number : 231
----- executor 2 cover number : 954, signal number : 830
----- executor 2 executes write_coverage_signal cov->size 4246, flag collect 1
executor 1 server cover_cnt 13 output_pos_value 7261
----- executor 2 cover number : 992, signal number : 660
----- executor 2 executes write_coverage_signal cov->size 23, flag collect 1
----- executor 2 cover number : 19, signal number : 21
----- executor 2 executes write_coverage_signal cov->size 34, flag collect 1
----- executor 2 cover number : 30, signal number : 13
----- executor 2 executes write_coverage_signal cov->size 278, flag collect 1
2023/03/31 10:53:33 for select break: 1
2023/03/31 10:53:33 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 89, signal number : 28
----- executor 2 executes write_coverage_signal cov->size 110, flag collect 1
time breakdown 0: 83, 4197, 0
before receive testcase: 0 0
----- executor 2 cover number : 65, signal number : 17
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 19263, flag collect 1
2023/03/31 10:53:33 for select break: 1
2023/03/31 10:53:33 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 90, 4198, 0
before receive testcase: 0 0
----- executor 2 cover number : 741, signal number : 424
----- executor 2 executes write_coverage_signal cov->size 23942, flag collect 1
----- executor 2 cover number : 1302, signal number : 1341
----- executor 2 executes write_coverage_signal cov->size 24659, flag collect 1
----- executor 2 cover number : 1310, signal number : 980
----- executor 2 executes write_coverage_signal cov->size 5693, flag collect 1
----- executor 2 cover number : 587, signal number : 119
----- executor 2 executes write_coverage_signal cov->size 8575, flag collect 1
----- executor 2 cover number : 1308, signal number : 826
----- executor 2 executes write_coverage_signal cov->size 14122, flag collect 1
----- executor 2 cover number : 1443, signal number : 502
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 0
executor 2 server cover_cnt 22 output_pos_value 16834
2023/03/31 10:53:33 for select break: 1
2023/03/31 10:53:33 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:33 wg wait finish
2023/03/31 10:53:33 ------ all executors finish execution
2023/03/31 10:53:33 exec time: 4279
2023/03/31 10:53:33 ----- PS len: 4
2023/03/31 10:53:33 [CLIENT] executor 3 has 24 replies
2023/03/31 10:53:33 [SERVER] executor 1 has 13 replies
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 74 signal and 65 cover from userspace component
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 4 signal and 3 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 3 signal and 66 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 117 signal and 116 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 2 signal and 3 cover from userspace component
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 [SERVER] executor 0 has 11 replies
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 51 signal and 46 cover from userspace component
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 4 signal and 3 cover from userspace component
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 61 signal and 67 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 0 signal and 3 cover from userspace component
time breakdown 2: 77, 4220, 0
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 630 signal and 576 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 629 signal and 567 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 12 signal and 409 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 1335 signal and 1289 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 16 signal and 17 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 29 signal and 89 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 0 signal and 3 cover from userspace component
2023/03/31 10:53:33 [SERVER] executor 2 has 22 replies
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 628 signal and 684 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 138 signal and 129 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 59 signal and 66 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 1 receive 231 signal and 1113 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 433 signal and 410 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 202 signal and 567 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 1594 signal and 1461 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 16 signal and 17 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 15 signal and 49 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 1 signal and 3 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 609 signal and 684 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 830 signal and 954 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 0 receive 6 signal and 580 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 660 signal and 992 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 21 signal and 19 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 13 signal and 30 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 28 signal and 89 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 17 signal and 65 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 424 signal and 741 cover from userspace component
2023/03/31 10:53:33 fuzzer receive 1483 signal and 1187 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 2 signal and 919 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 1341 signal and 1302 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 980 signal and 1310 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 119 signal and 587 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 826 signal and 1308 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 502 signal and 1443 cover from userspace component
2023/03/31 10:53:33 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 10:53:33 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:33 ----- triage return due to empty signal extra
2023/03/31 10:53:33 mutate testcase with failures
2023/03/31 10:53:33 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:33 disable threaded and collide
2023/03/31 10:53:33 prog length: 6
2023/03/31 10:53:33 prog length: 22
2023/03/31 10:53:33 HasCrashFail:true HasNetFail:false
10:53:33 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="6f7332ff5d0b28"], &(0x7f00000000c0)=""/59, 0x3b)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000100)={'#! ', './file0', [{}, {0x20, '!-},(#]([@{('}, {0x20, 'os2.'}, {}, {0x20, 'os2.'}], 0xa, "a8056403b530cc5ad0b5ade1f1c3ca9fe4a27f4a3faffff2410286e05c63ce282b433a4c04f498d0d6fbb18a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1"}, 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)={0x0, 0xfb, 0xad, 0x1, 0x1f, "4157a50ac27c34a9839eb4785a41f4d8", "c9af46960cdba287326efe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce9b0474e2d48dff3c48fb278ff2a4f64d6886b5e5211e96ed25c7a717e917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac61e3c2842a35f02865b232d846ec0c19d56c9142ac17adddcfa0067755f9d42d29d721"}, 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "669f9a"}, 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file1\x00', &(0x7f0000001900), &(0x7f0000001940), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file0/file0\x00', 0xffffffffffffffff, &(0x7f0000001b80)='./file1\x00', 0x1000)
---

end of program
----- executor 3 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 3: prog_data_offset 1576, prog_size 5416
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-9
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 19
-----finish removing dir
mkdir time 34
executor 3 create dir /root/glusterfs-client/dfs-0-10 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-10
receive_execute: 5, 54
receive_execute: 27, 54
receive_execute: 25, 54
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 37, 59
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 1 write_server_output
executor 3 waits for recv msg
----- executor 1 executes write_coverage_signal cov->size 1386, flag collect 0
----- executor 1 signal number : 455
----- executor 1 executes write_coverage_signal cov->size 6993, flag collect 0
----- executor 1 signal number : 1303
----- executor 1 executes write_coverage_signal cov->size 3101, flag collect 0
----- executor 1 signal number : 495
----- executor 1 executes write_coverage_signal cov->size 1580, flag collect 0
----- executor 1 signal number : 215
executor 1 server cover_cnt 4 output_pos_value 2481
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 6
----- directly resend shmid 6
-----executor 1 collect shmids 32
----- directly resend shmid 32
-----executor 1 collect shmids 33
----- directly resend shmid 33
-----executor 1 collect shmids 51
----- directly resend shmid 51
-----executor 1 collect shmids 52
----- directly resend shmid 52
-----executor 1 collect shmids 54
----- directly resend shmid 54
-----executor 1 collect shmids 55
----- directly resend shmid 55
-----executor 1 collect shmids 56
----- directly resend shmid 56
-----executor 1 collect shmids 57
----- directly resend shmid 57
-----executor 1 collect shmids 58
----- directly resend shmid 58
-----executor 1 collect shmids 60
----- directly resend shmid 60
-----executor 1 collect shmids 61
----- directly resend shmid 61
Terminated
-----executor 1 collect shmids 62
----- directly resend shmid 62
execute_call 0, 84, 0, 0
execute_one loop: 0, 0, 84
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 85, 0, 0
execute_one loop: 0, 0, 85
cover_reset in execute_call
----- executor 3 write_call_output, size 10114, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 10114, flag collect 0
----- executor 3 signal number : 1577
----- completed 2
execute_call 0, 69, 0, 1
execute_one loop: 0, 0, 70
cover_reset in execute_call
----- executor 3 write_call_output, size 2690, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 2690, flag collect 0
----- executor 3 signal number : 539
----- completed 3
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2764, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 2764, flag collect 0
----- executor 3 signal number : 329
----- completed 6
execute_call 0, 13, 0, 1
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 2754, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 2754, flag collect 0
----- executor 3 signal number : 13
----- completed 7
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 1483, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 1483, flag collect 0
----- executor 3 signal number : 13
----- completed 8
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6665, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 6665, flag collect 0
----- executor 3 signal number : 21
----- completed 10
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
cover_reset in execute_call
----- executor 3 write_call_output, size 5738, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 5738, flag collect 0
----- executor 3 signal number : 2
----- completed 11
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 132, 0, 0
execute_one loop: 0, 0, 132
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 2976, 0, 0
execute_one loop: 0, 0, 2976
cover_reset in execute_call
execute_call 0, 2976, 0, 0
execute_one loop: 0, 0, 2976
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3197, 0
execute_one time: 2, 3197
----- executor 3 write_call_output, size 16409, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 16409, flag collect 0
----- executor 3 signal number : 274
----- completed 13
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5759, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 5759, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 2
----- completed 16
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5759, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 5759, flag collect 0
----- executor 3 signal number : 2
----- completed 17
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4448, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 4448, flag collect 0
----- executor 3 signal number : 16
----- completed 20
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5739, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 5739, flag collect 0
----- executor 3 signal number : 4
----- completed 21
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 446, write pid:446
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3237, 0
execute_one time: 1, 3237
2023/03/31 10:53:36 for select break: 1
2023/03/31 10:53:36 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 881, flag collect 0
----- executor 0 signal number : 329
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 854, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 signal number : 552
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 332
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 0 signal number : 591
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 96, 3239, 0
before receive testcase: 0 0
----- executor 0 signal number : 2736
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 236, flag collect 0
----- executor 0 signal number : 116
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 0 signal number : 49
----- executor 0 executes write_coverage_signal cov->size 9452, flag collect 0
----- executor 0 signal number : 342
----- executor 0 executes write_coverage_signal cov->size 23033, flag collect 0
----- executor 2 signal number : 2574
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 97
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 1 signal number : 221
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 1 signal number : 23
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 22855, flag collect 0
----- executor 0 signal number : 483
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 762
----- executor 0 signal number : 3112
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 1240, flag collect 0
----- executor 0 signal number : 148
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1332, flag collect 0
----- executor 0 signal number : 173
----- executor 0 executes write_coverage_signal cov->size 5480, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 10999, flag collect 0
----- executor 0 signal number : 475
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 33
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1600
----- executor 0 executes write_coverage_signal cov->size 23803, flag collect 0
----- executor 1 signal number : 1647
----- executor 1 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 1 signal number : 107
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1386, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 6993, flag collect 0
----- executor 1 signal number : 81
----- executor 1 executes write_coverage_signal cov->size 804, flag collect 0
----- executor 1 signal number : 38
----- executor 1 executes write_coverage_signal cov->size 3101, flag collect 0
----- executor 1 signal number : 44
----- executor 1 executes write_coverage_signal cov->size 1580, flag collect 0
----- executor 1 signal number : 20
executor 1 server cover_cnt 45 output_pos_value 5474
----- executor 0 signal number : 364
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 3260
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 861, flag collect 0
----- executor 2 signal number : 144
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 116, flag collect 0
----- executor 2 signal number : 23
----- executor 0 signal number : 1209
2023/03/31 10:53:36 for select break: 1
2023/03/31 10:53:36 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 79, 3252, 0
executor 0 server cover_cnt 21 output_pos_value 11819
----- executor 2 executes write_coverage_signal cov->size 6638, flag collect 0
----- executor 2 signal number : 579
----- executor 2 executes write_coverage_signal cov->size 32195, flag collect 0
----- executor 2 signal number : 1586
----- executor 2 executes write_coverage_signal cov->size 30628, flag collect 0
----- executor 2 signal number : 415
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
2023/03/31 10:53:36 for select break: 1
2023/03/31 10:53:36 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1453
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1182
executor 2 server cover_cnt 16 output_pos_value 12413
time breakdown 0: 81, 3256, 0
before receive testcase: 0 0
2023/03/31 10:53:36 for select break: 1
2023/03/31 10:53:36 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:36 wg wait finish
2023/03/31 10:53:36 ------ all executors finish execution
2023/03/31 10:53:36 exec time: 3316
2023/03/31 10:53:36 ----- PS len: 4
2023/03/31 10:53:36 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 1577 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 539 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 329 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 21 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 [SERVER] executor 0 has 21 replies
2023/03/31 10:53:36 [SERVER] executor 1 has 45 replies
2023/03/31 10:53:36 [SERVER] executor 2 has 16 replies
time breakdown 2: 59, 3262, 0
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 455 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 332 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 1303 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 495 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 215 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 2574 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 552 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 97 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 329 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 2736 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 116 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 49 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 762 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 342 signal and 0 cover from userspace component
2023/03/31 10:53:36 fuzzer receive 274 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 16 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 4 signal and 0 cover from executor 3
2023/03/31 10:53:36 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 33 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 3260 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 144 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 23 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 579 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 23 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 1586 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 415 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 1453 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 2 receive 1182 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 483 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 3112 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 148 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 173 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 475 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 1600 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 364 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 0 receive 1209 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 1647 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 107 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 81 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 38 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 44 signal and 0 cover from userspace component
2023/03/31 10:53:36 ------- fuzzer executor 1 receive 20 signal and 0 cover from userspace component
2023/03/31 10:53:36 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:36 ----- no new client coverage: false, true
2023/03/31 10:53:36 ----- enqueue testcases with server coveraged
2023/03/31 10:53:36 disable threaded and collide
2023/03/31 10:53:36 prog length: 6
2023/03/31 10:53:36 prog length: 22
2023/03/31 10:53:36 HasCrashFail:true HasNetFail:false
10:53:36 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
syz_failure_sync(0x0, 0x3)
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="6f7332ff5d0b28"], &(0x7f00000000c0)=""/59, 0x3b)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000100)={'#! ', './file0', [{}, {0x20, '!-},(#]([@{('}, {0x20, 'os2.'}, {}, {0x20, 'os2.'}], 0xa, "a8056403b530cc5ad0b5ade1f1c3ca9fe4a27f4a3faffff2410286e05c63ce282b433a4c04f498d0d6fbb18a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1"}, 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000000340)={0x0, 0xfb, 0xad, 0x1, 0x1f, "4157a50ac27c34a9839eb4785a41f4d8", "c9af46960cdba287326efe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce9b0474e2d48dff3c48fb278ff2a4f64d6886b5e5211e96ed25c7a717e917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac61e3c2842a35f02865b232d846ec0c19d56c9142ac17adddcfa0067755f9d42d29d721"}, 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "669f9a"}, 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
syz_failure_sync(0x1, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file1\x00', &(0x7f0000001900), &(0x7f0000001940), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file0/file0\x00', 0xffffffffffffffff, &(0x7f0000001b80)='./file1\x00', 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
executor 3: prog_data_offset 1576, prog_size 5416
remove dir: /root/glusterfs-client/dfs-0-10
Node-1:/root/daemon-log.674
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 44
-----finish removing dir
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-11 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-11
receive_execute: 11, 72
receive_execute: 22, 71
receive_execute: 17, 72
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
execute_one time: 5, 0
receive_execute: 29, 79
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 49, signal number : 54
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 1 cover number : 2, signal number : 2
executor 1 server cover_cnt 3 output_pos_value 130
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 5
----- directly resend shmid 5
-----executor 1 collect shmids 6
----- directly resend shmid 6
-----executor 1 collect shmids 32
----- directly resend shmid 32
-----executor 1 collect shmids 33
----- directly resend shmid 33
-----executor 1 collect shmids 34
----- directly resend shmid 34
-----executor 1 collect shmids 35
----- directly resend shmid 35
-----executor 1 collect shmids 36
----- directly resend shmid 36
-----executor 1 collect shmids 37
----- directly resend shmid 37
execute_call 0, 86, 0, 0
execute_one loop: 0, 0, 86
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 1
execute_call 0, 86, 0, 0
execute_one loop: 0, 0, 86
cover_reset in execute_call
----- executor 3 write_call_output, size 8953, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 8953, flag collect 1
----- executor 3 cover number : 1272, signal number : 1581
----- completed 2
execute_call 0, 24, 0, 6
execute_one loop: 0, 0, 30
cover_reset in execute_call
----- executor 3 write_call_output, size 2700, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 2700, flag collect 1
----- executor 3 cover number : 894, signal number : 540
----- completed 3
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2773, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 2773, flag collect 1
----- executor 3 cover number : 835, signal number : 330
----- completed 6
execute_call 0, 13, 0, 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 2754, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 2754, flag collect 1
----- executor 3 cover number : 823, signal number : 12
----- completed 7
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 1483, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 1483, flag collect 1
----- executor 3 cover number : 520, signal number : 13
----- completed 8
execute_call 0, 15, 0, 1
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6665, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 6665, flag collect 1
----- executor 3 cover number : 1134, signal number : 18
----- completed 10
execute_call 0, 5, 0, 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 11
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 93, 0, 0
execute_one loop: 0, 0, 93
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
==674==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2782, 0, 0
execute_one loop: 0, 0, 2782
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2969, 0
execute_one time: 2, 2969
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 12
execute_call 0, 2782, 0, 0
execute_one loop: 0, 0, 2783
cover_reset in execute_call
----- executor 3 write_call_output, size 14098, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 14098, flag collect 1
----- executor 3 cover number : 1179, signal number : 230
----- completed 13
execute_call 0, 13, 0, 9
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5759, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 5759, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 15
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 1
----- executor 3 cover number : 919, signal number : 2
----- completed 16
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5759, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 5759, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 17
execute_call 0, 5, 0, 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 4454, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 4454, flag collect 1
----- executor 3 cover number : 902, signal number : 97
----- completed 20
execute_call 0, 13, 0, 2
execute_one loop: 0, 1, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 5745, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 5745, flag collect 1
----- executor 3 cover number : 919, signal number : 4
----- completed 21
execute_call 0, 7, 0, 2
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 447, write pid:447
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 22
2023/03/31 10:53:39 for select break: 1
2023/03/31 10:53:39 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 0 cover number : 65, signal number : 74
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 3, signal number : 4
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 501, signal number : 583
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 executes write_coverage_signal cov->size 19123, flag collect 1
----- executor 2 cover number : 7, signal number : 7
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 19224, flag collect 1
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 3035, 0
execute_one time: 1, 3037
time breakdown 3: 108, 3040, 0
before receive testcase: 0 0
----- executor 0 cover number : 1688, signal number : 2058
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 18122, flag collect 1
----- executor 2 cover number : 1691, signal number : 2108
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 24
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1865, flag collect 1
----- executor 2 cover number : 567, signal number : 277
----- executor 1 cover number : 126, signal number : 63
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 1 cover number : 9, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 28442, flag collect 1
----- executor 1 cover number : 286, signal number : 223
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 1 cover number : 4, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 1 cover number : 106, signal number : 22
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 1 cover number : 6, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 410, signal number : 227
----- executor 0 executes write_coverage_signal cov->size 10827, flag collect 1
----- executor 0 cover number : 576, signal number : 64
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 411, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1948, signal number : 2343
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1511, signal number : 1680
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 17, signal number : 16
----- executor 0 executes write_coverage_signal cov->size 964, flag collect 1
----- executor 0 cover number : 270, signal number : 176
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 3, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 1332, flag collect 1
----- executor 0 cover number : 417, signal number : 232
----- executor 0 executes write_coverage_signal cov->size 3358, flag collect 1
----- executor 0 cover number : 750, signal number : 299
----- executor 0 executes write_coverage_signal cov->size 26717, flag collect 1
----- executor 2 cover number : 1645, signal number : 1912
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 1001, flag collect 1
----- executor 2 cover number : 278, signal number : 173
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2860, flag collect 1
----- executor 2 cover number : 649, signal number : 396
----- executor 2 executes write_coverage_signal cov->size 1822, flag collect 1
----- executor 1 cover number : 49, signal number : 33
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 1 cover number : 9, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 1104, flag collect 1
----- executor 1 cover number : 498, signal number : 160
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 678, signal number : 145
----- executor 2 executes write_coverage_signal cov->size 2372, flag collect 1
----- executor 2 cover number : 481, signal number : 355
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 985, signal number : 975
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1001, signal number : 472
----- executor 1 executes write_coverage_signal cov->size 463, flag collect 1
----- executor 1 cover number : 165, signal number : 11
executor 1 server cover_cnt 45 output_pos_value 11463
----- executor 0 cover number : 1147, signal number : 451
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1252, signal number : 1092
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 10:53:39 for select break: 1
2023/03/31 10:53:39 --------- executor 1 receive reply, reply.done 1
----- executor 0 cover number : 2747, signal number : 2280
executor 0 server cover_cnt 15 output_pos_value 19175
----- executor 2 cover number : 2496, signal number : 1747
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 1: 93, 3078, 0
before receive testcase: 0 0
2023/03/31 10:53:39 for select break: 1
2023/03/31 10:53:39 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 89, 3088, 0
before receive testcase: 0 0
----- executor 2 cover number : 2420, signal number : 1465
executor 2 server cover_cnt 17 output_pos_value 22457
2023/03/31 10:53:39 for select break: 1
2023/03/31 10:53:39 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:39 wg wait finish
2023/03/31 10:53:39 ------ all executors finish execution
2023/03/31 10:53:39 exec time: 3169
2023/03/31 10:53:39 ----- PS len: 4
2023/03/31 10:53:39 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 1581 signal and 1272 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 540 signal and 894 cover from executor 3
2023/03/31 10:53:39 [SERVER] executor 0 has 15 replies
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 74 signal and 65 cover from userspace component
2023/03/31 10:53:39 [SERVER] executor 1 has 45 replies
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 4 signal and 3 cover from userspace component
2023/03/31 10:53:39 [SERVER] executor 2 has 17 replies
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 54 signal and 49 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 7 signal and 7 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 2058 signal and 1688 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 330 signal and 835 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 0 signal and 3 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 12 signal and 823 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 13 signal and 520 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 227 signal and 410 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 18 signal and 1134 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 2 signal and 921 cover from executor 3
time breakdown 2: 83, 3097, 0
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 230 signal and 1179 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 2108 signal and 1691 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 2 signal and 919 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 64 signal and 576 cover from userspace component
2023/03/31 10:53:39 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 97 signal and 902 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 4 signal and 919 cover from executor 3
2023/03/31 10:53:39 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 6 signal and 7 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 2 signal and 2 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 583 signal and 501 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 1680 signal and 1511 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 16 signal and 17 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 176 signal and 270 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 1 signal and 3 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 232 signal and 417 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 299 signal and 750 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 975 signal and 985 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 63 signal and 126 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 451 signal and 1147 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 3 signal and 9 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 223 signal and 286 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 5 signal and 5 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 5 signal and 4 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 24 signal and 66 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 22 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 0 receive 2280 signal and 2747 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 277 signal and 567 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 16 signal and 411 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 1912 signal and 1645 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 173 signal and 278 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 1 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 396 signal and 649 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 145 signal and 678 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 355 signal and 481 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 1092 signal and 1252 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 1747 signal and 2496 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 2 receive 1465 signal and 2420 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 4 signal and 6 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 2343 signal and 1948 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 33 signal and 49 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 3 signal and 9 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 160 signal and 498 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 0 signal and 4 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 472 signal and 1001 cover from userspace component
2023/03/31 10:53:39 ------- fuzzer executor 1 receive 11 signal and 165 cover from userspace component
2023/03/31 10:53:39 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:39 ----- triage return due to empty signal extra
2023/03/31 10:53:39 mutate testcase with failures
2023/03/31 10:53:39 ----- insertCall()
2023/03/31 10:53:39 ----- mutateArg()
before receive testcase: 0 0
2023/03/31 10:53:39 ----- mutateArg()
2023/03/31 10:53:39 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:39 disable threaded and collide
2023/03/31 10:53:39 prog length: 6
2023/03/31 10:53:39 prog length: 22
2023/03/31 10:53:39 HasCrashFail:true HasNetFail:false
10:53:39 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='u:object_r:app_data_file:s0:c512,c768\x00', 0x26, 0x2)
chdir(&(0x7f00000000c0)='./file0\x00')
rmdir(&(0x7f0000000100)='./file0\x00')
chdir(&(0x7f0000000140)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0xe9, 0x4, 0x80, "053120665ef05ff6368b650c5e608200", "f92e034868b78a4b5bf640b20cb73bbee2c2c97379fc66733b31c2ee842382b83d1ffbea9e16c54b6ae679e5257e29d65e988dc6846d4417fd52af8df9e7a7337bb7923c115a97ef005da7298393fa0bed47a21dfe94439ac4353b5c4d693df11a8f6f0e77d8f7fe180c4d3a416b2904906b7ddd592b0e7efd7fccccd06ae9e244eb781f0c0c18e91c8a493c4a9afae5d57511cd7f07132c17e7371457b1db4f0aebafb8b4041615dfe7af059e2cdaa9cb678ae33b181f283017d7b1a0a0a05fa7eb301f1d0e041ef5e26285c76e9f62cf44ddfd"}, 0xe9, 0x1)
lsetxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=@random={'osx.', 'u:object_r:app_data_file:s0:c512,c768\x00'}, &(0x7f0000000380)='security.selinux\x00', 0x11, 0x3)
syz_failure_sync(0x0, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)={0x0, 0xfb, 0x10e, 0x1, 0x25, "5b3f26bdccb6569e7e3fc31aac76d674", "4e9e4a5506cc872087ba6235cb42045e4e1576d95883fa144e53aa6119c3bface808f017df5425b5f7efbb32889f85f0944bb14c3b01640539d88330be63102da782d9dca65c711c00221a12376041307939ef12d2cd829273a3c54e759d9359fafa3660c590c5810c52851c4ff545d159614e4800be88c1b5a059c31c4add028e7d4b574b45e4b47639723471c6f9a72f3e51dd9ebc10286d83c92a7e1ad04e2f286c38979f4245ba7b5a4b286251a9604f5b8640a28efab1b28a2a719f36d8a837bc3a7beb8f25f050a1408a319a8b3420d6b14c43a00e4a2d21ce492ebe02b8ce81f5e543e6f7087c282483fcd42aeb82d9820c3c296797"}, 0x10e, 0x0)
setxattr$incfs_id(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)={'0000000000000000000000000000000', 0x30}, 0x20, 0x2)
stat(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f0000000780)=@v3={0x3000000, [{0x7, 0x1000}, {0x9, 0x7}], r0}, 0x18, 0x2)
renameat(0xffffffffffffffff, &(0x7f00000007c0)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f0000000800)='./file0\x00')
setxattr$user(&(0x7f0000000840)='./file0/file0\x00', &(0x7f0000000880), &(0x7f00000008c0)='-*\xf2,\x00', 0x5, 0x3)
setxattr$incfs_id(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000940), &(0x7f0000000980)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
r1 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x521100, 0x10)
linkat(r1, &(0x7f00000009c0)='./file1\x00', r1, &(0x7f0000000c00)='./file1\x00', 0x1400)
link(&(0x7f0000000a80)='./file0\x00', &(0x7f0000000ac0)='./file0\x00')
rmdir(&(0x7f0000000b00)='./file0/file0\x00')
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000b40), &(0x7f0000000b80)='./file0\x00', 0x8, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f0000000d00)='./file0/file0\x00', &(0x7f0000000bc0), &(0x7f0000000c40)=@v2={0x2000000, [{0x9c, 0x4}, {0x1f, 0x4}]}, 0x14, 0x2)
link(&(0x7f0000000c80)='./file0/file0\x00', &(0x7f0000000cc0)='./file0/file0\x00')
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5928
remove dir: /root/glusterfs-client/dfs-0-11
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
Node-1:/root/daemon-log.727
remove dir time 44
-----finish removing dir
receive_execute: 26, 67
receive_execute: 16, 68
mkdir time 22
executor 3 create dir /root/glusterfs-client/dfs-0-12 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-12
receive_execute: 7, 67
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 4, 1
receive_execute: 58, 71
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5816, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5816, flag collect 0
----- executor 3 signal number : 1149
----- completed 1
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 5734, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5734, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 44, 0, 0
execute_one loop: 0, 0, 44
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1983
----- executor 1 executes write_coverage_signal cov->size 5775, flag collect 0
----- executor 1 signal number : 432
----- executor 1 executes write_coverage_signal cov->size 165, flag collect 0
----- executor 1 signal number : 87
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 9
executor 1 server cover_cnt 4 output_pos_value 2524
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
execute_call 0, 65, 0, 0
execute_one loop: 0, 0, 65
----- executor 3 write_call_output, size 0, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 65, 0, 0
execute_one loop: 0, 0, 65
cover_reset in execute_call
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
-----executor 1 collect shmids 34
----- directly resend shmid 34
-----executor 1 collect shmids 35
----- directly resend shmid 35
-----executor 1 collect shmids 36
----- directly resend shmid 36
-----executor 1 collect shmids 37
----- directly resend shmid 37
-----executor 1 collect shmids 38
----- directly resend shmid 38
-----executor 1 collect shmids 39
----- directly resend shmid 39
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
-----executor 1 collect shmids 40
----- directly resend shmid 40
-----executor 1 collect shmids 41
----- directly resend shmid 41
-----executor 1 collect shmids 42
----- directly resend shmid 42
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 43, 0, 0
execute_one loop: 0, 0, 43
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
==727==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2868, 0, 0
execute_one loop: 0, 0, 2868
cover_reset in execute_call
execute_call 0, 2868, 0, 0
execute_one loop: 0, 0, 2868
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3020, 0
execute_one time: 2, 3020
----- executor 3 write_call_output, size 8634, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 8634, flag collect 0
----- executor 3 signal number : 325
----- completed 21
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 448, write pid:448
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 6, 0, 2
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 1, 3030, 1
execute_one time: 2, 3032
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
2023/03/31 10:53:42 for select break: 1
2023/03/31 10:53:42 --------- executor 3 receive reply, reply.done 1
----- executor 1 signal number : 40
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2149
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 2 signal number : 100
----- executor 2 executes write_coverage_signal cov->size 123, flag collect 0
----- executor 2 signal number : 47
----- executor 1 signal number : 24
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 15502, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 1 signal number : 208
----- executor 0 signal number : 1912
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 12754, flag collect 0
----- executor 1 signal number : 5
----- executor 2 signal number : 340
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 0 signal number : 450
----- executor 0 executes write_coverage_signal cov->size 2059, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 24
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 1411
----- executor 2 executes write_coverage_signal cov->size 973, flag collect 0
----- executor 2 signal number : 240
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 3474, flag collect 0
----- executor 2 signal number : 380
----- executor 2 executes write_coverage_signal cov->size 1216, flag collect 0
----- executor 2 signal number : 93
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1449
----- executor 0 executes write_coverage_signal cov->size 1023, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 223
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1332, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 186
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 3352, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 317
time breakdown 3: 130, 3039, 0
before receive testcase: 0 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 6388, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 559
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 2 signal number : 849
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 308
----- executor 2 signal number : 568
----- executor 2 executes write_coverage_signal cov->size 24288, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 37
----- executor 2 signal number : 554
----- executor 1 executes write_coverage_signal cov->size 5775, flag collect 0
----- executor 1 signal number : 6
executor 2 server cover_cnt 15 output_pos_value 6791
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 780
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1068, flag collect 0
----- executor 1 signal number : 131
executor 0 server cover_cnt 14 output_pos_value 6239
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1838, flag collect 0
----- executor 1 signal number : 182
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 607
executor 1 server cover_cnt 47 output_pos_value 3935
2023/03/31 10:53:42 for select break: 1
2023/03/31 10:53:42 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:42 for select break: 1
2023/03/31 10:53:42 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:42 for select break: 1
2023/03/31 10:53:42 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:53:42 wg wait finish
2023/03/31 10:53:42 ------ all executors finish execution
2023/03/31 10:53:42 exec time: 3122
2023/03/31 10:53:42 ----- PS len: 4
2023/03/31 10:53:42 [SERVER] executor 0 has 14 replies
2023/03/31 10:53:42 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:42 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:42 [SERVER] executor 2 has 15 replies
2023/03/31 10:53:42 [SERVER] executor 1 has 47 replies
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 1983 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 1912 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 432 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 87 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 40 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 2149 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 100 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 47 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 450 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 340 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
time breakdown 1: 93, 3055, 0
before receive testcase: 0 0
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 1411 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 240 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 380 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 1449 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 223 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 24 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 186 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 317 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 559 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 308 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 0 receive 780 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 93 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 849 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 568 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 2 receive 554 signal and 0 cover from userspace component
2023/03/31 10:53:42 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 325 signal and 0 cover from executor 3
2023/03/31 10:53:42 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 208 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 24 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 37 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 131 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 182 signal and 0 cover from userspace component
2023/03/31 10:53:42 ------- fuzzer executor 1 receive 607 signal and 0 cover from userspace component
time breakdown 2: 74, 3053, 0
before receive testcase: 0 0
2023/03/31 10:53:42 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:42 ----- no new client coverage: false, true
time breakdown 0: 84, 3053, 0
before receive testcase: 0 0
2023/03/31 10:53:42 mutate testcase with failures
2023/03/31 10:53:42 ----- mutateArg()
2023/03/31 10:53:42 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:42 disable threaded and collide
2023/03/31 10:53:42 prog length: 6
2023/03/31 10:53:42 prog length: 22
2023/03/31 10:53:42 HasCrashFail:true HasNetFail:false
10:53:42 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_smack_transmute(&(0x7f0000000100)='./file0/file0\x00', &(0x7f0000000000), &(0x7f0000000080), 0x4, 0x1)
r0 = open(&(0x7f00000000c0)='./file0\x00', 0x400280, 0x62)
symlink(&(0x7f0000000280)='./file0\x00', &(0x7f0000000140)='./file0\x00')
lchown(&(0x7f0000000180)='./file0\x00', 0xee01, 0xffffffffffffffff)
unlink(&(0x7f00000001c0)='./file0\x00')
setxattr$smack_xattr_label(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000040)='security.SMACK64IPOUT\x00', &(0x7f0000000240)=ANY=[@ANYRES32=r0], 0x5, 0x3)
faccessat(r0, &(0x7f00000002c0)='./file0/file1\x00', 0x91)
r1 = openat(r0, &(0x7f0000000300)='./file0\x00', 0x400400, 0x8)
chdir(&(0x7f0000000340)='./file0\x00')
setxattr$trusted_overlay_origin(&(0x7f0000000380)='./file0\x00', &(0x7f00000003c0), &(0x7f0000000400), 0x2, 0x2)
faccessat(r1, &(0x7f0000000440)='./file0\x00', 0x74)
rename(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)='./file0\x00')
truncate(&(0x7f0000000500)='./file0\x00', 0x7)
rmdir(&(0x7f0000000540)='./file1\x00')
lsetxattr$security_evm(&(0x7f0000000580)='./file1\x00', &(0x7f00000005c0), &(0x7f0000000600)=@sha1={0x1, "1a8a3cd1296f449d4dccf75d0e3e0ded3adcfea2"}, 0x15, 0x1)
setxattr$trusted_overlay_redirect(&(0x7f0000000640)='./file0/file0\x00', &(0x7f0000000680), &(0x7f00000006c0)='./file0\x00', 0x8, 0x2)
syz_failure_sync(0x0, 0x3)
fcntl$F_GET_FILE_RW_HINT(r0, 0x40d, &(0x7f0000000700))
lremovexattr(&(0x7f0000000740)='./file0/file0\x00', &(0x7f0000000780)=ANY=[@ANYBLOB="757365722e7d285b78272d2dc127215b75d8be0a00"])
setxattr$incfs_size(&(0x7f00000007c0)='.\x00', &(0x7f0000000800), &(0x7f0000000840)=0x5, 0x8, 0x1)
syz_failure_sync(0x1, 0x3)
setxattr$system_posix_acl(&(0x7f0000000880)='./file1\x00', &(0x7f00000008c0)='system.posix_acl_default\x00', &(0x7f0000000ac0)={{}, {0x1, 0x5}, [{0x2, 0x6}, {0x2, 0x2, 0xee01}, {0x2, 0x0, 0xffffffffffffffff}, {0x2, 0x4, 0xee00}, {0x2, 0x1, 0xee00}, {}], {0x4, 0x7}, [{0x8, 0x1}], {0x10, 0x2}, {0x20, 0x2}}, 0x5c, 0x2)
---

end of program
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5304
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 2: prog_data_offset 1568, prog_size 8
remove dir: /root/glusterfs-client/dfs-0-12
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
remove dir time 21
-----finish removing dir
receive_execute: 7, 55
receive_execute: 6, 54
receive_execute: 8, 54
mkdir time 33
executor 3 create dir /root/glusterfs-client/dfs-0-13 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-13
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 2, 1
receive_execute: 16, 61
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5818, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5818, flag collect 0
----- executor 3 signal number : 1149
----- completed 1
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 0
----- executor 3 signal number : 321
----- completed 3
execute_call 0, 24, 0, 1
execute_one loop: 0, 0, 25
cover_reset in execute_call
Node-1:/root/daemon-log.780
----- executor 3 write_call_output, size 4557, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 4557, flag collect 0
----- executor 3 signal number : 616
----- completed 4
execute_call 0, 18, 0, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 2553, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 2553, flag collect 0
----- executor 3 signal number : 136
----- completed 5
execute_call 0, 13, 0, 0
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 6657, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 6657, flag collect 0
----- executor 3 signal number : 6
----- completed 6
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 9
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 10
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 12
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 13
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 2
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5734, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5734, flag collect 0
----- executor 3 signal number : 2
----- completed 15
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 16
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 104, 0, 0
execute_one loop: 0, 0, 104
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 882, flag collect 0
----- executor 0 signal number : 314
----- executor 0 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 617
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2572
----- executor 0 executes write_coverage_signal cov->size 20062, flag collect 0
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3167
----- executor 0 executes write_coverage_signal cov->size 1880, flag collect 0
----- executor 0 signal number : 208
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 0 signal number : 62
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1557
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1330
executor 0 server cover_cnt 15 output_pos_value 10166
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 51
----- directly resend shmid 51
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 67, 0, 0
execute_one loop: 0, 0, 67
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 2
----- completed 19
execute_call 0, 65, 0, 1
execute_one loop: 0, 0, 66
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2, 0, 0
execute_one loop: 0, 0, 2
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 69, 0, 0
execute_one loop: 0, 0, 69
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 58
----- directly resend shmid 58
-----executor 1 collect shmids 59
----- directly resend shmid 59
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==780==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
Node-1:/root/daemon-log.831
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
==831==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.815
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 2766, 0, 1
execute_one loop: 0, 0, 2767
cover_reset in execute_call
execute_call 0, 2766, 0, 0
execute_one loop: 0, 0, 2766
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3005, 0
execute_one time: 1, 3005
----- executor 3 write_call_output, size 8891, pid 449, write pid:449
----- executor 3 executes write_coverage_signal cov->size 8891, flag collect 0
----- executor 3 signal number : 264
----- completed 22
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
executor 3, execute_one inner time: 0, 3008, 0
execute_one time: 3, 3008
2023/03/31 10:53:45 for select break: 1
2023/03/31 10:53:45 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 845, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 68, flag collect 0
----- executor 1 signal number : 54
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 329
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 443
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 77, 3013, 0
before receive testcase: 0 0
----- executor 0 signal number : 94
----- executor 0 executes write_coverage_signal cov->size 896, flag collect 0
----- executor 0 signal number : 79
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 209
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 11, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1745
----- executor 1 executes write_coverage_signal cov->size 111, flag collect 0
----- executor 1 signal number : 38
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 193
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 36
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 1 signal number : 2141
----- executor 1 executes write_coverage_signal cov->size 5778, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 446
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 2570
----- executor 2 executes write_coverage_signal cov->size 3826, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 3396, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 69
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 77, flag collect 0
----- executor 2 signal number : 15
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 21
----- executor 1 executes write_coverage_signal cov->size 457, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 587
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 2 signal number : 1049
----- executor 2 executes write_coverage_signal cov->size 20145, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 546
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 596
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1265
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 902
----- executor 0 executes write_coverage_signal cov->size 22375, flag collect 0
----- executor 2 signal number : 1486
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 692
----- executor 0 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 0 signal number : 160
----- executor 0 executes write_coverage_signal cov->size 21426, flag collect 0
----- executor 1 signal number : 2392
----- executor 1 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 175, flag collect 0
----- executor 1 signal number : 14
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 1 signal number : 17
----- executor 1 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 1 signal number : 139
----- executor 1 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2091
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 306, flag collect 0
----- executor 2 signal number : 14
----- executor 2 executes write_coverage_signal cov->size 856, flag collect 0
----- executor 2 signal number : 139
----- executor 2 executes write_coverage_signal cov->size 18475, flag collect 0
----- executor 0 signal number : 266
----- executor 0 executes write_coverage_signal cov->size 6, flag collect 0
----- executor 0 signal number : 1
----- executor 1 signal number : 18
----- executor 1 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 1 signal number : 46
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 24392, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1421
----- executor 2 executes write_coverage_signal cov->size 15098, flag collect 0
----- executor 2 signal number : 630
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1550
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1502
----- executor 0 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 0 signal number : 86
----- executor 0 executes write_coverage_signal cov->size 1880, flag collect 0
----- executor 0 signal number : 129
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 1334
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 2 signal number : 1740
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 83
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 131
----- executor 1 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 1 signal number : 84
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2002
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1089
----- executor 2 executes write_coverage_signal cov->size 20342, flag collect 0
----- executor 2 signal number : 1164
----- executor 2 executes write_coverage_signal cov->size 21282, flag collect 0
----- executor 0 signal number : 950
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 1
----- executor 1 signal number : 358
----- executor 1 executes write_coverage_signal cov->size 29944, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1905
----- executor 1 executes write_coverage_signal cov->size 25599, flag collect 0
----- executor 2 signal number : 803
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1438
----- executor 2 executes write_coverage_signal cov->size 8774, flag collect 0
----- executor 2 signal number : 665
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1323
executor 0 server cover_cnt 62 output_pos_value 17465
----- executor 1 signal number : 997
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1736
----- executor 1 executes write_coverage_signal cov->size 21225, flag collect 0
----- executor 1 signal number : 736
----- executor 2 signal number : 1846
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2105
----- executor 2 executes write_coverage_signal cov->size 15339, flag collect 0
executor 1 server cover_cnt 37 output_pos_value 20532
----- executor 2 signal number : 921
executor 2 server cover_cnt 27 output_pos_value 23129
2023/03/31 10:53:45 for select break: 1
2023/03/31 10:53:45 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:45 for select break: 1
2023/03/31 10:53:45 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:45 for select break: 1
2023/03/31 10:53:45 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:53:45 wg wait finish
2023/03/31 10:53:45 ------ all executors finish execution
2023/03/31 10:53:45 exec time: 3090
2023/03/31 10:53:45 ----- PS len: 4
2023/03/31 10:53:45 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:45 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 [SERVER] executor 0 has 62 replies
2023/03/31 10:53:45 fuzzer receive 321 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 314 signal and 0 cover from userspace component
2023/03/31 10:53:45 [SERVER] executor 1 has 37 replies
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 54 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 616 signal and 0 cover from executor 3
2023/03/31 10:53:45 [SERVER] executor 2 has 27 replies
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 329 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 2570 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1049 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 596 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1745 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 38 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 2141 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 446 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1486 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 2091 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 139 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1421 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 630 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1740 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1089 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 617 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 2572 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1164 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 803 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1438 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 665 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 69 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 21 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 587 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 1846 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 2105 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 2 receive 921 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 546 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1265 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 2392 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 139 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 18 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 46 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1550 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1334 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 136 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 6 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 3167 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 208 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1557 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1330 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 443 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 94 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 79 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 209 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 193 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 902 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 692 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 160 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 266 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1502 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 86 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 129 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 83 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 950 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 0 receive 1323 signal and 0 cover from userspace component
2023/03/31 10:53:45 fuzzer receive 2 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:45 fuzzer receive 264 signal and 0 cover from executor 3
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 131 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 84 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 2002 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 358 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1905 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 997 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 1736 signal and 0 cover from userspace component
2023/03/31 10:53:45 ------- fuzzer executor 1 receive 736 signal and 0 cover from userspace component
time breakdown 0: 62, 3033, 0
before receive testcase: 0 0
time breakdown 2: 62, 3035, 0
before receive testcase: 0 0
time breakdown 1: 60, 3036, 0
before receive testcase: 0 0
2023/03/31 10:53:45 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:45 ----- no new client coverage: false, true
2023/03/31 10:53:45 mutate testcase with failures
2023/03/31 10:53:45 ----- mutateArg()
2023/03/31 10:53:45 ----- insertCall()
2023/03/31 10:53:45 ----- mutateArg()
2023/03/31 10:53:45 ----- mutateArg()
2023/03/31 10:53:45 ----- insertCall()
2023/03/31 10:53:45 ----- mutateArg()
2023/03/31 10:53:45 ----- insertCall()
2023/03/31 10:53:45 ----- insertCall()
2023/03/31 10:53:45 ----- mutateArg()
2023/03/31 10:53:45 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:45 disable threaded and collide
2023/03/31 10:53:45 prog length: 6
2023/03/31 10:53:45 prog length: 22
2023/03/31 10:53:46 HasCrashFail:true HasNetFail:false
10:53:46 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
fcntl$setflags(0xffffffffffffffff, 0x2, 0x1)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)=ANY=[@ANYRESOCT], 0x4, 0x1)
setxattr$incfs_metadata(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)="7ddab8f148f2b37f22b3d8a23b49ffbe369600000000000000", 0x19, 0x0)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000140))
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000180), &(0x7f00000001c0)='\x00', 0x1, 0x2)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000200), &(0x7f0000000480)={'U-', 0x8}, 0x16, 0x2)
r0 = openat(0xffffffffffffffff, &(0x7f0000000280)='./file0\x00', 0x141280, 0x0)
ftruncate(r0, 0x7)
pwrite64(0xffffffffffffffff, &(0x7f00000002c0)="b241d8e290cc3651a6e18e9657c1f185fdeab169a56324823f7ec524482c9416f5c0b09bf3f309f7a79b0de08f0ac9bf52dae63900ae98b3684846a09b8dfa288dad0da8c3f6fd107c2dfed817a3eb5e2826e84e5184d7e3a589cf7954d10cda2e1d23f33f6e582d06b852f98f423025baab0dbb81286505421e6f137e3db0917d710808b4e215ba4bbd3bba668a21faf58113e8508d437f74590f2ec5e61d08772db88240c8abce98486da4343b73b19c4fff0a1766a655cf271950d43dd138e3691b371faae49746fd49937ed9d0d890aa0383fe28dde8ed88d3eacfa40e4c5fd198eaf44f35370ea833a1880016", 0xef, 0x6)
setxattr$incfs_size(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)=0x42cc, 0x8, 0x3)
rename(&(0x7f00000009c0)='./file0\x00', &(0x7f00000004c0)='./file0\x00')
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000500), &(0x7f0000000540)={'L+', 0x8}, 0x16, 0x7)
lchown(&(0x7f0000000580)='./file0\x00', 0x0, 0xffffffffffffffff)
mkdir(&(0x7f00000005c0)='./file0\x00', 0x4)
setxattr$security_ima(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680)=ANY=[@ANYBLOB="04000000000000b03176d328493841"], 0xf, 0x2)
pwrite64(r0, &(0x7f00000006c0)="ad46ae45f940fd98ff6c50195c0b007afe6ee9f813ca53c2d30d33a0499dbb3e2286df12e8826cbcef4f6891fedc6ceab5bef8317f080364d2feee91853159f38b684d3ecdfee7137f1516b88d2db02e7d88a122050f6ab2e48c8e773bf0d0d1b2b538dc385fd1ce", 0x68, 0x100)
lsetxattr$security_smack_transmute(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x4, 0x2)
write(r0, &(0x7f0000000800)="da767e8634bebf6f5fbebef748c5cfb1151c1feaf10e1f23622b91cfa7382731702c87325462dbc17650bdb3ee7915138d484ce50321766281bfd0087525f4f9986149c4aae8927ab9f3344bf5129dee0563532eaedef49b037734cfcb8b314c6794c89aa71be77ae9aedfaa5052f0737dcf7e5298a8b4ac2931bb709be630b8eb45133d8f969500cad124a321cfe6a5ea68e52e98216128676cf7597b2506c2e379c275e92f42613a4e87aeda5f63e6ceae6ee95cbdc6ad1395c34f220db8551ba72c4f759e519dcc107d5b6d8e44db9faa35285c360ae2eab0dd02fa5130c2b2afa1", 0xe3)
r1 = openat(r0, &(0x7f0000000900)='./file0\x00', 0x241, 0x37)
fsetxattr$security_ima(r1, &(0x7f0000000940), &(0x7f0000000980)=@v1={0x2, "7a92f943958e0ec7015ad57a37a4"}, 0xf, 0x3)
syz_failure_sync(0x1, 0x3)
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4736
remove dir: /root/glusterfs-client/dfs-0-13
opendir(/root/glusterfs-client/dfs-0-13) failedremove dir time 117
-----finish removing dir
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-14 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-14
receive_execute: 14, 146
receive_execute: 14, 145
receive_execute: 16, 146
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 31, 151
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 8, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
executor 3 waits for recv msg
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Node-0:/root/daemon-log.934
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
execute_call 0, 51, 0, 0
execute_one loop: 0, 0, 51
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 52, 0, 0
execute_one loop: 0, 0, 52
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 4
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 13
----- completed 11
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5753, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 5753, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 8859, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 8859, flag collect 0
----- executor 3 signal number : 419
----- completed 15
execute_call 0, 14, 0, 0
execute_one loop: 0, 0, 14
cover_reset in execute_call
----- executor 3 write_call_output, size 3680, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 3680, flag collect 0
----- executor 3 signal number : 624
----- completed 16
execute_call 0, 23, 0, 1
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2725, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 2725, flag collect 0
----- executor 3 signal number : 7
----- completed 18
execute_call 0, 18, 1, 0
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
execute_call 0, 84, 0, 0
execute_one loop: 0, 0, 85
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
==815==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==934==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2984, 0, 0
execute_one loop: 0, 0, 2984
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3129, 1
execute_one time: 2, 3130
----- executor 3 write_call_output, size 0, pid 450, write pid:450
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 2985, 0, 0
execute_one loop: 0, 0, 2985
executor 3, execute_one inner time: 1, 3121, 0
execute_one time: 3, 3123
2023/03/31 10:53:49 for select break: 1
2023/03/31 10:53:49 --------- executor 3 receive reply, reply.done 1
time breakdown 3: 182, 3128, 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 0 signal number : 595
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 2204, flag collect 0
----- executor 1 signal number : 374
----- executor 1 executes write_coverage_signal cov->size 1115, flag collect 0
----- executor 1 signal number : 509
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
executor 2 write_server_output
----- executor 0 signal number : 104
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 224
----- executor 0 executes write_coverage_signal cov->size 50, flag collect 0
----- executor 0 signal number : 41
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1527, flag collect 0
----- executor 2 signal number : 316
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 515
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2704
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 3278, flag collect 0
----- executor 1 signal number : 303
----- executor 1 executes write_coverage_signal cov->size 18056, flag collect 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 107
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2359
executor 0 server cover_cnt 34 output_pos_value 3471
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32188, flag collect 0
----- executor 2 signal number : 2923
----- executor 1 signal number : 2975
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 1 signal number : 12
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1337, flag collect 0
----- executor 2 signal number : 15
----- executor 1 signal number : 224
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1978, flag collect 0
----- executor 1 signal number : 200
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 1955, flag collect 0
----- executor 1 signal number : 196
----- executor 1 executes write_coverage_signal cov->size 2255, flag collect 0
----- executor 2 signal number : 0
----- executor 1 signal number : 263
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 17854, flag collect 0
----- executor 2 signal number : 390
----- executor 2 executes write_coverage_signal cov->size 3463, flag collect 0
----- executor 1 signal number : 1489
----- executor 1 executes write_coverage_signal cov->size 2471, flag collect 0
----- executor 2 signal number : 21
----- executor 1 signal number : 265
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 25005, flag collect 0
----- executor 2 signal number : 3076
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 34, flag collect 0
----- executor 1 signal number : 901
----- executor 2 signal number : 13
----- executor 2 executes write_coverage_signal cov->size 2244, flag collect 0
----- executor 2 signal number : 174
2023/03/31 10:53:49 for select break: 1
2023/03/31 10:53:49 --------- executor 0 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
executor 1 server cover_cnt 20 output_pos_value 11119
----- executor 2 signal number : 0
time breakdown 0: 162, 3140, 0
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 8842, flag collect 0
----- executor 2 signal number : 595
----- executor 2 executes write_coverage_signal cov->size 9137, flag collect 0
----- executor 2 signal number : 420
----- executor 2 executes write_coverage_signal cov->size 4794, flag collect 0
----- executor 2 signal number : 743
----- executor 2 executes write_coverage_signal cov->size 4806, flag collect 0
----- executor 2 signal number : 118
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:49 for select break: 1
2023/03/31 10:53:49 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 1428
----- executor 2 executes write_coverage_signal cov->size 6464, flag collect 0
----- executor 2 signal number : 291
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1265
----- executor 2 executes write_coverage_signal cov->size 27081, flag collect 0
----- executor 2 signal number : 1065
----- executor 2 executes write_coverage_signal cov->size 1976, flag collect 0
time breakdown 1: 159, 3142, 0
before receive testcase: 0 0
----- executor 2 signal number : 208
executor 2 server cover_cnt 25 output_pos_value 13751
2023/03/31 10:53:49 for select break: 1
2023/03/31 10:53:49 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:49 wg wait finish
2023/03/31 10:53:49 ------ all executors finish execution
2023/03/31 10:53:49 exec time: 3294
2023/03/31 10:53:49 ----- PS len: 4
2023/03/31 10:53:49 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 [SERVER] executor 0 has 34 replies
2023/03/31 10:53:49 [SERVER] executor 1 has 20 replies
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 374 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 509 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 515 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
time breakdown 2: 160, 3149, 0
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 2704 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 303 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 107 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 [SERVER] executor 2 has 25 replies
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 2975 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 316 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 12 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 224 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 200 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 2923 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 390 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 21 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 3076 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 13 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 174 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 595 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 595 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 419 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 624 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 420 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 743 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 118 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 104 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 224 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 1428 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 291 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 1265 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 196 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 7 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 1065 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 263 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 1489 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 2 receive 208 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 41 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:49 ------- fuzzer executor 0 receive 2359 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 265 signal and 0 cover from userspace component
2023/03/31 10:53:49 ------- fuzzer executor 1 receive 901 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:53:49 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:49 ----- no new client coverage: false, true
2023/03/31 10:53:49 mutate testcase with failures
2023/03/31 10:53:49 ----- insertCall()
2023/03/31 10:53:49 ----- insertCall()
2023/03/31 10:53:49 ----- mutateArg()
2023/03/31 10:53:49 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:49 disable threaded and collide
2023/03/31 10:53:49 prog length: 6
2023/03/31 10:53:49 prog length: 22
2023/03/31 10:53:49 HasCrashFail:true HasNetFail:false
10:53:49 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x202280, 0x1b4)
close(r1)
chdir(&(0x7f0000000100)='./file1\x00')
symlink(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
r2 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x10000, 0x80)
sendfile(r2, r0, &(0x7f0000000200)=0x1ff, 0x6)
syz_failure_sync(0x0, 0x3)
setxattr(&(0x7f0000000240)='./file1\x00', &(0x7f0000000280)=@random={'btrfs.', '!\x00'}, &(0x7f0000000380)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x1)
syz_failure_sync(0x1, 0x3)
fcntl$addseals(r0, 0x409, 0x4)
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000700)=ANY=[@ANYBLOB="030310000007ff330306a934ea38d360617b49a5f99af8009af1e6b52ea86a8b72754ff09afa34b835e00030eb9aba8f299a7b7a3924eb9ca8cc89d3d6b8fd0eccc9e7789203121025b27cacb6e7d84370635d69f1a71abed804d9f8bd8598f9d28987dee6d008356f4be898b8bd7a241145f3df3b81f25417467545296cde35af911fc61eeea8049c4edc2a7790ed57d8f4859cf8dd5854e5d9842df752446dd3d05da0a76792a333de5659ca28695ba38f6c0e39b6a58ecb1582e21eddd16a6462f99102a44078ca5cdc88b45f7f0192c6e1df638a06f691bfae657c910d2b1eb37a1c92fb04606e857ad7490fb3d2de72a695e07e4971cfd5d90ade68c869b0d58919fc9dee80156c151ff4bd3273cce94687aaa975a4779df2561219fceff5d06b614519903e9ea8526299500f1e062d397459af"], 0xa3, 0x2)
lsetxattr$security_selinux(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480), &(0x7f00000004c0)='system_u:object_r:dmesg_exec_t:s0\x00', 0x22, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000500)='./file0/../file0\x00', &(0x7f0000000540), &(0x7f0000000580)='./file0\x00', 0x8, 0x3)
r3 = fcntl$dupfd(r2, 0x406, r0)
fdatasync(r3)
lsetxattr$security_ima(&(0x7f00000005c0)='./file0/../file0\x00', &(0x7f0000000600), &(0x7f0000000640)=@v1={0x2, "31dddab73f72b410d09a8a50"}, 0xd, 0x0)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000680)='security.SMACK64IPIN\x00', &(0x7f00000006c0)={'\\:%{&[++'}, 0x9, 0x3)
r4 = dup(r0)
r5 = fcntl$getown(r0, 0x9)
fcntl$setown(r4, 0x8, r5)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4208
remove dir: /root/glusterfs-client/dfs-0-14
Node-0:/root/daemon-log.978
remove dir time 61
-----finish removing dir
receive_execute: 11, 93
mkdir time 31
executor 3 create dir /root/glusterfs-client/dfs-0-15 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-15
receive_execute: 18, 93
receive_execute: 19, 94
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 1, 0, 0
execute_one time: 1, 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 26, 103
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 1
execute_call 0, 6, 0, 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 13
----- completed 5
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 8476, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 8476, flag collect 0
----- executor 3 signal number : 308
----- completed 6
execute_call 0, 24, 0, 0
execute_one loop: 0, 0, 24
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 57, 0, 0
execute_one loop: 0, 0, 57
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 3764, flag collect 0
----- executor 0 signal number : 1400
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 107
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 0 signal number : 9
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 775
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 10
executor 0 server cover_cnt 10 output_pos_value 2348
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 54, 0, 0
execute_one loop: 0, 0, 54
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 55, 0, 0
execute_one loop: 0, 0, 55
cover_reset in execute_call
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 8155, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 8155, flag collect 0
----- executor 3 signal number : 448
----- completed 10
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 10, 0, 0
execute_one loop: 0, 0, 10
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
==978==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2749, 0, 0
execute_one loop: 0, 0, 2749
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 2870, 0
execute_one time: 3, 2871
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 2749, 0, 0
execute_one loop: 0, 0, 2749
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17956, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 17956, flag collect 0
----- executor 3 signal number : 319
----- completed 13
execute_call 0, 20, 0, 1
execute_one loop: 0, 0, 21
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 452, write pid:452
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 2893, 0
execute_one time: 4, 2895
2023/03/31 10:53:52 for select break: 1
executor 2 write_server_output
2023/03/31 10:53:52 --------- executor 3 receive reply, reply.done 1
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 19129, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 2 signal number : 7
----- executor 0 signal number : 397
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 2098
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5939, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 19117, flag collect 0
----- executor 1 signal number : 278
----- executor 1 executes write_coverage_signal cov->size 8312, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 28175, flag collect 0
----- executor 2 signal number : 2098
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 5944, flag collect 0
----- executor 1 signal number : 2204
----- executor 0 signal number : 206
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 867, flag collect 0
----- executor 2 signal number : 277
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 10346, flag collect 0
----- executor 1 signal number : 190
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 3616, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 468
----- executor 1 executes write_coverage_signal cov->size 1935, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 113
----- executor 1 executes write_coverage_signal cov->size 22117, flag collect 0
----- executor 2 signal number : 15
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 27121, flag collect 0
----- executor 1 signal number : 999
----- executor 1 executes write_coverage_signal cov->size 17529, flag collect 0
time breakdown 3: 129, 2902, 0
before receive testcase: 0 1
----- executor 1 signal number : 121
----- executor 1 executes write_coverage_signal cov->size 28051, flag collect 0
----- executor 2 signal number : 2386
----- executor 0 signal number : 984
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 1012, flag collect 0
----- executor 2 signal number : 202
----- executor 1 signal number : 927
----- executor 1 executes write_coverage_signal cov->size 26844, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3468, flag collect 0
----- executor 2 signal number : 423
----- executor 2 executes write_coverage_signal cov->size 1155, flag collect 0
----- executor 1 signal number : 449
----- executor 2 signal number : 125
----- executor 2 executes write_coverage_signal cov->size 16038, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1104, flag collect 0
----- executor 0 signal number : 103
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 server cover_cnt 15 output_pos_value 7918
----- executor 2 signal number : 617
----- executor 2 executes write_coverage_signal cov->size 27326, flag collect 0
----- executor 0 signal number : 33
----- executor 0 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
executor 0 server cover_cnt 59 output_pos_value 4300
----- executor 2 signal number : 667
----- executor 2 executes write_coverage_signal cov->size 29127, flag collect 0
2023/03/31 10:53:52 for select break: 1
2023/03/31 10:53:52 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 549
----- executor 2 executes write_coverage_signal cov->size 30930, flag collect 0
time breakdown 1: 111, 2919, 0
before receive testcase: 0 0
----- executor 2 signal number : 1087
2023/03/31 10:53:52 for select break: 1
2023/03/31 10:53:52 --------- executor 0 receive reply, reply.done 1
time breakdown 0: 113, 2920, 0
before receive testcase: 0 0
executor 2 server cover_cnt 15 output_pos_value 8504
2023/03/31 10:53:52 for select break: 1
2023/03/31 10:53:52 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:52 wg wait finish
2023/03/31 10:53:52 ------ all executors finish execution
2023/03/31 10:53:52 exec time: 3017
2023/03/31 10:53:52 ----- PS len: 4
2023/03/31 10:53:52 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:52 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 308 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 [SERVER] executor 1 has 15 replies
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 2098 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 448 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 319 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 278 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 2204 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 190 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 2: 104, 2923, 0
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 [SERVER] executor 2 has 15 replies
2023/03/31 10:53:52 [SERVER] executor 0 has 59 replies
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 1400 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 107 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 9 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 775 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 468 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 113 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 999 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 121 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 2098 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 927 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 1 receive 449 signal and 0 cover from userspace component
2023/03/31 10:53:52 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 277 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 2386 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 202 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 423 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 10 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 397 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 125 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 617 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 667 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 549 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 2 receive 1087 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 206 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 984 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 103 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 33 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:52 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:52 ----- no new client coverage: false, true
before receive testcase: 0 0
2023/03/31 10:53:52 mutate testcase with failures
2023/03/31 10:53:52 ----- insertCall()
2023/03/31 10:53:52 ----- insertCall()
2023/03/31 10:53:52 ----- insertCall()
2023/03/31 10:53:52 ----- insertCall()
2023/03/31 10:53:52 ----- mutateArg()
2023/03/31 10:53:52 ----- mutateArg()
2023/03/31 10:53:52 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:52 disable threaded and collide
2023/03/31 10:53:52 prog length: 6
2023/03/31 10:53:52 prog length: 22
2023/03/31 10:53:52 HasCrashFail:true HasNetFail:false
10:53:52 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
setxattr$security_smack_transmute(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080), 0x4, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x202280, 0x1b4)
close(r1)
chdir(&(0x7f0000000100)='./file1\x00')
symlink(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
syz_failure_sync(0x1, 0x3)
r2 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x10000, 0x80)
sendfile(r2, r0, &(0x7f0000000200)=0x1ff, 0x6)
setxattr(&(0x7f0000000240)='\x00', &(0x7f0000000280)=@random={'btrfs.', '!\x00'}, &(0x7f00000002c0)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x3)
fcntl$addseals(r0, 0x409, 0x4)
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=@v2={0x3, 0x3, 0x10, 0x7ff, 0x9a, "f1e6b52ea86a8b72754ff09afa34b835e00030eb9aba8f299a7b7a3924eb9ca8cc89d3d6b8fd0eccc9e7789203121025b27cacb6e7d84370635d69f1a71abed804d9f8bd9f98f9d28987dee6d008356f4be898b8bd7a241145f3df3b81f25417467545296cde35af911fc61eeea8049c4edc2a7790ed57d8f4859cf8dd585403da842df752446dd3d05da0a76792a333de5659ca28695ba38f6c"}, 0xa3, 0x2)
lsetxattr$security_selinux(&(0x7f0000000500)='./file3\x00', &(0x7f0000000440), &(0x7f0000000480)='system_u:object_r:default_t:s0\x00', 0x1f, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000700)='./file0/../file0\x00', &(0x7f0000000540), &(0x7f0000000580)='./file1\x00', 0x8, 0x0)
r3 = fcntl$dupfd(r2, 0x406, r0)
fdatasync(r3)
lsetxattr$security_ima(&(0x7f00000005c0)='./file0/../file0\x00', &(0x7f0000000600), &(0x7f0000000640)=@v1={0x2, "31dddab73f72b410d09a8a50"}, 0xd, 0x0)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000680)='security.SMACK64IPIN\x00', &(0x7f00000006c0)={'\\:%{&[++'}, 0x9, 0x3)
r4 = dup(r0)
r5 = fcntl$getown(r0, 0x9)
fcntl$setown(r4, 0x8, r5)
---

end of program
----- executor 3 receive testcase
----- executor 1 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 3: prog_data_offset 1576, prog_size 4248
----- executor 0 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
executor 0: prog_data_offset 1312, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-15
remove dir time 32
-----finish removing dir
receive_execute: 7, 69
mkdir time 36
executor 3 create dir /root/glusterfs-client/dfs-0-16 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-16
receive_execute: 12, 69
receive_execute: 11, 69
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
receive_execute: 19, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 12, 0, 0
execute_one loop: 0, 0, 12
executor 0 write_server_output
executor 0 server cover_cnt 0 output_pos_value 1
Terminated
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
execute_call 0, 43, 0, 0
execute_one loop: 0, 0, 43
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 44, 0, 0
execute_one loop: 0, 0, 44
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 2
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 13
----- completed 6
execute_call 0, 3, 1, 0
execute_one loop: 0, 1, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 8482, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 8482, flag collect 0
----- executor 3 signal number : 308
----- completed 7
execute_call 0, 19, 0, 1
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 32, 0, 0
execute_one loop: 0, 0, 32
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2952, 0, 0
execute_one loop: 0, 0, 2952
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 0, 3039, 0
execute_one time: 1, 3039
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2953, 0, 0
execute_one loop: 0, 0, 2953
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 17955, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 17955, flag collect 0
----- executor 3 signal number : 518
----- completed 13
execute_call 0, 14, 0, 1
execute_one loop: 0, 0, 15
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5746, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 5746, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
2023/03/31 10:53:55 for select break: 1
2023/03/31 10:53:55 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 945, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 963, flag collect 0
----- executor 0 signal number : 595
----- executor 2 signal number : 329
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 329
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 27123, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 27109, flag collect 0
----- executor 1 signal number : 2276
----- executor 1 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 1 signal number : 104
----- executor 1 executes write_coverage_signal cov->size 124, flag collect 0
----- executor 1 signal number : 59
----- executor 1 executes write_coverage_signal cov->size 1354, flag collect 0
----- executor 1 signal number : 221
----- executor 1 executes write_coverage_signal cov->size 13592, flag collect 0
----- executor 0 signal number : 104
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 11
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 224
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 22
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 113
----- executor 1 executes write_coverage_signal cov->size 32647, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 2276
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 105
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 126, flag collect 0
----- executor 2 signal number : 57
----- executor 2 executes write_coverage_signal cov->size 8824, flag collect 0
----- executor 1 signal number : 2162
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 1181, flag collect 0
----- executor 1 signal number : 136
----- executor 1 executes write_coverage_signal cov->size 12, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 2380, flag collect 0
----- executor 1 signal number : 398
----- executor 1 executes write_coverage_signal cov->size 2213, flag collect 0
----- executor 2 signal number : 314
----- executor 2 executes write_coverage_signal cov->size 4753, flag collect 0
----- executor 1 signal number : 174
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 14
----- executor 0 signal number : 2186
executor 0 server cover_cnt 34 output_pos_value 3260
----- executor 2 executes write_coverage_signal cov->size 21492, flag collect 0
----- executor 1 signal number : 1233
----- executor 1 executes write_coverage_signal cov->size 3836, flag collect 0
----- executor 1 signal number : 38
----- executor 1 executes write_coverage_signal cov->size 28044, flag collect 0
----- executor 1 signal number : 565
----- executor 1 executes write_coverage_signal cov->size 21778, flag collect 0
----- executor 2 signal number : 1556
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 1313
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 921, flag collect 0
----- executor 2 signal number : 132
executor 1 server cover_cnt 19 output_pos_value 9206
2023/03/31 10:53:55 for select break: 1
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
2023/03/31 10:53:55 --------- executor 0 receive reply, reply.done 1
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 2483, flag collect 0
----- executor 2 signal number : 424
----- executor 2 executes write_coverage_signal cov->size 2201, flag collect 0
time breakdown 0: 80, 3088, 0
before receive testcase: 0 0
----- executor 2 signal number : 123
----- executor 2 executes write_coverage_signal cov->size 19317, flag collect 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 453, write pid:453
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 3069, 0
execute_one time: 4, 3070
time breakdown 3: 96, 3075, 0
before receive testcase: 0 0
2023/03/31 10:53:55 for select break: 1
2023/03/31 10:53:55 --------- executor 1 receive reply, reply.done 1
----- executor 2 signal number : 977
----- executor 2 executes write_coverage_signal cov->size 16725, flag collect 0
----- executor 2 signal number : 118
----- executor 2 executes write_coverage_signal cov->size 25074, flag collect 0
----- executor 2 signal number : 1320
----- executor 2 executes write_coverage_signal cov->size 32523, flag collect 0
----- executor 2 signal number : 623
executor 2 server cover_cnt 18 output_pos_value 8446
time breakdown 1: 81, 3090, 0
before receive testcase: 0 0
2023/03/31 10:53:55 for select break: 1
2023/03/31 10:53:55 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:53:55 wg wait finish
2023/03/31 10:53:55 ------ all executors finish execution
2023/03/31 10:53:55 exec time: 3165
2023/03/31 10:53:55 ----- PS len: 4
2023/03/31 10:53:55 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:55 [SERVER] executor 1 has 19 replies
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 329 signal and 0 cover from userspace component
2023/03/31 10:53:55 [SERVER] executor 2 has 18 replies
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 329 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
time breakdown 2: 76, 3096, 0
before receive testcase: 0 0
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 2276 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 105 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 57 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 314 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 14 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 1556 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 308 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 518 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 2276 signal and 0 cover from userspace component
2023/03/31 10:53:55 [SERVER] executor 0 has 34 replies
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 595 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 104 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 11 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 224 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:55 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 22 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 132 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 424 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 123 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 977 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 118 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 1320 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 104 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 2 receive 623 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 59 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 221 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 113 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 2162 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 136 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 398 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 174 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 1233 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 38 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 565 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 1 receive 1313 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:55 ------- fuzzer executor 0 receive 2186 signal and 0 cover from userspace component
2023/03/31 10:53:55 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:55 ----- no new client coverage: false, true
2023/03/31 10:53:55 mutate testcase with failures
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 ----- mutateArg()
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 ----- mutateArg()
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 ----- mutateArg()
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 ----- insertCall()
2023/03/31 10:53:55 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:55 disable threaded and collide
2023/03/31 10:53:55 prog length: 6
2023/03/31 10:53:55 prog length: 22
2023/03/31 10:53:55 HasCrashFail:true HasNetFail:false
10:53:55 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', ']-('}, &(0x7f00000000c0)=""/59, 0x3b)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000001dc0)=ANY=[@ANYBLOB="2321202e2f66696c65302020212d7d2c28235d285b407b28206f73322e20206f73322e0aa80c6403b530cc5ad0b5ade1f1c3ffffff7f00000000fff2410286e00100ce282b433a4c98d0d6fbb18a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff675330035dfb9a7dbcc64d155e0b9f2bfe18dfac27ab945b416fd5d18b6a26b95376300af04a2d888e9acb0a2306bc58da2877fbaad78cd951e8cd5679fb0b2445e2ff81859757a2871fa20fde6ad5c73f120470dd95d2d1525c0c74c2633f9814de18c48db1746961684caaa1f3a82c2c98d64bebed837cae7718f83ed8740a5b36f6101588d538ce8b7c8f4467531f684007e94ff42c8d37a46063122f827f38ed6fff99993e4c9fc0a4b28b8ffb83eab8f2549c86bdde90a552d99834ccf3f7eb64a59708385a89f0013e52765970c84c3fca7654a7a"], 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000001bc0)=ANY=[@ANYBLOB="00fbad011f4157a50ac27c34a9839eb4785a41f4d8c9af46960cdba287326efa6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce9b0474e2d48dff3c48fb278ff2a4f64d6886b5e5211e96ed25c7a71a9452b4db440a1e55d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac61e3c2842a35f02865b232d846ec0c19d56c9142ac17adddcfa0067755f9d42d29d721ecabfcf0b52ddd868f01917987e4d5a0e9691469fd57a457585353ec71519ee98dbc50c2c5777908"], 0xad, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000180)=ANY=[@ANYBLOB="e0289234e9d5db"], 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'U+'}, 0x16, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f0000001cc0)=ANY=[@ANYBLOB="212d7d2ce0530d2ce370a9cc9c6eee5276504371785ad31e18fadcfdbfc5afbe2d66fb38939317921127300d76a743d03eb48b724d88bab1767c64c121c8fc46c88bf46507fdad0d01f23fe91e04aebba1862e3433090b35b700324e6adaf85129ecab5e83437a957664882083cbec5df81011cd456ffeae66cb5815a630840510ffc41e146cd68b8664e26305687eed50b145aa4d3cc972702d8651925d3175ceb4de88b00bbff3b250d6987e018ce2853096417a74e758e66793fda875d4a8cb643cfa4f30ff612b7d7136116738a15b830f4795e8a9896a09b0339f9ac14d060132"], 0x15, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file1\x00', &(0x7f0000001900), &(0x7f0000001940), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000000140)='./file1\x00', &(0x7f0000000100), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file0/file0\x00', 0xffffffffffffffff, &(0x7f0000001b80)='./file1\x00', 0x1000)
---

end of program
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5192
----- executor 1 receive testcase
remove dir: /root/glusterfs-client/dfs-0-16
executor 1: prog_data_offset 1320, prog_size 248
remove dir time 40
-----finish removing dir
Node-0:/root/daemon-log.1082
receive_execute: 13, 85
mkdir time 44
executor 3 create dir /root/glusterfs-client/dfs-0-17 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-17
receive_execute: 14, 85
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
receive_execute: 6, 92
receive_execute: 19, 94
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8947, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8947, flag collect 0
----- executor 3 signal number : 1581
----- completed 1
execute_call 0, 13, 0, 5
execute_one loop: 0, 0, 18
cover_reset in execute_call
----- executor 3 write_call_output, size 2698, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 2698, flag collect 0
----- executor 3 signal number : 539
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 30, 0, 0
execute_one loop: 0, 0, 30
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 658
----- executor 1 executes write_coverage_signal cov->size 13742, flag collect 0
----- executor 1 signal number : 1836
----- executor 1 executes write_coverage_signal cov->size 6247, flag collect 0
----- executor 1 signal number : 229
----- executor 1 executes write_coverage_signal cov->size 2054, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 9243, flag collect 0
----- executor 1 signal number : 1130
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1880, flag collect 0
----- executor 1 signal number : 183
----- executor 1 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 1 signal number : 17
----- executor 1 executes write_coverage_signal cov->size 6092, flag collect 0
----- executor 1 signal number : 569
----- executor 1 executes write_coverage_signal cov->size 11806, flag collect 0
----- executor 1 signal number : 546
----- executor 1 executes write_coverage_signal cov->size 15421, flag collect 0
----- executor 1 signal number : 574
----- executor 1 executes write_coverage_signal cov->size 16335, flag collect 0
----- executor 1 signal number : 1636
executor 1 server cover_cnt 13 output_pos_value 7423
-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 4
----- directly resend shmid 4
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 67
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2773, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 2773, flag collect 0
----- executor 3 signal number : 330
----- completed 6
execute_call 0, 50, 0, 1
execute_one loop: 0, 0, 51
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 54, 1, 0
execute_one loop: 0, 0, 55
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 0 collect shmids 55
----- directly resend shmid 55
-----executor 0 collect shmids 59
----- directly resend shmid 59
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
==1082==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
Node-0:/root/daemon-log.1118
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
==1118==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-0:/root/daemon-log.1134
-----executor 1 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2777, 0, 0
execute_one loop: 0, 0, 2777
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2928, 0
execute_one time: 2, 2928
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2778, 0, 0
execute_one loop: 0, 0, 2778
cover_reset in execute_call
----- executor 3 write_call_output, size 8880, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8880, flag collect 0
----- executor 3 signal number : 238
----- completed 9
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 11, 0, 0
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 16, 0, 0
execute_one loop: 0, 0, 16
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8376, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8376, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 21, 0, 1
execute_one loop: 0, 0, 22
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 454, write pid:454
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 3031, 0
execute_one time: 1, 3032
2023/03/31 10:53:58 for select break: 1
executor 0 write_server_output
2023/03/31 10:53:58 --------- executor 3 receive reply, reply.done 1
----- executor 0 executes write_coverage_signal cov->size 61, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 signal number : 417
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 113, 3035, 0
before receive testcase: 0 1
----- executor 0 signal number : 53
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 60, flag collect 0
----- executor 2 signal number : 51
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 71
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 1 signal number : 212
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 66
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1404
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 126
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 1 signal number : 32
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1969
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 signal number : 29
----- executor 2 executes write_coverage_signal cov->size 4919, flag collect 0
----- executor 0 signal number : 468
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 1983, flag collect 0
----- executor 0 signal number : 4
----- executor 1 signal number : 858
----- executor 1 executes write_coverage_signal cov->size 1244, flag collect 0
----- executor 1 signal number : 154
----- executor 1 executes write_coverage_signal cov->size 6932, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 148
----- executor 1 executes write_coverage_signal cov->size 2054, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 9243, flag collect 0
----- executor 1 signal number : 314
----- executor 1 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 1 signal number : 56
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1880, flag collect 0
----- executor 1 signal number : 80
----- executor 1 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 1 signal number : 48
----- executor 1 executes write_coverage_signal cov->size 6092, flag collect 0
----- executor 0 signal number : 1979
----- executor 0 executes write_coverage_signal cov->size 5778, flag collect 0
----- executor 1 signal number : 181
----- executor 1 executes write_coverage_signal cov->size 11806, flag collect 0
----- executor 1 signal number : 227
----- executor 1 executes write_coverage_signal cov->size 15421, flag collect 0
----- executor 2 signal number : 1036
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 437
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 435
----- executor 1 executes write_coverage_signal cov->size 16335, flag collect 0
----- executor 1 signal number : 691
executor 1 server cover_cnt 59 output_pos_value 11650
----- executor 0 signal number : 69
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 670
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 6
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 3481, flag collect 0
----- executor 0 signal number : 369
----- executor 0 executes write_coverage_signal cov->size 4396, flag collect 0
----- executor 0 signal number : 15
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1500
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:53:58 for select break: 1
2023/03/31 10:53:58 --------- executor 1 receive reply, reply.done 1
----- executor 0 signal number : 575
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 1: 98, 3049, 0
----- executor 2 signal number : 2691
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 767, flag collect 0
----- executor 2 signal number : 15
----- executor 0 signal number : 905
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 879, flag collect 0
----- executor 2 signal number : 157
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 2 signal number : 1746
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1620
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2382
----- executor 0 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 0 signal number : 5
----- executor 0 executes write_coverage_signal cov->size 571, flag collect 0
----- executor 2 signal number : 769
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 2 signal number : 2071
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 55
----- executor 0 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 0 signal number : 141
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1072
----- executor 2 executes write_coverage_signal cov->size 20700, flag collect 0
----- executor 2 signal number : 1203
----- executor 2 executes write_coverage_signal cov->size 21203, flag collect 0
----- executor 0 signal number : 19
----- executor 0 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 998, flag collect 0
----- executor 0 signal number : 121
----- executor 0 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 2 signal number : 801
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 0 signal number : 32
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1896
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2045
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 624
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 965
----- executor 0 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 0 signal number : 99
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2026
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 506
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2140
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1906
----- executor 0 executes write_coverage_signal cov->size 30310, flag collect 0
----- executor 2 signal number : 1614
----- executor 0 signal number : 1845
----- executor 0 executes write_coverage_signal cov->size 25145, flag collect 0
executor 2 server cover_cnt 27 output_pos_value 24588
----- executor 0 signal number : 992
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1587
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 785
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2087
2023/03/31 10:53:58 for select break: 1
2023/03/31 10:53:58 --------- executor 2 receive reply, reply.done 1
executor 0 server cover_cnt 38 output_pos_value 23638
2023/03/31 10:53:58 for select break: 1
2023/03/31 10:53:58 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:53:58 wg wait finish
2023/03/31 10:53:58 ------ all executors finish execution
2023/03/31 10:53:58 exec time: 3155
2023/03/31 10:53:58 ----- PS len: 4
2023/03/31 10:53:58 [SERVER] executor 0 has 38 replies
2023/03/31 10:53:58 [SERVER] executor 2 has 27 replies
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 53 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 51 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 66 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1404 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1969 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 29 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 [SERVER] executor 1 has 59 replies
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 658 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 1836 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 229 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 1130 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 183 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
time breakdown 0: 99, 3069, 0
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 569 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 546 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 574 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 468 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1979 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 437 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 69 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 6 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 1636 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 369 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 417 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 71 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1036 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 670 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 212 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1500 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 126 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 32 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 575 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 905 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1620 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 2691 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 15 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 157 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 2382 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:58 [CLIENT] executor 3 has 22 replies
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1746 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 769 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 2071 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1072 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1203 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 801 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1896 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 624 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 2026 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 2140 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 2 receive 1614 signal and 0 cover from userspace component
2023/03/31 10:53:58 fuzzer receive 1581 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 539 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 330 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 238 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 858 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 154 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 148 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 314 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 56 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 80 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 48 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 181 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 227 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 435 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 1 receive 691 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 5 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 55 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 141 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 19 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 121 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 32 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 2045 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 965 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 99 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 506 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1906 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1845 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 992 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 1587 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 785 signal and 0 cover from userspace component
2023/03/31 10:53:58 ------- fuzzer executor 0 receive 2087 signal and 0 cover from userspace component
time breakdown 2: 98, 3059, 0
before receive testcase: 0 0
before receive testcase: 0 0
2023/03/31 10:53:58 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:53:58 ----- no new client coverage: false, true
2023/03/31 10:53:58 mutate testcase with failures
2023/03/31 10:53:58 ----- removeCall()
2023/03/31 10:53:58 ----- mutateFailPos()
2023/03/31 10:53:58 insert call 15 at pos 16
2023/03/31 10:53:58 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:53:58 disable threaded and collide
2023/03/31 10:53:58 prog length: 6
2023/03/31 10:53:58 prog length: 21
2023/03/31 10:53:58 HasCrashFail:true HasNetFail:false
10:53:58 ---executing program 0:
---
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
r0 = dup(0xffffffffffffffff)
fsetxattr$trusted_overlay_origin(r0, &(0x7f0000000000), &(0x7f0000000040), 0x2, 0x1)
r1 = fcntl$getown(r0, 0x9)
r2 = open(&(0x7f0000000080)='./file0\x00', 0x40, 0x9c)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(r2, &(0x7f00000000c0)={'#! ', './file0', [{0x20, 'trusted.overlay.origin\x00'}, {0x20, 'trusted.overlay.origin\x00'}], 0xa, ""}, 0x103b)
fcntl$setown(0xffffffffffffffff, 0x8, r1)
r3 = open(&(0x7f0000001100)='./file0\x00', 0x2, 0x5)
fcntl$getownex(r3, 0x10, &(0x7f0000001140)={0x0, <r4=>0x0})
fcntl$setown(r0, 0x8, r4)
r5 = openat(r3, &(0x7f0000001180)='./file0\x00', 0x400000, 0x8b)
fchmod(r5, 0x1)
fgetxattr(r3, &(0x7f00000011c0)=@random={'trusted.', '\'[\x00'}, &(0x7f0000001200)=""/84, 0x54)
fsetxattr$trusted_overlay_opaque(r2, &(0x7f0000001280), &(0x7f00000012c0), 0x2, 0x2)
fsetxattr$trusted_overlay_upper(r0, &(0x7f0000001300), &(0x7f0000001340)={0x0, 0xfb, 0x33, 0x1, 0x4, "2a164af8d2d4757dbaff97b09c3b8084", "75bfc4cc8a66e9f3339f2bd953e1a6e08b463bc81163616d598eb30affef"}, 0x33, 0x3)
fcntl$setstatus(r3, 0x4, 0x2400)
syz_failure_sync(0x1, 0x3)
lsetxattr$trusted_overlay_opaque(&(0x7f0000001380)='./file0\x00', &(0x7f00000013c0), &(0x7f0000001400), 0x2, 0x1)
write$binfmt_elf64(0xffffffffffffffff, &(0x7f0000001440)={{0x7f, 0x45, 0x4c, 0x46, 0x7, 0xa6, 0x4, 0x6, 0x5, 0x2, 0x3e, 0x7, 0x28f, 0x40, 0x27d, 0x4, 0x2, 0x38, 0x1, 0x5, 0xfb, 0x5}, [{0x3, 0x13, 0x7f, 0x5, 0x1, 0x77, 0x5, 0xfffffffffffffe00}], "11a9b615019fc76e317cd47bce5a8d9f181f6a61cc3d33bb3ecf98909ef273983356d404707fff4b0a4f6c8e287966eb2cd7014fa40bd1a905dcf4fe1604da14e489", ['\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00']}, 0xaba)
setxattr(&(0x7f0000001f00)='./file0\x00', &(0x7f0000001f40)=@random={'btrfs.', '@\'\x00'}, &(0x7f0000001f80)='\x00', 0x1, 0x1)
linkat(0xffffffffffffffff, &(0x7f0000002000)='./file0\x00', r3, &(0x7f0000002040)='./file0\x00', 0x1a00)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 12344
remove dir: /root/glusterfs-client/dfs-0-17
----- executor 2 receive testcase
executor 2: prog_data_offset 1328, prog_size 248
Node-1:/root/daemon-log.863
opendir(/root/glusterfs-client/dfs-0-17) failedremove dir time 122
-----finish removing dir
receive_execute: 30, 150
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-18 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-18
receive_execute: 12, 151
receive_execute: 15, 151
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 38, 154
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 5, 0
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8937, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 8937, flag collect 0
----- executor 3 signal number : 1591
----- completed 4
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 26, 0, 0
execute_one loop: 0, 0, 27
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 5539, flag collect 0
----- executor 2 signal number : 458
----- executor 2 executes write_coverage_signal cov->size 8923, flag collect 0
----- executor 2 signal number : 2037
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 12810, flag collect 0
----- executor 2 signal number : 1032
----- executor 2 executes write_coverage_signal cov->size 12066, flag collect 0
----- executor 2 signal number : 952
----- executor 2 executes write_coverage_signal cov->size 10061, flag collect 0
----- executor 2 signal number : 202
executor 2 server cover_cnt 6 output_pos_value 4703
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 2 collect shmids 0
----- directly resend shmid 0
-----executor 2 collect shmids 1
----- directly resend shmid 1
-----executor 2 collect shmids 2
----- directly resend shmid 2
-----executor 2 collect shmids 3
----- directly resend shmid 3
-----executor 2 collect shmids 4
----- directly resend shmid 4
-----executor 2 collect shmids 5
----- directly resend shmid 5
-----executor 2 collect shmids 6
----- directly resend shmid 6
-----executor 2 collect shmids 32
----- directly resend shmid 32
-----executor 2 collect shmids 33
----- directly resend shmid 33
-----executor 2 collect shmids 50
----- directly resend shmid 50
execute_call 0, 71, 0, 0
execute_one loop: 0, 0, 71
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 74, 0, 0
execute_one loop: 0, 0, 74
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 3482, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 3482, flag collect 0
----- executor 3 signal number : 511
----- completed 8
execute_call 0, 66, 0, 0
execute_one loop: 0, 0, 66
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 70, 0, 0
execute_one loop: 0, 0, 70
-----executor 2 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 58
----- directly resend shmid 58
-----executor 1 collect shmids 60
----- directly resend shmid 60
-----executor 2 collect shmids 8
----- directly resend shmid 8
-----executor 2 collect shmids 9
----- directly resend shmid 9
-----executor 2 collect shmids 10
----- directly resend shmid 10
==1134==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 2 collect shmids 11
----- directly resend shmid 11
-----executor 2 collect shmids 12
----- directly resend shmid 12
-----executor 2 collect shmids 13
----- directly resend shmid 13
==863==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 2 collect shmids 14
----- directly resend shmid 14
-----executor 2 collect shmids 15
----- directly resend shmid 15
Node-1:/root/daemon-log.897
-----executor 2 collect shmids 16
----- directly resend shmid 16
-----executor 2 collect shmids 17
----- directly resend shmid 17
-----executor 2 collect shmids 18
----- directly resend shmid 18
-----executor 2 collect shmids 19
----- directly resend shmid 19
-----executor 2 collect shmids 20
----- directly resend shmid 20
-----executor 2 collect shmids 21
----- directly resend shmid 21
-----executor 2 collect shmids 22
----- directly resend shmid 22
-----executor 2 collect shmids 23
----- directly resend shmid 23
-----executor 2 collect shmids 24
----- directly resend shmid 24
-----executor 2 collect shmids 25
----- directly resend shmid 25
-----executor 2 collect shmids 26
----- directly resend shmid 26
==897==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.916
-----executor 2 collect shmids 27
----- directly resend shmid 27
-----executor 2 collect shmids 28
----- directly resend shmid 28
-----executor 2 collect shmids 29
----- directly resend shmid 29
-----executor 2 collect shmids 30
----- directly resend shmid 30
-----executor 2 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 2938, 0, 0
execute_one loop: 0, 0, 2938
cover_reset in execute_call
execute_call 0, 2937, 0, 0
execute_one loop: 0, 0, 2937
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 2, execute_one inner time: 0, 3107, 0
execute_one time: 2, 3107
----- executor 3 write_call_output, size 8874, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 8874, flag collect 0
----- executor 3 signal number : 265
----- completed 18
execute_call 0, 9, 0, 0
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8376, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 8376, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 455, write pid:455
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 3126, 4
execute_one time: 1, 3131
2023/03/31 10:54:01 for select break: 1
2023/03/31 10:54:01 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 1658, flag collect 0
executor 1 write_server_output
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 2 signal number : 545
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 659, flag collect 0
time breakdown 3: 192, 3137, 0
----- executor 1 signal number : 320
before receive testcase: 0 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 448
----- executor 0 executes write_coverage_signal cov->size 1112, flag collect 0
----- executor 0 signal number : 507
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 31346, flag collect 0
----- executor 1 signal number : 1249
----- executor 1 executes write_coverage_signal cov->size 41, flag collect 0
----- executor 1 signal number : 34
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 97
----- executor 2 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 2 signal number : 9
----- executor 2 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 2 signal number : 221
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 2 signal number : 26
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2425
----- executor 0 executes write_coverage_signal cov->size 386, flag collect 0
----- executor 0 signal number : 98
----- executor 0 executes write_coverage_signal cov->size 1024, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 2227
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 1 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1934
----- executor 2 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 2 signal number : 135
----- executor 2 executes write_coverage_signal cov->size 6246, flag collect 0
----- executor 2 signal number : 86
----- executor 2 executes write_coverage_signal cov->size 10556, flag collect 0
----- executor 2 signal number : 423
----- executor 2 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 2 signal number : 55
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 13558, flag collect 0
----- executor 2 signal number : 287
----- executor 2 executes write_coverage_signal cov->size 12066, flag collect 0
----- executor 0 signal number : 1056
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 320
----- executor 2 executes write_coverage_signal cov->size 10061, flag collect 0
----- executor 2 signal number : 188
executor 2 server cover_cnt 48 output_pos_value 9168
----- executor 1 signal number : 35
----- executor 1 executes write_coverage_signal cov->size 78, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 2192, flag collect 0
----- executor 1 signal number : 305
----- executor 1 executes write_coverage_signal cov->size 6190, flag collect 0
----- executor 1 signal number : 102
----- executor 1 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 599
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 719
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1108
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:54:01 for select break: 1
2023/03/31 10:54:01 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 167, 3149, 0
before receive testcase: 0 0
----- executor 1 signal number : 529
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 3788
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 689, flag collect 0
----- executor 1 signal number : 1778
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 18
----- executor 0 executes write_coverage_signal cov->size 961, flag collect 0
----- executor 0 signal number : 160
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1741
----- executor 1 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 1 signal number : 16
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 0 signal number : 2264
----- executor 1 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 54
----- executor 1 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 1 signal number : 452
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 954
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 49
----- executor 1 executes write_coverage_signal cov->size 545, flag collect 0
----- executor 1 signal number : 48
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1890
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1989
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1461
----- executor 0 executes write_coverage_signal cov->size 28588, flag collect 0
----- executor 1 signal number : 1019
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 1 signal number : 133
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1835
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 688
----- executor 1 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 0 signal number : 2099
----- executor 1 signal number : 94
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 973
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1905
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2325
----- executor 0 executes write_coverage_signal cov->size 25145, flag collect 0
----- executor 1 signal number : 1642
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 725
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1442
executor 0 server cover_cnt 25 output_pos_value 25551
----- executor 1 signal number : 2191
----- executor 1 executes write_coverage_signal cov->size 25581, flag collect 0
2023/03/31 10:54:01 for select break: 1
2023/03/31 10:54:01 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 1816
----- executor 1 executes write_coverage_signal cov->size 29497, flag collect 0
time breakdown 0: 163, 3167, 0
before receive testcase: 0 0
----- executor 1 signal number : 1495
executor 1 server cover_cnt 38 output_pos_value 23520
Node-2:/root/daemon-log.511
2023/03/31 10:54:01 for select break: 1
2023/03/31 10:54:01 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:54:01 wg wait finish
2023/03/31 10:54:01 ------ all executors finish execution
2023/03/31 10:54:01 exec time: 3322
2023/03/31 10:54:01 ----- PS len: 4
2023/03/31 10:54:01 [CLIENT] executor 3 has 21 replies
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 1591 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 [SERVER] executor 1 has 38 replies
2023/03/31 10:54:01 [SERVER] executor 0 has 25 replies
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 320 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 448 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 507 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1249 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:01 [SERVER] executor 2 has 48 replies
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 458 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 2037 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 1032 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 952 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 202 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 34 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 545 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 97 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 2227 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 9 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 221 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 26 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 305 signal and 0 cover from userspace component
time breakdown 1: 180, 3172, 0
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 102 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 719 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 529 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1778 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1741 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 16 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 511 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 2425 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 98 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 54 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 452 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 49 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 48 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1989 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1019 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 133 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 1934 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 135 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 86 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 423 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 55 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 287 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 320 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 2 receive 188 signal and 0 cover from userspace component
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 265 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 1056 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 688 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 94 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 599 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 1108 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1905 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 3788 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1642 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 725 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 18 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 160 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 2264 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 954 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 1890 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 1461 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 2191 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1816 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 1 receive 1495 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 1835 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 2099 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 973 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 2325 signal and 0 cover from userspace component
2023/03/31 10:54:01 ------- fuzzer executor 0 receive 1442 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:54:01 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:01 ----- no new client coverage: false, true
2023/03/31 10:54:02 mutate testcase with failures
2023/03/31 10:54:02 ----- mutateArg()
2023/03/31 10:54:02 ----- mutateArg()
2023/03/31 10:54:02 ----- insertCall()
2023/03/31 10:54:02 ----- insertCall()
2023/03/31 10:54:02 ----- mutateArg()
2023/03/31 10:54:02 ----- insertCall()
2023/03/31 10:54:02 ----- insertCall()
2023/03/31 10:54:02 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:54:02 disable threaded and collide
2023/03/31 10:54:02 prog length: 6
2023/03/31 10:54:02 prog length: 22
2023/03/31 10:54:02 HasCrashFail:true HasNetFail:false
10:54:02 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', ']-('}, &(0x7f0000000340)=""/59, 0x3b)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000100)=ANY=[@ANYBLOB="2321202e2f66696c65302020212d7d2c28235d285b407b28206f73322e20206f73322e0aa8056403b530cc5ad0b5ade1f1c3ca9fe4a27f4a3faff9f2410286e05c63ce282b433a4c04f498d0d601b28a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1"], 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000001bc0)=ANY=[@ANYBLOB="00fbad011f4157a50ac27c34a9839eb4785a41f4d8c9af46960cdba287326efe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce907000000000000008fb278ff2a4f64d6886b5e52c4bea984f113bd06917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac615ec2842a35f02865b232d846ec0c19d56c91000000000000ffff7755f9d42d29d721654d32123a1535db3e4f5501b133d897021faa2043f4e3f0829c4da4b174919098cb038f5b18526442ffadac21472a09f39496a8941e5de9aea102a7fbd995d43f15d37ce7f68c19579bda58b5aaf5e19b778bda63b69ee54c6b5a37769e543e36"], 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "669f9a"}, 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file2\x00', &(0x7f0000001900), &(0x7f0000000380), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file1\x00', 0xffffffffffffffff, &(0x7f00000000c0)='./file1\x00', 0x1000)
---

end of program
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4912
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-18
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
opendir(/root/glusterfs-client/dfs-0-18) failedremove dir time 8
-----finish removing dir
-----executor 2 collect shmids 52
----- directly resend shmid 52
-----executor 2 collect shmids 56
----- directly resend shmid 56
==916==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
==511==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-2:/root/daemon-log.563
receive_execute: 12, 1338
mkdir time 1329
executor 3 create dir /root/glusterfs-client/dfs-0-19 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-19
receive_execute: 17, 1337
receive_execute: 35, 1338
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 1, 0
receive_execute: 43, 1348
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8949, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8949, flag collect 0
----- executor 3 signal number : 1579
----- completed 1
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
cover_reset in execute_call
----- executor 3 write_call_output, size 2699, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 2699, flag collect 0
----- executor 3 signal number : 541
----- completed 2
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 14610, flag collect 0
----- executor 1 signal number : 460
----- executor 1 executes write_coverage_signal cov->size 4875, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 2958, flag collect 0
----- executor 1 signal number : 758
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2930
----- executor 1 executes write_coverage_signal cov->size 31, flag collect 0
----- executor 1 signal number : 13
----- executor 1 executes write_coverage_signal cov->size 18493, flag collect 0
----- executor 1 signal number : 1667
----- executor 1 executes write_coverage_signal cov->size 17946, flag collect 0
----- executor 1 signal number : 705
----- executor 1 executes write_coverage_signal cov->size 25938, flag collect 0
----- executor 1 signal number : 1202
----- executor 1 executes write_coverage_signal cov->size 7841, flag collect 0
----- executor 1 signal number : 304
----- executor 1 executes write_coverage_signal cov->size 26270, flag collect 0
----- executor 1 signal number : 1765
----- executor 1 executes write_coverage_signal cov->size 10621, flag collect 0
----- executor 1 signal number : 321
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 574
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 1
executor 1 server cover_cnt 13 output_pos_value 10742
-----executor 1 collect shmids 34
----- directly resend shmid 34
-----executor 1 collect shmids 35
----- directly resend shmid 35
-----executor 1 collect shmids 36
----- directly resend shmid 36
-----executor 1 collect shmids 37
----- directly resend shmid 37
-----executor 1 collect shmids 38
----- directly resend shmid 38
-----executor 1 collect shmids 39
----- directly resend shmid 39
-----executor 1 collect shmids 40
----- directly resend shmid 40
-----executor 1 collect shmids 41
----- directly resend shmid 41
-----executor 1 collect shmids 42
----- directly resend shmid 42
-----executor 1 collect shmids 43
----- directly resend shmid 43
execute_call 0, 79, 0, 0
execute_one loop: 0, 0, 79
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 79, 0, 1
execute_one loop: 0, 0, 80
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2770, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 2770, flag collect 0
----- executor 3 signal number : 330
----- completed 6
execute_call 0, 39, 0, 0
execute_one loop: 0, 0, 39
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 41, 0, 0
execute_one loop: 0, 0, 41
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
==563==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-2:/root/daemon-log.545
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
==545==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 2776, 0, 0
execute_one loop: 0, 0, 2776
cover_reset in execute_call
execute_call 0, 2775, 0, 0
execute_one loop: 0, 0, 2775
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 1, 2928, 0
execute_one time: 2, 2929
----- executor 3 write_call_output, size 9370, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 9370, flag collect 0
----- executor 3 signal number : 240
----- completed 8
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 11, 0, 1
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 8386, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 8386, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 456, write pid:456
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 2998, 0
execute_one time: 1, 2998
2023/03/31 10:54:06 for select break: 1
2023/03/31 10:54:06 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 60, flag collect 0
executor 2 write_server_output
----- executor 0 signal number : 51
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
time breakdown 3: 1391, 3001, 0
----- executor 2 executes write_coverage_signal cov->size 488, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 19111, flag collect 0
----- executor 1 signal number : 508
----- executor 2 signal number : 227
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 0 signal number : 2077
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 17
----- executor 0 executes write_coverage_signal cov->size 845, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 30256, flag collect 0
----- executor 0 signal number : 254
----- executor 0 executes write_coverage_signal cov->size 506, flag collect 0
----- executor 0 signal number : 46
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 91
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 11
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 2 signal number : 2150
----- executor 1 signal number : 217
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 61, flag collect 0
----- executor 0 signal number : 893
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 2 signal number : 0
----- executor 1 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 1872, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 5
----- executor 2 signal number : 317
----- executor 2 executes write_coverage_signal cov->size 554, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 2 signal number : 5
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 1 signal number : 30
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 93
----- executor 0 executes write_coverage_signal cov->size 28751, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 1093
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1374
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 457
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 2490
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 16
----- executor 1 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 561, flag collect 0
----- executor 0 signal number : 21
----- executor 0 executes write_coverage_signal cov->size 990, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 178
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1474
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 2 signal number : 2576
----- executor 2 executes write_coverage_signal cov->size 500, flag collect 0
----- executor 0 signal number : 1885
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 18
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 455, flag collect 0
----- executor 2 signal number : 20
----- executor 2 executes write_coverage_signal cov->size 32138, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 2 signal number : 2089
----- executor 2 executes write_coverage_signal cov->size 31528, flag collect 0
----- executor 0 signal number : 852
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1469
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 5683, flag collect 0
----- executor 0 signal number : 1926
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 433
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1208
----- executor 0 executes write_coverage_signal cov->size 26085, flag collect 0
----- executor 1 signal number : 1784
----- executor 2 signal number : 1354
----- executor 2 executes write_coverage_signal cov->size 4811, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 1244, flag collect 0
----- executor 2 signal number : 408
----- executor 2 executes write_coverage_signal cov->size 2399, flag collect 0
----- executor 2 signal number : 187
----- executor 2 executes write_coverage_signal cov->size 25576, flag collect 0
----- executor 1 signal number : 158
----- executor 0 signal number : 1359
----- executor 0 executes write_coverage_signal cov->size 25455, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 36, flag collect 0
----- executor 1 signal number : 22
----- executor 2 signal number : 1113
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 41, flag collect 0
----- executor 1 signal number : 7
----- executor 0 signal number : 848
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 27940, flag collect 0
----- executor 2 signal number : 1819
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1784
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 877
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 836
----- executor 1 signal number : 443
----- executor 2 executes write_coverage_signal cov->size 29971, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 9042, flag collect 0
----- executor 1 signal number : 159
----- executor 2 signal number : 1070
----- executor 0 signal number : 1846
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 8158, flag collect 0
executor 0 server cover_cnt 24 output_pos_value 20174
----- executor 1 signal number : 619
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2222
executor 2 server cover_cnt 25 output_pos_value 21418
----- executor 1 signal number : 1669
----- executor 1 executes write_coverage_signal cov->size 62, flag collect 0
----- executor 1 signal number : 6
2023/03/31 10:54:06 for select break: 1
2023/03/31 10:54:06 --------- executor 0 receive reply, reply.done 1
----- executor 1 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 1 signal number : 109
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:54:06 for select break: 1
2023/03/31 10:54:06 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 1373, 3032, 0
----- executor 1 signal number : 1346
----- executor 1 executes write_coverage_signal cov->size 32090, flag collect 0
time breakdown 0: 1354, 3032, 0
before receive testcase: 0 0
----- executor 1 signal number : 1088
----- executor 1 executes write_coverage_signal cov->size 29143, flag collect 0
----- executor 1 signal number : 1093
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
before receive testcase: 0 0
----- executor 1 signal number : 871
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1432
----- executor 1 executes write_coverage_signal cov->size 14265, flag collect 0
----- executor 1 signal number : 332
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 781
----- executor 1 executes write_coverage_signal cov->size 7813, flag collect 0
----- executor 1 signal number : 642
----- executor 1 executes write_coverage_signal cov->size 3363, flag collect 0
----- executor 1 signal number : 307
executor 1 server cover_cnt 65 output_pos_value 24633
2023/03/31 10:54:06 for select break: 1
2023/03/31 10:54:06 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:54:06 wg wait finish
2023/03/31 10:54:06 ------ all executors finish execution
2023/03/31 10:54:06 exec time: 4382
2023/03/31 10:54:06 ----- PS len: 4
2023/03/31 10:54:06 [CLIENT] executor 3 has 22 replies
2023/03/31 10:54:06 fuzzer receive 1579 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 541 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 330 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 240 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 [SERVER] executor 1 has 65 replies
2023/03/31 10:54:06 [SERVER] executor 2 has 25 replies
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 460 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 227 signal and 0 cover from userspace component
2023/03/31 10:54:06 [SERVER] executor 0 has 24 replies
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 51 signal and 0 cover from userspace component
time breakdown 1: 1350, 3044, 0
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 2077 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 17 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 254 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 46 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 893 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 93 signal and 0 cover from userspace component
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1374 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 2490 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 21 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 178 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1885 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 852 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1926 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1208 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 758 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1359 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 2930 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 848 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1784 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 877 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 0 receive 1846 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 13 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1667 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 705 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1202 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 304 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1765 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 321 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 574 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 508 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 91 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 217 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 2150 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 317 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1093 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 457 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 30 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1474 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 2576 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 20 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1784 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 158 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 2089 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1469 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 443 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 159 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 433 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1354 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 408 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 187 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 619 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1669 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 109 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1346 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1113 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1819 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 836 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1088 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1093 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 871 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 1432 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 332 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 1070 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 781 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 2 receive 2222 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 642 signal and 0 cover from userspace component
2023/03/31 10:54:06 ------- fuzzer executor 1 receive 307 signal and 0 cover from userspace component
2023/03/31 10:54:06 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:06 ----- no new client coverage: false, true
2023/03/31 10:54:06 ----- enqueue testcases with server coveraged
2023/03/31 10:54:06 ----- enqueue testcases with server coveraged
2023/03/31 10:54:06 disable threaded and collide
2023/03/31 10:54:06 prog length: 6
2023/03/31 10:54:06 prog length: 22
2023/03/31 10:54:06 HasCrashFail:true HasNetFail:false
10:54:06 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', ']-('}, &(0x7f0000000340)=""/59, 0x3b)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000100)=ANY=[@ANYBLOB="2321202e2f66696c65302020212d7d2c28235d285b407b28206f73322e20206f73322e0aa8056403b530cc5ad0b5ade1f1c3ca9fe4a27f4a3faff9f2410286e05c63ce282b433a4c04f498d0d601b28a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1"], 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000001bc0)=ANY=[@ANYBLOB="00fbad011f4157a50ac27c34a9839eb4785a41f4d8c9af46960cdba287326efe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce907000000000000008fb278ff2a4f64d6886b5e52c4bea984f113bd06917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac615ec2842a35f02865b232d846ec0c19d56c91000000000000ffff7755f9d42d29d721654d32123a1535db3e4f5501b133d897021faa2043f4e3f0829c4da4b174919098cb038f5b18526442ffadac21472a09f39496a8941e5de9aea102a7fbd995d43f15d37ce7f68c19579bda58b5aaf5e19b778bda63b69ee54c6b5a37769e543e36"], 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "669f9a"}, 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file2\x00', &(0x7f0000001900), &(0x7f0000000380), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file1\x00', 0xffffffffffffffff, &(0x7f00000000c0)='./file1\x00', 0x1000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4912
remove dir: /root/glusterfs-client/dfs-0-19
Node-1:/root/daemon-log.944
opendir(/root/glusterfs-client/dfs-0-19) failedremove dir time 118
-----finish removing dir
mkdir time 32
executor 3 create dir /root/glusterfs-client/dfs-0-20 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-20
receive_execute: 33, 150
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 2, 0
receive_execute: 20, 157
receive_execute: 31, 158
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 53, 158
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 9, 4
----- executor 3 write_call_output, size 8934, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 8934, flag collect 1
----- executor 3 cover number : 1272, signal number : 1581
----- completed 1
execute_call 0, 19, 0, 6
execute_one loop: 0, 0, 25
cover_reset in execute_call
----- executor 3 write_call_output, size 2698, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 2698, flag collect 1
----- executor 3 cover number : 893, signal number : 539
----- completed 2
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 16859, flag collect 1
executor 3 waits for recv msg
----- executor 1 cover number : 1432, signal number : 1807
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 142, signal number : 107
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 1
----- executor 1 cover number : 7, signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 1 cover number : 2, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 2
executor 1 server cover_cnt 9 output_pos_value 3572
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 5
----- directly resend shmid 5
execute_call 0, 62, 0, 0
execute_one loop: 0, 0, 63
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 62, 0, 0
execute_one loop: 0, 0, 62
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2772, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 2772, flag collect 1
----- executor 3 cover number : 835, signal number : 330
----- completed 6
execute_call 0, 17, 0, 2
execute_one loop: 0, 1, 19
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 19, 0, 0
execute_one loop: 0, 0, 19
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
==944==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 3105, 0, 1
execute_one loop: 0, 0, 3106
cover_reset in execute_call
execute_call 0, 3105, 0, 0
execute_one loop: 0, 0, 3105
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3220, 0
execute_one time: 1, 3220
----- executor 3 write_call_output, size 12802, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 12802, flag collect 1
----- executor 3 cover number : 1370, signal number : 325
----- completed 8
execute_call 0, 32, 0, 9
execute_one loop: 0, 0, 41
cover_reset in execute_call
Node-1:/root/daemon-log.998
----- executor 3 write_call_output, size 1483, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 1483, flag collect 1
----- executor 3 cover number : 520, signal number : 13
----- completed 9
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 6665, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 6665, flag collect 1
----- executor 3 cover number : 1134, signal number : 17
----- completed 11
execute_call 0, 5, 0, 4
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 12
execute_call 0, 5, 0, 2
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 13
execute_call 0, 6, 0, 3
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 15
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5745, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 5745, flag collect 1
----- executor 3 cover number : 919, signal number : 2
----- completed 16
execute_call 0, 5, 0, 5
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 17
execute_call 0, 9, 0, 3
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 2752, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 2752, flag collect 1
----- executor 3 cover number : 823, signal number : 11
----- completed 20
execute_call 0, 5, 0, 3
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 5742, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 5742, flag collect 1
----- executor 3 cover number : 919, signal number : 4
----- completed 21
execute_call 0, 11, 0, 2
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 458, write pid:458
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 1, 3351, 1
execute_one time: 2, 3353
2023/03/31 10:54:09 for select break: 1
2023/03/31 10:54:09 --------- executor 3 receive reply, reply.done 1
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 645, flag collect 1
----- executor 2 cover number : 279, signal number : 318
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 696, flag collect 1
----- executor 0 cover number : 287, signal number : 329
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 501, signal number : 458
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 516, signal number : 591
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 3
----- executor 0 executes write_coverage_signal cov->size 12, flag collect 1
----- executor 0 cover number : 3, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 126, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 2 cover number : 516, signal number : 591
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 9, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 1
----- executor 1 cover number : 286, signal number : 207
----- executor 1 executes write_coverage_signal cov->size 2796, flag collect 1
time breakdown 3: 211, 3357, 0
before receive testcase: 0 0
----- executor 1 cover number : 418, signal number : 360
----- executor 1 executes write_coverage_signal cov->size 75, flag collect 1
----- executor 1 cover number : 57, signal number : 21
----- executor 1 executes write_coverage_signal cov->size 16, flag collect 1
----- executor 1 cover number : 4, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 1 cover number : 106, signal number : 23
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 2 cover number : 46, signal number : 9
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 1 cover number : 106, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 2298, signal number : 2745
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 0 cover number : 116, signal number : 91
----- executor 0 executes write_coverage_signal cov->size 127, flag collect 1
----- executor 0 cover number : 67, signal number : 49
----- executor 0 executes write_coverage_signal cov->size 28539, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 1
----- executor 1 cover number : 6, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1570, signal number : 1829
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 10945, flag collect 1
----- executor 0 cover number : 429, signal number : 473
----- executor 0 executes write_coverage_signal cov->size 1862, flag collect 1
----- executor 0 cover number : 567, signal number : 79
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1729, signal number : 1914
----- executor 1 executes write_coverage_signal cov->size 5782, flag collect 1
----- executor 2 cover number : 577, signal number : 398
----- executor 2 executes write_coverage_signal cov->size 15949, flag collect 1
----- executor 1 cover number : 530, signal number : 106
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 408, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 142, signal number : 56
----- executor 1 executes write_coverage_signal cov->size 21, flag collect 1
----- executor 0 cover number : 2200, signal number : 2697
----- executor 0 executes write_coverage_signal cov->size 923, flag collect 1
----- executor 1 cover number : 9, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 1106, flag collect 1
----- executor 0 cover number : 281, signal number : 162
----- executor 0 executes write_coverage_signal cov->size 1880, flag collect 1
----- executor 1 cover number : 498, signal number : 174
----- executor 0 cover number : 571, signal number : 115
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 0 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 3, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2942, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 1 cover number : 5, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 0
----- executor 0 cover number : 641, signal number : 264
----- executor 0 executes write_coverage_signal cov->size 2534, flag collect 1
----- executor 1 executes write_coverage_signal cov->size 2506, flag collect 1
----- executor 0 cover number : 809, signal number : 213
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 796, signal number : 342
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2648, signal number : 3320
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 714, flag collect 1
----- executor 2 cover number : 266, signal number : 141
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 6, flag collect 1
----- executor 2 cover number : 3, signal number : 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 3085, flag collect 1
----- executor 2 cover number : 682, signal number : 305
----- executor 2 executes write_coverage_signal cov->size 3353, flag collect 1
----- executor 2 cover number : 752, signal number : 336
----- executor 2 executes write_coverage_signal cov->size 19646, flag collect 1
----- executor 1 cover number : 894, signal number : 491
executor 1 server cover_cnt 52 output_pos_value 16543
----- executor 0 cover number : 1309, signal number : 1721
----- executor 0 executes write_coverage_signal cov->size 2833, flag collect 1
----- executor 0 cover number : 589, signal number : 36
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1173, signal number : 1260
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
2023/03/31 10:54:09 for select break: 1
2023/03/31 10:54:09 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 177, 3393, 0
----- executor 0 cover number : 2588, signal number : 2352
executor 0 server cover_cnt 20 output_pos_value 25269
before receive testcase: 0 0
----- executor 2 cover number : 1021, signal number : 406
----- executor 2 executes write_coverage_signal cov->size 3664, flag collect 1
2023/03/31 10:54:09 for select break: 1
2023/03/31 10:54:09 --------- executor 0 receive reply, reply.done 1
----- executor 2 cover number : 572, signal number : 218
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
time breakdown 0: 183, 3406, 0
before receive testcase: 0 0
----- executor 2 cover number : 1812, signal number : 1019
executor 2 server cover_cnt 20 output_pos_value 22591
2023/03/31 10:54:09 for select break: 1
2023/03/31 10:54:09 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:54:09 wg wait finish
2023/03/31 10:54:09 ------ all executors finish execution
2023/03/31 10:54:09 exec time: 3565
2023/03/31 10:54:09 ----- PS len: 4
2023/03/31 10:54:09 [CLIENT] executor 3 has 22 replies
2023/03/31 10:54:09 fuzzer receive 1581 signal and 1272 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 539 signal and 893 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 330 signal and 835 cover from executor 3
2023/03/31 10:54:09 [SERVER] executor 0 has 20 replies
2023/03/31 10:54:09 [SERVER] executor 2 has 20 replies
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 329 signal and 287 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 318 signal and 279 cover from userspace component
2023/03/31 10:54:09 [SERVER] executor 1 has 52 replies
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 1807 signal and 1432 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 5 signal and 7 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 107 signal and 142 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 6 signal and 7 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 2 signal and 2 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 5 signal and 5 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 2 signal and 4 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 458 signal and 501 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 4 signal and 126 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 3 signal and 9 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 591 signal and 516 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 207 signal and 286 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 360 signal and 418 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 3 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 4 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 21 signal and 57 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 2 signal and 4 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 23 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 1 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 2745 signal and 2298 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 0 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 91 signal and 116 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 49 signal and 67 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 473 signal and 429 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 79 signal and 567 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 2697 signal and 2200 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 162 signal and 281 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 115 signal and 571 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 0 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 1 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 264 signal and 641 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 213 signal and 809 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 1721 signal and 1309 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 36 signal and 589 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 0 receive 2352 signal and 2588 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 4 signal and 6 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 1914 signal and 1729 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 106 signal and 530 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 56 signal and 142 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 4 signal and 9 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 174 signal and 498 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 3 signal and 5 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 0 signal and 4 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 342 signal and 796 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 1 receive 491 signal and 894 cover from userspace component
2023/03/31 10:54:09 fuzzer receive 325 signal and 1370 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 13 signal and 520 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 17 signal and 1134 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 2 signal and 919 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 11 signal and 823 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 4 signal and 919 cover from executor 3
2023/03/31 10:54:09 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 591 signal and 516 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 9 signal and 46 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 1829 signal and 1570 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 398 signal and 577 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 1 signal and 408 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 3320 signal and 2648 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 141 signal and 266 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 0 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 305 signal and 682 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 336 signal and 752 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 1260 signal and 1173 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 406 signal and 1021 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 218 signal and 572 cover from userspace component
2023/03/31 10:54:09 ------- fuzzer executor 2 receive 1019 signal and 1812 cover from userspace component
time breakdown 2: 190, 3406, 0
before receive testcase: 0 0
2023/03/31 10:54:09 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:09 ----- triage return due to empty signal extra
2023/03/31 10:54:09 disable threaded and collide
2023/03/31 10:54:09 prog length: 6
2023/03/31 10:54:09 prog length: 22
2023/03/31 10:54:09 HasCrashFail:true HasNetFail:false
10:54:09 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
mkdir(&(0x7f0000000000)='./file0\x00', 0x89)
lgetxattr(&(0x7f0000000040)='./file0\x00', &(0x7f0000000080)=@random={'os2.', ']-('}, &(0x7f0000000340)=""/59, 0x3b)
syz_failure_sync(0x0, 0x3)
write$binfmt_script(0xffffffffffffffff, &(0x7f0000000100)=ANY=[@ANYBLOB="2321202e2f66696c65302020212d7d2c28235d285b407b28206f73322e20206f73322e0aa8056403b530cc5ad0b5ade1f1c3ca9fe4a27f4a3faff9f2410286e05c63ce282b433a4c04f498d0d601b28a39145713e1c8756420b67099897d7947df7f26c0072857d9a9f2ed7a235c44d75bdee26eaacebc4ef0d726b694abece6a1efdc39121325855c9cb9dd3ed292bca3a7ec6bd4675d8f3b5b807ca662aff6753b0035dfb9a7dbcc64d155e0b9f2bfe1"], 0xb1)
mkdirat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x40)
setxattr$trusted_overlay_origin(&(0x7f0000000200)='./file0\x00', &(0x7f0000000240), &(0x7f0000000280), 0x2, 0x2)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000002c0)='./file0\x00', &(0x7f0000000300), &(0x7f0000001bc0)=ANY=[@ANYBLOB="00fbad011f4157a50ac27c34a9839eb4785a41f4d8c9af46960cdba287326efe6e834ff31f2cffbbf8627d72d763bd1c0c7943b9bbc8d975f0da2b428eb8319f5c53fe0049591ede2e90fd788ce907000000000000008fb278ff2a4f64d6886b5e52c4bea984f113bd06917919cfd03b2a5d655d92953fbd79cce2bc691fa53af73ffd1b6b671b7df5ac615ec2842a35f02865b232d846ec0c19d56c91000000000000ffff7755f9d42d29d721654d32123a1535db3e4f5501b133d897021faa2043f4e3f0829c4da4b174919098cb038f5b18526442ffadac21472a09f39496a8941e5de9aea102a7fbd995d43f15d37ce7f68c19579bda58b5aaf5e19b778bda63b69ee54c6b5a37769e543e36"], 0xad, 0x0)
lsetxattr$security_ima(&(0x7f0000000400)='./file0\x00', &(0x7f0000000440), &(0x7f0000000480)=@v1={0x2, "669f9a"}, 0x4, 0x1)
faccessat(0xffffffffffffffff, &(0x7f00000004c0)='./file0/file0\x00', 0x6)
getxattr(&(0x7f0000000500)='./file0/file0\x00', &(0x7f0000000540)=@known='system.posix_acl_default\x00', &(0x7f0000000580)=""/4096, 0x1000)
lsetxattr$trusted_overlay_nlink(&(0x7f0000001580)='./file0/file1\x00', &(0x7f00000015c0), &(0x7f0000001600)={'L-'}, 0x16, 0x3)
lsetxattr$smack_xattr_label(&(0x7f0000001640)='./file0/file0\x00', &(0x7f0000001680)='security.SMACK64MMAP\x00', &(0x7f00000016c0)={'!-},(#]([@{('}, 0xd, 0x2)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000001700))
lgetxattr(&(0x7f0000001740)='./file0/file1\x00', &(0x7f0000001780)=@known='com.apple.FinderInfo\x00', &(0x7f00000017c0)=""/209, 0xd1)
lsetxattr$trusted_overlay_opaque(&(0x7f00000018c0)='./file2\x00', &(0x7f0000001900), &(0x7f0000000380), 0x2, 0x3)
lsetxattr$security_ima(&(0x7f0000001980)='./file0/file0\x00', &(0x7f00000019c0), &(0x7f0000001a00)=@md5={0x1, "37216181b5a239b0ab12387cddb9a098"}, 0x11, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x0, 0xffffffffffffffff)
fcntl$addseals(r0, 0x409, 0x3)
lsetxattr$trusted_overlay_origin(&(0x7f0000001a40)='./file0\x00', &(0x7f0000001a80), &(0x7f0000001ac0), 0x2, 0x0)
open(&(0x7f0000001b00)='./file1\x00', 0x3, 0x21)
linkat(0xffffffffffffffff, &(0x7f0000001b40)='./file1\x00', 0xffffffffffffffff, &(0x7f00000000c0)='./file1\x00', 0x1000)
---

end of program
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4912
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
remove dir: /root/glusterfs-client/dfs-0-20
executor 2: prog_data_offset 1568, prog_size 8
remove dir time 45
-----finish removing dir
receive_execute: 16, 74
receive_execute: 25, 74
receive_execute: 31, 74
mkdir time 28
executor 3 create dir /root/glusterfs-client/dfs-0-21 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-21
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 1
execute_one time: 1, 2
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
output_pos: 1, output_pos_value 1
receive_execute: 66, 77
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8953, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 8953, flag collect 1
----- executor 3 cover number : 1272, signal number : 1581
----- completed 1
execute_call 0, 14, 0, 12
execute_one loop: 0, 0, 26
cover_reset in execute_call
----- executor 3 write_call_output, size 3681, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 3681, flag collect 1
----- executor 3 cover number : 897, signal number : 445
----- completed 2
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
execute_call 0, 34, 0, 0
execute_one loop: 0, 0, 34
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 6862, flag collect 1
executor 3 waits for recv msg
----- executor 1 cover number : 785, signal number : 961
----- executor 1 executes write_coverage_signal cov->size 1496, flag collect 1
----- executor 1 cover number : 636, signal number : 681
----- executor 1 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 1 cover number : 3, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 16186, flag collect 1
----- executor 1 cover number : 796, signal number : 728
----- executor 1 executes write_coverage_signal cov->size 679, flag collect 1
----- executor 1 cover number : 349, signal number : 195
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 4
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 4
executor 1 server cover_cnt 7 output_pos_value 5175
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 1 collect shmids 0
----- directly resend shmid 0
-----executor 1 collect shmids 1
----- directly resend shmid 1
execute_call 0, 85, 0, 0
execute_one loop: 0, 0, 85
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 3
execute_call 0, 86, 0, 0
execute_one loop: 1, 0, 86
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 5
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2772, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 2772, flag collect 1
----- executor 3 cover number : 835, signal number : 328
----- completed 6
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 20, 0, 0
execute_one loop: 0, 0, 20
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
==998==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
-----executor 1 collect shmids 32
----- directly resend shmid 32
-----executor 1 collect shmids 33
----- directly resend shmid 33
-----executor 1 collect shmids 34
----- directly resend shmid 34
-----executor 1 collect shmids 35
----- directly resend shmid 35
-----executor 1 collect shmids 36
----- directly resend shmid 36
-----executor 1 collect shmids 37
----- directly resend shmid 37
-----executor 1 collect shmids 38
----- directly resend shmid 38
-----executor 1 collect shmids 39
----- directly resend shmid 39
-----executor 1 collect shmids 40
----- directly resend shmid 40
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 7
execute_call 0, 2890, 0, 0
execute_one loop: 0, 0, 2890
cover_reset in execute_call
execute_call 0, 2890, 0, 0
execute_one loop: 0, 0, 2890
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3030, 0
execute_one time: 2, 3031
----- executor 3 write_call_output, size 12798, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 12798, flag collect 1
----- executor 3 cover number : 1372, signal number : 226
----- completed 8
execute_call 0, 14, 0, 2
execute_one loop: 0, 0, 16
cover_reset in execute_call
Node-1:/root/daemon-log.1061
----- executor 3 write_call_output, size 1483, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 1483, flag collect 1
----- executor 3 cover number : 520, signal number : 9
----- completed 9
execute_call 0, 12, 0, 1
execute_one loop: 0, 0, 13
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 10
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 6667, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 6667, flag collect 1
----- executor 3 cover number : 1134, signal number : 201
----- completed 11
execute_call 0, 8, 0, 4
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 12
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 13
execute_call 0, 4, 0, 2
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 15
execute_call 0, 3, 0, 1
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5745, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 5745, flag collect 1
----- executor 3 cover number : 919, signal number : 2
----- completed 16
execute_call 0, 4, 0, 1
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5758, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 5758, flag collect 1
----- executor 3 cover number : 921, signal number : 2
----- completed 17
execute_call 0, 2, 0, 2
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 2752, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 2752, flag collect 1
----- executor 3 cover number : 823, signal number : 6
----- completed 20
execute_call 0, 7, 0, 3
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5745, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 5745, flag collect 1
----- executor 3 cover number : 919, signal number : 3
----- completed 21
execute_call 0, 8, 0, 4
execute_one loop: 0, 0, 12
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 459, write pid:459
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 1
----- executor 3 cover number : 0, signal number : 0
----- completed 22
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 3, execute_one inner time: 0, 3117, 0
execute_one time: 2, 3118
2023/03/31 10:54:13 for select break: 1
2023/03/31 10:54:13 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
executor 2 write_server_output
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5631, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 65, signal number : 74
time breakdown 3: 143, 3122, 0
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 executes write_coverage_signal cov->size 12, flag collect 1
before receive testcase: 0 0
----- executor 2 cover number : 3, signal number : 4
----- executor 2 executes write_coverage_signal cov->size 24484, flag collect 1
----- executor 0 cover number : 65, signal number : 74
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 3, signal number : 4
----- executor 0 executes write_coverage_signal cov->size 24481, flag collect 1
----- executor 1 cover number : 526, signal number : 556
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 1
----- executor 1 cover number : 501, signal number : 40
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1717, signal number : 2108
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 1
----- executor 2 cover number : 66, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 1
----- executor 2 cover number : 3, signal number : 3
----- executor 2 executes write_coverage_signal cov->size 163, flag collect 1
----- executor 2 cover number : 116, signal number : 104
----- executor 2 executes write_coverage_signal cov->size 127, flag collect 1
----- executor 2 cover number : 67, signal number : 59
----- executor 2 executes write_coverage_signal cov->size 16472, flag collect 1
----- executor 0 cover number : 1717, signal number : 2108
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 3, signal number : 0
----- executor 0 executes write_coverage_signal cov->size 19480, flag collect 1
----- executor 2 cover number : 1780, signal number : 1344
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 126, signal number : 50
----- executor 1 executes write_coverage_signal cov->size 718, flag collect 1
----- executor 1 cover number : 293, signal number : 228
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1160, signal number : 658
----- executor 0 executes write_coverage_signal cov->size 28834, flag collect 1
----- executor 2 cover number : 820, signal number : 244
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 1141, signal number : 1100
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1622, signal number : 864
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 2026, signal number : 2272
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 2 cover number : 17, signal number : 16
----- executor 2 executes write_coverage_signal cov->size 988, flag collect 1
----- executor 1 cover number : 175, signal number : 35
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 1
----- executor 1 cover number : 9, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 1
----- executor 1 cover number : 2, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 1 cover number : 4, signal number : 5
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 1
----- executor 1 cover number : 5, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 1
----- executor 1 cover number : 4, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 280, signal number : 160
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 2 cover number : 3, signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1332, flag collect 1
----- executor 2 cover number : 417, signal number : 228
----- executor 2 executes write_coverage_signal cov->size 3359, flag collect 1
----- executor 2 cover number : 751, signal number : 288
----- executor 2 executes write_coverage_signal cov->size 850, flag collect 1
----- executor 2 cover number : 430, signal number : 309
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1788, signal number : 2085
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 1
----- executor 0 cover number : 17, signal number : 16
----- executor 0 executes write_coverage_signal cov->size 751, flag collect 1
----- executor 0 cover number : 269, signal number : 156
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 1
----- executor 0 cover number : 3, signal number : 1
----- executor 0 executes write_coverage_signal cov->size 2319, flag collect 1
----- executor 1 cover number : 1587, signal number : 1342
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 620, signal number : 325
----- executor 0 executes write_coverage_signal cov->size 2365, flag collect 1
----- executor 0 cover number : 719, signal number : 188
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 2 cover number : 1309, signal number : 1253
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 890, signal number : 505
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 1
----- executor 1 cover number : 106, signal number : 35
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1714, flag collect 1
----- executor 1 cover number : 741, signal number : 416
----- executor 1 executes write_coverage_signal cov->size 218, flag collect 1
----- executor 1 cover number : 109, signal number : 3
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1325, flag collect 1
----- executor 1 cover number : 600, signal number : 130
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 1
----- executor 1 cover number : 106, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 16194, flag collect 1
----- executor 0 cover number : 966, signal number : 1022
----- executor 0 executes write_coverage_signal cov->size 26766, flag collect 1
----- executor 2 cover number : 2850, signal number : 2433
executor 2 server cover_cnt 18 output_pos_value 23678
2023/03/31 10:54:13 for select break: 1
2023/03/31 10:54:13 --------- executor 2 receive reply, reply.done 1
time breakdown 2: 90, 3164, 0
before receive testcase: 0 0
----- executor 1 cover number : 800, signal number : 558
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 0 cover number : 1150, signal number : 533
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 1
----- executor 1 cover number : 2055, signal number : 1798
----- executor 1 executes write_coverage_signal cov->size 2832, flag collect 1
----- executor 1 cover number : 483, signal number : 296
----- executor 1 executes write_coverage_signal cov->size 1, flag collect 1
----- executor 1 cover number : 1, signal number : 1
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 2
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 1
----- executor 1 cover number : 4, signal number : 0
----- executor 1 executes write_coverage_signal cov->size 674, flag collect 1
----- executor 1 cover number : 51, signal number : 54
executor 1 server cover_cnt 55 output_pos_value 24936
2023/03/31 10:54:13 for select break: 1
2023/03/31 10:54:13 --------- executor 1 receive reply, reply.done 1
time breakdown 1: 106, 3186, 0
before receive testcase: 0 1
----- executor 0 cover number : 2727, signal number : 2058
executor 0 server cover_cnt 15 output_pos_value 22967
2023/03/31 10:54:13 for select break: 1
2023/03/31 10:54:13 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:54:13 wg wait finish
2023/03/31 10:54:13 ------ all executors finish execution
2023/03/31 10:54:13 exec time: 3274
2023/03/31 10:54:13 ----- PS len: 4
2023/03/31 10:54:13 [CLIENT] executor 3 has 22 replies
2023/03/31 10:54:13 fuzzer receive 1581 signal and 1272 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 445 signal and 897 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 [SERVER] executor 0 has 15 replies
2023/03/31 10:54:13 [SERVER] executor 2 has 18 replies
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 74 signal and 65 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 4 signal and 3 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 2108 signal and 1717 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 3 signal and 66 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 74 signal and 65 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 3 signal and 3 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 4 signal and 3 cover from userspace component
2023/03/31 10:54:13 [SERVER] executor 1 has 55 replies
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 961 signal and 785 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 2108 signal and 1717 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 0 signal and 3 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 681 signal and 636 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 3 signal and 3 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 658 signal and 1160 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 728 signal and 796 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 864 signal and 1622 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 195 signal and 349 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 4 signal and 4 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 4 signal and 4 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 2085 signal and 1788 cover from userspace component
2023/03/31 10:54:13 fuzzer receive 328 signal and 835 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 104 signal and 116 cover from userspace component
2023/03/31 10:54:13 fuzzer receive 226 signal and 1372 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 9 signal and 520 cover from executor 3
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 556 signal and 526 cover from userspace component
time breakdown 0: 99, 3200, 0
before receive testcase: 0 0
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 40 signal and 501 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 50 signal and 126 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 228 signal and 293 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1100 signal and 1141 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 35 signal and 175 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1 signal and 5 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1 signal and 9 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 59 signal and 67 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 2 signal and 2 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 5 signal and 4 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 5 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 1344 signal and 1780 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 244 signal and 820 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 2272 signal and 2026 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 16 signal and 17 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 160 signal and 280 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 1 signal and 3 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 228 signal and 417 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 4 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 288 signal and 751 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 309 signal and 430 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1342 signal and 1587 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 1253 signal and 1309 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 2 receive 2433 signal and 2850 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 505 signal and 890 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 35 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 16 signal and 17 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 156 signal and 269 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 1 signal and 3 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 325 signal and 620 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 188 signal and 719 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 1022 signal and 966 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 533 signal and 1150 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 0 receive 2058 signal and 2727 cover from userspace component
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 201 signal and 1134 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 2 signal and 919 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 2 signal and 921 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 6 signal and 823 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 3 signal and 919 cover from executor 3
2023/03/31 10:54:13 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 416 signal and 741 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 3 signal and 109 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 130 signal and 600 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 106 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 558 signal and 800 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1798 signal and 2055 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 296 signal and 483 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 1 signal and 1 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 2 signal and 4 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 0 signal and 4 cover from userspace component
2023/03/31 10:54:13 ------- fuzzer executor 1 receive 54 signal and 51 cover from userspace component
2023/03/31 10:54:13 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:13 ----- triage return due to empty signal extra
2023/03/31 10:54:13 mutate testcase with failures
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 ----- mutateFailPos()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- mutateFailPos()
2023/03/31 10:54:13 insert call 18 at pos 19
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 ----- mutateArg()
2023/03/31 10:54:13 ----- insertCall()
2023/03/31 10:54:13 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:54:13 disable threaded and collide
2023/03/31 10:54:13 prog length: 6
2023/03/31 10:54:13 prog length: 22
2023/03/31 10:54:13 HasCrashFail:true HasNetFail:false
10:54:13 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000000)='./file0\x00', &(0x7f0000000040), &(0x7f0000000080)='u:object_r:app_data_file:s0:c512,c768\x00', 0x26, 0x2)
chdir(&(0x7f00000000c0)='./file0\x00')
rmdir(&(0x7f0000000100)='./file0\x00')
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000000140)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)=ANY=[@ANYBLOB="00fbe90480053120665ef05ff63635b52d3cef3bbfe6d88d588b650c5e608200f92e034868b78a4b5bf640b20cb73bbee2c2c97379fc66733b31c2ee842382b83d1ffbea9e16c54b6ae679e5257e29d65e988dc6846d4417fd52af8df9e7a7337bb7923c115a97ef005da7298393fa0bed47a21dfe94439ac4353b5c4d693df1298f6f0e77d8f7fe180c4d3a416b2904906b7ddd592b0e7efd7fccccd06ae94c653730974ce244eb781f0c0c18e91c8a493c4a9afae5d57511cd7f07132c17e7251457b1db4f0aebafb8b4041615dfe7af059e2ceda9cb678ae33b181f283017d7b1a0a0a0eaf9eb301f1d0e041ef5e26285c76e9f62cf44ddfd"], 0xe9, 0x1)
lsetxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000340)=@known='user.incfs.size\x00', &(0x7f0000000380)='security.selinux\x00', 0x11, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000d00)=ANY=[@ANYRESOCT], 0x10e, 0x2)
setxattr$incfs_id(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)={'0000000000000000000000000000000', 0x30}, 0x20, 0x2)
stat(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f0000000780)=@v3={0x3000000, [{0x7, 0x1000}, {0x9, 0x7}], r0}, 0x18, 0x2)
renameat(0xffffffffffffffff, &(0x7f0000000480)='./file0\x00', 0xffffffffffffff9c, &(0x7f0000000440)='./file0/file0\x00')
setxattr$user(&(0x7f0000000840)='./file0/file0\x00', &(0x7f0000000880), &(0x7f00000008c0)='-*\xf2,\x00', 0x5, 0x3)
setxattr$incfs_id(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000940), &(0x7f0000000980)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
r1 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x521100, 0x10)
linkat(0xffffffffffffffff, &(0x7f00000009c0)='./file0/file0\x00', r1, &(0x7f0000000a40)='./file0/file0\x00', 0x1400)
link(&(0x7f0000000a80)='./file0\x00', &(0x7f0000000ac0)='./file0\x00')
rmdir(&(0x7f0000000b00)='./file0/file0\x00')
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000b40), &(0x7f0000000b80)='./file0\x00', 0x8, 0x0)
syz_failure_sync(0x1, 0x3)
lsetxattr$security_capability(&(0x7f0000000bc0)='./file0\x00', &(0x7f0000000c00), &(0x7f0000000c40)=@v2={0x2000000, [{0x5, 0x3ff}, {0x90000000}]}, 0x14, 0x2)
link(&(0x7f0000000c80)='./file0/file0\x00', &(0x7f0000000cc0)='./file0/file0\x00')
---

end of program
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5144
remove dir: /root/glusterfs-client/dfs-0-21
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 50
-----finish removing dir
receive_execute: 10, 76
receive_execute: 45, 77
mkdir time 27
executor 3 create dir /root/glusterfs-client/dfs-0-22 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-22
receive_execute: 22, 78
executor 2 before execute_one
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 2, 3
receive_execute: 83, 85
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5816, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5816, flag collect 0
=================================================================
==1061==ERROR: AddressSanitizer: heap-use-after-free on address 0x61600001ffe8 at pc 0x7fffeed07261 bp 0x7fffee2ac8b0 sp 0x7fffee2ac8a0
READ of size 8 at 0x61600001ffe8 thread T9
    #0 0x7fffeed07260 in afr_shd_index_healer /root/glusterfs/xlators/cluster/afr/src/afr-self-heald.c:1026
    #1 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477
    #2 0x7ffff70e9102 in __clone (/lib/x86_64-linux-gnu/libc.so.6+0x122102)

0x61600001ffe8 is located 360 bytes inside of 532-byte region [0x61600001fe80,0x616000020094)
freed by thread T8 here:
    #0 0x7ffff76a07cf in __interceptor_free (/lib/x86_64-linux-gnu/libasan.so.5+0x10d7cf)
    #1 0x7ffff735ae19 in __gf_free /root/glusterfs/libglusterfs/src/mem-pool.c:383
    #2 0x7fffeed62f2c in afr_selfheal_daemon_fini /root/glusterfs/xlators/cluster/afr/src/afr.c:716
    #3 0x7fffeed62f2c in fini /root/glusterfs/xlators/cluster/afr/src/afr.c:729
    #4 0x7ffff738015c in glusterfs_graph_fini /root/glusterfs/libglusterfs/src/graph.c:1249
    #5 0x7ffff73804c8 in glusterfs_graph_cleanup /root/glusterfs/libglusterfs/src/graph.c:1459
    #6 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

previously allocated by thread T7 here:
    #0 0x7ffff76a0dc6 in calloc (/lib/x86_64-linux-gnu/libasan.so.5+0x10ddc6)
    #1 0x7ffff735a226 in __gf_calloc /root/glusterfs/libglusterfs/src/mem-pool.c:177
    #2 0x7fffeed0c10f in afr_selfheal_daemon_init /root/glusterfs/xlators/cluster/afr/src/afr-self-heald.c:1350
    #3 0x7fffeed7ba7f in init /root/glusterfs/xlators/cluster/afr/src/afr.c:649
    #4 0x7ffff72ea208 in __xlator_init /root/glusterfs/libglusterfs/src/xlator.c:610
    #5 0x7ffff72ea208 in xlator_init /root/glusterfs/libglusterfs/src/xlator.c:635
    #6 0x7ffff737d672 in glusterfs_graph_init /root/glusterfs/libglusterfs/src/graph.c:474
    #7 0x7ffff7382f4c in glusterfs_process_svc_attach_volfp /root/glusterfs/libglusterfs/src/graph.c:1770
    #8 0x55555557478a in mgmt_process_volfile /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:112
    #9 0x555555584f47 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2350
    #10 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #11 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #12 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #13 0x7ffff00525a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #14 0x7ffff0062b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #15 0x7ffff0062b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #16 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #17 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #18 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #19 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #20 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T9 created by T6 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7fffeed01cf1 in afr_shd_healer_spawn /root/glusterfs/xlators/cluster/afr/src/afr-self-heald.c:1167
    #4 0x7fffeed0cae9 in afr_shd_index_healer_spawn /root/glusterfs/xlators/cluster/afr/src/afr-self-heald.c:1192
    #5 0x7fffeed0cae9 in afr_selfheal_childup /root/glusterfs/xlators/cluster/afr/src/afr-self-heald.c:1409
    #6 0x7fffeed7596d in afr_notify /root/glusterfs/xlators/cluster/afr/src/afr-common.c:6428
    #7 0x7fffeed78626 in notify /root/glusterfs/xlators/cluster/afr/src/afr.c:42
    #8 0x7ffff72e7474 in xlator_notify /root/glusterfs/libglusterfs/src/xlator.c:709
    #9 0x7ffff74f4833 in default_notify /root/glusterfs/libglusterfs/src/defaults.c:3387
    #10 0x7fffeee06eda in client_notify_dispatch /root/glusterfs/xlators/protocol/client/src/client.c:146
    #11 0x7fffeee071d9 in client_notify_dispatch_uniq /root/glusterfs/xlators/protocol/client/src/client.c:118
    #12 0x7fffeee07a81 in client_rpc_notify /root/glusterfs/xlators/protocol/client/src/client.c:2275
    #13 0x7ffff722438a in rpc_clnt_handle_disconnect /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:785
    #14 0x7ffff722438a in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:846
    #15 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #16 0x7ffff005d600 in socket_event_poll_err /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:1366
    #17 0x7ffff0060599 in socket_event_handler /root/glusterfs/rpc/rpc-transpo----- executor 3 signal number : 1149
----- completed 1
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
rt/socket/src/socket.c:2821
    #18 0x7ffff0060599 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #19 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #20 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #21 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T6 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73fdaf2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7358f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7466b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7466b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fee0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

Thread T8 created by T7 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f4f2 in gf_thread_create_detached /root/glusterfs/libglusterfs/src/common-utils.c:3308
    #3 0x7ffff73836af in glusterfs_process_svc_attach_volfp /root/glusterfs/libglusterfs/src/graph.c:1840
    #4 0x55555557478a in mgmt_process_volfile /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:112
    #5 0x555555584f47 in mgmt_getspec_cbk /root/glusterfs/glusterfsd/src/glusterfsd-mgmt.c:2350
    #6 0x7ffff7224fca in rpc_clnt_handle_reply /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:723
    #7 0x7ffff7224fca in rpc_clnt_notify /root/glusterfs/rpc/rpc-lib/src/rpc-clnt.c:890
    #8 0x7ffff721e983 in rpc_transport_notify /root/glusterfs/rpc/rpc-lib/src/rpc-transport.c:521
    #9 0x7ffff00525a6 in socket_event_poll_in_async /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2358
    #10 0x7ffff0062b39 in gf_async ../../../../libglusterfs/src/glusterfs/async.h:187
    #11 0x7ffff0062b39 in socket_event_poll_in /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2399
    #12 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2790
    #13 0x7ffff0062b39 in socket_event_handler /root/glusterfs/rpc/rpc-transport/socket/src/socket.c:2710
    #14 0x7ffff73ff6c0 in event_dispatch_epoll_handler /root/glusterfs/libglusterfs/src/event-epoll.c:631
    #15 0x7ffff73ff6c0 in event_dispatch_epoll_worker /root/glusterfs/libglusterfs/src/event-epoll.c:742
    #16 0x7ffff71c4608 in start_thread /build/glibc-YYA7BZ/glibc-2.31/nptl/pthread_create.c:477

Thread T7 created by T0 here:
    #0 0x7ffff75cd805 in pthread_create (/lib/x86_64-linux-gnu/libasan.so.5+0x3a805)
    #1 0x7ffff72fdb97 in gf_thread_vcreate /root/glusterfs/libglusterfs/src/common-utils.c:3261
    #2 0x7ffff730f28d in gf_thread_create /root/glusterfs/libglusterfs/src/common-utils.c:3284
    #3 0x7ffff73fdaf2 in event_dispatch_epoll /root/glusterfs/libglusterfs/src/event-epoll.c:797
    #4 0x7ffff7358f89 in gf_event_dispatch /root/glusterfs/libglusterfs/src/event.c:115
    #5 0x7ffff7466b7f in gf_io_main /root/glusterfs/libglusterfs/src/gf-io.c:431
    #6 0x7ffff7466b7f in gf_io_run /root/glusterfs/libglusterfs/src/gf-io.c:516
    #7 0x55555556c37a in main /root/glusterfs/glusterfsd/src/glusterfsd.c:2774
    #8 0x7ffff6fee0b2 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x270b2)

SUMMARY: AddressSanitizer: heap-use-after-free /root/glusterfs/xlators/cluster/afr/src/afr-self-heald.c:1026 in afr_shd_index_healer
Shadow bytes around the buggy address:
  0x0c2c7fffbfa0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fffbfb0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fffbfc0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fffbfd0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2c7fffbfe0: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
=>0x0c2c7fffbff0: fd fd fd fd fd fd fd fd fd fd fd fd fd[fd]fd fd
  0x0c2c7fffc000: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2c7fffc010: fd fd fd fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fffc020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c2c7fffc030: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
  0x0c2c7fffc040: fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==1061==ABORTING
Node-1:/root/daemon-log.1060
==1060==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 7, 0, 1
execute_call 0, 17, 0, 0
execute_one loop: 0, 0, 17
executor 1 write_server_output
execute_one loop: 0, 0, 8
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 7
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 155
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 2
executor 1 server cover_cnt 4 output_pos_value 183
/root/glusterfs-node-down.sh: 1: kill: No such process

-----executor 1 collect shmids 1
----- directly resend shmid 1
-----executor 1 collect shmids 2
----- directly resend shmid 2
-----executor 1 collect shmids 3
----- directly resend shmid 3
-----executor 1 collect shmids 4
----- directly resend shmid 4
-----executor 1 collect shmids 6
----- directly resend shmid 6
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 41
----- directly resend shmid 41
-----executor 1 collect shmids 42
----- directly resend shmid 42
-----executor 1 collect shmids 45
----- directly resend shmid 45
-----executor 1 collect shmids 46
----- directly resend shmid 46
-----executor 1 collect shmids 47
----- directly resend shmid 47
-----executor 1 collect shmids 48
----- directly resend shmid 48
-----executor 1 collect shmids 49
----- directly resend shmid 49
-----executor 1 collect shmids 50
----- directly resend shmid 50
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 74, 0, 0
execute_one loop: 0, 0, 74
cover_reset in execute_call
execute_call 0, 74, 0, 0
execute_one loop: 0, 0, 74
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5739, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5739, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 2, 0, 1
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 58, 0, 0
execute_one loop: 0, 0, 58
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 16
----- directly resend shmid 16
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
execute_call 0, 2885, 0, 0
execute_one loop: 0, 0, 2885
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 3034, 0
execute_one time: 7, 3035
----- executor 3 write_call_output, size 0, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 2885, 0, 0
execute_one loop: 0, 0, 2885
cover_reset in execute_call
----- executor 3 write_call_output, size 8630, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 8630, flag collect 0
----- executor 3 signal number : 329
----- completed 21
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 460, write pid:460
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 8
executor 3, execute_one inner time: 1, 3050, 0
execute_one time: 2, 3051
2023/03/31 10:54:16 for select break: 1
2023/03/31 10:54:16 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 19133, flag collect 0
----- executor 2 signal number : 7
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 539
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 19132, flag collect 0
----- executor 0 signal number : 2102
----- executor 0 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 0 signal number : 24
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 12778, flag collect 0
----- executor 2 signal number : 2104
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 3
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 709, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 227
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 1 signal number : 22
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 14137, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 288
----- executor 0 executes write_coverage_signal cov->size 2054, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 1358, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2187
----- executor 1 executes write_coverage_signal cov->size 4103, flag collect 0
----- executor 2 signal number : 1068
----- executor 1 signal number : 289
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 748, flag collect 0
----- executor 0 signal number : 1407
----- executor 0 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 0 signal number : 16
----- executor 0 executes write_coverage_signal cov->size 1043, flag collect 0
----- executor 0 signal number : 174
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 1332, flag collect 0
----- executor 0 signal number : 231
----- executor 0 executes write_coverage_signal cov->size 3358, flag collect 0
----- executor 2 signal number : 183
time breakdown 3: 168, 3056, 0
before receive testcase: 0 0
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 1
----- executor 2 executes write_coverage_signal cov->size 1332, flag collect 0
----- executor 2 signal number : 232
----- executor 0 signal number : 299
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 3359, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 1068, flag collect 0
----- executor 1 signal number : 124
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 711
----- executor 0 executes write_coverage_signal cov->size 5448, flag collect 0
----- executor 0 signal number : 192
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 888
----- executor 2 executes write_coverage_signal cov->size 5668, flag collect 0
----- executor 0 signal number : 820
----- executor 2 signal number : 18
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1067
----- executor 1 signal number : 468
----- executor 1 executes write_coverage_signal cov->size 463, flag collect 0
----- executor 1 signal number : 11
executor 1 server cover_cnt 48 output_pos_value 4203
executor 2 server cover_cnt 14 output_pos_value 6195
executor 0 server cover_cnt 16 output_pos_value 6326
2023/03/31 10:54:16 for select break: 1
2023/03/31 10:54:16 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:54:16 for select break: 1
2023/03/31 10:54:16 for select break: 1
2023/03/31 10:54:16 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:54:16 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:54:16 wg wait finish
2023/03/31 10:54:16 ------ all executors finish execution
2023/03/31 10:54:16 exec time: 3151
2023/03/31 10:54:16 ----- PS len: 4
2023/03/31 10:54:16 [CLIENT] executor 3 has 22 replies
2023/03/31 10:54:16 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 [SERVER] executor 2 has 14 replies
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 7 signal and 0 cover from userspace component
2023/03/31 10:54:16 [SERVER] executor 0 has 16 replies
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 2102 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 24 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
time breakdown 2: 123, 3073, 0
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 288 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 2104 signal and 0 cover from userspace component
2023/03/31 10:54:16 [SERVER] executor 1 has 48 replies
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/31 10:54:16 fuzzer receive 329 signal and 0 cover from executor 3
2023/03/31 10:54:16 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 7 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 1407 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 16 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 174 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 231 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 299 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 711 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 155 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 539 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 227 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 22 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 1068 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 183 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 232 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 888 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 18 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 192 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 0 receive 820 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 2 receive 1067 signal and 0 cover from userspace component
time breakdown 1: 100, 3073, 0
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 2187 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 289 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 124 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 468 signal and 0 cover from userspace component
2023/03/31 10:54:16 ------- fuzzer executor 1 receive 11 signal and 0 cover from userspace component
before receive testcase: 0 0
2023/03/31 10:54:16 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:16 ----- no new client coverage: false, true
2023/03/31 10:54:16 mutate testcase with failures
2023/03/31 10:54:16 ----- mutateArg()
2023/03/31 10:54:16 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:54:16 disable threaded and collide
2023/03/31 10:54:16 prog length: 6
2023/03/31 10:54:16 prog length: 22
2023/03/31 10:54:16 HasCrashFail:true HasNetFail:false
10:54:16 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
lsetxattr$security_selinux(&(0x7f0000000d00)='./file0/file0\x00', &(0x7f0000000040), &(0x7f0000000080)='u:object_r:app_data_file:s0:c512,c768\x00', 0x26, 0x1)
chdir(&(0x7f00000000c0)='./file0\x00')
rmdir(&(0x7f0000000100)='./file0\x00')
syz_failure_sync(0x0, 0x3)
chdir(&(0x7f0000000140)='./file0\x00')
lsetxattr$trusted_overlay_upper(&(0x7f0000000180)='./file0\x00', &(0x7f00000001c0), &(0x7f0000000200)={0x0, 0xfb, 0xe9, 0x4, 0x80, "053120665ef05ff6368b650c5e608200", "f92e034868b78a4b5bf640b20cb73bbee2c2c97379fc66733b31c2ee842382b83d1ffbea9e16c54b6ae679e5257e29d65e988dc6846d4417fd52af8df9e7a7337bb7923c115a97ef005da7298393fa0bed47a21dfe94439ac4353b5c4d693df11a8f6f0e77d8f7fe180c4d3a416b2904906b7ddd592b0e7efd7fccccd06ae9e244eb781f0c0c18e91c8a493c4a9afae5d57511cd7f07132c17e7371457b1db4f0aebafb8b4041615dfe7af059e2cdaa9cb678ae33b181f283017d7b1a0a0a05fa7eb301f1d0e041ef5e26285c76e9f62cf44ddfd"}, 0xe9, 0x1)
lsetxattr(&(0x7f0000000300)='./file0\x00', &(0x7f0000000000)=ANY=[@ANYBLOB="6f73782e753a6f626a6563745f72e5e7ffffffffffff605f67696c653a73303a633531322c633736380049c68be6f7c6236a2d86b9162ac2"], &(0x7f0000000380)='security.selinux\x00', 0x11, 0x3)
syz_failure_sync(0x1, 0x3)
setxattr$trusted_overlay_upper(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)={0x0, 0xfb, 0x10e, 0x1, 0x25, "5b3f26bdccb6569e7e3fc31aac76d674", "4e9e4a5506cc872087ba6235cb42045e4e1576d95883fa144e53aa6119c3bface808f017df5425b5f7efbb32889f85f0944bb14c3b01640539d88330be63102da782d9dca65c711c00221a12376041307939ef12d2cd829273a3c54e759d9359fafa3660c590c5810c52851c4ff545d159614e4800be88c1b5a059c31c4add028e7d4b574b45e4b47639723471c6f9a72f3e51dd9ebc10286d83c92a7e1ad04e2f286c38979f4245ba7b5a4b286251a9604f5b8640a28efab1b28a2a719f36d8a837bc3a7beb8f25f050a1408a319a8b3420d6b14c43a00e4a2d21ce492ebe02b8ce81f5e543e6f7087c282483fcd42aeb82d9820c3c296797"}, 0x10e, 0x0)
setxattr$incfs_id(&(0x7f0000000580)='./file0\x00', &(0x7f00000005c0), &(0x7f0000000600)={'0000000000000000000000000000000', 0x30}, 0x20, 0x2)
stat(&(0x7f00000006c0)='./file0\x00', &(0x7f0000000700)={0x0, 0x0, 0x0, 0x0, <r0=>0x0})
setxattr$security_capability(&(0x7f0000000640)='./file0\x00', &(0x7f0000000680), &(0x7f0000000780)=@v3={0x3000000, [{0x7, 0x1000}, {0x9, 0x7}], r0}, 0x18, 0x2)
renameat(0xffffffffffffffff, &(0x7f00000007c0)='./file0/file0\x00', 0xffffffffffffff9c, &(0x7f0000000800)='./file0\x00')
setxattr$user(&(0x7f0000000840)='./file0/file0\x00', &(0x7f0000000880), &(0x7f00000008c0)='-*\xf2,\x00', 0x5, 0x3)
setxattr$incfs_id(&(0x7f0000000900)='./file0/file0\x00', &(0x7f0000000940), &(0x7f0000000980)={'0000000000000000000000000000000', 0x32}, 0x20, 0x0)
r1 = open$dir(&(0x7f0000000a00)='./file0\x00', 0x521100, 0x10)
linkat(0xffffffffffffffff, &(0x7f00000009c0)='./file0/file0\x00', r1, &(0x7f0000000a40)='./file0/file0\x00', 0x400)
link(&(0x7f0000000a80)='./file0\x00', &(0x7f0000000ac0)='./file0\x00')
rmdir(&(0x7f0000000b00)='./file0/file0\x00')
fsetxattr$trusted_overlay_redirect(0xffffffffffffffff, &(0x7f0000000b40), &(0x7f0000000b80)='./file0\x00', 0x8, 0x0)
lsetxattr$security_capability(&(0x7f0000000bc0)='./file0\x00', &(0x7f0000000c00), &(0x7f0000000c40)=@v2={0x2000000, [{0x5, 0x3ff}, {0x90000000}]}, 0x14, 0x2)
link(&(0x7f0000000c80)='./file0/file0\x00', &(0x7f0000000cc0)='./file0/file0\x00')
---

end of program
before receive testcase: 0 0
----- executor 2 receive testcase
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 5896
remove dir: /root/glusterfs-client/dfs-0-22
executor 2: prog_data_offset 1568, prog_size 8
----- executor 1 receive testcase
executor 1: prog_data_offset 1320, prog_size 248
time breakdown 0: 86, 3073, 0
before receive testcase: 0 0
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
remove dir time 36
-----finish removing dir
Node-1:/root/daemon-log.1123
mkdir time 55
executor 3 create dir /root/glusterfs-client/dfs-0-23 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-23
receive_execute: 5, 91
receive_execute: 5, 92
receive_execute: 5, 92
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 2, execute_one inner time: 0, 0, 0
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
execute_one time: 2, 0
executor 0 before execute_one
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0, execute_one inner time: 0, 0, 0
execute_one time: 6, 0
receive_execute: 15, 99
executor 3 before execute_one
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
----- executor 3 write_call_output, size 5824, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5824, flag collect 0
----- executor 3 signal number : 1149
----- completed 1
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 13
----- completed 2
execute_call 0, 6, 0, 0
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 33, 0, 0
execute_one loop: 0, 0, 33
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2312
----- executor 1 executes write_coverage_signal cov->size 5768, flag collect 0
----- executor 1 signal number : 427
executor 1 server cover_cnt 2 output_pos_value 2746
----- executor 3 write_call_output, size 0, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 44, 0, 0
execute_one loop: 0, 0, 44
cover_reset in execute_call
/root/glusterfs-node-down.sh: 1: kill: No such process

execute_call 0, 43, 0, 0
execute_one loop: 0, 0, 43
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 5
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 22, 0, 0
execute_one loop: 0, 0, 22
-----executor 1 collect shmids 7
----- directly resend shmid 7
-----executor 1 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 9
----- directly resend shmid 9
-----executor 1 collect shmids 10
----- directly resend shmid 10
-----executor 1 collect shmids 11
----- directly resend shmid 11
-----executor 1 collect shmids 12
----- directly resend shmid 12
-----executor 1 collect shmids 13
----- directly resend shmid 13
-----executor 1 collect shmids 14
----- directly resend shmid 14
-----executor 1 collect shmids 15
----- directly resend shmid 15
-----executor 1 collect shmids 16
----- directly resend shmid 16
==1123==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 1 collect shmids 17
----- directly resend shmid 17
-----executor 1 collect shmids 18
----- directly resend shmid 18
-----executor 1 collect shmids 19
----- directly resend shmid 19
-----executor 1 collect shmids 20
----- directly resend shmid 20
-----executor 1 collect shmids 21
----- directly resend shmid 21
-----executor 1 collect shmids 22
----- directly resend shmid 22
-----executor 1 collect shmids 23
----- directly resend shmid 23
-----executor 1 collect shmids 24
----- directly resend shmid 24
-----executor 1 collect shmids 25
----- directly resend shmid 25
-----executor 1 collect shmids 26
----- directly resend shmid 26
-----executor 1 collect shmids 27
----- directly resend shmid 27
-----executor 1 collect shmids 28
----- directly resend shmid 28
-----executor 1 collect shmids 29
----- directly resend shmid 29
-----executor 1 collect shmids 30
----- directly resend shmid 30
-----executor 1 collect shmids 31
----- directly resend shmid 31
----- executor 3 write_call_output, size 0, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 2850, 0, 0
execute_one loop: 0, 0, 2850
cover_reset in execute_call
execute_call 0, 2849, 0, 0
execute_one loop: 0, 0, 2849
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 1, execute_one inner time: 0, 2947, 0
execute_one time: 1, 2947
----- executor 3 write_call_output, size 8634, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 8634, flag collect 0
----- executor 3 signal number : 325
----- completed 9
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 5, 0, 1
execute_one loop: 0, 0, 6
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 0, 0, 0
execute_one loop: 1, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5727, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5727, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 4, 0, 0
execute_one loop: 0, 0, 4
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 3, 0, 0
execute_one loop: 0, 0, 3
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
cover_reset in execute_call
----- executor 3 write_call_output, size 5752, pid 461, write pid:461
----- executor 3 executes write_coverage_signal cov->size 5752, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
executor 3, execute_one inner time: 0, 2993, 0
execute_one time: 3, 2993
2023/03/31 10:54:19 for select break: 1
2023/03/31 10:54:19 --------- executor 3 receive reply, reply.done 1
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 1 signal number : 55
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 114, 2998, 0
before receive testcase: 0 0
----- executor 0 signal number : 61
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 4
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 93, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 97
----- executor 1 executes write_coverage_signal cov->size 14, flag collect 0
----- executor 1 signal number : 9
----- executor 1 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 1 signal number : 208
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 1 signal number : 6
----- executor 1 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 1 signal number : 24
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 2 signal number : 75
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 executes write_coverage_signal cov->size 30063, flag collect 0
----- executor 0 signal number : 2227
----- executor 0 executes write_coverage_signal cov->size 163, flag collect 0
----- executor 0 signal number : 100
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 2
----- executor 0 executes write_coverage_signal cov->size 123, flag collect 0
----- executor 0 signal number : 47
----- executor 2 signal number : 2778
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 15496, flag collect 0
----- executor 1 signal number : 59
----- executor 1 executes write_coverage_signal cov->size 5775, flag collect 0
----- executor 0 executes write_coverage_signal cov->size 1870, flag collect 0
----- executor 0 signal number : 286
----- executor 0 executes write_coverage_signal cov->size 12953, flag collect 0
----- executor 0 signal number : 12
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 10
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 290
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 8
----- executor 1 executes write_coverage_signal cov->size 7, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 691, flag collect 0
----- executor 1 signal number : 63
----- executor 1 executes write_coverage_signal cov->size 5, flag collect 0
----- executor 1 signal number : 0
----- executor 0 signal number : 794
----- executor 0 executes write_coverage_signal cov->size 787, flag collect 0
----- executor 0 signal number : 219
executor 1 server cover_cnt 41 output_pos_value 3412
----- executor 0 executes write_coverage_signal cov->size 1879, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 4064, flag collect 0
----- executor 0 signal number : 408
----- executor 0 executes write_coverage_signal cov->size 1412, flag collect 0
----- executor 0 signal number : 62
----- executor 0 executes write_coverage_signal cov->size 2832, flag collect 0
----- executor 0 signal number : 431
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1831
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 2 signal number : 172
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 2488, flag collect 0
----- executor 2 signal number : 331
----- executor 2 executes write_coverage_signal cov->size 2203, flag collect 0
----- executor 2 signal number : 109
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 417
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 990
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 1307
----- executor 2 signal number : 834
2023/03/31 10:54:19 for select break: 1
2023/03/31 10:54:19 --------- executor 1 receive reply, reply.done 1
executor 2 server cover_cnt 13 output_pos_value 7470
executor 0 server cover_cnt 19 output_pos_value 6585
2023/03/31 10:54:19 for select break: 1
2023/03/31 10:54:19 --------- executor 0 receive reply, reply.done 1
2023/03/31 10:54:19 for select break: 1
2023/03/31 10:54:19 --------- executor 2 receive reply, reply.done 1
2023/03/31 10:54:19 wg wait finish
2023/03/31 10:54:19 ------ all executors finish execution
2023/03/31 10:54:19 exec time: 3105
2023/03/31 10:54:19 ----- PS len: 4
2023/03/31 10:54:19 [CLIENT] executor 3 has 22 replies
2023/03/31 10:54:19 fuzzer receive 1149 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 13 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 325 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 [SERVER] executor 0 has 19 replies
2023/03/31 10:54:19 [SERVER] executor 1 has 41 replies
2023/03/31 10:54:19 [SERVER] executor 2 has 13 replies
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 75 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 2312 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 427 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 55 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 97 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 9 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 2778 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 208 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 61 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 290 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 2227 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 100 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 47 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 286 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 12 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 794 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 219 signal and 0 cover from userspace component
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 408 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 62 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 431 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 417 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 0 receive 1307 signal and 0 cover from userspace component
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 1831 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 172 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 331 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 109 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 990 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 2 receive 834 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 6 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 24 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 59 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 10 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 8 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 63 signal and 0 cover from userspace component
2023/03/31 10:54:19 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
time breakdown 1: 97, 3011, 0
before receive testcase: 0 0
time breakdown 2: 96, 3014, 0
before receive testcase: 0 0
2023/03/31 10:54:19 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:19 ----- no new client coverage: false, true
time breakdown 0: 97, 3013, 0
before receive testcase: 0 0
2023/03/31 10:54:19 mutate testcase with failures
2023/03/31 10:54:19 ----- insertCall()
2023/03/31 10:54:19 ----- insertCall()
2023/03/31 10:54:19 ----- insertCall()
2023/03/31 10:54:19 ----- insertCall()
2023/03/31 10:54:19 ----- insertCall()
2023/03/31 10:54:19 ----- insertCall()
2023/03/31 10:54:19 ----- mutateArg()
2023/03/31 10:54:19 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:54:19 disable threaded and collide
2023/03/31 10:54:19 prog length: 6
2023/03/31 10:54:19 prog length: 22
2023/03/31 10:54:19 HasCrashFail:true HasNetFail:false
10:54:19 ---executing program 0:
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
---
syz_failure_sync(0x0, 0x3)
syz_failure_sync(0x1, 0x3)
fcntl$setflags(0xffffffffffffffff, 0x2, 0x1)
fsetxattr$security_ima(0xffffffffffffffff, &(0x7f0000000000), &(0x7f0000000040)=ANY=[@ANYBLOB="04015eca"], 0x4, 0x1)
setxattr$incfs_metadata(&(0x7f0000000080)='./file0\x00', &(0x7f00000000c0), &(0x7f0000000100)="7dda8e1547e9587f3ab8f148f2b37f22b3d8a23b49ffbe3696", 0x19, 0x0)
fcntl$F_GET_FILE_RW_HINT(0xffffffffffffffff, 0x40d, &(0x7f0000000140))
fsetxattr$user(0xffffffffffffffff, &(0x7f0000000180), &(0x7f00000001c0)='\x00', 0x1, 0x2)
fsetxattr$trusted_overlay_nlink(0xffffffffffffffff, &(0x7f0000000200), &(0x7f0000000240)={'L-', 0x1}, 0x16, 0x2)
r0 = openat(0xffffffffffffffff, &(0x7f0000000280)='./file0\x00', 0x141280, 0x0)
ftruncate(r0, 0x7)
pwrite64(0xffffffffffffffff, &(0x7f00000002c0)="b241d8e290cc3651a6e18e9657c1f185fdeab169a56324823f7ec524482c9416f5c0b09bf3f309f7a79b0de08f0ac9bf52dae63900ae98b3684846a09b8dfa288dad0da8c3f6fd107c2dfed817a3eb5e2826e84e5184d7e3a589cf7954d10cda2e1d23f33f6e582d06b852f98f423025baab0dbb81286505421e6f137e3db0917d710808b4e215ba4bbd3bba668a21faf58113e8508d437f74590f2ec5e61d08772db88240c8abce98486da4343b73b19c4fff0a1766a655cf271950d43dd138e3691b371faae49746fd49937ed9d0d890aa0383fe28dde8ed88d3eacfa40e4c5fd198eaf44f35370ea833a1880016", 0xef, 0x6)
setxattr$incfs_size(&(0x7f00000003c0)='./file0\x00', &(0x7f0000000400), &(0x7f0000000440)=0x42cc, 0x8, 0x3)
rename(&(0x7f0000000480)='./file0\x00', &(0x7f00000004c0)='./file0\x00')
fsetxattr$trusted_overlay_nlink(r0, &(0x7f0000000500), &(0x7f0000000540)={'U-', 0x80000000}, 0x16, 0x7)
lchown(&(0x7f0000000580)='./file0\x00', 0x0, 0xffffffffffffffff)
mkdir(&(0x7f00000005c0)='./file0\x00', 0x4)
setxattr$security_ima(&(0x7f0000000600)='./file0\x00', &(0x7f0000000640), &(0x7f0000000680)=@ng={0x4, 0x4, "3d39ee2e58a80f6e3c272f7e51"}, 0xf, 0x2)
pwrite64(r0, &(0x7f00000006c0)="ad46ae45f940fd98ff6c50195c0b007afe6ee9f813ca53c2d30d33a0499dbb3e2286df12e8826cbcef4f6891fedc6ceab5bef8317f080364d2feee91853159f38b684d3ecdfee7137f1516b88d2db02e7d88a122050f6ab2e48c8e773bf0d0d1b2b538dc385fd1ce", 0x68, 0x100)
lsetxattr$security_smack_transmute(&(0x7f0000000740)='./file0\x00', &(0x7f0000000780), &(0x7f00000007c0), 0x4, 0x2)
write(r0, &(0x7f0000000800)="da767e8634bebf6f5fbebef748c5cfb1151c1feaf10e1f23622b91cfa7382731702c87325462dbc17650bdb3ee7915138d484ce50321766281bfd0087525f4f9986149c4aae8927ab9f3344bf5129dee0563532eaedef49b037734cfcb8b314c6794c89aa71be77ae9aedfaa5052f0737dcf7e5298a8b4ac2931bb709be630b8eb45133d8f969500cad124a321cfe6a5ea68e52e98216128676cf7597b2506c2e379c275e92f42613a4e87aeda5f63e6ceae6ee95cbdc6ad1395c34f220db8551ba72c4f759e519dcc107d5b6d8e44db9faa35285c360ae2eab0dd02fa5130c2b2afa1", 0xe3)
r1 = openat(r0, &(0x7f0000000900)='./file0\x00', 0x0, 0xf5cd9fef7e2cab6e)
fsetxattr$security_ima(r1, &(0x7f0000000940), &(0x7f0000000980)=@v1={0x2, "7a92f943958e0ec7015ad57a37a4"}, 0xf, 0x3)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 1: prog_data_offset 1560, prog_size 8
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 248
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4816
remove dir: /root/glusterfs-client/dfs-0-23
remove dir time 23
-----finish removing dir
mkdir time 47
executor 3 create dir /root/glusterfs-client/dfs-0-24 successfully
current dir: executor 3: /root/glusterfs-client/dfs-0-24
receive_execute: 8, 69
receive_execute: 9, 70
receive_execute: 7, 70
executor 1 before execute_one
----- execute_one begin, executor 1 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 1, execute_one inner time: 0, 0, 0
execute_one time: 2, 1
executor 2 before execute_one
----- execute_one begin, executor 2 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
executor 0 before execute_one
executor 2, execute_one inner time: 0, 0, 0
execute_one time: 3, 0
----- execute_one begin, executor 0 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
receive_execute: 15, 80
executor 3 before execute_one
execute_call 0, 8, 0, 0
execute_one loop: 0, 0, 8
executor 0 write_server_output
----- execute_one begin, executor 3 restarting execute_one 0, is_restarting 0
output_pos: 1, output_pos_value 1
cover_reset in execute_call
executor 3 waits for recv msg
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 3
----- executor 0 executes write_coverage_signal cov->size 2764, flag collect 0
----- executor 0 signal number : 455
----- executor 0 executes write_coverage_signal cov->size 4930, flag collect 0
----- executor 0 signal number : 1252
----- executor 0 executes write_coverage_signal cov->size 6186, flag collect 0
----- executor 0 signal number : 699
----- executor 0 executes write_coverage_signal cov->size 11331, flag collect 0
----- executor 0 signal number : 782
executor 0 server cover_cnt 5 output_pos_value 3207
Node-1:/root/daemon-log.1173
-----executor 0 collect shmids 0
----- directly resend shmid 0
-----executor 0 collect shmids 1
----- directly resend shmid 1
-----executor 0 collect shmids 2
----- directly resend shmid 2
-----executor 0 collect shmids 3
----- directly resend shmid 3
-----executor 0 collect shmids 4
----- directly resend shmid 4
-----executor 0 collect shmids 5
----- directly resend shmid 5
-----executor 0 collect shmids 6
----- directly resend shmid 6
execute_call 0, 116, 0, 0
execute_one loop: 0, 0, 116
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 1
execute_call 0, 116, 0, 0
execute_one loop: 0, 0, 116
cover_reset in execute_call
executor 3 waits for recv msg
execute_call 0, 5, 0, 0
execute_one loop: 0, 0, 5
-----executor 0 collect shmids 7
----- directly resend shmid 7
-----executor 0 collect shmids 8
----- directly resend shmid 8
-----executor 1 collect shmids 52
----- directly resend shmid 52
-----executor 1 collect shmids 55
----- directly resend shmid 55
-----executor 0 collect shmids 9
----- directly resend shmid 9
-----executor 0 collect shmids 10
----- directly resend shmid 10
-----executor 0 collect shmids 11
----- directly resend shmid 11
-----executor 0 collect shmids 12
----- directly resend shmid 12
-----executor 0 collect shmids 13
----- directly resend shmid 13
-----executor 0 collect shmids 14
----- directly resend shmid 14
-----executor 0 collect shmids 15
----- directly resend shmid 15
-----executor 0 collect shmids 16
----- directly resend shmid 16
==1173==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
-----executor 0 collect shmids 17
----- directly resend shmid 17
-----executor 0 collect shmids 18
----- directly resend shmid 18
-----executor 0 collect shmids 19
----- directly resend shmid 19
Node-1:/root/daemon-log.1208
-----executor 0 collect shmids 20
----- directly resend shmid 20
-----executor 0 collect shmids 21
----- directly resend shmid 21
-----executor 0 collect shmids 22
----- directly resend shmid 22
-----executor 0 collect shmids 23
----- directly resend shmid 23
-----executor 0 collect shmids 24
----- directly resend shmid 24
-----executor 0 collect shmids 25
----- directly resend shmid 25
-----executor 0 collect shmids 26
----- directly resend shmid 26
-----executor 0 collect shmids 27
----- directly resend shmid 27
-----executor 0 collect shmids 28
----- directly resend shmid 28
-----executor 0 collect shmids 29
----- directly resend shmid 29
-----executor 0 collect shmids 30
----- directly resend shmid 30
-----executor 0 collect shmids 31
----- directly resend shmid 31
==1208==WARNING: ASan doesn't fully support makecontext/swapcontext functions and may produce false positives in some cases!
Node-1:/root/daemon-log.1226
execute_call 0, 2788, 0, 0
execute_one loop: 0, 0, 2788
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
executor 0, execute_one inner time: 1, 2917, 0
execute_one time: 3, 2918
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 2
execute_call 0, 2793, 0, 1
execute_one loop: 0, 0, 2794
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 3
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 4
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 8964, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8964, flag collect 0
----- executor 3 signal number : 1120
----- completed 5
execute_call 0, 18, 0, 1
execute_one loop: 0, 0, 19
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 6
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 7
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 2
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 8
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 9
execute_call 0, 0, 0, 1
execute_one loop: 0, 0, 1
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 10
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 11
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 12
execute_call 0, 8, 0, 1
execute_one loop: 0, 0, 9
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 13
execute_call 0, 10, 0, 1
execute_one loop: 0, 0, 11
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 14
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 15
execute_call 0, 9, 0, 1
execute_one loop: 0, 0, 10
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 16
execute_call 0, 7, 0, 1
execute_one loop: 0, 0, 8
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 17
execute_call 0, 6, 0, 1
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 18
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 8398, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 8398, flag collect 0
----- executor 3 signal number : 0
----- completed 19
execute_call 0, 7, 0, 0
execute_one loop: 0, 0, 7
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 20
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 21
execute_call 0, 0, 0, 0
execute_one loop: 0, 0, 0
cover_reset in execute_call
----- executor 3 write_call_output, size 0, pid 462, write pid:462
----- executor 3 executes write_coverage_signal cov->size 0, flag collect 0
----- executor 3 signal number : 0
----- completed 22
execute_call 0, 1, 0, 0
execute_one loop: 0, 0, 1
executor 3, execute_one inner time: 0, 2989, 0
execute_one time: 1, 2990
2023/03/31 10:54:22 for select break: 1
2023/03/31 10:54:22 --------- executor 3 receive reply, reply.done 1
executor 1 write_server_output
----- executor 1 executes write_coverage_signal cov->size 68, flag collect 0
executor 2 write_server_output
----- executor 2 executes write_coverage_signal cov->size 672, flag collect 0
----- executor 1 signal number : 54
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
executor 0 write_server_output
----- executor 0 executes write_coverage_signal cov->size 5418, flag collect 0
----- executor 0 signal number : 550
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 315
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 3: 95, 2994, 0
before receive testcase: 0 0
----- executor 2 signal number : 591
----- executor 2 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 2 signal number : 3
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 4
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1780
----- executor 1 executes write_coverage_signal cov->size 148, flag collect 0
----- executor 1 signal number : 15
----- executor 1 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 1 signal number : 4
----- executor 0 signal number : 97
----- executor 0 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 238
----- executor 0 executes write_coverage_signal cov->size 706, flag collect 0
----- executor 0 signal number : 217
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 7
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2568
----- executor 2 executes write_coverage_signal cov->size 86, flag collect 0
----- executor 2 signal number : 17
----- executor 2 executes write_coverage_signal cov->size 4992, flag collect 0
----- executor 2 signal number : 312
----- executor 2 executes write_coverage_signal cov->size 2424, flag collect 0
----- executor 2 signal number : 24
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 0
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 501
----- executor 0 executes write_coverage_signal cov->size 13, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 209, flag collect 0
----- executor 0 signal number : 26
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 1
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 1 signal number : 2145
----- executor 1 executes write_coverage_signal cov->size 5778, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 214, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 215, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 8, flag collect 0
----- executor 0 signal number : 4
----- executor 0 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1049
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 446
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 0 signal number : 2319
----- executor 0 executes write_coverage_signal cov->size 1241, flag collect 0
----- executor 0 signal number : 143
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 2764, flag collect 0
----- executor 0 signal number : 49
----- executor 0 executes write_coverage_signal cov->size 4930, flag collect 0
----- executor 0 signal number : 185
----- executor 0 executes write_coverage_signal cov->size 716, flag collect 0
----- executor 0 signal number : 44
----- executor 0 executes write_coverage_signal cov->size 1880, flag collect 0
----- executor 0 signal number : 145
----- executor 0 executes write_coverage_signal cov->size 3, flag collect 0
----- executor 0 signal number : 0
----- executor 0 executes write_coverage_signal cov->size 786, flag collect 0
----- executor 0 signal number : 36
----- executor 0 executes write_coverage_signal cov->size 6186, flag collect 0
----- executor 0 signal number : 135
----- executor 0 executes write_coverage_signal cov->size 11331, flag collect 0
----- executor 0 signal number : 266
executor 0 server cover_cnt 49 output_pos_value 8306
----- executor 2 signal number : 636
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 69
----- executor 1 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 2883, flag collect 0
----- executor 1 signal number : 355
----- executor 1 executes write_coverage_signal cov->size 935, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 2
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1497
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:54:22 for select break: 1
2023/03/31 10:54:22 --------- executor 0 receive reply, reply.done 1
----- executor 1 signal number : 1712
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2733
----- executor 2 executes write_coverage_signal cov->size 17, flag collect 0
----- executor 2 signal number : 16
----- executor 2 executes write_coverage_signal cov->size 537, flag collect 0
----- executor 2 signal number : 19
----- executor 2 executes write_coverage_signal cov->size 882, flag collect 0
----- executor 2 signal number : 153
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 475
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1969
----- executor 2 executes write_coverage_signal cov->size 31869, flag collect 0
----- executor 1 signal number : 1228
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
time breakdown 0: 78, 3010, 0
before receive testcase: 0 0
----- executor 2 signal number : 924
----- executor 2 executes write_coverage_signal cov->size 9, flag collect 0
----- executor 2 signal number : 2
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1911
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2686
----- executor 1 executes write_coverage_signal cov->size 29, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 15, flag collect 0
----- executor 1 signal number : 5
----- executor 1 executes write_coverage_signal cov->size 743, flag collect 0
----- executor 1 signal number : 19
----- executor 1 executes write_coverage_signal cov->size 4, flag collect 0
----- executor 1 signal number : 4
----- executor 1 executes write_coverage_signal cov->size 642, flag collect 0
----- executor 1 signal number : 17
----- executor 1 executes write_coverage_signal cov->size 658, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 5631, flag collect 0
----- executor 1 signal number : 176
----- executor 1 executes write_coverage_signal cov->size 5630, flag collect 0
----- executor 2 signal number : 1289
----- executor 2 executes write_coverage_signal cov->size 20500, flag collect 0
----- executor 1 signal number : 35
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1259
----- executor 2 executes write_coverage_signal cov->size 21183, flag collect 0
----- executor 2 signal number : 844
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 20
----- executor 1 executes write_coverage_signal cov->size 524, flag collect 0
----- executor 1 signal number : 48
----- executor 1 executes write_coverage_signal cov->size 543, flag collect 0
----- executor 1 signal number : 87
----- executor 1 executes write_coverage_signal cov->size 2, flag collect 0
----- executor 1 signal number : 0
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 2132
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1537
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1088
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 884
----- executor 1 executes write_coverage_signal cov->size 10, flag collect 0
----- executor 1 signal number : 1
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 1311
----- executor 2 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 435
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 2 signal number : 2270
executor 2 server cover_cnt 27 output_pos_value 24423
----- executor 1 signal number : 1961
----- executor 1 executes write_coverage_signal cov->size 30500, flag collect 0
----- executor 1 signal number : 1913
----- executor 1 executes write_coverage_signal cov->size 25642, flag collect 0
----- executor 1 signal number : 1040
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
2023/03/31 10:54:22 for select break: 1
2023/03/31 10:54:22 --------- executor 2 receive reply, reply.done 1
----- executor 1 signal number : 1560
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1065
----- executor 1 executes write_coverage_signal cov->size 32765, flag collect 0
----- executor 1 signal number : 1465
executor 1 server cover_cnt 38 output_pos_value 23984
time breakdown 2: 77, 3024, 0
before receive testcase: 0 0
2023/03/31 10:54:22 for select break: 1
2023/03/31 10:54:22 --------- executor 1 receive reply, reply.done 1
2023/03/31 10:54:22 wg wait finish
2023/03/31 10:54:22 ------ all executors finish execution
2023/03/31 10:54:22 exec time: 3100
2023/03/31 10:54:22 ----- PS len: 4
2023/03/31 10:54:22 [CLIENT] executor 3 has 22 replies
2023/03/31 10:54:22 [SERVER] executor 0 has 49 replies
2023/03/31 10:54:22 [SERVER] executor 2 has 27 replies
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 315 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 455 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 1252 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 699 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 782 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 550 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 97 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 238 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 217 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 7 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 501 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 26 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 [SERVER] executor 1 has 38 replies
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 54 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1780 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 15 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 2145 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 446 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 69 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 355 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1712 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 475 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1228 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 2686 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 591 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 3 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 2568 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 17 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 312 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 24 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1049 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 636 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1497 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 2733 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 16 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 19 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 153 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1969 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 924 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 2 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1911 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1289 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1259 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 844 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1537 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1088 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 1311 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 2 receive 2270 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 2319 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 143 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 49 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 185 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 44 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 145 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 36 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 135 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 0 receive 266 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 5 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 19 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 4 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 17 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 176 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 35 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 20 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 48 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 87 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 0 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 2132 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 884 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1 signal and 0 cover from userspace component
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 435 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1961 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 1120 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1913 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1040 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1560 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1065 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 ------- fuzzer executor 1 receive 1465 signal and 0 cover from userspace component
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
2023/03/31 10:54:22 fuzzer receive 0 signal and 0 cover from executor 3
time breakdown 1: 79, 3030, 0
before receive testcase: 0 0
2023/03/31 10:54:22 fsMds: [map[] map[] map[] map[]]
2023/03/31 10:54:22 ----- no new client coverage: false, true
2023/03/31 10:54:22 mutate testcase with failures
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- mutateArg()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- mutateArg()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- splice()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- insertCall()
2023/03/31 10:54:22 ----- mutateArg()
2023/03/31 10:54:22 HasCrashFail: true, .HasNetFail: false
2023/03/31 10:54:22 disable threaded and collide
2023/03/31 10:54:22 prog length: 6
2023/03/31 10:54:22 prog length: 22
2023/03/31 10:54:22 HasCrashFail:true HasNetFail:false
10:54:22 ---executing program 0:
---
syz_failure_recv(0x0)
syz_failure_down()
syz_failure_send(0x0)
syz_failure_recv(0x1)
syz_failure_up()
syz_failure_send(0x1)
---
---
setxattr$security_smack_transmute(&(0x7f0000000000)='./file1\x00', &(0x7f0000000040), &(0x7f0000000700), 0x4, 0x1)
r0 = fcntl$dupfd(0xffffffffffffffff, 0x406, 0xffffffffffffffff)
syz_failure_sync(0x0, 0x3)
r1 = openat(r0, &(0x7f00000000c0)='./file0\x00', 0x202280, 0x1b4)
close(r1)
chdir(&(0x7f0000000100)='./file1\x00')
symlink(&(0x7f0000000140)='./file0\x00', &(0x7f0000000180)='./file1\x00')
r2 = openat(0xffffffffffffffff, &(0x7f00000001c0)='./file0\x00', 0x10000, 0x80)
syz_failure_sync(0x1, 0x3)
sendfile(r2, r0, &(0x7f0000000200)=0x1ff, 0x6)
setxattr(&(0x7f0000000240)='\x00', &(0x7f0000000280)=@random={'btrfs.', '!\x00'}, &(0x7f00000002c0)='security.SMACK64TRANSMUTE\x00', 0x1a, 0x3)
fcntl$addseals(r0, 0x409, 0x4)
setxattr$security_ima(&(0x7f0000000300)='./file1\x00', &(0x7f0000000340), &(0x7f0000000380)=ANY=[@ANYBLOB="030310000007ff009af1e6b52ea86a8b72754ff09afa34b835e00030eb9aba8f299a7b7a3924eb03121025b27cacb6e7d84370635d69f1a71abed804d9f8bd9f98f9d28987dee6d008356f4be898b8bd7a241145f3df3b81f25417467545296cde35af911fc61eeea8049c4edc2a7790ed57d8f4859cf8dd585403da842df752446dd3d05da0a76792a333de5659ca28695ba38f6c00"/163], 0xa3, 0x2)
lsetxattr$security_selinux(&(0x7f0000000440)='./file0\x00', &(0x7f0000000480), &(0x7f00000004c0)='system_u:object_r:dmesg_exec_t:s0\x00', 0x22, 0x0)
lsetxattr$trusted_overlay_redirect(&(0x7f0000000500)='./file0/../file0\x00', &(0x7f0000000540), &(0x7f0000000580)='./file0\x00', 0x8, 0x3)
r3 = fcntl$dupfd(0xffffffffffffffff, 0x406, r0)
fdatasync(r3)
lsetxattr$security_ima(&(0x7f00000005c0)='./file0/../file0\x00', &(0x7f0000000600), &(0x7f0000000640)=@v1={0x2, "31dddab73f72b410d09a8a50"}, 0xd, 0x0)
fsetxattr$smack_xattr_label(r0, &(0x7f0000000680)='security.SMACK64IPIN\x00', &(0x7f0000000080)=ANY=[@ANYBLOB="5c3a257ba15b2b2b0023704a4e679f8a421e5119584523cda63321057b"], 0x9, 0x3)
r4 = dup(r0)
r5 = fcntl$getown(r0, 0x9)
fcntl$setown(r4, 0x8, r5)
---

end of program
----- executor 1 receive testcase
----- executor 2 receive testcase
executor 2: prog_data_offset 1568, prog_size 8
----- executor 0 receive testcase
executor 0: prog_data_offset 1312, prog_size 8
----- executor 3 receive testcase
executor 3: prog_data_offset 1576, prog_size 4024
remove dir: /root/glusterfs-client/dfs-0-24
executor 1: prog_data_offset 1320, prog_size 248
opendir(/root/glusterfs-client/dfs-0-24) failedremove dir time 15
-----finish removing dir
Node-0:/root/daemon-log.1171
-----executor 0 collect shmids 53
----- directly resend shmid 53
-----executor 0 collect shmids 56
----- directly resend shmid 56

VM DIAGNOSIS:
10:54:13  Registers:
info registers vcpu 0
RAX=0000000000000001 RBX=0000000000000000 RCX=0000000000000000 RDX=00007ffff71c3000
RSI=00007fffffffbe40 RDI=0000000000000001 RBP=00007fffffffe4c0 RSP=00007fffffffe4a0
R8 =0000000000000017 R9 =0000000000000017 R10=00000000ffffffff R11=0000000000000000
R12=00007ffff732e270 R13=0000000000000000 R14=0000000000000000 R15=0000000000000000
RIP=00007ffff73032f6 RFL=00000246 [---Z-P-] CPL=3 II=0 A20=1 SMM=0 HLT=0
ES =0000 0000000000000000 ffffffff 00c00000
CS =0033 0000000000000000 ffffffff 00a0fb00 DPL=3 CS64 [-RA]
SS =002b 0000000000000000 ffffffff 00c0f300 DPL=3 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 00007ffff7fff980 ffffffff 00c00000
GS =0000 0000000000000000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe0000003000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe0000001000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=0000613000139054 CR3=0000000100dbe001 CR4=00771ef0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000000000000000ff00 XMM01=25252525252525252525252525252525
XMM02=20726f747563657865202c6e69676562 XMM03=00000000000000000000000000000000
XMM04=0000000000000000000000000000ff00 XMM05=00000000000000000000000000000002
XMM06=00000000000013880000000000000032 XMM07=00000000000000160000000000000001
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
info registers vcpu 1
RAX=ffffffff83a39210 RBX=ff110001002b9680 RCX=ffffffff83a21fc6 RDX=ff1100026512e7e0
RSI=0000000000000004 RDI=000000000005aabe RBP=0000000000000001 RSP=ff110001002cfe68
R8 =0000000000000001 R9 =ffe21c004ca25cfd R10=ff1100026512e7e3 R11=ffe21c004ca25cfc
R12=0000000000000001 R13=ffffffff85205b50 R14=0000000000000000 R15=0000000000000000
RIP=ffffffff83a3921b RFL=00000206 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 0000000000000000 ffffffff 00c00000
CS =0010 0000000000000000 ffffffff 00a09b00 DPL=0 CS64 [-RA]
SS =0018 0000000000000000 ffffffff 00c09300 DPL=0 DS   [-WA]
DS =0000 0000000000000000 ffffffff 00c00000
FS =0000 0000000000000000 ffffffff 00c00000
GS =0000 ff11000265100000 ffffffff 00c00000
LDT=0000 0000000000000000 ffffffff 00c00000
TR =0040 fffffe000003e000 00004087 00008b00 DPL=0 TSS64-busy
GDT=     fffffe000003c000 0000007f
IDT=     fffffe0000000000 00000fff
CR0=80050033 CR2=0000613000146094 CR3=00000001144fc003 CR4=00771ee0
DR0=0000000000000000 DR1=0000000000000000 DR2=0000000000000000 DR3=0000000000000000 
DR6=00000000fffe0ff0 DR7=0000000000000400
EFER=0000000000000d01
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=00000000000f42400000000000000000 XMM01=000000000000000000000000000f4240
XMM02=00000000000000000000000000000000 XMM03=00000000000000000000000000000000
XMM04=00000000000000000000000000000000 XMM05=00000000000000000000000000001000
XMM06=00000000000000000000000000000000 XMM07=00000000000000000000000000000000
XMM08=00000000000000000000000000000000 XMM09=00000000000000000000000000000000
XMM10=00000000000000000000000000000000 XMM11=00000000000000000000000000000000
XMM12=00000000000000000000000000000000 XMM13=00000000000000000000000000000000
XMM14=00000000000000000000000000000000 XMM15=00000000000000000000000000000000
